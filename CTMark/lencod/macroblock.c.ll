; ModuleID = '/home/npopov/repos/llvm-test-suite/CTMark/lencod/macroblock.c'
source_filename = "/home/npopov/repos/llvm-test-suite/CTMark/lencod/macroblock.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.RD_DATA = type { double, [16 x [16 x i16]], [16 x [16 x i16]], [16 x [16 x i16]], ptr, ptr, i32, i16, [4 x i32], [4 x i32], ptr, [16 x i8], [16 x i8], i32, i64, i32, ptr, ptr, [2 x [4 x [4 x i8]]], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ImageParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]], [9 x [8 x [8 x i16]]], [2 x [4 x [16 x [16 x i16]]]], [16 x [16 x i16]], [16 x [16 x i32]], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, [4 x [4 x i32]], i32, i32, i32, i32, i32, double, i32, i32, i32, i32, ptr, ptr, ptr, ptr, [15 x i16], i32, i32, i32, i32, i32, i32, i32, i32, [6 x [32 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x [2 x i32]], [2 x i32], i32, i32, i16, i32, i32, i32, i32, i32 }
%struct.macroblock = type { i32, i32, i32, [2 x i32], i32, [8 x i32], ptr, ptr, i32, [2 x [4 x [4 x [2 x i32]]]], [16 x i8], [16 x i8], i32, i64, [4 x i32], [4 x i32], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, double, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.StatParameters = type { i32, i32, float, float, i64, i64, i32, i32, i32, [5 x [2 x i32]], [5 x [15 x i32]], [5 x [15 x i32]], [4 x i32], i32, ptr, ptr, i64, i64, i64, float, float, float, [5 x [15 x i64]], [5 x [15 x i64]], [5 x i64], [5 x i64], [5 x i64], [5 x i64], [5 x i64], [5 x i64], [5 x i64], i32, i32, ptr, i32, i32 }
%struct.InputParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i32]], [8 x [2 x i32]], [4 x [4 x i32]], i32, i32, i32, i32, [256 x i8], [256 x i8], [256 x i8], [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, [500 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1024 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], i32, i32, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, double, double, [5 x double], i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x double], [6 x double], [256 x i8], i32, i32, i32, i32, [2 x [5 x i32]], [2 x [5 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32 }
%struct.storable_picture = type { i32, i32, i32, i32, i32, i32, [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32 }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, [3 x [2 x i32]] }
%struct.datapartition = type { ptr, %struct.EncodingEnvironment, %struct.EncodingEnvironment }
%struct.EncodingEnvironment = type { i32, i32, i32, i32, i32, ptr, ptr, i32, i32 }
%struct.Bitstream = type { i32, i32, i8, i32, i32, i8, i8, i32, i32, ptr, i32 }
%struct.seq_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vui_seq_parameters_t }
%struct.vui_seq_parameters_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrd_parameters_t, i32, %struct.hrd_parameters_t, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hrd_parameters_t = type { i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], i32, i32, i32, i32 }
%struct.rc_generic = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, ptr, i64, i32, i32, i32, [5 x i32], i32, [5 x i32], i32, i32 }
%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.pix_pos = type { i32, i32, i32, i32, i32, i32 }
%struct.RD_PARAMS = type { double, [3 x double], [3 x i32], [15 x i16], [2 x i16], i16, [2 x i16], [2 x i32] }
%struct.Picture = type { i32, i32, [100 x ptr], i32, float, float, float }

@img = external local_unnamed_addr global ptr, align 8
@get_mb_block_pos = common dso_local local_unnamed_addr global ptr null, align 8
@imgY_org_bot = common dso_local local_unnamed_addr global ptr null, align 8
@imgY_org_top = common dso_local local_unnamed_addr global ptr null, align 8
@imgY_org = common dso_local local_unnamed_addr global ptr null, align 8
@imgUV_org_bot = common dso_local local_unnamed_addr global ptr null, align 8
@imgUV_org_top = common dso_local local_unnamed_addr global ptr null, align 8
@imgUV_org = common dso_local local_unnamed_addr global ptr null, align 8
@imgY_org_frm = common dso_local local_unnamed_addr global ptr null, align 8
@imgUV_org_frm = common dso_local local_unnamed_addr global ptr null, align 8
@.str = private unnamed_addr constant [95 x i8] c"Warning!!! Number of bits (%d) of macroblock_layer() data seems to exceed defined limit (%d).\0A\00", align 1
@stats = external local_unnamed_addr global ptr, align 8
@input = external local_unnamed_addr global ptr, align 8
@QP_SCALE_CR = external local_unnamed_addr constant [52 x i8], align 16
@enc_picture = external local_unnamed_addr global ptr, align 8
@start_frame_no_in_this_IGOP = external local_unnamed_addr global i32, align 4
@delta_qp_mbaff = common dso_local local_unnamed_addr global [2 x [2 x i32]] zeroinitializer, align 16
@qp_mbaff = common dso_local local_unnamed_addr global [2 x [2 x i32]] zeroinitializer, align 16
@active_sps = common dso_local local_unnamed_addr global ptr null, align 8
@quadratic_RC = common dso_local local_unnamed_addr global ptr null, align 8
@updateQP = common dso_local local_unnamed_addr global ptr null, align 8
@generic_RC = common dso_local local_unnamed_addr global ptr null, align 8
@dq = common dso_local local_unnamed_addr global i32 0, align 4
@predict_error = common dso_local local_unnamed_addr global i32 0, align 4
@active_pps = common dso_local local_unnamed_addr global ptr null, align 8
@assignSE2partition = external local_unnamed_addr global [2 x ptr], align 16
@terminate_macroblock.skip = internal unnamed_addr global i1 false, align 4
@errortext = common dso_local global [300 x i8] zeroinitializer, align 16
@.str.1 = private unnamed_addr constant [28 x i8] c"Slice Mode %d not supported\00", align 1
@width_pad = common dso_local local_unnamed_addr global i32 0, align 4
@height_pad = common dso_local local_unnamed_addr global i32 0, align 4
@img_padded_size_x = common dso_local local_unnamed_addr global i32 0, align 4
@LumaPrediction4x4.l0_pred = internal unnamed_addr global [16 x i16] zeroinitializer, align 16
@LumaPrediction4x4.l1_pred = internal unnamed_addr global [16 x i16] zeroinitializer, align 16
@listX = external local_unnamed_addr global [6 x ptr], align 16
@wbp_weight = common dso_local local_unnamed_addr global ptr null, align 8
@wp_offset = common dso_local local_unnamed_addr global ptr null, align 8
@wp_luma_round = common dso_local local_unnamed_addr global i32 0, align 4
@luma_log_weight_denom = common dso_local local_unnamed_addr global i32 0, align 4
@wp_weight = common dso_local local_unnamed_addr global ptr null, align 8
@LumaPrediction4x4Bi.l0_pred = internal unnamed_addr global [16 x i16] zeroinitializer, align 16
@LumaPrediction4x4Bi.l1_pred = internal unnamed_addr global [16 x i16] zeroinitializer, align 16
@OneComponentChromaPrediction4x4 = internal unnamed_addr global ptr null, align 8
@si_frame_indicator = common dso_local local_unnamed_addr global i32 0, align 4
@sp2_frame_indicator = common dso_local local_unnamed_addr global i32 0, align 4
@diff64 = internal global [64 x i32] zeroinitializer, align 16
@ChromaPrediction4x4.l0_pred = internal global [16 x i16] zeroinitializer, align 16
@ChromaPrediction4x4.l1_pred = internal global [16 x i16] zeroinitializer, align 16
@wp_chroma_round = common dso_local local_unnamed_addr global i32 0, align 4
@chroma_log_weight_denom = common dso_local local_unnamed_addr global i32 0, align 4
@ChromaResidualCoding.block8x8_idx = internal unnamed_addr constant [3 x [4 x [4 x i32]]] [[4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 0, i32 0], [4 x i32] [i32 2, i32 3, i32 0, i32 0], [4 x i32] zeroinitializer, [4 x i32] zeroinitializer], [4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 0, i32 0], [4 x i32] [i32 0, i32 1, i32 0, i32 0], [4 x i32] [i32 2, i32 3, i32 0, i32 0], [4 x i32] [i32 2, i32 3, i32 0, i32 0]], [4 x [4 x i32]] [[4 x i32] [i32 0, i32 0, i32 1, i32 1], [4 x i32] [i32 0, i32 0, i32 1, i32 1], [4 x i32] [i32 2, i32 2, i32 3, i32 3], [4 x i32] [i32 2, i32 2, i32 3, i32 3]]], align 16
@IntraChromaPrediction.block_pos = internal unnamed_addr constant [3 x [4 x [4 x i32]]] [[4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer], [4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] [i32 2, i32 3, i32 2, i32 3], [4 x i32] zeroinitializer, [4 x i32] zeroinitializer], [4 x [4 x i32]] [[4 x i32] [i32 0, i32 1, i32 2, i32 3], [4 x i32] [i32 1, i32 1, i32 3, i32 3], [4 x i32] [i32 2, i32 3, i32 2, i32 3], [4 x i32] [i32 3, i32 3, i32 3, i32 3]]], align 16
@getNeighbour = common dso_local local_unnamed_addr global ptr null, align 8
@subblk_offset_y = internal unnamed_addr constant [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\08\08\0C\0C"]], align 16
@subblk_offset_x = internal unnamed_addr constant [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C"]], align 16
@diff = internal global [16 x i32] zeroinitializer, align 16
@mvbits = external local_unnamed_addr global ptr, align 8
@MBType2Value.dir1offset = internal unnamed_addr constant [3 x i32] [i32 1, i32 2, i32 3], align 4
@MBType2Value.dir2offset = internal unnamed_addr constant [3 x [3 x i32]] [[3 x i32] [i32 0, i32 4, i32 8], [3 x i32] [i32 6, i32 2, i32 10], [3 x i32] [i32 12, i32 14, i32 16]], align 16
@writeIntraPredMode = external local_unnamed_addr global ptr, align 8
@B8Mode2Value.b8start = internal unnamed_addr constant [8 x i32] [i32 0, i32 0, i32 0, i32 0, i32 1, i32 4, i32 5, i32 10], align 16
@B8Mode2Value.b8inc = internal unnamed_addr constant [8 x i32] [i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 2, i32 1], align 16
@writeFieldModeInfo = external local_unnamed_addr global ptr, align 8
@writeMB_typeInfo = external local_unnamed_addr global ptr, align 8
@writeB8_typeInfo = external local_unnamed_addr global ptr, align 8
@writeMB_transform_size = external local_unnamed_addr global ptr, align 8
@last_dquant = external local_unnamed_addr global i32, align 4
@intras = common dso_local local_unnamed_addr global i32 0, align 4
@cabac_encoding = external local_unnamed_addr global i32, align 4
@writeRefFrame = external local_unnamed_addr global [6 x ptr], align 16
@writeMVD = external local_unnamed_addr global ptr, align 8
@predict_nnz_chroma.j_off_tab = internal unnamed_addr constant [12 x i32] [i32 0, i32 0, i32 0, i32 0, i32 4, i32 4, i32 4, i32 4, i32 8, i32 8, i32 8, i32 8], align 16
@writeCoeff4x4_CAVLC.incVlc = internal unnamed_addr constant [7 x i32] [i32 0, i32 3, i32 6, i32 12, i32 24, i32 48, i32 32768], align 16
@.str.8 = private unnamed_addr constant [40 x i8] c"writeCoeff4x4_CAVLC: Invalid block type\00", align 1
@color_formats = common dso_local local_unnamed_addr global i32 0, align 4
@top_pic = common dso_local local_unnamed_addr global ptr null, align 8
@bottom_pic = common dso_local local_unnamed_addr global ptr null, align 8
@frame_pic = common dso_local local_unnamed_addr global ptr null, align 8
@frame_pic_1 = common dso_local local_unnamed_addr global ptr null, align 8
@frame_pic_2 = common dso_local local_unnamed_addr global ptr null, align 8
@frame_pic_3 = common dso_local local_unnamed_addr global ptr null, align 8
@frame_pic_si = common dso_local local_unnamed_addr global ptr null, align 8
@Bit_Buffer = common dso_local local_unnamed_addr global ptr null, align 8
@imgY_sub_tmp = common dso_local local_unnamed_addr global ptr null, align 8
@PicPos = common dso_local local_unnamed_addr global ptr null, align 8
@log2_max_frame_num_minus4 = common dso_local local_unnamed_addr global i32 0, align 4
@log2_max_pic_order_cnt_lsb_minus4 = common dso_local local_unnamed_addr global i32 0, align 4
@me_tot_time = common dso_local local_unnamed_addr global i64 0, align 8
@me_time = common dso_local local_unnamed_addr global i64 0, align 8
@dsr_new_search_range = common dso_local local_unnamed_addr global i32 0, align 4
@mb_adaptive = common dso_local local_unnamed_addr global i32 0, align 4
@MBPairIsField = common dso_local local_unnamed_addr global i32 0, align 4
@imgY_com = common dso_local local_unnamed_addr global ptr null, align 8
@imgUV_com = common dso_local local_unnamed_addr global ptr null, align 8
@direct_ref_idx = common dso_local local_unnamed_addr global ptr null, align 8
@direct_pdir = common dso_local local_unnamed_addr global ptr null, align 8
@pixel_map = common dso_local local_unnamed_addr global ptr null, align 8
@refresh_map = common dso_local local_unnamed_addr global ptr null, align 8
@frame_ctr = common dso_local local_unnamed_addr global [5 x i32] zeroinitializer, align 16
@frame_no = common dso_local local_unnamed_addr global i32 0, align 4
@nextP_tr_fld = common dso_local local_unnamed_addr global i32 0, align 4
@nextP_tr_frm = common dso_local local_unnamed_addr global i32 0, align 4
@tot_time = common dso_local local_unnamed_addr global i64 0, align 8
@b8_ipredmode8x8 = common dso_local local_unnamed_addr global [4 x [4 x i8]] zeroinitializer, align 16
@b8_intra_pred_modes8x8 = common dso_local local_unnamed_addr global [16 x i8] zeroinitializer, align 16
@gop_structure = common dso_local local_unnamed_addr global ptr null, align 8
@rdopt = common dso_local local_unnamed_addr global ptr null, align 8
@rddata_top_frame_mb = common dso_local local_unnamed_addr global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_frame_mb = common dso_local local_unnamed_addr global %struct.RD_DATA zeroinitializer, align 8
@rddata_top_field_mb = common dso_local local_unnamed_addr global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_field_mb = common dso_local local_unnamed_addr global %struct.RD_DATA zeroinitializer, align 8
@p_stat = common dso_local local_unnamed_addr global ptr null, align 8
@p_log = common dso_local local_unnamed_addr global ptr null, align 8
@p_trace = common dso_local local_unnamed_addr global ptr null, align 8
@p_in = common dso_local local_unnamed_addr global i32 0, align 4
@p_dec = common dso_local local_unnamed_addr global i32 0, align 4
@mb16x16_cost_frame = common dso_local local_unnamed_addr global ptr null, align 8
@Bytes_After_Header = common dso_local local_unnamed_addr global i32 0, align 4
@encode_one_macroblock = common dso_local local_unnamed_addr global ptr null, align 8
@lrec = common dso_local local_unnamed_addr global ptr null, align 8
@lrec_uv = common dso_local local_unnamed_addr global ptr null, align 8
@number_sp2_frames = common dso_local local_unnamed_addr global i32 0, align 4
@giRDOpt_B8OnlyFlag = common dso_local local_unnamed_addr global i32 0, align 4
@imgY_tmp = common dso_local local_unnamed_addr global ptr null, align 8
@imgUV_tmp = common dso_local local_unnamed_addr global [2 x ptr] zeroinitializer, align 16
@frameNuminGOP = common dso_local local_unnamed_addr global i32 0, align 4
@redundant_coding = common dso_local local_unnamed_addr global i32 0, align 4
@key_frame = common dso_local local_unnamed_addr global i32 0, align 4
@redundant_ref_idx = common dso_local local_unnamed_addr global i32 0, align 4
@img_pad_size_uv_x = common dso_local local_unnamed_addr global i32 0, align 4
@img_pad_size_uv_y = common dso_local local_unnamed_addr global i32 0, align 4
@chroma_mask_mv_y = common dso_local local_unnamed_addr global i8 0, align 1
@chroma_mask_mv_x = common dso_local local_unnamed_addr global i8 0, align 1
@chroma_shift_y = common dso_local local_unnamed_addr global i32 0, align 4
@chroma_shift_x = common dso_local local_unnamed_addr global i32 0, align 4
@shift_cr_x = common dso_local local_unnamed_addr global i32 0, align 4
@shift_cr_y = common dso_local local_unnamed_addr global i32 0, align 4
@img_cr_padded_size_x = common dso_local local_unnamed_addr global i32 0, align 4
@start_me_refinement_hp = common dso_local local_unnamed_addr global i32 0, align 4
@start_me_refinement_qp = common dso_local local_unnamed_addr global i32 0, align 4
@height_pad_cr = common dso_local local_unnamed_addr global i32 0, align 4
@width_pad_cr = common dso_local local_unnamed_addr global i32 0, align 4
@diffy = common dso_local local_unnamed_addr global [16 x [16 x i32]] zeroinitializer, align 16
@generic_RC_init = common dso_local local_unnamed_addr global ptr null, align 8
@generic_RC_best = common dso_local local_unnamed_addr global ptr null, align 8
@quadratic_RC_init = common dso_local local_unnamed_addr global ptr null, align 8
@quadratic_RC_best = common dso_local local_unnamed_addr global ptr null, align 8
@writeCIPredMode = external local_unnamed_addr global ptr, align 8
@writeChromaCoeff.chroma_dc_context = internal unnamed_addr constant [3 x i32] [i32 6, i32 8, i32 9], align 4
@writeChromaCoeff.chroma_ac_param = internal unnamed_addr constant [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\04\14\05\15", [4 x i8] c"$4%5", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\04\14\05\15", [4 x i8] c"\06\16\07\17", [4 x i8] c"$4%5", [4 x i8] c"&6'7", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\04\14\05\15", [4 x i8] c"$4%5", [4 x i8] c"\06\16\07\17", [4 x i8] c"&6'7", [4 x i8] c"\08\18\09\19", [4 x i8] c"(8)9", [4 x i8] c"\0A\1A\0B\1B", [4 x i8] c"*:+;"]], align 16
@writeCBP = external local_unnamed_addr global ptr, align 8
@writeDquant = external local_unnamed_addr global ptr, align 8
@str = private unnamed_addr constant [17 x i8] c"ERROR: level > 1\00", align 1

; Function Attrs: nounwind uwtable
define dso_local void @set_MB_parameters(i32 noundef %mb_addr) local_unnamed_addr #0 {
entry:
  %0 = load ptr, ptr @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  store i32 %mb_addr, ptr %current_mb_nr, align 4
  %1 = load ptr, ptr @get_mb_block_pos, align 8
  %mb_x = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 35
  %mb_y = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 36
  tail call void %1(i32 noundef %mb_addr, ptr noundef nonnull %mb_x, ptr noundef nonnull %mb_y) #17
  %2 = load ptr, ptr @img, align 8
  %mb_x1 = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 35
  %3 = load i32, ptr %mb_x1, align 8
  %shl = shl i32 %3, 2
  %block_x = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 37
  store i32 %shl, ptr %block_x, align 8
  %mb_y2 = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 36
  %4 = load i32, ptr %mb_y2, align 4
  %shl3 = shl i32 %4, 2
  %block_y = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 38
  store i32 %shl3, ptr %block_y, align 4
  %shl5 = shl i32 %3, 4
  %pix_x = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 39
  store i32 %shl5, ptr %pix_x, align 8
  %shl7 = shl i32 %4, 4
  %pix_y = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 40
  store i32 %shl7, ptr %pix_y, align 4
  %opix_x = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 43
  store i32 %shl5, ptr %opix_x, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 100
  %5 = load i32, ptr %MbaffFrameFlag, align 4
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.else33, label %if.then

if.then:                                          ; preds = %entry
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 61
  %6 = load ptr, ptr %mb_data, align 8
  %idxprom = sext i32 %mb_addr to i64
  %mb_field = getelementptr inbounds %struct.macroblock, ptr %6, i64 %idxprom, i32 19
  %7 = load i32, ptr %mb_field, align 8
  %tobool9.not = icmp eq i32 %7, 0
  br i1 %tobool9.not, label %if.else, label %if.then10

if.then10:                                        ; preds = %if.then
  %8 = and i32 %mb_addr, 1
  %tobool11.not = icmp eq i32 %8, 0
  %9 = load ptr, ptr @imgY_org_bot, align 8
  %10 = load ptr, ptr @imgY_org_top, align 8
  %cond = select i1 %tobool11.not, ptr %10, ptr %9
  store ptr %cond, ptr @imgY_org, align 8
  %11 = load ptr, ptr @imgUV_org_bot, align 8
  %12 = load ptr, ptr @imgUV_org_top, align 8
  %cond17 = select i1 %tobool11.not, ptr %12, ptr %11
  store ptr %cond17, ptr @imgUV_org, align 8
  %13 = shl i32 %4, 3
  %shl19 = and i32 %13, -16
  %opix_y = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 44
  store i32 %shl19, ptr %opix_y, align 4
  %cond22 = select i1 %tobool11.not, i32 2, i32 4
  %list_offset = getelementptr inbounds %struct.macroblock, ptr %6, i64 %idxprom, i32 21
  store i32 %cond22, ptr %list_offset, align 8
  br label %if.end41

if.else:                                          ; preds = %if.then
  %14 = load ptr, ptr @imgY_org_frm, align 8
  store ptr %14, ptr @imgY_org, align 8
  %15 = load ptr, ptr @imgUV_org_frm, align 8
  store ptr %15, ptr @imgUV_org, align 8
  %opix_y28 = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 44
  store i32 %shl7, ptr %opix_y28, align 4
  %list_offset32 = getelementptr inbounds %struct.macroblock, ptr %6, i64 %idxprom, i32 21
  store i32 0, ptr %list_offset32, align 8
  br label %if.end41

if.else33:                                        ; preds = %entry
  %opix_y36 = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 44
  store i32 %shl7, ptr %opix_y36, align 4
  %mb_data37 = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 61
  %16 = load ptr, ptr %mb_data37, align 8
  %idxprom38 = sext i32 %mb_addr to i64
  %list_offset40 = getelementptr inbounds %struct.macroblock, ptr %16, i64 %idxprom38, i32 21
  store i32 0, ptr %list_offset40, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then10, %if.else, %if.else33
  %17 = phi i32 [ %shl19, %if.then10 ], [ %shl7, %if.else ], [ %shl7, %if.else33 ]
  %yuv_format = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 160
  %18 = load i32, ptr %yuv_format, align 8
  %cmp.not = icmp eq i32 %18, 0
  br i1 %cmp.not, label %if.end56, label %if.then42

if.then42:                                        ; preds = %if.end41
  %mb_cr_size_x = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 162
  %19 = load i32, ptr %mb_cr_size_x, align 8
  %mul = mul nsw i32 %19, %shl5
  %shr44 = ashr exact i32 %mul, 4
  %pix_c_x = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 41
  store i32 %shr44, ptr %pix_c_x, align 8
  %mb_cr_size_y = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 163
  %20 = load i32, ptr %mb_cr_size_y, align 4
  %mul46 = mul nsw i32 %20, %shl7
  %shr47 = ashr exact i32 %mul46, 4
  %pix_c_y = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 42
  store i32 %shr47, ptr %pix_c_y, align 4
  %opix_c_x = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 45
  store i32 %shr44, ptr %opix_c_x, align 8
  %mul54 = mul nsw i32 %17, %20
  %shr55 = ashr exact i32 %mul54, 4
  %opix_c_y = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 46
  store i32 %shr55, ptr %opix_c_y, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then42, %if.end41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @proceed2nextMacroblock() local_unnamed_addr #1 {
entry:
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  %bitcounter = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 5
  %arrayidx1 = getelementptr inbounds i32, ptr %bitcounter, i64 1
  %3 = load i32, ptr %arrayidx1, align 4
  %max_bitCount = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 147
  %4 = load i32, ptr %max_bitCount, align 8
  %cmp = icmp sgt i32 %3, %4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str, i32 noundef %3, i32 noundef %4)
  %.pre = load ptr, ptr @img, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = phi ptr [ %.pre, %if.then ], [ %0, %entry ]
  %arrayidx4 = getelementptr inbounds i32, ptr %bitcounter, i64 2
  %6 = load i32, ptr %arrayidx4, align 4
  %conv = sext i32 %6 to i64
  %7 = load ptr, ptr @stats, align 8
  %type = getelementptr inbounds %struct.ImageParameters, ptr %5, i64 0, i32 5
  %8 = load i32, ptr %type, align 4
  %idxprom5 = sext i32 %8 to i64
  %arrayidx6 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 25, i64 %idxprom5
  %9 = load i64, ptr %arrayidx6, align 8
  %add = add nsw i64 %9, %conv
  store i64 %add, ptr %arrayidx6, align 8
  %arrayidx7 = getelementptr inbounds i32, ptr %bitcounter, i64 5
  %10 = load i32, ptr %arrayidx7, align 4
  %conv8 = sext i32 %10 to i64
  %arrayidx11 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 28, i64 %idxprom5
  %11 = load i64, ptr %arrayidx11, align 8
  %add12 = add nsw i64 %11, %conv8
  store i64 %add12, ptr %arrayidx11, align 8
  %arrayidx13 = getelementptr inbounds i32, ptr %bitcounter, i64 4
  %12 = load i32, ptr %arrayidx13, align 4
  %conv14 = sext i32 %12 to i64
  %arrayidx17 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 27, i64 %idxprom5
  %13 = load i64, ptr %arrayidx17, align 8
  %add18 = add nsw i64 %13, %conv14
  store i64 %add18, ptr %arrayidx17, align 8
  %arrayidx19 = getelementptr inbounds i32, ptr %bitcounter, i64 6
  %14 = load i32, ptr %arrayidx19, align 4
  %conv20 = sext i32 %14 to i64
  %arrayidx23 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 29, i64 %idxprom5
  %15 = load i64, ptr %arrayidx23, align 8
  %add24 = add nsw i64 %15, %conv20
  store i64 %add24, ptr %arrayidx23, align 8
  %arrayidx25 = getelementptr inbounds i32, ptr %bitcounter, i64 7
  %16 = load i32, ptr %arrayidx25, align 4
  %conv26 = sext i32 %16 to i64
  %arrayidx29 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 30, i64 %idxprom5
  %17 = load i64, ptr %arrayidx29, align 8
  %add30 = add nsw i64 %17, %conv26
  store i64 %add30, ptr %arrayidx29, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 8
  %18 = load i32, ptr %mb_type, align 8
  switch i32 %18, label %if.end67 [
    i32 9, label %if.then44
    i32 10, label %if.then44
    i32 13, label %if.then44
    i32 14, label %if.then44
  ]

if.then44:                                        ; preds = %if.end, %if.end, %if.end, %if.end
  %c_ipred_mode = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 17
  %19 = load i32, ptr %c_ipred_mode, align 8
  %idxprom45 = sext i32 %19 to i64
  %arrayidx46 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 12, i64 %idxprom45
  %20 = load i32, ptr %arrayidx46, align 4
  %inc = add nsw i32 %20, 1
  store i32 %inc, ptr %arrayidx46, align 4
  %cbp = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 12
  %21 = load i32, ptr %cbp, align 4
  %and = and i32 %21, 15
  %cmp47.not = icmp eq i32 %and, 0
  br i1 %cmp47.not, label %if.end67thread-pre-split, label %if.then49

if.then49:                                        ; preds = %if.then44
  %luma_transform_size_8x8_flag = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 31
  %22 = load i32, ptr %luma_transform_size_8x8_flag, align 8
  %tobool.not = icmp eq i32 %22, 0
  %23 = load i32, ptr %type, align 4
  %idxprom59 = sext i32 %23 to i64
  %24 = load i32, ptr %mb_type, align 8
  %idxprom62 = sext i32 %24 to i64
  %arrayidx56 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 10, i64 %idxprom59, i64 %idxprom62
  %arrayidx63 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 11, i64 %idxprom59, i64 %idxprom62
  %arrayidx56.sink265 = select i1 %tobool.not, ptr %arrayidx63, ptr %arrayidx56
  %25 = load i32, ptr %arrayidx56.sink265, align 4
  %inc57 = add nsw i32 %25, 1
  store i32 %inc57, ptr %arrayidx56.sink265, align 4
  br label %if.end67thread-pre-split

if.end67thread-pre-split:                         ; preds = %if.then49, %if.then44
  %.pr = load i32, ptr %mb_type, align 8
  %.pre243 = load i32, ptr %type, align 4
  %.pre256 = sext i32 %.pre243 to i64
  br label %if.end67

if.end67:                                         ; preds = %if.end67thread-pre-split, %if.end
  %idxprom69.pre-phi = phi i64 [ %.pre256, %if.end67thread-pre-split ], [ %idxprom5, %if.end ]
  %26 = phi i32 [ %.pre243, %if.end67thread-pre-split ], [ %8, %if.end ]
  %27 = phi i32 [ %.pr, %if.end67thread-pre-split ], [ %18, %if.end ]
  %idxprom72 = sext i32 %27 to i64
  %arrayidx73 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 22, i64 %idxprom69.pre-phi, i64 %idxprom72
  %28 = load i64, ptr %arrayidx73, align 8
  %inc74 = add nsw i64 %28, 1
  store i64 %inc74, ptr %arrayidx73, align 8
  %arrayidx75 = getelementptr inbounds i32, ptr %bitcounter, i64 3
  %29 = load i32, ptr %arrayidx75, align 4
  %conv76 = sext i32 %29 to i64
  %arrayidx82 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 23, i64 %idxprom69.pre-phi, i64 %idxprom72
  %30 = load i64, ptr %arrayidx82, align 8
  %add83 = add nsw i64 %30, %conv76
  store i64 %add83, ptr %arrayidx82, align 8
  %cmp85.not = icmp eq i32 %26, 2
  br i1 %cmp85.not, label %if.end187, label %if.then87

if.then87:                                        ; preds = %if.end67
  %cmp89 = icmp eq i32 %27, 8
  br i1 %cmp89, label %for.cond.preheader, label %if.else150

for.cond.preheader:                               ; preds = %if.then87
  %luma_transform_size_8x8_flag113 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 31
  %cbp126 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 12
  %31 = load ptr, ptr @input, align 8
  %Transform8x8Mode = getelementptr inbounds %struct.InputParameters, ptr %31, i64 0, i32 153
  %arrayidx95 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 14, i64 0
  %32 = load i32, ptr %arrayidx95, align 4
  %cmp96 = icmp sgt i32 %32, 0
  br i1 %cmp96, label %if.then98, label %if.else109

if.then98:                                        ; preds = %for.cond.preheader
  %idxprom106 = zext i32 %32 to i64
  %arrayidx107 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 22, i64 %idxprom69.pre-phi, i64 %idxprom106
  %33 = load i64, ptr %arrayidx107, align 8
  %inc108 = add nsw i64 %33, 1
  store i64 %inc108, ptr %arrayidx107, align 8
  br label %if.end117

if.else109:                                       ; preds = %for.cond.preheader
  %34 = load i32, ptr %luma_transform_size_8x8_flag113, align 8
  %idxprom114 = sext i32 %34 to i64
  %arrayidx115 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 9, i64 %idxprom69.pre-phi, i64 %idxprom114
  %35 = load i32, ptr %arrayidx115, align 4
  %inc116 = add nsw i32 %35, 1
  store i32 %inc116, ptr %arrayidx115, align 4
  %.pre244 = load i32, ptr %arrayidx95, align 4
  br label %if.end117

if.end117:                                        ; preds = %if.else109, %if.then98
  %36 = phi i32 [ %.pre244, %if.else109 ], [ %32, %if.then98 ]
  %cmp121 = icmp eq i32 %36, 4
  br i1 %cmp121, label %if.then123, label %for.inc

if.then123:                                       ; preds = %if.end117
  %37 = load i32, ptr %luma_transform_size_8x8_flag113, align 8
  %tobool125.not = icmp eq i32 %37, 0
  br i1 %tobool125.not, label %if.then123.lor.lhs.false130_crit_edge, label %land.lhs.true

if.then123.lor.lhs.false130_crit_edge:            ; preds = %if.then123
  %.pre246.pre = load i32, ptr %type, align 4
  br label %lor.lhs.false130

land.lhs.true:                                    ; preds = %if.then123
  %38 = load i32, ptr %cbp126, align 4
  %and127 = and i32 %38, 15
  %cmp128.not = icmp eq i32 %and127, 0
  %.pre246.pre257 = load i32, ptr %type, align 4
  br i1 %cmp128.not, label %lor.lhs.false130, label %if.then133

lor.lhs.false130:                                 ; preds = %if.then123.lor.lhs.false130_crit_edge, %land.lhs.true
  %.pre246 = phi i32 [ %.pre246.pre, %if.then123.lor.lhs.false130_crit_edge ], [ %.pre246.pre257, %land.lhs.true ]
  %39 = load i32, ptr %Transform8x8Mode, align 4
  %cmp131 = icmp eq i32 %39, 2
  br i1 %cmp131, label %if.then133, label %if.else140

if.then133:                                       ; preds = %land.lhs.true, %lor.lhs.false130
  %40 = phi i32 [ %.pre246, %lor.lhs.false130 ], [ %.pre246.pre257, %land.lhs.true ]
  %idxprom136 = sext i32 %40 to i64
  %arrayidx138 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 10, i64 %idxprom136, i64 4
  br label %for.inc.sink.split

if.else140:                                       ; preds = %lor.lhs.false130
  %idxprom143 = sext i32 %.pre246 to i64
  %arrayidx145 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 11, i64 %idxprom143, i64 4
  br label %for.inc.sink.split

for.inc.sink.split:                               ; preds = %if.then133, %if.else140
  %arrayidx145.sink266 = phi ptr [ %arrayidx145, %if.else140 ], [ %arrayidx138, %if.then133 ]
  %41 = load i32, ptr %arrayidx145.sink266, align 4
  %inc146 = add nsw i32 %41, 1
  store i32 %inc146, ptr %arrayidx145.sink266, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.inc.sink.split, %if.end117
  %arrayidx95.1 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 14, i64 1
  %42 = load i32, ptr %arrayidx95.1, align 4
  %cmp96.1 = icmp sgt i32 %42, 0
  %43 = load i32, ptr %type, align 4
  %idxprom101.1 = sext i32 %43 to i64
  br i1 %cmp96.1, label %if.then98.1, label %if.else109.1

if.else109.1:                                     ; preds = %for.inc
  %44 = load i32, ptr %luma_transform_size_8x8_flag113, align 8
  %idxprom114.1 = sext i32 %44 to i64
  %arrayidx115.1 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 9, i64 %idxprom101.1, i64 %idxprom114.1
  %45 = load i32, ptr %arrayidx115.1, align 4
  %inc116.1 = add nsw i32 %45, 1
  store i32 %inc116.1, ptr %arrayidx115.1, align 4
  %.pre247 = load i32, ptr %arrayidx95.1, align 4
  br label %if.end117.1

if.then98.1:                                      ; preds = %for.inc
  %idxprom106.1 = zext i32 %42 to i64
  %arrayidx107.1 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 22, i64 %idxprom101.1, i64 %idxprom106.1
  %46 = load i64, ptr %arrayidx107.1, align 8
  %inc108.1 = add nsw i64 %46, 1
  store i64 %inc108.1, ptr %arrayidx107.1, align 8
  br label %if.end117.1

if.end117.1:                                      ; preds = %if.then98.1, %if.else109.1
  %47 = phi i32 [ %42, %if.then98.1 ], [ %.pre247, %if.else109.1 ]
  %cmp121.1 = icmp eq i32 %47, 4
  br i1 %cmp121.1, label %if.then123.1, label %for.inc.1

if.then123.1:                                     ; preds = %if.end117.1
  %48 = load i32, ptr %luma_transform_size_8x8_flag113, align 8
  %tobool125.not.1 = icmp eq i32 %48, 0
  br i1 %tobool125.not.1, label %if.then123.1.lor.lhs.false130.1_crit_edge, label %land.lhs.true.1

if.then123.1.lor.lhs.false130.1_crit_edge:        ; preds = %if.then123.1
  %.pre249.pre = load i32, ptr %type, align 4
  br label %lor.lhs.false130.1

land.lhs.true.1:                                  ; preds = %if.then123.1
  %49 = load i32, ptr %cbp126, align 4
  %and127.1 = and i32 %49, 15
  %cmp128.not.1 = icmp eq i32 %and127.1, 0
  %.pre249.pre259 = load i32, ptr %type, align 4
  br i1 %cmp128.not.1, label %lor.lhs.false130.1, label %if.then133.1

lor.lhs.false130.1:                               ; preds = %if.then123.1.lor.lhs.false130.1_crit_edge, %land.lhs.true.1
  %.pre249 = phi i32 [ %.pre249.pre, %if.then123.1.lor.lhs.false130.1_crit_edge ], [ %.pre249.pre259, %land.lhs.true.1 ]
  %50 = load i32, ptr %Transform8x8Mode, align 4
  %cmp131.1 = icmp eq i32 %50, 2
  br i1 %cmp131.1, label %if.then133.1, label %if.else140.1

if.else140.1:                                     ; preds = %lor.lhs.false130.1
  %idxprom143.1 = sext i32 %.pre249 to i64
  %arrayidx145.1 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 11, i64 %idxprom143.1, i64 4
  br label %for.inc.1.sink.split

if.then133.1:                                     ; preds = %land.lhs.true.1, %lor.lhs.false130.1
  %51 = phi i32 [ %.pre249, %lor.lhs.false130.1 ], [ %.pre249.pre259, %land.lhs.true.1 ]
  %idxprom136.1 = sext i32 %51 to i64
  %arrayidx138.1 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 10, i64 %idxprom136.1, i64 4
  br label %for.inc.1.sink.split

for.inc.1.sink.split:                             ; preds = %if.else140.1, %if.then133.1
  %arrayidx138.1.sink267 = phi ptr [ %arrayidx138.1, %if.then133.1 ], [ %arrayidx145.1, %if.else140.1 ]
  %52 = load i32, ptr %arrayidx138.1.sink267, align 4
  %inc139.1 = add nsw i32 %52, 1
  store i32 %inc139.1, ptr %arrayidx138.1.sink267, align 4
  br label %for.inc.1

for.inc.1:                                        ; preds = %for.inc.1.sink.split, %if.end117.1
  %arrayidx95.2 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 14, i64 2
  %53 = load i32, ptr %arrayidx95.2, align 4
  %cmp96.2 = icmp sgt i32 %53, 0
  %54 = load i32, ptr %type, align 4
  %idxprom101.2 = sext i32 %54 to i64
  br i1 %cmp96.2, label %if.then98.2, label %if.else109.2

if.else109.2:                                     ; preds = %for.inc.1
  %55 = load i32, ptr %luma_transform_size_8x8_flag113, align 8
  %idxprom114.2 = sext i32 %55 to i64
  %arrayidx115.2 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 9, i64 %idxprom101.2, i64 %idxprom114.2
  %56 = load i32, ptr %arrayidx115.2, align 4
  %inc116.2 = add nsw i32 %56, 1
  store i32 %inc116.2, ptr %arrayidx115.2, align 4
  %.pre250 = load i32, ptr %arrayidx95.2, align 4
  br label %if.end117.2

if.then98.2:                                      ; preds = %for.inc.1
  %idxprom106.2 = zext i32 %53 to i64
  %arrayidx107.2 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 22, i64 %idxprom101.2, i64 %idxprom106.2
  %57 = load i64, ptr %arrayidx107.2, align 8
  %inc108.2 = add nsw i64 %57, 1
  store i64 %inc108.2, ptr %arrayidx107.2, align 8
  br label %if.end117.2

if.end117.2:                                      ; preds = %if.then98.2, %if.else109.2
  %58 = phi i32 [ %53, %if.then98.2 ], [ %.pre250, %if.else109.2 ]
  %cmp121.2 = icmp eq i32 %58, 4
  br i1 %cmp121.2, label %if.then123.2, label %for.inc.2

if.then123.2:                                     ; preds = %if.end117.2
  %59 = load i32, ptr %luma_transform_size_8x8_flag113, align 8
  %tobool125.not.2 = icmp eq i32 %59, 0
  br i1 %tobool125.not.2, label %if.then123.2.lor.lhs.false130.2_crit_edge, label %land.lhs.true.2

if.then123.2.lor.lhs.false130.2_crit_edge:        ; preds = %if.then123.2
  %.pre252.pre = load i32, ptr %type, align 4
  br label %lor.lhs.false130.2

land.lhs.true.2:                                  ; preds = %if.then123.2
  %60 = load i32, ptr %cbp126, align 4
  %and127.2 = and i32 %60, 15
  %cmp128.not.2 = icmp eq i32 %and127.2, 0
  %.pre252.pre261 = load i32, ptr %type, align 4
  br i1 %cmp128.not.2, label %lor.lhs.false130.2, label %if.then133.2

lor.lhs.false130.2:                               ; preds = %if.then123.2.lor.lhs.false130.2_crit_edge, %land.lhs.true.2
  %.pre252 = phi i32 [ %.pre252.pre, %if.then123.2.lor.lhs.false130.2_crit_edge ], [ %.pre252.pre261, %land.lhs.true.2 ]
  %61 = load i32, ptr %Transform8x8Mode, align 4
  %cmp131.2 = icmp eq i32 %61, 2
  br i1 %cmp131.2, label %if.then133.2, label %if.else140.2

if.else140.2:                                     ; preds = %lor.lhs.false130.2
  %idxprom143.2 = sext i32 %.pre252 to i64
  %arrayidx145.2 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 11, i64 %idxprom143.2, i64 4
  br label %for.inc.2.sink.split

if.then133.2:                                     ; preds = %land.lhs.true.2, %lor.lhs.false130.2
  %62 = phi i32 [ %.pre252, %lor.lhs.false130.2 ], [ %.pre252.pre261, %land.lhs.true.2 ]
  %idxprom136.2 = sext i32 %62 to i64
  %arrayidx138.2 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 10, i64 %idxprom136.2, i64 4
  br label %for.inc.2.sink.split

for.inc.2.sink.split:                             ; preds = %if.else140.2, %if.then133.2
  %arrayidx138.2.sink268 = phi ptr [ %arrayidx138.2, %if.then133.2 ], [ %arrayidx145.2, %if.else140.2 ]
  %63 = load i32, ptr %arrayidx138.2.sink268, align 4
  %inc139.2 = add nsw i32 %63, 1
  store i32 %inc139.2, ptr %arrayidx138.2.sink268, align 4
  br label %for.inc.2

for.inc.2:                                        ; preds = %for.inc.2.sink.split, %if.end117.2
  %arrayidx95.3 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 14, i64 3
  %64 = load i32, ptr %arrayidx95.3, align 4
  %cmp96.3 = icmp sgt i32 %64, 0
  %65 = load i32, ptr %type, align 4
  %idxprom101.3 = sext i32 %65 to i64
  br i1 %cmp96.3, label %if.then98.3, label %if.else109.3

if.else109.3:                                     ; preds = %for.inc.2
  %66 = load i32, ptr %luma_transform_size_8x8_flag113, align 8
  %idxprom114.3 = sext i32 %66 to i64
  %arrayidx115.3 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 9, i64 %idxprom101.3, i64 %idxprom114.3
  %67 = load i32, ptr %arrayidx115.3, align 4
  %inc116.3 = add nsw i32 %67, 1
  store i32 %inc116.3, ptr %arrayidx115.3, align 4
  %.pre253 = load i32, ptr %arrayidx95.3, align 4
  br label %if.end117.3

if.then98.3:                                      ; preds = %for.inc.2
  %idxprom106.3 = zext i32 %64 to i64
  %arrayidx107.3 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 22, i64 %idxprom101.3, i64 %idxprom106.3
  %68 = load i64, ptr %arrayidx107.3, align 8
  %inc108.3 = add nsw i64 %68, 1
  store i64 %inc108.3, ptr %arrayidx107.3, align 8
  br label %if.end117.3

if.end117.3:                                      ; preds = %if.then98.3, %if.else109.3
  %69 = phi i32 [ %64, %if.then98.3 ], [ %.pre253, %if.else109.3 ]
  %cmp121.3 = icmp eq i32 %69, 4
  br i1 %cmp121.3, label %if.then123.3, label %if.end187

if.then123.3:                                     ; preds = %if.end117.3
  %70 = load i32, ptr %luma_transform_size_8x8_flag113, align 8
  %tobool125.not.3 = icmp eq i32 %70, 0
  br i1 %tobool125.not.3, label %if.then123.3.lor.lhs.false130.3_crit_edge, label %land.lhs.true.3

if.then123.3.lor.lhs.false130.3_crit_edge:        ; preds = %if.then123.3
  %.pre255.pre = load i32, ptr %type, align 4
  br label %lor.lhs.false130.3

land.lhs.true.3:                                  ; preds = %if.then123.3
  %71 = load i32, ptr %cbp126, align 4
  %and127.3 = and i32 %71, 15
  %cmp128.not.3 = icmp eq i32 %and127.3, 0
  %.pre255.pre263 = load i32, ptr %type, align 4
  br i1 %cmp128.not.3, label %lor.lhs.false130.3, label %if.then133.3

lor.lhs.false130.3:                               ; preds = %if.then123.3.lor.lhs.false130.3_crit_edge, %land.lhs.true.3
  %.pre255 = phi i32 [ %.pre255.pre, %if.then123.3.lor.lhs.false130.3_crit_edge ], [ %.pre255.pre263, %land.lhs.true.3 ]
  %72 = load i32, ptr %Transform8x8Mode, align 4
  %cmp131.3 = icmp eq i32 %72, 2
  br i1 %cmp131.3, label %if.then133.3, label %if.else140.3

if.else140.3:                                     ; preds = %lor.lhs.false130.3
  %idxprom143.3 = sext i32 %.pre255 to i64
  %arrayidx145.3 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 11, i64 %idxprom143.3, i64 4
  br label %if.end187.sink.split

if.then133.3:                                     ; preds = %land.lhs.true.3, %lor.lhs.false130.3
  %73 = phi i32 [ %.pre255, %lor.lhs.false130.3 ], [ %.pre255.pre263, %land.lhs.true.3 ]
  %idxprom136.3 = sext i32 %73 to i64
  %arrayidx138.3 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 10, i64 %idxprom136.3, i64 4
  br label %if.end187.sink.split

if.else150:                                       ; preds = %if.then87
  %or.cond = icmp ult i32 %27, 4
  br i1 %or.cond, label %land.lhs.true158, label %if.end187

land.lhs.true158:                                 ; preds = %if.else150
  %cbp159 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 12
  %74 = load i32, ptr %cbp159, align 4
  %and160 = and i32 %74, 15
  %cmp161.not = icmp eq i32 %and160, 0
  br i1 %cmp161.not, label %if.end187, label %if.then163

if.then163:                                       ; preds = %land.lhs.true158
  %luma_transform_size_8x8_flag164 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 31
  %75 = load i32, ptr %luma_transform_size_8x8_flag164, align 8
  %tobool165.not = icmp eq i32 %75, 0
  br i1 %tobool165.not, label %if.else175, label %if.then166

if.then166:                                       ; preds = %if.then163
  %arrayidx173 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 10, i64 %idxprom69.pre-phi, i64 %idxprom72
  br label %if.end187.sink.split

if.else175:                                       ; preds = %if.then163
  %arrayidx182 = getelementptr inbounds %struct.StatParameters, ptr %7, i64 0, i32 11, i64 %idxprom69.pre-phi, i64 %idxprom72
  br label %if.end187.sink.split

if.end187.sink.split:                             ; preds = %if.else175, %if.then166, %if.then133.3, %if.else140.3
  %arrayidx145.3.sink269 = phi ptr [ %arrayidx145.3, %if.else140.3 ], [ %arrayidx138.3, %if.then133.3 ], [ %arrayidx173, %if.then166 ], [ %arrayidx182, %if.else175 ]
  %76 = load i32, ptr %arrayidx145.3.sink269, align 4
  %inc146.3 = add nsw i32 %76, 1
  store i32 %inc146.3, ptr %arrayidx145.3.sink269, align 4
  br label %if.end187

if.end187:                                        ; preds = %if.end187.sink.split, %if.end117.3, %land.lhs.true158, %if.else150, %if.end67
  %77 = load i32, ptr %type, align 4
  switch i32 %77, label %if.end198 [
    i32 0, label %if.then195
    i32 3, label %if.then195
  ]

if.then195:                                       ; preds = %if.end187, %if.end187
  %qp = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 2
  %78 = load i32, ptr %qp, align 8
  %79 = load <2 x i32>, ptr %7, align 8
  %80 = insertelement <2 x i32> <i32 1, i32 poison>, i32 %78, i64 1
  %81 = add nsw <2 x i32> %79, %80
  store <2 x i32> %81, ptr %7, align 8
  br label %if.end198

if.end198:                                        ; preds = %if.end187, %if.then195
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nofree nounwind
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @set_chroma_qp(ptr nocapture noundef %currMB) local_unnamed_addr #4 {
entry:
  %0 = load ptr, ptr @img, align 8
  %bitdepth_chroma_qp_scale = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 145
  %qp = getelementptr inbounds %struct.macroblock, ptr %currMB, i64 0, i32 2
  %1 = load i32, ptr %qp, align 8
  %2 = load i32, ptr %bitdepth_chroma_qp_scale, align 8
  %sub = sub nsw i32 0, %2
  %arrayidx = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 165, i64 0
  %3 = load i32, ptr %arrayidx, align 4
  %add = add nsw i32 %3, %1
  %cond.i.i = tail call i32 @llvm.smax.i32(i32 %add, i32 %sub)
  %cond.i4.i = tail call i32 @llvm.smin.i32(i32 %cond.i.i, i32 51)
  %arrayidx2 = getelementptr inbounds %struct.macroblock, ptr %currMB, i64 0, i32 3, i64 0
  %cmp6 = icmp slt i32 %cond.i.i, 0
  br i1 %cmp6, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %idxprom13 = zext i32 %cond.i4.i to i64
  %arrayidx14 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom13
  %4 = load i8, ptr %arrayidx14, align 1
  %conv = zext i8 %4 to i32
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i32 [ %conv, %cond.false ], [ %cond.i4.i, %entry ]
  store i32 %cond, ptr %arrayidx2, align 4
  %5 = load i32, ptr %bitdepth_chroma_qp_scale, align 8
  %sub.1 = sub nsw i32 0, %5
  %arrayidx.1 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 165, i64 1
  %6 = load i32, ptr %arrayidx.1, align 4
  %add.1 = add nsw i32 %6, %1
  %cond.i.i.1 = tail call i32 @llvm.smax.i32(i32 %add.1, i32 %sub.1)
  %cond.i4.i.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1, i32 51)
  %cmp6.1 = icmp slt i32 %cond.i.i.1, 0
  br i1 %cmp6.1, label %cond.end.1, label %cond.false.1

cond.false.1:                                     ; preds = %cond.end
  %idxprom13.1 = zext i32 %cond.i4.i.1 to i64
  %arrayidx14.1 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom13.1
  %7 = load i8, ptr %arrayidx14.1, align 1
  %conv.1 = zext i8 %7 to i32
  br label %cond.end.1

cond.end.1:                                       ; preds = %cond.false.1, %cond.end
  %cond.1 = phi i32 [ %conv.1, %cond.false.1 ], [ %cond.i4.i.1, %cond.end ]
  %arrayidx2.1 = getelementptr inbounds %struct.macroblock, ptr %currMB, i64 0, i32 3, i64 1
  store i32 %cond.1, ptr %arrayidx2.1, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @start_macroblock(i32 noundef %mb_addr, i32 noundef %mb_field) local_unnamed_addr #0 {
entry:
  %0 = load ptr, ptr @input, align 8
  %slice_mode = getelementptr inbounds %struct.InputParameters, ptr %0, i64 0, i32 21
  %1 = load i32, ptr %slice_mode, align 8
  %2 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 61
  %3 = load ptr, ptr %mb_data, align 8
  %idxprom = sext i32 %mb_addr to i64
  %arrayidx = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 60
  %4 = load ptr, ptr %currentSlice, align 8
  %mb_field3 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 19
  store i32 %mb_field, ptr %mb_field3, align 8
  %conv = trunc i32 %mb_field to i8
  %5 = load ptr, ptr @enc_picture, align 8
  %mb_field4 = getelementptr inbounds %struct.storable_picture, ptr %5, i64 0, i32 34
  %6 = load ptr, ptr %mb_field4, align 8
  %arrayidx6 = getelementptr inbounds i8, ptr %6, i64 %idxprom
  store i8 %conv, ptr %arrayidx6, align 1
  %7 = load ptr, ptr @img, align 8
  %field_picture = getelementptr inbounds %struct.ImageParameters, ptr %7, i64 0, i32 110
  %8 = load i32, ptr %field_picture, align 8
  %tobool.not = icmp eq i32 %8, 0
  br i1 %tobool.not, label %lor.rhs7, label %lor.end11

lor.rhs7:                                         ; preds = %entry
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, ptr %7, i64 0, i32 100
  %9 = load i32, ptr %MbaffFrameFlag, align 4
  %tobool8.not = icmp eq i32 %9, 0
  br i1 %tobool8.not, label %lor.end11, label %land.rhs

land.rhs:                                         ; preds = %lor.rhs7
  %10 = load i32, ptr %mb_field3, align 8
  %tobool10 = icmp ne i32 %10, 0
  br label %lor.end11

lor.end11:                                        ; preds = %lor.rhs7, %land.rhs, %entry
  %11 = phi i1 [ true, %entry ], [ false, %lor.rhs7 ], [ %tobool10, %land.rhs ]
  %lor.ext12 = zext i1 %11 to i32
  %is_field_mode = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 20
  store i32 %lor.ext12, ptr %is_field_mode, align 4
  tail call void @set_MB_parameters(i32 noundef %mb_addr)
  %12 = load ptr, ptr @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %12, i64 0, i32 3
  %13 = load i32, ptr %current_mb_nr, align 4
  %call = tail call i32 @FmoGetPreviousMBNr(i32 noundef %13) #17
  %14 = and i32 %1, -2
  %switch = icmp eq i32 %14, 2
  %.pre714 = load ptr, ptr @input, align 8
  br i1 %switch, label %if.then, label %if.end29

if.then:                                          ; preds = %lor.end11
  %MbInterlace = getelementptr inbounds %struct.InputParameters, ptr %.pre714, i64 0, i32 122
  %15 = load i32, ptr %MbInterlace, align 4
  %tobool14.not = icmp eq i32 %15, 0
  %and = and i32 %mb_addr, 1
  %cmp15 = icmp eq i32 %and, 0
  %or.cond = or i1 %cmp15, %tobool14.not
  br i1 %or.cond, label %if.then17, label %if.end29

if.then17:                                        ; preds = %if.then
  %16 = load ptr, ptr @img, align 8
  %cod_counter = getelementptr inbounds %struct.ImageParameters, ptr %16, i64 0, i32 33
  %17 = load i32, ptr %cod_counter, align 8
  %tobool18.not = icmp eq i32 %17, 0
  br i1 %tobool18.not, label %for.cond.preheader, label %if.end29

for.cond.preheader:                               ; preds = %if.then17
  %max_part_nr = getelementptr inbounds %struct.Slice, ptr %4, i64 0, i32 4
  %18 = load i32, ptr %max_part_nr, align 8
  %cmp20687 = icmp sgt i32 %18, 0
  br i1 %cmp20687, label %for.body.lr.ph, label %if.end29

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %partArr = getelementptr inbounds %struct.Slice, ptr %4, i64 0, i32 6
  %19 = getelementptr inbounds %struct.InputParameters, ptr %.pre714, i64 0, i32 74
  %20 = load i32, ptr %19, align 8
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %for.body.preheader, label %for.body.lr.ph.split.us

for.body.preheader:                               ; preds = %for.body.lr.ph
  %.pre710 = load ptr, ptr @stats, align 8
  br label %for.body

for.body.lr.ph.split.us:                          ; preds = %for.body.lr.ph
  %22 = load ptr, ptr %partArr, align 8
  %23 = load ptr, ptr @stats, align 8
  %bit_slice.us = getelementptr inbounds %struct.StatParameters, ptr %23, i64 0, i32 6
  %24 = load i32, ptr %bit_slice.us, align 8
  %wide.trip.count = zext i32 %18 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %25 = icmp eq i32 %18, 1
  br i1 %25, label %for.cond.if.end29.loopexit_crit_edge.split.us.unr-lcssa, label %for.body.lr.ph.split.us.new

for.body.lr.ph.split.us.new:                      ; preds = %for.body.lr.ph.split.us
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us, %for.body.lr.ph.split.us.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.split.us.new ], [ %indvars.iv.next.1, %for.body.us ]
  %niter = phi i64 [ 0, %for.body.lr.ph.split.us.new ], [ %niter.next.1, %for.body.us ]
  %arrayidx23.us = getelementptr inbounds %struct.datapartition, ptr %22, i64 %indvars.iv
  %26 = load ptr, ptr %arrayidx23.us, align 8
  %stored_byte_pos.us = getelementptr inbounds %struct.Bitstream, ptr %26, i64 0, i32 3
  %27 = load <2 x i32>, ptr %26, align 8
  store <2 x i32> %27, ptr %stored_byte_pos.us, align 4
  %byte_buf.us = getelementptr inbounds %struct.Bitstream, ptr %26, i64 0, i32 2
  %28 = load i8, ptr %byte_buf.us, align 8
  %stored_byte_buf.us = getelementptr inbounds %struct.Bitstream, ptr %26, i64 0, i32 5
  store i8 %28, ptr %stored_byte_buf.us, align 4
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx23.us.1 = getelementptr inbounds %struct.datapartition, ptr %22, i64 %indvars.iv.next
  %29 = load ptr, ptr %arrayidx23.us.1, align 8
  %stored_byte_pos.us.1 = getelementptr inbounds %struct.Bitstream, ptr %29, i64 0, i32 3
  %30 = load <2 x i32>, ptr %29, align 8
  store <2 x i32> %30, ptr %stored_byte_pos.us.1, align 4
  %byte_buf.us.1 = getelementptr inbounds %struct.Bitstream, ptr %29, i64 0, i32 2
  %31 = load i8, ptr %byte_buf.us.1, align 8
  %stored_byte_buf.us.1 = getelementptr inbounds %struct.Bitstream, ptr %29, i64 0, i32 5
  store i8 %31, ptr %stored_byte_buf.us.1, align 4
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond.if.end29.loopexit_crit_edge.split.us.unr-lcssa, label %for.body.us

for.cond.if.end29.loopexit_crit_edge.split.us.unr-lcssa: ; preds = %for.body.us, %for.body.lr.ph.split.us
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph.split.us ], [ %indvars.iv.next.1, %for.body.us ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.if.end29.loopexit_crit_edge.split.us, label %for.body.us.epil

for.body.us.epil:                                 ; preds = %for.cond.if.end29.loopexit_crit_edge.split.us.unr-lcssa
  %arrayidx23.us.epil = getelementptr inbounds %struct.datapartition, ptr %22, i64 %indvars.iv.unr
  %32 = load ptr, ptr %arrayidx23.us.epil, align 8
  %stored_byte_pos.us.epil = getelementptr inbounds %struct.Bitstream, ptr %32, i64 0, i32 3
  %33 = load <2 x i32>, ptr %32, align 8
  store <2 x i32> %33, ptr %stored_byte_pos.us.epil, align 4
  %byte_buf.us.epil = getelementptr inbounds %struct.Bitstream, ptr %32, i64 0, i32 2
  %34 = load i8, ptr %byte_buf.us.epil, align 8
  %stored_byte_buf.us.epil = getelementptr inbounds %struct.Bitstream, ptr %32, i64 0, i32 5
  store i8 %34, ptr %stored_byte_buf.us.epil, align 4
  br label %for.cond.if.end29.loopexit_crit_edge.split.us

for.cond.if.end29.loopexit_crit_edge.split.us:    ; preds = %for.cond.if.end29.loopexit_crit_edge.split.us.unr-lcssa, %for.body.us.epil
  %stored_bit_slice.us = getelementptr inbounds %struct.StatParameters, ptr %23, i64 0, i32 7
  store i32 %24, ptr %stored_bit_slice.us, align 4
  br label %if.end29

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %35 = phi i32 [ %18, %for.body.preheader ], [ %44, %for.inc ]
  %36 = phi ptr [ %.pre714, %for.body.preheader ], [ %45, %for.inc ]
  %37 = phi ptr [ %.pre710, %for.body.preheader ], [ %46, %for.inc ]
  %indvars.iv696 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next697, %for.inc ]
  %38 = load ptr, ptr %partArr, align 8
  %arrayidx23 = getelementptr inbounds %struct.datapartition, ptr %38, i64 %indvars.iv696
  %39 = load ptr, ptr %arrayidx23, align 8
  %stored_byte_pos = getelementptr inbounds %struct.Bitstream, ptr %39, i64 0, i32 3
  %40 = load <2 x i32>, ptr %39, align 8
  store <2 x i32> %40, ptr %stored_byte_pos, align 4
  %byte_buf = getelementptr inbounds %struct.Bitstream, ptr %39, i64 0, i32 2
  %41 = load i8, ptr %byte_buf, align 8
  %stored_byte_buf = getelementptr inbounds %struct.Bitstream, ptr %39, i64 0, i32 5
  store i8 %41, ptr %stored_byte_buf, align 4
  %bit_slice = getelementptr inbounds %struct.StatParameters, ptr %37, i64 0, i32 6
  %42 = load i32, ptr %bit_slice, align 8
  %stored_bit_slice = getelementptr inbounds %struct.StatParameters, ptr %37, i64 0, i32 7
  store i32 %42, ptr %stored_bit_slice, align 4
  %symbol_mode = getelementptr inbounds %struct.InputParameters, ptr %36, i64 0, i32 74
  %43 = load i32, ptr %symbol_mode, align 8
  %cmp24 = icmp eq i32 %43, 1
  br i1 %cmp24, label %if.then26, label %for.inc

if.then26:                                        ; preds = %for.body
  %ee_recode = getelementptr inbounds %struct.datapartition, ptr %38, i64 %indvars.iv696, i32 2
  %ee_cabac = getelementptr inbounds %struct.datapartition, ptr %38, i64 %indvars.iv696, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %ee_recode, ptr noundef nonnull align 8 dereferenceable(48) %ee_cabac, i64 48, i1 false)
  %.pre = load ptr, ptr @stats, align 8
  %.pre711 = load ptr, ptr @input, align 8
  %.pre713 = load i32, ptr %max_part_nr, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then26
  %44 = phi i32 [ %35, %for.body ], [ %.pre713, %if.then26 ]
  %45 = phi ptr [ %36, %for.body ], [ %.pre711, %if.then26 ]
  %46 = phi ptr [ %37, %for.body ], [ %.pre, %if.then26 ]
  %indvars.iv.next697 = add nuw nsw i64 %indvars.iv696, 1
  %47 = sext i32 %44 to i64
  %cmp20 = icmp slt i64 %indvars.iv.next697, %47
  br i1 %cmp20, label %for.body, label %if.end29

if.end29:                                         ; preds = %for.inc, %for.cond.preheader, %for.cond.if.end29.loopexit_crit_edge.split.us, %lor.end11, %if.then, %if.then17
  %48 = phi ptr [ %.pre714, %for.cond.preheader ], [ %.pre714, %for.cond.if.end29.loopexit_crit_edge.split.us ], [ %.pre714, %lor.end11 ], [ %.pre714, %if.then ], [ %.pre714, %if.then17 ], [ %45, %for.inc ]
  %49 = load ptr, ptr @img, align 8
  %current_slice_nr = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 4
  %50 = load i32, ptr %current_slice_nr, align 8
  store i32 %50, ptr %arrayidx, align 8
  %qpsp = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 10
  %51 = load i32, ptr %qpsp, align 8
  %qpsp30 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 4
  store i32 %51, ptr %qpsp30, align 4
  %RCEnable = getelementptr inbounds %struct.InputParameters, ptr %48, i64 0, i32 157
  %52 = load i32, ptr %RCEnable, align 4
  %tobool31.not = icmp eq i32 %52, 0
  br i1 %tobool31.not, label %if.else356, label %if.then32

if.then32:                                        ; preds = %if.end29
  %cmp33 = icmp sgt i32 %call, -1
  br i1 %cmp33, label %if.then35, label %if.else67

if.then35:                                        ; preds = %if.then32
  %MbInterlace36 = getelementptr inbounds %struct.InputParameters, ptr %48, i64 0, i32 122
  %53 = load i32, ptr %MbInterlace36, align 4
  %cmp37 = icmp eq i32 %53, 2
  br i1 %cmp37, label %land.lhs.true, label %if.end49

land.lhs.true:                                    ; preds = %if.then35
  %bot_MB = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 134
  %54 = load i32, ptr %bot_MB, align 4
  %tobool39.not = icmp eq i32 %54, 0
  br i1 %tobool39.not, label %land.lhs.true40, label %if.end49

land.lhs.true40:                                  ; preds = %land.lhs.true
  %55 = load i32, ptr %mb_field3, align 8
  %tobool42.not = icmp eq i32 %55, 0
  br i1 %tobool42.not, label %if.end49, label %if.then43

if.then43:                                        ; preds = %land.lhs.true40
  %mb_data44 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 61
  %56 = load ptr, ptr %mb_data44, align 8
  %idxprom45 = zext i32 %call to i64
  %qp = getelementptr inbounds %struct.macroblock, ptr %56, i64 %idxprom45, i32 2
  %57 = load i32, ptr %qp, align 8
  %qp47 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 9
  store i32 %57, ptr %qp47, align 4
  %qp48 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 2
  store i32 %57, ptr %qp48, align 8
  br label %if.end49

if.end49:                                         ; preds = %if.then43, %land.lhs.true40, %land.lhs.true, %if.then35
  %mb_data50 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 61
  %58 = load ptr, ptr %mb_data50, align 8
  %idxprom51 = zext i32 %call to i64
  %qp53 = getelementptr inbounds %struct.macroblock, ptr %58, i64 %idxprom51, i32 2
  %59 = load i32, ptr %qp53, align 8
  %prev_qp = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 35
  store i32 %59, ptr %prev_qp, align 8
  %arrayidx56 = getelementptr inbounds %struct.macroblock, ptr %58, i64 %idxprom51
  %60 = load i32, ptr %arrayidx56, align 8
  %cmp59 = icmp eq i32 %60, %50
  br i1 %cmp59, label %if.then61, label %if.end71

if.then61:                                        ; preds = %if.end49
  %delta_qp = getelementptr inbounds %struct.macroblock, ptr %58, i64 %idxprom51, i32 1
  %61 = load i32, ptr %delta_qp, align 4
  br label %if.end71

if.else67:                                        ; preds = %if.then32
  %qp68 = getelementptr inbounds %struct.Slice, ptr %4, i64 0, i32 1
  %62 = load i32, ptr %qp68, align 4
  %prev_qp69 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 35
  store i32 %62, ptr %prev_qp69, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.end49, %if.then61, %if.else67
  %.sink721 = phi i32 [ %61, %if.then61 ], [ 0, %if.else67 ], [ 0, %if.end49 ]
  %prev_delta_qp = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 36
  store i32 %.sink721, ptr %prev_delta_qp, align 4
  %basicunit = getelementptr inbounds %struct.InputParameters, ptr %48, i64 0, i32 160
  %63 = load i32, ptr %basicunit, align 8
  %FrameSizeInMbs = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 120
  %64 = load i32, ptr %FrameSizeInMbs, align 8
  %cmp72 = icmp eq i32 %63, %64
  br i1 %cmp72, label %if.then74, label %if.else78

if.then74:                                        ; preds = %if.end71
  %delta_qp75 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 1
  store i32 0, ptr %delta_qp75, align 4
  %qp76 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 9
  %65 = load i32, ptr %qp76, align 4
  %qp77 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 2
  store i32 %65, ptr %qp77, align 8
  br label %if.end403

if.else78:                                        ; preds = %if.end71
  %type = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 5
  %66 = load i32, ptr %type, align 4
  %.off656 = add i32 %66, -1
  %switch657 = icmp ult i32 %.off656, 2
  br i1 %switch657, label %land.lhs.true85, label %lor.lhs.false88

land.lhs.true85:                                  ; preds = %if.else78
  %RCUpdateMode = getelementptr inbounds %struct.InputParameters, ptr %48, i64 0, i32 162
  %67 = load i32, ptr %RCUpdateMode, align 8
  %cmp86.not = icmp eq i32 %67, 1
  br i1 %cmp86.not, label %lor.lhs.false88, label %if.then90

lor.lhs.false88:                                  ; preds = %if.else78, %land.lhs.true85
  %68 = load i32, ptr %49, align 8
  %69 = load i32, ptr @start_frame_no_in_this_IGOP, align 4
  %tobool89.not = icmp eq i32 %68, %69
  br i1 %tobool89.not, label %if.then90, label %if.else94

if.then90:                                        ; preds = %lor.lhs.false88, %land.lhs.true85
  %delta_qp91 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 1
  store i32 0, ptr %delta_qp91, align 4
  %qp92 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 9
  %70 = load i32, ptr %qp92, align 4
  %qp93 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 2
  store i32 %70, ptr %qp93, align 8
  br label %if.end403

if.else94:                                        ; preds = %lor.lhs.false88
  %cmp96 = icmp eq i32 %66, 0
  br i1 %cmp96, label %if.then102, label %lor.lhs.false98

lor.lhs.false98:                                  ; preds = %if.else94
  %RCUpdateMode99 = getelementptr inbounds %struct.InputParameters, ptr %48, i64 0, i32 162
  %71 = load i32, ptr %RCUpdateMode99, align 8
  %cmp100 = icmp eq i32 %71, 1
  br i1 %cmp100, label %if.then102, label %if.end403

if.then102:                                       ; preds = %lor.lhs.false98, %if.else94
  %write_macroblock = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 133
  %72 = load i32, ptr %write_macroblock, align 8
  %tobool103.not = icmp eq i32 %72, 0
  br i1 %tobool103.not, label %if.then104, label %if.else177

if.then104:                                       ; preds = %if.then102
  %cmp105 = icmp slt i32 %call, 0
  br i1 %cmp105, label %if.then107, label %if.else125

if.then107:                                       ; preds = %if.then104
  %delta_qp108 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 1
  store i32 0, ptr %delta_qp108, align 4
  %qp109 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 9
  %73 = load i32, ptr %qp109, align 4
  %qp110 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 2
  store i32 %73, ptr %qp110, align 8
  %74 = load i32, ptr %mb_field3, align 8
  %idxprom113 = sext i32 %74 to i64
  %bot_MB115 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 134
  %75 = load i32, ptr %bot_MB115, align 4
  %idxprom116 = sext i32 %75 to i64
  %arrayidx117 = getelementptr inbounds [2 x [2 x i32]], ptr @delta_qp_mbaff, i64 0, i64 %idxprom113, i64 %idxprom116
  store i32 0, ptr %arrayidx117, align 4
  %76 = load i32, ptr %qp110, align 8
  %77 = load i32, ptr %mb_field3, align 8
  %idxprom120 = sext i32 %77 to i64
  %78 = load i32, ptr %bot_MB115, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [2 x [2 x i32]], ptr @qp_mbaff, i64 0, i64 %idxprom120, i64 %idxprom123
  store i32 %76, ptr %arrayidx124, align 4
  br label %if.end230

if.else125:                                       ; preds = %if.then104
  %MbInterlace126 = getelementptr inbounds %struct.InputParameters, ptr %48, i64 0, i32 122
  %79 = load i32, ptr %MbInterlace126, align 4
  %tobool127.not = icmp eq i32 %79, 0
  br i1 %tobool127.not, label %if.then131, label %land.lhs.true128

land.lhs.true128:                                 ; preds = %if.else125
  %bot_MB129 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 134
  %80 = load i32, ptr %bot_MB129, align 4
  %tobool130.not = icmp eq i32 %80, 0
  br i1 %tobool130.not, label %if.then131, label %if.else171

if.then131:                                       ; preds = %land.lhs.true128, %if.else125
  %mb_data132 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 61
  %81 = load ptr, ptr %mb_data132, align 8
  %idxprom133 = zext i32 %call to i64
  %prev_cbp = getelementptr inbounds %struct.macroblock, ptr %81, i64 %idxprom133, i32 37
  %82 = load i32, ptr %prev_cbp, align 8
  %cmp135 = icmp eq i32 %82, 1
  %qp140 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 2
  br i1 %cmp135, label %if.then137, label %if.else141

if.then137:                                       ; preds = %if.then131
  %qp139 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 9
  %83 = load i32, ptr %qp139, align 4
  store i32 %83, ptr %qp140, align 8
  br label %if.end156

if.else141:                                       ; preds = %if.then131
  %prev_qp145 = getelementptr inbounds %struct.macroblock, ptr %81, i64 %idxprom133, i32 35
  %84 = load i32, ptr %prev_qp145, align 8
  store i32 %84, ptr %qp140, align 8
  %qp151 = getelementptr inbounds %struct.macroblock, ptr %81, i64 %idxprom133, i32 2
  %85 = load i32, ptr %qp151, align 8
  %sub152 = sub nsw i32 %84, %85
  %qp155 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 9
  store i32 %84, ptr %qp155, align 4
  br label %if.end156

if.end156:                                        ; preds = %if.else141, %if.then137
  %sub152.sink = phi i32 [ 0, %if.then137 ], [ %sub152, %if.else141 ]
  %86 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 1
  store i32 %sub152.sink, ptr %86, align 4
  %87 = load i32, ptr %mb_field3, align 8
  %idxprom159 = sext i32 %87 to i64
  %bot_MB161 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 134
  %88 = load i32, ptr %bot_MB161, align 4
  %idxprom162 = sext i32 %88 to i64
  %arrayidx163 = getelementptr inbounds [2 x [2 x i32]], ptr @delta_qp_mbaff, i64 0, i64 %idxprom159, i64 %idxprom162
  store i32 %sub152.sink, ptr %arrayidx163, align 4
  %qp164 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 2
  %89 = load i32, ptr %qp164, align 8
  %90 = load i32, ptr %mb_field3, align 8
  %idxprom166 = sext i32 %90 to i64
  %91 = load i32, ptr %bot_MB161, align 4
  %idxprom169 = sext i32 %91 to i64
  %arrayidx170 = getelementptr inbounds [2 x [2 x i32]], ptr @qp_mbaff, i64 0, i64 %idxprom166, i64 %idxprom169
  store i32 %89, ptr %arrayidx170, align 4
  br label %if.end230

if.else171:                                       ; preds = %land.lhs.true128
  %delta_qp172 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 1
  store i32 0, ptr %delta_qp172, align 4
  %qp173 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 9
  %92 = load i32, ptr %qp173, align 4
  %qp174 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 2
  store i32 %92, ptr %qp174, align 8
  br label %if.end230

if.else177:                                       ; preds = %if.then102
  %bot_MB178 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 134
  %93 = load i32, ptr %bot_MB178, align 4
  %tobool179.not = icmp eq i32 %93, 0
  br i1 %tobool179.not, label %if.then180, label %if.else225

if.then180:                                       ; preds = %if.else177
  %write_mbaff_frame = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 135
  %94 = load i32, ptr %write_mbaff_frame, align 8
  %tobool181.not = icmp eq i32 %94, 0
  br i1 %tobool181.not, label %if.else192, label %if.then182

if.then182:                                       ; preds = %if.then180
  %95 = load i32, ptr @delta_qp_mbaff, align 16
  %delta_qp186 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 1
  store i32 %95, ptr %delta_qp186, align 4
  %96 = load i32, ptr @qp_mbaff, align 16
  %qp190 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 2
  store i32 %96, ptr %qp190, align 8
  %qp191 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 9
  store i32 %96, ptr %qp191, align 4
  br label %if.end230

if.else192:                                       ; preds = %if.then180
  %cmp193 = icmp slt i32 %call, 0
  %qp198 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 2
  br i1 %cmp193, label %if.then195, label %if.else213

if.then195:                                       ; preds = %if.else192
  %delta_qp196 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 1
  store i32 0, ptr %delta_qp196, align 4
  %qp197 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 9
  %97 = load i32, ptr %qp197, align 4
  store i32 %97, ptr %qp198, align 8
  %98 = load i32, ptr %mb_field3, align 8
  %idxprom201 = sext i32 %98 to i64
  %arrayidx205 = getelementptr inbounds [2 x [2 x i32]], ptr @delta_qp_mbaff, i64 0, i64 %idxprom201, i64 0
  store i32 0, ptr %arrayidx205, align 8
  %99 = load i32, ptr %qp198, align 8
  %100 = load i32, ptr %mb_field3, align 8
  %idxprom208 = sext i32 %100 to i64
  %101 = load i32, ptr %bot_MB178, align 4
  %idxprom211 = sext i32 %101 to i64
  %arrayidx212 = getelementptr inbounds [2 x [2 x i32]], ptr @qp_mbaff, i64 0, i64 %idxprom208, i64 %idxprom211
  store i32 %99, ptr %arrayidx212, align 4
  br label %if.end230

if.else213:                                       ; preds = %if.else192
  %102 = load i32, ptr getelementptr inbounds ([2 x [2 x i32]], ptr @delta_qp_mbaff, i64 0, i64 1, i64 0), align 8
  %delta_qp217 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 1
  store i32 %102, ptr %delta_qp217, align 4
  %103 = load i32, ptr getelementptr inbounds ([2 x [2 x i32]], ptr @qp_mbaff, i64 0, i64 1, i64 0), align 8
  store i32 %103, ptr %qp198, align 8
  %qp222 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 9
  store i32 %103, ptr %qp222, align 4
  br label %if.end230

if.else225:                                       ; preds = %if.else177
  %delta_qp226 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 1
  store i32 0, ptr %delta_qp226, align 4
  %qp227 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 9
  %104 = load i32, ptr %qp227, align 4
  %qp228 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 2
  store i32 %104, ptr %qp228, align 8
  %bitdepth_chroma_qp_scale.i = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 145
  %105 = load i32, ptr %bitdepth_chroma_qp_scale.i, align 8
  %sub.i = sub nsw i32 0, %105
  %arrayidx.i = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 165, i64 0
  %106 = load i32, ptr %arrayidx.i, align 4
  %add.i = add nsw i32 %106, %104
  %cond.i.i.i = tail call i32 @llvm.smax.i32(i32 %add.i, i32 %sub.i)
  %cond.i4.i.i = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i, i32 51)
  %arrayidx2.i = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 3, i64 0
  %cmp6.i = icmp slt i32 %cond.i.i.i, 0
  br i1 %cmp6.i, label %cond.end.i, label %cond.false.i

cond.false.i:                                     ; preds = %if.else225
  %idxprom13.i = zext i32 %cond.i4.i.i to i64
  %arrayidx14.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom13.i
  %107 = load i8, ptr %arrayidx14.i, align 1
  %conv.i = zext i8 %107 to i32
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %if.else225
  %cond.i = phi i32 [ %conv.i, %cond.false.i ], [ %cond.i4.i.i, %if.else225 ]
  store i32 %cond.i, ptr %arrayidx2.i, align 4
  %108 = load i32, ptr %bitdepth_chroma_qp_scale.i, align 8
  %sub.1.i = sub nsw i32 0, %108
  %arrayidx.1.i = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 165, i64 1
  %109 = load i32, ptr %arrayidx.1.i, align 4
  %add.1.i = add nsw i32 %109, %104
  %cond.i.i.1.i = tail call i32 @llvm.smax.i32(i32 %add.1.i, i32 %sub.1.i)
  %cond.i4.i.1.i = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1.i, i32 51)
  %cmp6.1.i = icmp slt i32 %cond.i.i.1.i, 0
  br i1 %cmp6.1.i, label %set_chroma_qp.exit, label %cond.false.1.i

cond.false.1.i:                                   ; preds = %cond.end.i
  %idxprom13.1.i = zext i32 %cond.i4.i.1.i to i64
  %arrayidx14.1.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom13.1.i
  %110 = load i8, ptr %arrayidx14.1.i, align 1
  %conv.1.i = zext i8 %110 to i32
  br label %set_chroma_qp.exit

set_chroma_qp.exit:                               ; preds = %cond.end.i, %cond.false.1.i
  %cond.1.i = phi i32 [ %conv.1.i, %cond.false.1.i ], [ %cond.i4.i.1.i, %cond.end.i ]
  %arrayidx2.1.i = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 3, i64 1
  store i32 %cond.1.i, ptr %arrayidx2.1.i, align 4
  br label %if.end230

if.end230:                                        ; preds = %set_chroma_qp.exit, %if.then195, %if.else213, %if.then182, %if.then107, %if.else171, %if.end156
  %111 = load i32, ptr %write_macroblock, align 8
  %tobool232.not = icmp eq i32 %111, 0
  br i1 %tobool232.not, label %if.then233, label %if.end403

if.then233:                                       ; preds = %if.end230
  %MbInterlace234 = getelementptr inbounds %struct.InputParameters, ptr %48, i64 0, i32 122
  %112 = load i32, ptr %MbInterlace234, align 4
  %tobool235.not = icmp eq i32 %112, 0
  br i1 %tobool235.not, label %if.then239, label %land.lhs.true236

land.lhs.true236:                                 ; preds = %if.then233
  %bot_MB237 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 134
  %113 = load i32, ptr %bot_MB237, align 4
  %tobool238.not = icmp eq i32 %113, 0
  br i1 %tobool238.not, label %if.then239, label %if.else348

if.then239:                                       ; preds = %land.lhs.true236, %if.then233
  %NumberofCodedMacroBlocks = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 128
  %114 = load i32, ptr %NumberofCodedMacroBlocks, align 4
  %cmp240 = icmp sgt i32 %114, 0
  br i1 %cmp240, label %land.lhs.true242, label %if.end273

land.lhs.true242:                                 ; preds = %if.then239
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 132
  %115 = load i32, ptr %BasicUnit, align 4
  %rem = urem i32 %114, %115
  %cmp244 = icmp eq i32 %rem, 0
  br i1 %cmp244, label %if.then246, label %if.end273

if.then246:                                       ; preds = %land.lhs.true242
  %116 = load ptr, ptr @active_sps, align 8
  %frame_mbs_only_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %116, i64 0, i32 25
  %117 = load i32, ptr %frame_mbs_only_flag, align 4
  %tobool247.not = icmp eq i32 %117, 0
  br i1 %tobool247.not, label %if.else250, label %if.end273.sink.split

if.else250:                                       ; preds = %if.then246
  %PicInterlace = getelementptr inbounds %struct.InputParameters, ptr %48, i64 0, i32 121
  %118 = load i32, ptr %PicInterlace, align 8
  %cmp251.not = icmp eq i32 %118, 0
  br i1 %cmp251.not, label %if.else263, label %land.lhs.true253

land.lhs.true253:                                 ; preds = %if.else250
  br i1 %tobool235.not, label %land.lhs.true256, label %if.end273.sink.split

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %119 = load ptr, ptr @generic_RC, align 8
  %NoGranularFieldRC = getelementptr inbounds %struct.rc_generic, ptr %119, i64 0, i32 3
  %120 = load i32, ptr %NoGranularFieldRC, align 4
  %cmp257 = icmp eq i32 %120, 0
  br i1 %cmp257, label %if.end273.sink.split, label %if.end273

if.else263:                                       ; preds = %if.else250
  br i1 %tobool235.not, label %if.end273, label %if.end273.sink.split

if.end273.sink.split:                             ; preds = %if.else263, %land.lhs.true253, %land.lhs.true256, %if.then246
  %121 = load ptr, ptr @quadratic_RC, align 8
  tail call void @updateRCModel(ptr noundef %121) #17
  %122 = load ptr, ptr @updateQP, align 8
  %123 = load ptr, ptr @quadratic_RC, align 8
  %124 = load ptr, ptr @generic_RC, align 8
  %125 = load i32, ptr %124, align 8
  %call249 = tail call i32 %122(ptr noundef %123, i32 noundef %125) #17
  %126 = load ptr, ptr @img, align 8
  %BasicUnitQP = getelementptr inbounds %struct.ImageParameters, ptr %126, i64 0, i32 129
  store i32 %call249, ptr %BasicUnitQP, align 8
  br label %if.end273

if.end273:                                        ; preds = %if.end273.sink.split, %land.lhs.true256, %if.else263, %land.lhs.true242, %if.then239
  %127 = load ptr, ptr @img, align 8
  %current_mb_nr274 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 3
  %128 = load i32, ptr %current_mb_nr274, align 4
  %cmp275 = icmp eq i32 %128, 0
  br i1 %cmp275, label %if.then277, label %if.end273.if.end280_crit_edge

if.end273.if.end280_crit_edge:                    ; preds = %if.end273
  %BasicUnitQP284.phi.trans.insert = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 129
  %.pre715 = load i32, ptr %BasicUnitQP284.phi.trans.insert, align 8
  br label %if.end280

if.then277:                                       ; preds = %if.end273
  %qp278 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 9
  %129 = load i32, ptr %qp278, align 4
  %BasicUnitQP279 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 129
  store i32 %129, ptr %BasicUnitQP279, align 8
  br label %if.end280

if.end280:                                        ; preds = %if.end273.if.end280_crit_edge, %if.then277
  %130 = phi i32 [ %.pre715, %if.end273.if.end280_crit_edge ], [ %129, %if.then277 ]
  %qp281 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 2
  %131 = load i32, ptr %qp281, align 8
  %min_qp_delta = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 149
  %132 = load i32, ptr %min_qp_delta, align 8
  %sub282 = sub nsw i32 %131, %132
  %max_qp_delta = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 148
  %133 = load i32, ptr %max_qp_delta, align 4
  %add = add nsw i32 %133, %131
  %cond.i.i = tail call i32 @llvm.smax.i32(i32 %130, i32 %sub282)
  %cond.i4.i = tail call i32 @llvm.smin.i32(i32 %cond.i.i, i32 %add)
  %predict_qp = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 38
  store i32 %cond.i4.i, ptr %predict_qp, align 4
  %delta_qp286 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 1
  %134 = load i32, ptr %delta_qp286, align 4
  %add288 = sub i32 %cond.i4.i, %131
  %sub290 = add i32 %add288, %134
  store i32 %sub290, ptr @dq, align 4
  %sub292 = sub nsw i32 0, %132
  %cmp293 = icmp slt i32 %sub290, %sub292
  br i1 %cmp293, label %if.then295, label %if.else306

if.then295:                                       ; preds = %if.end280
  store i32 %sub292, ptr @dq, align 4
  %135 = load i32, ptr %delta_qp286, align 4
  %sub299 = sub nsw i32 %sub292, %135
  store i32 %sub299, ptr @predict_error, align 4
  %qp300 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 9
  %136 = load i32, ptr %qp300, align 4
  %add301 = add nsw i32 %136, %sub299
  store i32 %add301, ptr %qp300, align 4
  store i32 %sub292, ptr %delta_qp286, align 4
  br label %if.end327

if.else306:                                       ; preds = %if.end280
  %cmp308 = icmp sgt i32 %sub290, %133
  br i1 %cmp308, label %if.then310, label %if.else319

if.then310:                                       ; preds = %if.else306
  store i32 %133, ptr @dq, align 4
  %137 = load i32, ptr %delta_qp286, align 4
  %sub313 = sub nsw i32 %133, %137
  store i32 %sub313, ptr @predict_error, align 4
  %qp314 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 9
  %138 = load i32, ptr %qp314, align 4
  %add315 = add nsw i32 %138, %sub313
  store i32 %add315, ptr %qp314, align 4
  store i32 %133, ptr %delta_qp286, align 4
  br label %if.end327

if.else319:                                       ; preds = %if.else306
  store i32 %sub290, ptr %delta_qp286, align 4
  %139 = load i32, ptr %predict_qp, align 4
  %140 = load i32, ptr %qp281, align 8
  %sub323 = sub nsw i32 %139, %140
  store i32 %sub323, ptr @predict_error, align 4
  %141 = load i32, ptr %predict_qp, align 4
  %qp325 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 9
  store i32 %141, ptr %qp325, align 4
  br label %if.end327

if.end327:                                        ; preds = %if.then310, %if.else319, %if.then295
  %142 = phi i32 [ %add315, %if.then310 ], [ %141, %if.else319 ], [ %add301, %if.then295 ]
  store i32 %142, ptr %qp281, align 8
  %143 = load ptr, ptr @input, align 8
  %MbInterlace330 = getelementptr inbounds %struct.InputParameters, ptr %143, i64 0, i32 122
  %144 = load i32, ptr %MbInterlace330, align 4
  %tobool331.not = icmp eq i32 %144, 0
  br i1 %tobool331.not, label %if.end347, label %if.then332

if.then332:                                       ; preds = %if.end327
  %145 = load i32, ptr %delta_qp286, align 4
  %146 = load i32, ptr %mb_field3, align 8
  %idxprom335 = sext i32 %146 to i64
  %bot_MB337 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 134
  %147 = load i32, ptr %bot_MB337, align 4
  %idxprom338 = sext i32 %147 to i64
  %arrayidx339 = getelementptr inbounds [2 x [2 x i32]], ptr @delta_qp_mbaff, i64 0, i64 %idxprom335, i64 %idxprom338
  store i32 %145, ptr %arrayidx339, align 4
  %148 = load i32, ptr %qp281, align 8
  %149 = load i32, ptr %mb_field3, align 8
  %idxprom342 = sext i32 %149 to i64
  %150 = load i32, ptr %bot_MB337, align 4
  %idxprom345 = sext i32 %150 to i64
  %arrayidx346 = getelementptr inbounds [2 x [2 x i32]], ptr @qp_mbaff, i64 0, i64 %idxprom342, i64 %idxprom345
  store i32 %148, ptr %arrayidx346, align 4
  br label %if.end347

if.end347:                                        ; preds = %if.then332, %if.end327
  %151 = load i32, ptr @predict_error, align 4
  %predict_error = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 39
  store i32 %151, ptr %predict_error, align 8
  br label %if.end403

if.else348:                                       ; preds = %land.lhs.true236
  %qp349 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 9
  %152 = load i32, ptr %qp349, align 4
  %prev_qp350 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 35
  store i32 %152, ptr %prev_qp350, align 8
  br label %if.end403

if.else356:                                       ; preds = %if.end29
  %currentSlice357 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 60
  %153 = load ptr, ptr %currentSlice357, align 8
  %cmp358 = icmp sgt i32 %call, -1
  br i1 %cmp358, label %if.then360, label %if.else378

if.then360:                                       ; preds = %if.else356
  %mb_data361 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 61
  %154 = load ptr, ptr %mb_data361, align 8
  %idxprom362 = zext i32 %call to i64
  %qp364 = getelementptr inbounds %struct.macroblock, ptr %154, i64 %idxprom362, i32 2
  %155 = load i32, ptr %qp364, align 8
  %prev_qp365 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 35
  store i32 %155, ptr %prev_qp365, align 8
  %arrayidx368 = getelementptr inbounds %struct.macroblock, ptr %154, i64 %idxprom362
  %156 = load i32, ptr %arrayidx368, align 8
  %cmp371 = icmp eq i32 %156, %50
  br i1 %cmp371, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.then360
  %delta_qp376 = getelementptr inbounds %struct.macroblock, ptr %154, i64 %idxprom362, i32 1
  %157 = load i32, ptr %delta_qp376, align 4
  br label %cond.end

cond.end:                                         ; preds = %if.then360, %cond.true
  %cond = phi i32 [ %157, %cond.true ], [ 0, %if.then360 ]
  %prev_delta_qp377 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 36
  store i32 %cond, ptr %prev_delta_qp377, align 4
  %qp383.phi.trans.insert = getelementptr inbounds %struct.Slice, ptr %153, i64 0, i32 1
  %.pre716 = load i32, ptr %qp383.phi.trans.insert, align 4
  br label %if.end382

if.else378:                                       ; preds = %if.else356
  %qp379 = getelementptr inbounds %struct.Slice, ptr %153, i64 0, i32 1
  %158 = load i32, ptr %qp379, align 4
  %prev_qp380 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 35
  store i32 %158, ptr %prev_qp380, align 8
  %prev_delta_qp381 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 36
  store i32 0, ptr %prev_delta_qp381, align 4
  br label %if.end382

if.end382:                                        ; preds = %if.else378, %cond.end
  %159 = phi i32 [ %158, %if.else378 ], [ %155, %cond.end ]
  %160 = phi i32 [ %158, %if.else378 ], [ %.pre716, %cond.end ]
  %qp384 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 2
  store i32 %160, ptr %qp384, align 8
  %sub387 = sub nsw i32 %160, %159
  %delta_qp388 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 1
  store i32 %sub387, ptr %delta_qp388, align 4
  %161 = load i32, ptr %mb_field3, align 8
  %idxprom391 = sext i32 %161 to i64
  %bot_MB393 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 134
  %162 = load i32, ptr %bot_MB393, align 4
  %idxprom394 = sext i32 %162 to i64
  %arrayidx395 = getelementptr inbounds [2 x [2 x i32]], ptr @delta_qp_mbaff, i64 0, i64 %idxprom391, i64 %idxprom394
  store i32 %sub387, ptr %arrayidx395, align 4
  %163 = load i32, ptr %qp384, align 8
  %164 = load i32, ptr %mb_field3, align 8
  %idxprom398 = sext i32 %164 to i64
  %165 = load i32, ptr %bot_MB393, align 4
  %idxprom401 = sext i32 %165 to i64
  %arrayidx402 = getelementptr inbounds [2 x [2 x i32]], ptr @qp_mbaff, i64 0, i64 %idxprom398, i64 %idxprom401
  store i32 %163, ptr %arrayidx402, align 4
  br label %if.end403

if.end403:                                        ; preds = %if.then74, %lor.lhs.false98, %if.end347, %if.else348, %if.end230, %if.then90, %if.end382
  %166 = load ptr, ptr @img, align 8
  %qp404 = getelementptr inbounds %struct.ImageParameters, ptr %166, i64 0, i32 9
  %167 = load i32, ptr %qp404, align 4
  %bitdepth_luma_qp_scale = getelementptr inbounds %struct.ImageParameters, ptr %166, i64 0, i32 144
  %168 = load i32, ptr %bitdepth_luma_qp_scale, align 4
  %add405 = add nsw i32 %168, %167
  %qp_scaled = getelementptr inbounds %struct.ImageParameters, ptr %166, i64 0, i32 11
  store i32 %add405, ptr %qp_scaled, align 4
  %bitdepth_chroma_qp_scale.i658 = getelementptr inbounds %struct.ImageParameters, ptr %166, i64 0, i32 145
  %qp.i659 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 2
  %169 = load i32, ptr %qp.i659, align 8
  %170 = load i32, ptr %bitdepth_chroma_qp_scale.i658, align 8
  %sub.i660 = sub nsw i32 0, %170
  %arrayidx.i661 = getelementptr inbounds %struct.ImageParameters, ptr %166, i64 0, i32 165, i64 0
  %171 = load i32, ptr %arrayidx.i661, align 4
  %add.i662 = add nsw i32 %171, %169
  %cond.i.i.i663 = tail call i32 @llvm.smax.i32(i32 %add.i662, i32 %sub.i660)
  %cond.i4.i.i664 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i663, i32 51)
  %arrayidx2.i665 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 3, i64 0
  %cmp6.i666 = icmp slt i32 %cond.i.i.i663, 0
  br i1 %cmp6.i666, label %cond.end.i671, label %cond.false.i667

cond.false.i667:                                  ; preds = %if.end403
  %idxprom13.i668 = zext i32 %cond.i4.i.i664 to i64
  %arrayidx14.i669 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom13.i668
  %172 = load i8, ptr %arrayidx14.i669, align 1
  %conv.i670 = zext i8 %172 to i32
  br label %cond.end.i671

cond.end.i671:                                    ; preds = %cond.false.i667, %if.end403
  %cond.i672 = phi i32 [ %conv.i670, %cond.false.i667 ], [ %cond.i4.i.i664, %if.end403 ]
  store i32 %cond.i672, ptr %arrayidx2.i665, align 4
  %173 = load i32, ptr %bitdepth_chroma_qp_scale.i658, align 8
  %sub.1.i673 = sub nsw i32 0, %173
  %arrayidx.1.i674 = getelementptr inbounds %struct.ImageParameters, ptr %166, i64 0, i32 165, i64 1
  %174 = load i32, ptr %arrayidx.1.i674, align 4
  %add.1.i675 = add nsw i32 %174, %169
  %cond.i.i.1.i676 = tail call i32 @llvm.smax.i32(i32 %add.1.i675, i32 %sub.1.i673)
  %cond.i4.i.1.i677 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1.i676, i32 51)
  %cmp6.1.i678 = icmp slt i32 %cond.i.i.1.i676, 0
  br i1 %cmp6.1.i678, label %set_chroma_qp.exit685, label %cond.false.1.i679

cond.false.1.i679:                                ; preds = %cond.end.i671
  %idxprom13.1.i680 = zext i32 %cond.i4.i.1.i677 to i64
  %arrayidx14.1.i681 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom13.1.i680
  %175 = load i8, ptr %arrayidx14.1.i681, align 1
  %conv.1.i682 = zext i8 %175 to i32
  br label %set_chroma_qp.exit685

set_chroma_qp.exit685:                            ; preds = %cond.end.i671, %cond.false.1.i679
  %cond.1.i683 = phi i32 [ %conv.1.i682, %cond.false.1.i679 ], [ %cond.i4.i.1.i677, %cond.end.i671 ]
  %arrayidx2.1.i684 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 3, i64 1
  store i32 %cond.1.i683, ptr %arrayidx2.1.i684, align 4
  %176 = load ptr, ptr @active_pps, align 8
  %deblocking_filter_control_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %176, i64 0, i32 26
  %177 = load i32, ptr %deblocking_filter_control_present_flag, align 4
  %tobool406.not = icmp eq i32 %177, 0
  br i1 %tobool406.not, label %if.end415, label %if.then407

if.then407:                                       ; preds = %set_chroma_qp.exit685
  %LFDisableIdc = getelementptr inbounds %struct.ImageParameters, ptr %166, i64 0, i32 84
  %178 = load <2 x i32>, ptr %LFDisableIdc, align 8
  %LFBetaOffset = getelementptr inbounds %struct.ImageParameters, ptr %166, i64 0, i32 86
  %179 = load i32, ptr %LFBetaOffset, align 8
  br label %if.end415

if.end415:                                        ; preds = %set_chroma_qp.exit685, %if.then407
  %.sink = phi i32 [ %179, %if.then407 ], [ 0, %set_chroma_qp.exit685 ]
  %180 = phi <2 x i32> [ %178, %if.then407 ], [ zeroinitializer, %set_chroma_qp.exit685 ]
  %181 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 40
  store <2 x i32> %180, ptr %181, align 4
  %182 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 42
  store i32 %.sink, ptr %182, align 4
  tail call void @CheckAvailabilityOfNeighbors() #17
  %183 = load ptr, ptr @input, align 8
  %symbol_mode416 = getelementptr inbounds %struct.InputParameters, ptr %183, i64 0, i32 74
  %184 = load i32, ptr %symbol_mode416, align 8
  %cmp417 = icmp eq i32 %184, 1
  br i1 %cmp417, label %if.then419, label %for.body430.lr.ph

if.then419:                                       ; preds = %if.end415
  tail call void @CheckAvailabilityOfNeighborsCABAC() #17
  br label %for.body430.lr.ph

for.body430.lr.ph:                                ; preds = %if.end415, %if.then419
  %185 = load ptr, ptr @img, align 8
  %block_y = getelementptr inbounds %struct.ImageParameters, ptr %185, i64 0, i32 38
  %186 = load i32, ptr %block_y, align 4
  %187 = sext i32 %186 to i64
  %.pre717 = load ptr, ptr @enc_picture, align 8
  %block_x.phi.trans.insert = getelementptr inbounds %struct.ImageParameters, ptr %185, i64 0, i32 37
  %.pre719 = load i32, ptr %block_x.phi.trans.insert, align 8
  br label %for.body430

for.body430:                                      ; preds = %for.body430.lr.ph, %for.body430
  %188 = phi i32 [ %.pre719, %for.body430.lr.ph ], [ %201, %for.body430 ]
  %189 = phi ptr [ %.pre717, %for.body430.lr.ph ], [ %202, %for.body430 ]
  %indvars.iv702 = phi i64 [ %187, %for.body430.lr.ph ], [ %indvars.iv.next703, %for.body430 ]
  %ref_idx = getelementptr inbounds %struct.storable_picture, ptr %189, i64 0, i32 35
  %190 = load ptr, ptr %ref_idx, align 8
  %191 = load ptr, ptr %190, align 8
  %arrayidx434 = getelementptr inbounds ptr, ptr %191, i64 %indvars.iv702
  %192 = load ptr, ptr %arrayidx434, align 8
  %idxprom435 = sext i32 %188 to i64
  %arrayidx436 = getelementptr inbounds i8, ptr %192, i64 %idxprom435
  store i32 -1, ptr %arrayidx436, align 1
  %193 = load ptr, ptr @enc_picture, align 8
  %mv = getelementptr inbounds %struct.storable_picture, ptr %193, i64 0, i32 38
  %194 = load ptr, ptr %mv, align 8
  %195 = load ptr, ptr %194, align 8
  %arrayidx440 = getelementptr inbounds ptr, ptr %195, i64 %indvars.iv702
  %196 = load ptr, ptr %arrayidx440, align 8
  %197 = load ptr, ptr @img, align 8
  %block_x441 = getelementptr inbounds %struct.ImageParameters, ptr %197, i64 0, i32 37
  %198 = load i32, ptr %block_x441, align 8
  %idxprom442 = sext i32 %198 to i64
  %arrayidx443 = getelementptr inbounds ptr, ptr %196, i64 %idxprom442
  %199 = load ptr, ptr %arrayidx443, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %199, i8 0, i64 16, i1 false)
  %200 = load ptr, ptr @img, align 8
  %block_x444 = getelementptr inbounds %struct.ImageParameters, ptr %200, i64 0, i32 37
  %201 = load i32, ptr %block_x444, align 8
  %202 = load ptr, ptr @enc_picture, align 8
  %ref_pic_id = getelementptr inbounds %struct.storable_picture, ptr %202, i64 0, i32 36
  %203 = load ptr, ptr %ref_pic_id, align 8
  %204 = load ptr, ptr %203, align 8
  %arrayidx454 = getelementptr inbounds ptr, ptr %204, i64 %indvars.iv702
  %205 = load ptr, ptr %arrayidx454, align 8
  %206 = sext i32 %201 to i64
  %207 = shl nsw i64 %206, 3
  %scevgep = getelementptr i8, ptr %205, i64 %207
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %scevgep, i8 -1, i64 32, i1 false)
  %indvars.iv.next703 = add nsw i64 %indvars.iv702, 1
  %block_y426 = getelementptr inbounds %struct.ImageParameters, ptr %200, i64 0, i32 38
  %208 = load i32, ptr %block_y426, align 4
  %209 = add nsw i32 %208, 3
  %210 = sext i32 %209 to i64
  %cmp428 = icmp slt i64 %indvars.iv702, %210
  br i1 %cmp428, label %for.body430, label %for.body430.lr.ph.1

for.body430.lr.ph.1:                              ; preds = %for.body430
  %211 = load ptr, ptr @img, align 8
  %block_y.1 = getelementptr inbounds %struct.ImageParameters, ptr %211, i64 0, i32 38
  %212 = load i32, ptr %block_y.1, align 4
  %213 = sext i32 %212 to i64
  %.pre718 = load ptr, ptr @enc_picture, align 8
  %block_x.1.phi.trans.insert = getelementptr inbounds %struct.ImageParameters, ptr %211, i64 0, i32 37
  %.pre720 = load i32, ptr %block_x.1.phi.trans.insert, align 8
  br label %for.body430.1

for.body430.1:                                    ; preds = %for.body430.1, %for.body430.lr.ph.1
  %214 = phi i32 [ %.pre720, %for.body430.lr.ph.1 ], [ %227, %for.body430.1 ]
  %215 = phi ptr [ %.pre718, %for.body430.lr.ph.1 ], [ %228, %for.body430.1 ]
  %indvars.iv702.1 = phi i64 [ %213, %for.body430.lr.ph.1 ], [ %indvars.iv.next703.1, %for.body430.1 ]
  %ref_idx.1 = getelementptr inbounds %struct.storable_picture, ptr %215, i64 0, i32 35
  %216 = load ptr, ptr %ref_idx.1, align 8
  %arrayidx432.1 = getelementptr inbounds ptr, ptr %216, i64 1
  %217 = load ptr, ptr %arrayidx432.1, align 8
  %arrayidx434.1 = getelementptr inbounds ptr, ptr %217, i64 %indvars.iv702.1
  %218 = load ptr, ptr %arrayidx434.1, align 8
  %idxprom435.1 = sext i32 %214 to i64
  %arrayidx436.1 = getelementptr inbounds i8, ptr %218, i64 %idxprom435.1
  store i32 -1, ptr %arrayidx436.1, align 1
  %219 = load ptr, ptr @enc_picture, align 8
  %mv.1 = getelementptr inbounds %struct.storable_picture, ptr %219, i64 0, i32 38
  %220 = load ptr, ptr %mv.1, align 8
  %arrayidx438.1 = getelementptr inbounds ptr, ptr %220, i64 1
  %221 = load ptr, ptr %arrayidx438.1, align 8
  %arrayidx440.1 = getelementptr inbounds ptr, ptr %221, i64 %indvars.iv702.1
  %222 = load ptr, ptr %arrayidx440.1, align 8
  %223 = load ptr, ptr @img, align 8
  %block_x441.1 = getelementptr inbounds %struct.ImageParameters, ptr %223, i64 0, i32 37
  %224 = load i32, ptr %block_x441.1, align 8
  %idxprom442.1 = sext i32 %224 to i64
  %arrayidx443.1 = getelementptr inbounds ptr, ptr %222, i64 %idxprom442.1
  %225 = load ptr, ptr %arrayidx443.1, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %225, i8 0, i64 16, i1 false)
  %226 = load ptr, ptr @img, align 8
  %block_x444.1 = getelementptr inbounds %struct.ImageParameters, ptr %226, i64 0, i32 37
  %227 = load i32, ptr %block_x444.1, align 8
  %228 = load ptr, ptr @enc_picture, align 8
  %ref_pic_id.1 = getelementptr inbounds %struct.storable_picture, ptr %228, i64 0, i32 36
  %229 = load ptr, ptr %ref_pic_id.1, align 8
  %arrayidx452.1 = getelementptr inbounds ptr, ptr %229, i64 1
  %230 = load ptr, ptr %arrayidx452.1, align 8
  %arrayidx454.1 = getelementptr inbounds ptr, ptr %230, i64 %indvars.iv702.1
  %231 = load ptr, ptr %arrayidx454.1, align 8
  %232 = sext i32 %227 to i64
  %233 = shl nsw i64 %232, 3
  %scevgep.1 = getelementptr i8, ptr %231, i64 %233
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %scevgep.1, i8 -1, i64 32, i1 false)
  %indvars.iv.next703.1 = add nsw i64 %indvars.iv702.1, 1
  %block_y426.1 = getelementptr inbounds %struct.ImageParameters, ptr %226, i64 0, i32 38
  %234 = load i32, ptr %block_y426.1, align 4
  %235 = add nsw i32 %234, 3
  %236 = sext i32 %235 to i64
  %cmp428.1 = icmp slt i64 %indvars.iv702.1, %236
  br i1 %cmp428.1, label %for.body430.1, label %for.inc463.1

for.inc463.1:                                     ; preds = %for.body430.1
  %mb_type = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 8
  %cbp_blk = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 13
  store i64 0, ptr %cbp_blk, align 8
  %cbp = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 12
  store i32 0, ptr %cbp, align 4
  %cbp_bits = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 16
  store i64 0, ptr %cbp_bits, align 8
  %c_ipred_mode = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 17
  store i32 0, ptr %c_ipred_mode, align 8
  %intra_pred_modes = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(260) %mb_type, i8 0, i64 260, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %intra_pred_modes, i8 2, i64 32, i1 false)
  %237 = load ptr, ptr @input, align 8
  %UseConstrainedIntraPred = getelementptr inbounds %struct.InputParameters, ptr %237, i64 0, i32 23
  %238 = load i32, ptr %UseConstrainedIntraPred, align 8
  %tobool468.not = icmp eq i32 %238, 0
  br i1 %tobool468.not, label %if.end473, label %if.then469

if.then469:                                       ; preds = %for.inc463.1
  %239 = load ptr, ptr @img, align 8
  %intra_block = getelementptr inbounds %struct.ImageParameters, ptr %239, i64 0, i32 63
  %240 = load ptr, ptr %intra_block, align 8
  %current_mb_nr470 = getelementptr inbounds %struct.ImageParameters, ptr %239, i64 0, i32 3
  %241 = load i32, ptr %current_mb_nr470, align 4
  %idxprom471 = sext i32 %241 to i64
  %arrayidx472 = getelementptr inbounds i32, ptr %240, i64 %idxprom471
  store i32 1, ptr %arrayidx472, align 4
  br label %if.end473

if.end473:                                        ; preds = %if.then469, %for.inc463.1
  %cmp474 = icmp slt i32 %call, 0
  br i1 %cmp474, label %if.end490.sink.split, label %if.else478

if.else478:                                       ; preds = %if.end473
  %242 = load i32, ptr %arrayidx, align 8
  %243 = load ptr, ptr @img, align 8
  %mb_data480 = getelementptr inbounds %struct.ImageParameters, ptr %243, i64 0, i32 61
  %244 = load ptr, ptr %mb_data480, align 8
  %idxprom481 = zext i32 %call to i64
  %arrayidx482 = getelementptr inbounds %struct.macroblock, ptr %244, i64 %idxprom481
  %245 = load i32, ptr %arrayidx482, align 8
  %cmp484 = icmp eq i32 %242, %245
  br i1 %cmp484, label %if.end490.sink.split, label %if.end490

if.end490.sink.split:                             ; preds = %if.else478, %if.end473
  %bitcounter487 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 5
  store i32 0, ptr %bitcounter487, align 8
  br label %if.end490

if.end490:                                        ; preds = %if.end490.sink.split, %if.else478
  %arrayidx492 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 5, i64 2
  %SearchMode = getelementptr inbounds %struct.InputParameters, ptr %237, i64 0, i32 169
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx492, i8 0, i64 24, i1 false)
  %246 = load i32, ptr %SearchMode, align 4
  %cmp503 = icmp eq i32 %246, 0
  br i1 %cmp503, label %if.then505, label %if.end506

if.then505:                                       ; preds = %if.end490
  tail call void @ResetFastFullIntegerSearch() #17
  br label %if.end506

if.end506:                                        ; preds = %if.then505, %if.end490
  ret void
}

declare i32 @FmoGetPreviousMBNr(i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #6

declare void @updateRCModel(ptr noundef) local_unnamed_addr #5

declare void @CheckAvailabilityOfNeighbors() local_unnamed_addr #5

declare void @CheckAvailabilityOfNeighborsCABAC() local_unnamed_addr #5

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #7

declare void @ResetFastFullIntegerSearch() local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local void @terminate_macroblock(ptr nocapture noundef %end_of_slice, ptr nocapture noundef %recode_macroblock) local_unnamed_addr #0 {
entry:
  %se = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 60
  %1 = load ptr, ptr %currentSlice, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %2 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %3 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %3 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se) #17
  %4 = load ptr, ptr @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, ptr %4, i64 0, i32 76
  %5 = load i32, ptr %partition_mode, align 8
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom1
  %6 = load ptr, ptr %arrayidx2, align 8
  %slice_mode = getelementptr inbounds %struct.InputParameters, ptr %4, i64 0, i32 21
  %7 = load i32, ptr %slice_mode, align 8
  %8 = and i32 %7, -2
  %spec.select = icmp eq i32 %8, 2
  %cmp6 = icmp eq i32 %3, 0
  br i1 %cmp6, label %if.end16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %call = tail call i32 @FmoGetPreviousMBNr(i32 noundef %3) #17
  %cmp8 = icmp slt i32 %call, 0
  br i1 %cmp8, label %if.end16, label %if.else

if.else:                                          ; preds = %lor.lhs.false
  %9 = load ptr, ptr @img, align 8
  %mb_data9 = getelementptr inbounds %struct.ImageParameters, ptr %9, i64 0, i32 61
  %10 = load ptr, ptr %mb_data9, align 8
  %current_mb_nr10 = getelementptr inbounds %struct.ImageParameters, ptr %9, i64 0, i32 3
  %11 = load i32, ptr %current_mb_nr10, align 4
  %call11 = tail call i32 @FmoGetPreviousMBNr(i32 noundef %11) #17
  %idxprom12 = sext i32 %call11 to i64
  %arrayidx13 = getelementptr inbounds %struct.macroblock, ptr %10, i64 %idxprom12
  %12 = load i32, ptr %arrayidx13, align 8
  %13 = load ptr, ptr @img, align 8
  %current_slice_nr = getelementptr inbounds %struct.ImageParameters, ptr %13, i64 0, i32 4
  %14 = load i32, ptr %current_slice_nr, align 8
  %cmp14.not = icmp eq i32 %12, %14
  %not.cmp14.not = xor i1 %cmp14.not, true
  br label %if.end16

if.end16:                                         ; preds = %if.else, %entry, %lor.lhs.false
  %tobool98 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %not.cmp14.not, %if.else ]
  %tobool52.not = phi i1 [ false, %lor.lhs.false ], [ false, %entry ], [ %cmp14.not, %if.else ]
  store i32 0, ptr %recode_macroblock, align 4
  %15 = load ptr, ptr @input, align 8
  %slice_mode17 = getelementptr inbounds %struct.InputParameters, ptr %15, i64 0, i32 21
  %16 = load i32, ptr %slice_mode17, align 8
  switch i32 %16, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb27
    i32 2, label %sw.bb40
    i32 3, label %sw.bb93
  ]

sw.bb:                                            ; preds = %if.end16
  %num_mb = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 5
  %17 = load i32, ptr %num_mb, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, ptr %num_mb, align 4
  store i32 0, ptr %recode_macroblock, align 4
  %18 = load i32, ptr %num_mb, align 4
  %19 = load ptr, ptr @img, align 8
  %PicSizeInMbs = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 119
  %20 = load i32, ptr %PicSizeInMbs, align 4
  %cmp19 = icmp eq i32 %18, %20
  br i1 %cmp19, label %if.then20, label %sw.bb.if.end21_crit_edge

sw.bb.if.end21_crit_edge:                         ; preds = %sw.bb
  %.pre339 = load i32, ptr %end_of_slice, align 4
  br label %if.end21

if.then20:                                        ; preds = %sw.bb
  store i32 1, ptr %end_of_slice, align 4
  %.pre340 = load ptr, ptr @img, align 8
  br label %if.end21

if.end21:                                         ; preds = %sw.bb.if.end21_crit_edge, %if.then20
  %21 = phi ptr [ %19, %sw.bb.if.end21_crit_edge ], [ %.pre340, %if.then20 ]
  %22 = phi i32 [ %.pre339, %sw.bb.if.end21_crit_edge ], [ 1, %if.then20 ]
  %current_mb_nr22 = getelementptr inbounds %struct.ImageParameters, ptr %21, i64 0, i32 3
  %23 = load i32, ptr %current_mb_nr22, align 4
  %call24 = tail call i32 @FmoMB2SliceGroup(i32 noundef %23) #17
  %call25 = tail call i32 @FmoGetLastCodedMBOfSliceGroup(i32 noundef %call24) #17
  %cmp26 = icmp eq i32 %23, %call25
  %conv = zext i1 %cmp26 to i32
  %or = or i32 %22, %conv
  store i32 %or, ptr %end_of_slice, align 4
  br label %sw.epilogthread-pre-split

sw.bb27:                                          ; preds = %if.end16
  %num_mb28 = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 5
  %24 = load i32, ptr %num_mb28, align 4
  %inc29 = add nsw i32 %24, 1
  store i32 %inc29, ptr %num_mb28, align 4
  store i32 0, ptr %recode_macroblock, align 4
  %25 = load ptr, ptr @img, align 8
  %current_mb_nr30 = getelementptr inbounds %struct.ImageParameters, ptr %25, i64 0, i32 3
  %26 = load i32, ptr %current_mb_nr30, align 4
  %call32 = tail call i32 @FmoMB2SliceGroup(i32 noundef %26) #17
  %call33 = tail call i32 @FmoGetLastCodedMBOfSliceGroup(i32 noundef %call32) #17
  %cmp34 = icmp eq i32 %26, %call33
  %conv35 = zext i1 %cmp34 to i32
  store i32 %conv35, ptr %end_of_slice, align 4
  %27 = load i32, ptr %num_mb28, align 4
  %28 = load ptr, ptr @input, align 8
  %slice_argument = getelementptr inbounds %struct.InputParameters, ptr %28, i64 0, i32 22
  %29 = load i32, ptr %slice_argument, align 4
  %cmp37 = icmp sge i32 %27, %29
  %or39278 = or i1 %cmp34, %cmp37
  %or39 = zext i1 %or39278 to i32
  store i32 %or39, ptr %end_of_slice, align 4
  br label %sw.epilogthread-pre-split

sw.bb40:                                          ; preds = %if.end16
  %30 = load ptr, ptr @img, align 8
  %cod_counter = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 33
  %31 = load i32, ptr %cod_counter, align 8
  %tobool.not = icmp eq i32 %31, 0
  br i1 %tobool.not, label %if.end51, label %if.then41

if.then41:                                        ; preds = %sw.bb40
  %value1 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  store i32 %31, ptr %value1, align 4
  %value2 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  store i32 0, ptr %value2, align 8
  store i32 2, ptr %se, align 8
  %partArr = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 6
  %32 = load ptr, ptr %partArr, align 8
  %arrayidx45 = getelementptr inbounds i32, ptr %6, i64 2
  %33 = load i32, ptr %arrayidx45, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds %struct.datapartition, ptr %32, i64 %idxprom46
  call void @writeSE_UVLC(ptr noundef nonnull %se, ptr noundef %arrayidx47) #17
  %len = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %34 = load i32, ptr %len, align 4
  %35 = load ptr, ptr %arrayidx47, align 8
  %byte_pos_skip = getelementptr inbounds %struct.Bitstream, ptr %35, i64 0, i32 7
  %36 = load <2 x i32>, ptr %35, align 8
  store <2 x i32> %36, ptr %byte_pos_skip, align 8
  %byte_buf = getelementptr inbounds %struct.Bitstream, ptr %35, i64 0, i32 2
  %37 = load i8, ptr %byte_buf, align 8
  %byte_buf_skip = getelementptr inbounds %struct.Bitstream, ptr %35, i64 0, i32 6
  store i8 %37, ptr %byte_buf_skip, align 1
  %stored_byte_pos = getelementptr inbounds %struct.Bitstream, ptr %35, i64 0, i32 3
  %38 = load <2 x i32>, ptr %stored_byte_pos, align 4
  store <2 x i32> %38, ptr %35, align 8
  %stored_byte_buf = getelementptr inbounds %struct.Bitstream, ptr %35, i64 0, i32 5
  %39 = load i8, ptr %stored_byte_buf, align 4
  store i8 %39, ptr %byte_buf, align 8
  store i1 true, ptr @terminate_macroblock.skip, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then41, %sw.bb40
  %rlc_bits.0 = phi i32 [ %34, %if.then41 ], [ 0, %sw.bb40 ]
  br i1 %tobool52.not, label %if.then53, label %if.end63

if.then53:                                        ; preds = %if.end51
  %40 = load ptr, ptr @img, align 8
  %currentSlice.i = getelementptr inbounds %struct.ImageParameters, ptr %40, i64 0, i32 60
  %41 = load ptr, ptr %currentSlice.i, align 8
  %42 = load ptr, ptr @input, align 8
  %symbol_mode.i = getelementptr inbounds %struct.InputParameters, ptr %42, i64 0, i32 74
  %43 = load i32, ptr %symbol_mode.i, align 8
  switch i32 %43, label %if.else57 [
    i32 0, label %for.cond.preheader.i
    i32 1, label %for.cond17.preheader.i
  ]

for.cond.preheader.i:                             ; preds = %if.then53
  %max_part_nr.i = getelementptr inbounds %struct.Slice, ptr %41, i64 0, i32 4
  %44 = load i32, ptr %max_part_nr.i, align 8
  %cmp151.i = icmp sgt i32 %44, 0
  br i1 %cmp151.i, label %for.body.lr.ph.i, label %if.else57

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %partArr.i = getelementptr inbounds %struct.Slice, ptr %41, i64 0, i32 6
  %45 = load ptr, ptr %partArr.i, align 8
  %slice_argument.i = getelementptr inbounds %struct.InputParameters, ptr %42, i64 0, i32 22
  %46 = load i32, ptr %slice_argument.i, align 4
  %wide.trip.count.i = zext i32 %44 to i64
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next60.i = add nuw nsw i64 %indvars.iv59.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next60.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %if.else57, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i, %for.body.lr.ph.i
  %indvars.iv59.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next60.i, %for.cond.i ]
  %arrayidx.i = getelementptr inbounds %struct.datapartition, ptr %45, i64 %indvars.iv59.i
  %47 = load ptr, ptr %arrayidx.i, align 8
  %48 = load i32, ptr %47, align 8
  %bits_to_go.i = getelementptr inbounds %struct.Bitstream, ptr %47, i64 0, i32 1
  %49 = load i32, ptr %bits_to_go.i, align 4
  %cmp2.i = icmp slt i32 %49, 8
  %inc.i = zext i1 %cmp2.i to i32
  %spec.select.i = add nsw i32 %48, %inc.i
  %cmp5.i = icmp slt i32 %49, %rlc_bits.0
  %inc7.i = zext i1 %cmp5.i to i32
  %size_in_bytes.1.i = add nsw i32 %spec.select.i, %inc7.i
  %cmp9.i = icmp sgt i32 %size_in_bytes.1.i, %46
  br i1 %cmp9.i, label %if.then56, label %for.cond.i

for.cond17.preheader.i:                           ; preds = %if.then53
  %partArr21.i = getelementptr inbounds %struct.Slice, ptr %41, i64 0, i32 6
  %max_part_nr18.i = getelementptr inbounds %struct.Slice, ptr %41, i64 0, i32 4
  %50 = load i32, ptr %max_part_nr18.i, align 8
  %cmp1953.i = icmp sgt i32 %50, 0
  br i1 %cmp1953.i, label %for.body20.i, label %if.else57

for.cond17.i:                                     ; preds = %for.body20.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %51 = load i32, ptr %max_part_nr18.i, align 8
  %52 = sext i32 %51 to i64
  %cmp19.i = icmp slt i64 %indvars.iv.next.i, %52
  br i1 %cmp19.i, label %for.body20.i, label %if.else57.loopexit334

for.body20.i:                                     ; preds = %for.cond17.preheader.i, %for.cond17.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.cond17.i ], [ 0, %for.cond17.preheader.i ]
  %53 = load ptr, ptr %partArr21.i, align 8
  %ee_cabac.i = getelementptr inbounds %struct.datapartition, ptr %53, i64 %indvars.iv.i, i32 1
  %call.i = call i32 @arienco_bits_written(ptr noundef nonnull %ee_cabac.i) #17
  %54 = load ptr, ptr @input, align 8
  %slice_argument24.i = getelementptr inbounds %struct.InputParameters, ptr %54, i64 0, i32 22
  %55 = load i32, ptr %slice_argument24.i, align 4
  %mul.i = shl nsw i32 %55, 3
  %cmp25.i = icmp sgt i32 %call.i, %mul.i
  br i1 %cmp25.i, label %if.then56, label %for.cond17.i

if.then56:                                        ; preds = %for.body20.i, %for.body.i
  store i32 1, ptr %recode_macroblock, align 4
  store i32 1, ptr %end_of_slice, align 4
  br label %if.end63

if.else57.loopexit334:                            ; preds = %for.cond17.i
  %.pre = load ptr, ptr @img, align 8
  br label %if.else57

if.else57:                                        ; preds = %for.cond.i, %if.else57.loopexit334, %if.then53, %for.cond.preheader.i, %for.cond17.preheader.i
  %56 = phi ptr [ %.pre, %if.else57.loopexit334 ], [ %40, %if.then53 ], [ %40, %for.cond.preheader.i ], [ %40, %for.cond17.preheader.i ], [ %40, %for.cond.i ]
  %cod_counter58 = getelementptr inbounds %struct.ImageParameters, ptr %56, i64 0, i32 33
  %57 = load i32, ptr %cod_counter58, align 8
  %tobool59.not = icmp eq i32 %57, 0
  br i1 %tobool59.not, label %if.then60, label %if.end63

if.then60:                                        ; preds = %if.else57
  store i1 false, ptr @terminate_macroblock.skip, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.then56, %if.then60, %if.else57, %if.end51
  %58 = load i32, ptr %recode_macroblock, align 4
  %cmp64 = icmp eq i32 %58, 0
  br i1 %cmp64, label %land.lhs.true, label %if.end77

land.lhs.true:                                    ; preds = %if.end63
  %59 = load ptr, ptr @img, align 8
  %current_mb_nr66 = getelementptr inbounds %struct.ImageParameters, ptr %59, i64 0, i32 3
  %60 = load i32, ptr %current_mb_nr66, align 4
  %call68 = call i32 @FmoMB2SliceGroup(i32 noundef %60) #17
  %call69 = call i32 @FmoGetLastCodedMBOfSliceGroup(i32 noundef %call68) #17
  %cmp70 = icmp eq i32 %60, %call69
  br i1 %cmp70, label %if.then72, label %if.end77

if.then72:                                        ; preds = %land.lhs.true
  store i32 1, ptr %end_of_slice, align 4
  %61 = load ptr, ptr @img, align 8
  %cod_counter73 = getelementptr inbounds %struct.ImageParameters, ptr %61, i64 0, i32 33
  %62 = load i32, ptr %cod_counter73, align 8
  %tobool74.not = icmp eq i32 %62, 0
  br i1 %tobool74.not, label %if.then75, label %if.end77

if.then75:                                        ; preds = %if.then72
  store i1 false, ptr @terminate_macroblock.skip, align 4
  br label %if.end77

if.end77:                                         ; preds = %if.then72, %if.then75, %land.lhs.true, %if.end63
  br i1 %tobool52.not, label %if.end87, label %land.lhs.true79

land.lhs.true79:                                  ; preds = %if.end77
  %63 = load ptr, ptr @img, align 8
  %currentSlice.i281 = getelementptr inbounds %struct.ImageParameters, ptr %63, i64 0, i32 60
  %64 = load ptr, ptr %currentSlice.i281, align 8
  %65 = load ptr, ptr @input, align 8
  %symbol_mode.i282 = getelementptr inbounds %struct.InputParameters, ptr %65, i64 0, i32 74
  %66 = load i32, ptr %symbol_mode.i282, align 8
  switch i32 %66, label %if.end87 [
    i32 0, label %for.cond.preheader.i298
    i32 1, label %for.cond17.preheader.i283
  ]

for.cond.preheader.i298:                          ; preds = %land.lhs.true79
  %max_part_nr.i299 = getelementptr inbounds %struct.Slice, ptr %64, i64 0, i32 4
  %67 = load i32, ptr %max_part_nr.i299, align 8
  %cmp151.i300 = icmp sgt i32 %67, 0
  br i1 %cmp151.i300, label %for.body.lr.ph.i301, label %if.end87

for.body.lr.ph.i301:                              ; preds = %for.cond.preheader.i298
  %partArr.i302 = getelementptr inbounds %struct.Slice, ptr %64, i64 0, i32 6
  %68 = load ptr, ptr %partArr.i302, align 8
  %slice_argument.i303 = getelementptr inbounds %struct.InputParameters, ptr %65, i64 0, i32 22
  %69 = load i32, ptr %slice_argument.i303, align 4
  %wide.trip.count.i304 = zext i32 %67 to i64
  br label %for.body.i305

for.cond.i316:                                    ; preds = %for.body.i305
  %indvars.iv.next60.i317 = add nuw nsw i64 %indvars.iv59.i306, 1
  %exitcond.not.i318 = icmp eq i64 %indvars.iv.next60.i317, %wide.trip.count.i304
  br i1 %exitcond.not.i318, label %if.end87, label %for.body.i305

for.body.i305:                                    ; preds = %for.cond.i316, %for.body.lr.ph.i301
  %indvars.iv59.i306 = phi i64 [ 0, %for.body.lr.ph.i301 ], [ %indvars.iv.next60.i317, %for.cond.i316 ]
  %arrayidx.i307 = getelementptr inbounds %struct.datapartition, ptr %68, i64 %indvars.iv59.i306
  %70 = load ptr, ptr %arrayidx.i307, align 8
  %71 = load i32, ptr %70, align 8
  %bits_to_go.i308 = getelementptr inbounds %struct.Bitstream, ptr %70, i64 0, i32 1
  %72 = load i32, ptr %bits_to_go.i308, align 4
  %cmp2.i309 = icmp slt i32 %72, 8
  %inc.i310 = zext i1 %cmp2.i309 to i32
  %spec.select.i311 = add nsw i32 %71, %inc.i310
  %cmp5.i312 = icmp slt i32 %72, %rlc_bits.0
  %inc7.i313 = zext i1 %cmp5.i312 to i32
  %size_in_bytes.1.i314 = add nsw i32 %spec.select.i311, %inc7.i313
  %cmp9.i315 = icmp sgt i32 %size_in_bytes.1.i314, %69
  br i1 %cmp9.i315, label %if.then82, label %for.cond.i316

for.cond17.preheader.i283:                        ; preds = %land.lhs.true79
  %partArr21.i284 = getelementptr inbounds %struct.Slice, ptr %64, i64 0, i32 6
  %max_part_nr18.i285 = getelementptr inbounds %struct.Slice, ptr %64, i64 0, i32 4
  %73 = load i32, ptr %max_part_nr18.i285, align 8
  %cmp1953.i286 = icmp sgt i32 %73, 0
  br i1 %cmp1953.i286, label %for.body20.i288, label %if.end87

for.cond17.i295:                                  ; preds = %for.body20.i288
  %indvars.iv.next.i296 = add nuw nsw i64 %indvars.iv.i289, 1
  %74 = load i32, ptr %max_part_nr18.i285, align 8
  %75 = sext i32 %74 to i64
  %cmp19.i297 = icmp slt i64 %indvars.iv.next.i296, %75
  br i1 %cmp19.i297, label %for.body20.i288, label %if.end87

for.body20.i288:                                  ; preds = %for.cond17.preheader.i283, %for.cond17.i295
  %indvars.iv.i289 = phi i64 [ %indvars.iv.next.i296, %for.cond17.i295 ], [ 0, %for.cond17.preheader.i283 ]
  %76 = load ptr, ptr %partArr21.i284, align 8
  %ee_cabac.i290 = getelementptr inbounds %struct.datapartition, ptr %76, i64 %indvars.iv.i289, i32 1
  %call.i291 = call i32 @arienco_bits_written(ptr noundef nonnull %ee_cabac.i290) #17
  %77 = load ptr, ptr @input, align 8
  %slice_argument24.i292 = getelementptr inbounds %struct.InputParameters, ptr %77, i64 0, i32 22
  %78 = load i32, ptr %slice_argument24.i292, align 4
  %mul.i293 = shl nsw i32 %78, 3
  %cmp25.i294 = icmp sgt i32 %call.i291, %mul.i293
  br i1 %cmp25.i294, label %if.then82, label %for.cond17.i295

if.then82:                                        ; preds = %for.body20.i288, %for.body.i305
  store i32 1, ptr %end_of_slice, align 4
  %79 = load ptr, ptr @img, align 8
  %cod_counter83 = getelementptr inbounds %struct.ImageParameters, ptr %79, i64 0, i32 33
  %80 = load i32, ptr %cod_counter83, align 8
  %tobool84.not = icmp eq i32 %80, 0
  br i1 %tobool84.not, label %if.then85, label %if.end87

if.then85:                                        ; preds = %if.then82
  store i1 false, ptr @terminate_macroblock.skip, align 4
  br label %if.end87

if.end87:                                         ; preds = %for.cond17.i295, %for.cond.i316, %for.cond17.preheader.i283, %for.cond.preheader.i298, %land.lhs.true79, %if.then82, %if.then85, %if.end77
  %81 = load i32, ptr %recode_macroblock, align 4
  %tobool88.not = icmp eq i32 %81, 0
  br i1 %tobool88.not, label %if.then89, label %sw.epilog

if.then89:                                        ; preds = %if.end87
  %num_mb90 = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 5
  %82 = load i32, ptr %num_mb90, align 4
  %inc91 = add nsw i32 %82, 1
  store i32 %inc91, ptr %num_mb90, align 4
  br label %sw.epilogthread-pre-split

sw.bb93:                                          ; preds = %if.end16
  %83 = load ptr, ptr @img, align 8
  %current_mb_nr94 = getelementptr inbounds %struct.ImageParameters, ptr %83, i64 0, i32 3
  %84 = load i32, ptr %current_mb_nr94, align 4
  %cmp95 = icmp slt i32 %84, 1
  %or.cond = or i1 %tobool98, %cmp95
  br i1 %or.cond, label %if.end104, label %if.then99

if.then99:                                        ; preds = %sw.bb93
  %slice_too_big = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 17
  %85 = load ptr, ptr %slice_too_big, align 8
  %call100 = tail call i32 %85(i32 noundef 0) #17
  %tobool101.not = icmp eq i32 %call100, 0
  br i1 %tobool101.not, label %if.end104, label %if.then102

if.then102:                                       ; preds = %if.then99
  store i32 1, ptr %recode_macroblock, align 4
  store i32 1, ptr %end_of_slice, align 4
  br label %if.end104

if.end104:                                        ; preds = %if.then99, %if.then102, %sw.bb93
  %86 = load i32, ptr %recode_macroblock, align 4
  %cmp105 = icmp eq i32 %86, 0
  br i1 %cmp105, label %land.lhs.true107, label %sw.epilog

land.lhs.true107:                                 ; preds = %if.end104
  %87 = load ptr, ptr @img, align 8
  %current_mb_nr108 = getelementptr inbounds %struct.ImageParameters, ptr %87, i64 0, i32 3
  %88 = load i32, ptr %current_mb_nr108, align 4
  %call110 = tail call i32 @FmoMB2SliceGroup(i32 noundef %88) #17
  %call111 = tail call i32 @FmoGetLastCodedMBOfSliceGroup(i32 noundef %call110) #17
  %cmp112 = icmp eq i32 %88, %call111
  br i1 %cmp112, label %if.then114, label %sw.epilogthread-pre-split

if.then114:                                       ; preds = %land.lhs.true107
  store i32 1, ptr %end_of_slice, align 4
  br label %sw.epilogthread-pre-split

sw.default:                                       ; preds = %if.end16
  %call117 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.1, i32 noundef %16) #17
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 600) #17
  br label %sw.epilogthread-pre-split

sw.epilogthread-pre-split:                        ; preds = %if.end21, %sw.bb27, %sw.default, %if.then89, %if.then114, %land.lhs.true107
  %.pr = load i32, ptr %recode_macroblock, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilogthread-pre-split, %if.end104, %if.end87
  %89 = phi i32 [ %.pr, %sw.epilogthread-pre-split ], [ %86, %if.end104 ], [ %81, %if.end87 ]
  %cmp118 = icmp eq i32 %89, 1
  br i1 %cmp118, label %for.cond.preheader, label %sw.epilog.if.end138_crit_edge

sw.epilog.if.end138_crit_edge:                    ; preds = %sw.epilog
  %.pre346 = load ptr, ptr @input, align 8
  br label %if.end138

for.cond.preheader:                               ; preds = %sw.epilog
  %max_part_nr = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 4
  %90 = load i32, ptr %max_part_nr, align 8
  %cmp121329 = icmp sgt i32 %90, 0
  %.pre347 = load ptr, ptr @input, align 8
  br i1 %cmp121329, label %for.body.lr.ph, label %if.end138

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %partArr123 = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 6
  %91 = getelementptr inbounds %struct.InputParameters, ptr %.pre347, i64 0, i32 74
  %92 = load i32, ptr %91, align 8
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %for.body.preheader, label %for.body.lr.ph.split.us

for.body.preheader:                               ; preds = %for.body.lr.ph
  %.pre342 = load ptr, ptr @stats, align 8
  br label %for.body

for.body.lr.ph.split.us:                          ; preds = %for.body.lr.ph
  %94 = load ptr, ptr %partArr123, align 8
  %95 = load ptr, ptr @stats, align 8
  %stored_bit_slice.us = getelementptr inbounds %struct.StatParameters, ptr %95, i64 0, i32 7
  %96 = load i32, ptr %stored_bit_slice.us, align 4
  %wide.trip.count = zext i32 %90 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %97 = icmp eq i32 %90, 1
  br i1 %97, label %for.cond.if.end138.loopexit_crit_edge.split.us.unr-lcssa, label %for.body.lr.ph.split.us.new

for.body.lr.ph.split.us.new:                      ; preds = %for.body.lr.ph.split.us
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us, %for.body.lr.ph.split.us.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.split.us.new ], [ %indvars.iv.next.1, %for.body.us ]
  %niter = phi i64 [ 0, %for.body.lr.ph.split.us.new ], [ %niter.next.1, %for.body.us ]
  %arrayidx125.us = getelementptr inbounds %struct.datapartition, ptr %94, i64 %indvars.iv
  %98 = load ptr, ptr %arrayidx125.us, align 8
  %stored_byte_pos129.us = getelementptr inbounds %struct.Bitstream, ptr %98, i64 0, i32 3
  %99 = load <2 x i32>, ptr %stored_byte_pos129.us, align 4
  store <2 x i32> %99, ptr %98, align 8
  %stored_byte_buf131.us = getelementptr inbounds %struct.Bitstream, ptr %98, i64 0, i32 5
  %100 = load i8, ptr %stored_byte_buf131.us, align 4
  %byte_buf132.us = getelementptr inbounds %struct.Bitstream, ptr %98, i64 0, i32 2
  store i8 %100, ptr %byte_buf132.us, align 8
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx125.us.1 = getelementptr inbounds %struct.datapartition, ptr %94, i64 %indvars.iv.next
  %101 = load ptr, ptr %arrayidx125.us.1, align 8
  %stored_byte_pos129.us.1 = getelementptr inbounds %struct.Bitstream, ptr %101, i64 0, i32 3
  %102 = load <2 x i32>, ptr %stored_byte_pos129.us.1, align 4
  store <2 x i32> %102, ptr %101, align 8
  %stored_byte_buf131.us.1 = getelementptr inbounds %struct.Bitstream, ptr %101, i64 0, i32 5
  %103 = load i8, ptr %stored_byte_buf131.us.1, align 4
  %byte_buf132.us.1 = getelementptr inbounds %struct.Bitstream, ptr %101, i64 0, i32 2
  store i8 %103, ptr %byte_buf132.us.1, align 8
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond.if.end138.loopexit_crit_edge.split.us.unr-lcssa, label %for.body.us

for.cond.if.end138.loopexit_crit_edge.split.us.unr-lcssa: ; preds = %for.body.us, %for.body.lr.ph.split.us
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph.split.us ], [ %indvars.iv.next.1, %for.body.us ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.if.end138.loopexit_crit_edge.split.us, label %for.body.us.epil

for.body.us.epil:                                 ; preds = %for.cond.if.end138.loopexit_crit_edge.split.us.unr-lcssa
  %arrayidx125.us.epil = getelementptr inbounds %struct.datapartition, ptr %94, i64 %indvars.iv.unr
  %104 = load ptr, ptr %arrayidx125.us.epil, align 8
  %stored_byte_pos129.us.epil = getelementptr inbounds %struct.Bitstream, ptr %104, i64 0, i32 3
  %105 = load <2 x i32>, ptr %stored_byte_pos129.us.epil, align 4
  store <2 x i32> %105, ptr %104, align 8
  %stored_byte_buf131.us.epil = getelementptr inbounds %struct.Bitstream, ptr %104, i64 0, i32 5
  %106 = load i8, ptr %stored_byte_buf131.us.epil, align 4
  %byte_buf132.us.epil = getelementptr inbounds %struct.Bitstream, ptr %104, i64 0, i32 2
  store i8 %106, ptr %byte_buf132.us.epil, align 8
  br label %for.cond.if.end138.loopexit_crit_edge.split.us

for.cond.if.end138.loopexit_crit_edge.split.us:   ; preds = %for.cond.if.end138.loopexit_crit_edge.split.us.unr-lcssa, %for.body.us.epil
  %bit_slice.us = getelementptr inbounds %struct.StatParameters, ptr %95, i64 0, i32 6
  store i32 %96, ptr %bit_slice.us, align 8
  br label %if.end138

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %107 = phi i32 [ %90, %for.body.preheader ], [ %116, %for.inc ]
  %108 = phi ptr [ %.pre347, %for.body.preheader ], [ %117, %for.inc ]
  %109 = phi ptr [ %.pre342, %for.body.preheader ], [ %118, %for.inc ]
  %indvars.iv336 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next337, %for.inc ]
  %110 = load ptr, ptr %partArr123, align 8
  %arrayidx125 = getelementptr inbounds %struct.datapartition, ptr %110, i64 %indvars.iv336
  %111 = load ptr, ptr %arrayidx125, align 8
  %stored_byte_pos129 = getelementptr inbounds %struct.Bitstream, ptr %111, i64 0, i32 3
  %112 = load <2 x i32>, ptr %stored_byte_pos129, align 4
  store <2 x i32> %112, ptr %111, align 8
  %stored_byte_buf131 = getelementptr inbounds %struct.Bitstream, ptr %111, i64 0, i32 5
  %113 = load i8, ptr %stored_byte_buf131, align 4
  %byte_buf132 = getelementptr inbounds %struct.Bitstream, ptr %111, i64 0, i32 2
  store i8 %113, ptr %byte_buf132, align 8
  %stored_bit_slice = getelementptr inbounds %struct.StatParameters, ptr %109, i64 0, i32 7
  %114 = load i32, ptr %stored_bit_slice, align 4
  %bit_slice = getelementptr inbounds %struct.StatParameters, ptr %109, i64 0, i32 6
  store i32 %114, ptr %bit_slice, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, ptr %108, i64 0, i32 74
  %115 = load i32, ptr %symbol_mode, align 8
  %cmp133 = icmp eq i32 %115, 1
  br i1 %cmp133, label %if.then135, label %for.inc

if.then135:                                       ; preds = %for.body
  %ee_cabac = getelementptr inbounds %struct.datapartition, ptr %110, i64 %indvars.iv336, i32 1
  %ee_recode = getelementptr inbounds %struct.datapartition, ptr %110, i64 %indvars.iv336, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %ee_cabac, ptr noundef nonnull align 8 dereferenceable(48) %ee_recode, i64 48, i1 false)
  %.pre341 = load ptr, ptr @stats, align 8
  %.pre343 = load ptr, ptr @input, align 8
  %.pre345 = load i32, ptr %max_part_nr, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then135
  %116 = phi i32 [ %107, %for.body ], [ %.pre345, %if.then135 ]
  %117 = phi ptr [ %108, %for.body ], [ %.pre343, %if.then135 ]
  %118 = phi ptr [ %109, %for.body ], [ %.pre341, %if.then135 ]
  %indvars.iv.next337 = add nuw nsw i64 %indvars.iv336, 1
  %119 = sext i32 %116 to i64
  %cmp121 = icmp slt i64 %indvars.iv.next337, %119
  br i1 %cmp121, label %for.body, label %if.end138

if.end138:                                        ; preds = %for.inc, %sw.epilog.if.end138_crit_edge, %for.cond.preheader, %for.cond.if.end138.loopexit_crit_edge.split.us
  %120 = phi ptr [ %.pre346, %sw.epilog.if.end138_crit_edge ], [ %.pre347, %for.cond.preheader ], [ %.pre347, %for.cond.if.end138.loopexit_crit_edge.split.us ], [ %117, %for.inc ]
  %symbol_mode139 = getelementptr inbounds %struct.InputParameters, ptr %120, i64 0, i32 74
  %121 = load i32, ptr %symbol_mode139, align 8
  %cmp140 = icmp eq i32 %121, 0
  br i1 %cmp140, label %if.then142, label %if.end200

if.then142:                                       ; preds = %if.end138
  %partArr143 = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 6
  %122 = load ptr, ptr %partArr143, align 8
  %arrayidx144 = getelementptr inbounds i32, ptr %6, i64 2
  %123 = load i32, ptr %arrayidx144, align 4
  %idxprom145 = sext i32 %123 to i64
  %arrayidx146 = getelementptr inbounds %struct.datapartition, ptr %122, i64 %idxprom145
  %124 = load i32, ptr %end_of_slice, align 4
  %cmp147 = icmp eq i32 %124, 1
  %.b = load i1, ptr @terminate_macroblock.skip, align 4
  %or.cond201 = select i1 %cmp147, i1 %.b, i1 false
  br i1 %or.cond201, label %if.then152, label %if.end181

if.then152:                                       ; preds = %if.then142
  %125 = load ptr, ptr @img, align 8
  %cod_counter153 = getelementptr inbounds %struct.ImageParameters, ptr %125, i64 0, i32 33
  %126 = load i32, ptr %cod_counter153, align 8
  %tobool154.not = icmp eq i32 %126, 0
  br i1 %tobool154.not, label %if.else171, label %land.lhs.true155

land.lhs.true155:                                 ; preds = %if.then152
  %127 = load i32, ptr %recode_macroblock, align 4
  %cmp156 = icmp eq i32 %127, 1
  br i1 %cmp156, label %if.then158, label %if.else171

if.then158:                                       ; preds = %land.lhs.true155
  %dec = add nsw i32 %126, -1
  store i32 %dec, ptr %cod_counter153, align 8
  %tobool161.not = icmp eq i32 %dec, 0
  br i1 %tobool161.not, label %if.end181thread-pre-split, label %if.then162

if.then162:                                       ; preds = %if.then158
  %value1164 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  store i32 %dec, ptr %value1164, align 4
  %value2165 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  store i32 0, ptr %value2165, align 8
  store i32 2, ptr %se, align 8
  call void @writeSE_UVLC(ptr noundef nonnull %se, ptr noundef %arrayidx146) #17
  %len167 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %128 = load i32, ptr %len167, align 4
  %arrayidx168 = getelementptr inbounds %struct.macroblock, ptr %2, i64 %idxprom, i32 5, i64 2
  %129 = load i32, ptr %arrayidx168, align 8
  %add = add nsw i32 %129, %128
  store i32 %add, ptr %arrayidx168, align 8
  %130 = load ptr, ptr @img, align 8
  %cod_counter169 = getelementptr inbounds %struct.ImageParameters, ptr %130, i64 0, i32 33
  store i32 0, ptr %cod_counter169, align 8
  br label %if.end181thread-pre-split

if.else171:                                       ; preds = %land.lhs.true155, %if.then152
  %131 = load ptr, ptr %arrayidx146, align 8
  %byte_pos_skip175 = getelementptr inbounds %struct.Bitstream, ptr %131, i64 0, i32 7
  %132 = load <2 x i32>, ptr %byte_pos_skip175, align 8
  store <2 x i32> %132, ptr %131, align 8
  %byte_buf_skip177 = getelementptr inbounds %struct.Bitstream, ptr %131, i64 0, i32 6
  %133 = load i8, ptr %byte_buf_skip177, align 1
  %byte_buf178 = getelementptr inbounds %struct.Bitstream, ptr %131, i64 0, i32 2
  store i8 %133, ptr %byte_buf178, align 8
  store i32 0, ptr %cod_counter153, align 8
  store i1 false, ptr @terminate_macroblock.skip, align 4
  br label %if.end181thread-pre-split

if.end181thread-pre-split:                        ; preds = %if.then158, %if.then162, %if.else171
  %.pr324 = load i32, ptr %end_of_slice, align 4
  br label %if.end181

if.end181:                                        ; preds = %if.end181thread-pre-split, %if.then142
  %134 = phi i32 [ %.pr324, %if.end181thread-pre-split ], [ %124, %if.then142 ]
  %cmp182 = icmp eq i32 %134, 1
  br i1 %cmp182, label %land.lhs.true184, label %if.end200

land.lhs.true184:                                 ; preds = %if.end181
  %135 = load ptr, ptr @img, align 8
  %cod_counter185 = getelementptr inbounds %struct.ImageParameters, ptr %135, i64 0, i32 33
  %136 = load i32, ptr %cod_counter185, align 8
  %tobool186 = icmp eq i32 %136, 0
  %or.cond202 = or i1 %spec.select, %tobool186
  br i1 %or.cond202, label %if.end200, label %if.then189

if.then189:                                       ; preds = %land.lhs.true184
  %value1191 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  store i32 %136, ptr %value1191, align 4
  %value2192 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  store i32 0, ptr %value2192, align 8
  store i32 2, ptr %se, align 8
  call void @writeSE_UVLC(ptr noundef nonnull %se, ptr noundef %arrayidx146) #17
  %len194 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %137 = load i32, ptr %len194, align 4
  %arrayidx196 = getelementptr inbounds %struct.macroblock, ptr %2, i64 %idxprom, i32 5, i64 2
  %138 = load i32, ptr %arrayidx196, align 8
  %add197 = add nsw i32 %138, %137
  store i32 %add197, ptr %arrayidx196, align 8
  %139 = load ptr, ptr @img, align 8
  %cod_counter198 = getelementptr inbounds %struct.ImageParameters, ptr %139, i64 0, i32 33
  store i32 0, ptr %cod_counter198, align 8
  br label %if.end200

if.end200:                                        ; preds = %if.end181, %land.lhs.true184, %if.then189, %if.end138
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se) #17
  ret void
}

declare i32 @FmoGetLastCodedMBOfSliceGroup(i32 noundef) local_unnamed_addr #5

declare i32 @FmoMB2SliceGroup(i32 noundef) local_unnamed_addr #5

declare void @writeSE_UVLC(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i64 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #3

declare void @error(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local void @OneComponentLumaPrediction4x4(ptr nocapture noundef writeonly %mpred, i32 noundef %pic_pix_x, i32 noundef %pic_pix_y, ptr nocapture noundef readonly %mv, i16 noundef signext %ref, ptr nocapture noundef readonly %list) local_unnamed_addr #0 {
entry:
  %idxprom = sext i16 %ref to i64
  %arrayidx = getelementptr inbounds ptr, ptr %list, i64 %idxprom
  %0 = load ptr, ptr %arrayidx, align 8
  %size_x_pad = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 22
  %1 = load i32, ptr %size_x_pad, align 8
  store i32 %1, ptr @width_pad, align 4
  %size_y_pad = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 23
  %2 = load i32, ptr %size_y_pad, align 4
  store i32 %2, ptr @height_pad, align 4
  %imgY_sub = getelementptr inbounds %struct.storable_picture, ptr %0, i64 0, i32 30
  %3 = load ptr, ptr %imgY_sub, align 8
  %arrayidx5 = getelementptr inbounds i16, ptr %mv, i64 1
  %4 = load i16, ptr %arrayidx5, align 2
  %conv = sext i16 %4 to i32
  %add = add nsw i32 %conv, %pic_pix_y
  %5 = load i16, ptr %mv, align 2
  %conv7 = sext i16 %5 to i32
  %add8 = add nsw i32 %conv7, %pic_pix_x
  %call = tail call ptr @UMVLine4X(ptr noundef %3, i32 noundef %add, i32 noundef %add8) #17
  %6 = load i64, ptr %call, align 2
  store i64 %6, ptr %mpred, align 2
  %7 = load i32, ptr @img_padded_size_x, align 4
  %idx.ext = sext i32 %7 to i64
  %add.ptr = getelementptr inbounds i16, ptr %call, i64 %idx.ext
  %add.ptr10 = getelementptr inbounds i16, ptr %mpred, i64 4
  %8 = load i64, ptr %add.ptr, align 2
  store i64 %8, ptr %add.ptr10, align 2
  %add.ptr.1 = getelementptr inbounds i16, ptr %add.ptr, i64 %idx.ext
  %add.ptr10.1 = getelementptr inbounds i16, ptr %mpred, i64 8
  %9 = load i64, ptr %add.ptr.1, align 2
  store i64 %9, ptr %add.ptr10.1, align 2
  %add.ptr.2 = getelementptr inbounds i16, ptr %add.ptr.1, i64 %idx.ext
  %add.ptr10.2 = getelementptr inbounds i16, ptr %mpred, i64 12
  %10 = load i64, ptr %add.ptr.2, align 2
  store i64 %10, ptr %add.ptr10.2, align 2
  ret void
}

declare ptr @UMVLine4X(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local void @LumaPrediction4x4(i32 noundef %block_x, i32 noundef %block_y, i32 noundef %p_dir, i32 noundef %l0_mode, i32 noundef %l1_mode, i16 noundef signext %l0_ref_idx, i16 noundef signext %l1_ref_idx) local_unnamed_addr #0 {
entry:
  %add = add nsw i32 %block_x, 4
  %add1 = add nsw i32 %block_y, 4
  %0 = load ptr, ptr @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 43
  %1 = load i32, ptr %opix_x, align 8
  %add2 = add nsw i32 %1, %block_x
  %shl = shl i32 %add2, 2
  %add3 = add nsw i32 %shl, 80
  %opix_y = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 44
  %2 = load i32, ptr %opix_y, align 4
  %add4 = add nsw i32 %2, %block_y
  %shl5 = shl i32 %add4, 2
  %add6 = add nsw i32 %shl5, 80
  %shr = ashr i32 %block_x, 2
  %shr7 = ashr i32 %block_y, 2
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %3 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %4 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load ptr, ptr @active_pps, align 8
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %5, i64 0, i32 19
  %6 = load i32, ptr %weighted_pred_flag, align 8
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %lor.rhs, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %7 = load i32, ptr %type, align 4
  switch i32 %7, label %lor.rhs [
    i32 0, label %lor.end
    i32 3, label %lor.end
  ]

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %5, i64 0, i32 20
  %8 = load i32, ptr %weighted_bipred_idc, align 4
  %tobool10.not = icmp eq i32 %8, 0
  br i1 %tobool10.not, label %lor.end, label %land.rhs

land.rhs:                                         ; preds = %lor.rhs
  %type11 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %9 = load i32, ptr %type11, align 4
  %cmp12 = icmp eq i32 %9, 1
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true, %land.lhs.true, %lor.rhs, %land.rhs
  %10 = phi i1 [ true, %land.lhs.true ], [ false, %lor.rhs ], [ %cmp12, %land.rhs ], [ true, %land.lhs.true ]
  %all_mv = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 80
  %idxprom13 = sext i32 %shr7 to i64
  %idxprom15 = sext i32 %shr to i64
  %bi_pred_me = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 33
  %11 = load i16, ptr %bi_pred_me, align 8
  %tobool17 = icmp ne i16 %11, 0
  %12 = or i16 %l1_ref_idx, %l0_ref_idx
  %13 = icmp eq i16 %12, 0
  %or.cond281 = and i1 %13, %tobool17
  %cmp27 = icmp eq i32 %p_dir, 2
  %cmp30 = icmp eq i32 %l0_mode, 1
  %14 = and i1 %cmp30, %or.cond281
  %cmp33 = icmp eq i32 %l1_mode, 1
  %15 = and i1 %cmp33, %14
  %or.cond284 = and i1 %cmp27, %15
  %cmp37 = icmp eq i16 %11, 1
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 81
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 82
  %.pn390.in = select i1 %cmp37, ptr %bipred_mv1, ptr %bipred_mv2
  %.pn390.pn.in = select i1 %or.cond284, ptr %.pn390.in, ptr %all_mv
  %.pn390.pn = load ptr, ptr %.pn390.pn.in, align 8
  %.pn.pn.in = getelementptr inbounds ptr, ptr %.pn390.pn, i64 %idxprom13
  %.pn.pn = load ptr, ptr %.pn.pn.in, align 8
  %mv_array.0.in = getelementptr inbounds ptr, ptr %.pn.pn, i64 %idxprom15
  %mv_array.0 = load ptr, ptr %mv_array.0.in, align 8
  switch i32 %p_dir, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb55
    i32 2, label %sw.bb65
  ]

sw.bb:                                            ; preds = %lor.end
  %16 = load ptr, ptr %mv_array.0, align 8
  %idxprom48 = sext i16 %l0_ref_idx to i64
  %arrayidx49 = getelementptr inbounds ptr, ptr %16, i64 %idxprom48
  %17 = load ptr, ptr %arrayidx49, align 8
  %idxprom50 = sext i32 %l0_mode to i64
  %arrayidx51 = getelementptr inbounds ptr, ptr %17, i64 %idxprom50
  %18 = load ptr, ptr %arrayidx51, align 8
  %list_offset = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 21
  %19 = load i32, ptr %list_offset, align 8
  %idxprom53 = sext i32 %19 to i64
  %arrayidx54 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %idxprom53
  %20 = load ptr, ptr %arrayidx54, align 8
  %arrayidx.i = getelementptr inbounds ptr, ptr %20, i64 %idxprom48
  %21 = load ptr, ptr %arrayidx.i, align 8
  %size_x_pad.i = getelementptr inbounds %struct.storable_picture, ptr %21, i64 0, i32 22
  %22 = load i32, ptr %size_x_pad.i, align 8
  store i32 %22, ptr @width_pad, align 4
  %size_y_pad.i = getelementptr inbounds %struct.storable_picture, ptr %21, i64 0, i32 23
  %23 = load i32, ptr %size_y_pad.i, align 4
  store i32 %23, ptr @height_pad, align 4
  %imgY_sub.i = getelementptr inbounds %struct.storable_picture, ptr %21, i64 0, i32 30
  %24 = load ptr, ptr %imgY_sub.i, align 8
  %arrayidx5.i = getelementptr inbounds i16, ptr %18, i64 1
  %25 = load i16, ptr %arrayidx5.i, align 2
  %conv.i = sext i16 %25 to i32
  %add.i = add nsw i32 %add6, %conv.i
  %26 = load i16, ptr %18, align 2
  %conv7.i = sext i16 %26 to i32
  %add8.i = add nsw i32 %add3, %conv7.i
  %call.i = tail call ptr @UMVLine4X(ptr noundef %24, i32 noundef %add.i, i32 noundef %add8.i) #17
  %27 = load i64, ptr %call.i, align 2
  store i64 %27, ptr @LumaPrediction4x4.l0_pred, align 16
  %28 = load i32, ptr @img_padded_size_x, align 4
  %idx.ext.i = sext i32 %28 to i64
  %add.ptr.i = getelementptr inbounds i16, ptr %call.i, i64 %idx.ext.i
  %29 = load i64, ptr %add.ptr.i, align 2
  store i64 %29, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 4), align 8
  %add.ptr.1.i = getelementptr inbounds i16, ptr %add.ptr.i, i64 %idx.ext.i
  %30 = load i64, ptr %add.ptr.1.i, align 2
  store i64 %30, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 8), align 16
  %add.ptr.2.i = getelementptr inbounds i16, ptr %add.ptr.1.i, i64 %idx.ext.i
  br label %sw.epilog.sink.split

sw.bb55:                                          ; preds = %lor.end
  %arrayidx56 = getelementptr inbounds ptr, ptr %mv_array.0, i64 1
  %31 = load ptr, ptr %arrayidx56, align 8
  %idxprom57 = sext i16 %l1_ref_idx to i64
  %arrayidx58 = getelementptr inbounds ptr, ptr %31, i64 %idxprom57
  %32 = load ptr, ptr %arrayidx58, align 8
  %idxprom59 = sext i32 %l1_mode to i64
  %arrayidx60 = getelementptr inbounds ptr, ptr %32, i64 %idxprom59
  %33 = load ptr, ptr %arrayidx60, align 8
  %list_offset61 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 21
  %34 = load i32, ptr %list_offset61, align 8
  %add62 = add nsw i32 %34, 1
  %idxprom63 = sext i32 %add62 to i64
  %arrayidx64 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %idxprom63
  %35 = load ptr, ptr %arrayidx64, align 8
  %arrayidx.i392 = getelementptr inbounds ptr, ptr %35, i64 %idxprom57
  %36 = load ptr, ptr %arrayidx.i392, align 8
  %size_x_pad.i393 = getelementptr inbounds %struct.storable_picture, ptr %36, i64 0, i32 22
  %37 = load i32, ptr %size_x_pad.i393, align 8
  store i32 %37, ptr @width_pad, align 4
  %size_y_pad.i394 = getelementptr inbounds %struct.storable_picture, ptr %36, i64 0, i32 23
  %38 = load i32, ptr %size_y_pad.i394, align 4
  store i32 %38, ptr @height_pad, align 4
  %imgY_sub.i395 = getelementptr inbounds %struct.storable_picture, ptr %36, i64 0, i32 30
  %39 = load ptr, ptr %imgY_sub.i395, align 8
  %arrayidx5.i396 = getelementptr inbounds i16, ptr %33, i64 1
  %40 = load i16, ptr %arrayidx5.i396, align 2
  %conv.i397 = sext i16 %40 to i32
  %add.i398 = add nsw i32 %add6, %conv.i397
  %41 = load i16, ptr %33, align 2
  %conv7.i399 = sext i16 %41 to i32
  %add8.i400 = add nsw i32 %add3, %conv7.i399
  %call.i401 = tail call ptr @UMVLine4X(ptr noundef %39, i32 noundef %add.i398, i32 noundef %add8.i400) #17
  %42 = load i64, ptr %call.i401, align 2
  store i64 %42, ptr @LumaPrediction4x4.l1_pred, align 16
  %43 = load i32, ptr @img_padded_size_x, align 4
  %idx.ext.i402 = sext i32 %43 to i64
  %add.ptr.i403 = getelementptr inbounds i16, ptr %call.i401, i64 %idx.ext.i402
  %44 = load i64, ptr %add.ptr.i403, align 2
  store i64 %44, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 4), align 8
  %add.ptr.1.i404 = getelementptr inbounds i16, ptr %add.ptr.i403, i64 %idx.ext.i402
  %45 = load i64, ptr %add.ptr.1.i404, align 2
  store i64 %45, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 8), align 16
  %add.ptr.2.i405 = getelementptr inbounds i16, ptr %add.ptr.1.i404, i64 %idx.ext.i402
  br label %sw.epilog.sink.split

sw.bb65:                                          ; preds = %lor.end
  %46 = load ptr, ptr %mv_array.0, align 8
  %idxprom67 = sext i16 %l0_ref_idx to i64
  %arrayidx68 = getelementptr inbounds ptr, ptr %46, i64 %idxprom67
  %47 = load ptr, ptr %arrayidx68, align 8
  %idxprom69 = sext i32 %l0_mode to i64
  %arrayidx70 = getelementptr inbounds ptr, ptr %47, i64 %idxprom69
  %48 = load ptr, ptr %arrayidx70, align 8
  %list_offset71 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 21
  %49 = load i32, ptr %list_offset71, align 8
  %idxprom73 = sext i32 %49 to i64
  %arrayidx74 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %idxprom73
  %50 = load ptr, ptr %arrayidx74, align 8
  %arrayidx.i407 = getelementptr inbounds ptr, ptr %50, i64 %idxprom67
  %51 = load ptr, ptr %arrayidx.i407, align 8
  %size_x_pad.i408 = getelementptr inbounds %struct.storable_picture, ptr %51, i64 0, i32 22
  %52 = load i32, ptr %size_x_pad.i408, align 8
  store i32 %52, ptr @width_pad, align 4
  %size_y_pad.i409 = getelementptr inbounds %struct.storable_picture, ptr %51, i64 0, i32 23
  %53 = load i32, ptr %size_y_pad.i409, align 4
  store i32 %53, ptr @height_pad, align 4
  %imgY_sub.i410 = getelementptr inbounds %struct.storable_picture, ptr %51, i64 0, i32 30
  %54 = load ptr, ptr %imgY_sub.i410, align 8
  %arrayidx5.i411 = getelementptr inbounds i16, ptr %48, i64 1
  %55 = load i16, ptr %arrayidx5.i411, align 2
  %conv.i412 = sext i16 %55 to i32
  %add.i413 = add nsw i32 %add6, %conv.i412
  %56 = load i16, ptr %48, align 2
  %conv7.i414 = sext i16 %56 to i32
  %add8.i415 = add nsw i32 %add3, %conv7.i414
  %call.i416 = tail call ptr @UMVLine4X(ptr noundef %54, i32 noundef %add.i413, i32 noundef %add8.i415) #17
  %57 = load i64, ptr %call.i416, align 2
  store i64 %57, ptr @LumaPrediction4x4.l0_pred, align 16
  %58 = load i32, ptr @img_padded_size_x, align 4
  %idx.ext.i417 = sext i32 %58 to i64
  %add.ptr.i418 = getelementptr inbounds i16, ptr %call.i416, i64 %idx.ext.i417
  %59 = load i64, ptr %add.ptr.i418, align 2
  store i64 %59, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 4), align 8
  %add.ptr.1.i419 = getelementptr inbounds i16, ptr %add.ptr.i418, i64 %idx.ext.i417
  %60 = load i64, ptr %add.ptr.1.i419, align 2
  store i64 %60, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 8), align 16
  %add.ptr.2.i420 = getelementptr inbounds i16, ptr %add.ptr.1.i419, i64 %idx.ext.i417
  %61 = load i64, ptr %add.ptr.2.i420, align 2
  store i64 %61, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 12), align 8
  %arrayidx75 = getelementptr inbounds ptr, ptr %mv_array.0, i64 1
  %62 = load ptr, ptr %arrayidx75, align 8
  %idxprom76 = sext i16 %l1_ref_idx to i64
  %arrayidx77 = getelementptr inbounds ptr, ptr %62, i64 %idxprom76
  %63 = load ptr, ptr %arrayidx77, align 8
  %idxprom78 = sext i32 %l1_mode to i64
  %arrayidx79 = getelementptr inbounds ptr, ptr %63, i64 %idxprom78
  %64 = load ptr, ptr %arrayidx79, align 8
  %65 = load i32, ptr %list_offset71, align 8
  %add81 = add nsw i32 %65, 1
  %idxprom82 = sext i32 %add81 to i64
  %arrayidx83 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %idxprom82
  %66 = load ptr, ptr %arrayidx83, align 8
  %arrayidx.i422 = getelementptr inbounds ptr, ptr %66, i64 %idxprom76
  %67 = load ptr, ptr %arrayidx.i422, align 8
  %size_x_pad.i423 = getelementptr inbounds %struct.storable_picture, ptr %67, i64 0, i32 22
  %68 = load i32, ptr %size_x_pad.i423, align 8
  store i32 %68, ptr @width_pad, align 4
  %size_y_pad.i424 = getelementptr inbounds %struct.storable_picture, ptr %67, i64 0, i32 23
  %69 = load i32, ptr %size_y_pad.i424, align 4
  store i32 %69, ptr @height_pad, align 4
  %imgY_sub.i425 = getelementptr inbounds %struct.storable_picture, ptr %67, i64 0, i32 30
  %70 = load ptr, ptr %imgY_sub.i425, align 8
  %arrayidx5.i426 = getelementptr inbounds i16, ptr %64, i64 1
  %71 = load i16, ptr %arrayidx5.i426, align 2
  %conv.i427 = sext i16 %71 to i32
  %add.i428 = add nsw i32 %add6, %conv.i427
  %72 = load i16, ptr %64, align 2
  %conv7.i429 = sext i16 %72 to i32
  %add8.i430 = add nsw i32 %add3, %conv7.i429
  %call.i431 = tail call ptr @UMVLine4X(ptr noundef %70, i32 noundef %add.i428, i32 noundef %add8.i430) #17
  %73 = load i64, ptr %call.i431, align 2
  store i64 %73, ptr @LumaPrediction4x4.l1_pred, align 16
  %74 = load i32, ptr @img_padded_size_x, align 4
  %idx.ext.i432 = sext i32 %74 to i64
  %add.ptr.i433 = getelementptr inbounds i16, ptr %call.i431, i64 %idx.ext.i432
  %75 = load i64, ptr %add.ptr.i433, align 2
  store i64 %75, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 4), align 8
  %add.ptr.1.i434 = getelementptr inbounds i16, ptr %add.ptr.i433, i64 %idx.ext.i432
  %76 = load i64, ptr %add.ptr.1.i434, align 2
  store i64 %76, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 8), align 16
  %add.ptr.2.i435 = getelementptr inbounds i16, ptr %add.ptr.1.i434, i64 %idx.ext.i432
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %sw.bb, %sw.bb55, %sw.bb65
  %add.ptr.2.i435.sink = phi ptr [ %add.ptr.2.i435, %sw.bb65 ], [ %add.ptr.2.i405, %sw.bb55 ], [ %add.ptr.2.i, %sw.bb ]
  %.sink634 = phi ptr [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 12), %sw.bb65 ], [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 12), %sw.bb55 ], [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 12), %sw.bb ]
  %77 = load i64, ptr %add.ptr.2.i435.sink, align 2
  store i64 %77, ptr %.sink634, align 2
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %lor.end
  br i1 %10, label %if.then85, label %if.else217

if.then85:                                        ; preds = %sw.epilog
  br i1 %cmp27, label %if.then88, label %if.else

if.then88:                                        ; preds = %if.then85
  %78 = load ptr, ptr @wbp_weight, align 8
  %79 = load ptr, ptr %78, align 8
  %idxprom90 = sext i16 %l0_ref_idx to i64
  %arrayidx91 = getelementptr inbounds ptr, ptr %79, i64 %idxprom90
  %80 = load ptr, ptr %arrayidx91, align 8
  %idxprom92 = sext i16 %l1_ref_idx to i64
  %arrayidx93 = getelementptr inbounds ptr, ptr %80, i64 %idxprom92
  %81 = load ptr, ptr %arrayidx93, align 8
  %82 = load i32, ptr %81, align 4
  %arrayidx95 = getelementptr inbounds ptr, ptr %78, i64 1
  %83 = load ptr, ptr %arrayidx95, align 8
  %arrayidx97 = getelementptr inbounds ptr, ptr %83, i64 %idxprom90
  %84 = load ptr, ptr %arrayidx97, align 8
  %arrayidx99 = getelementptr inbounds ptr, ptr %84, i64 %idxprom92
  %85 = load ptr, ptr %arrayidx99, align 8
  %86 = load i32, ptr %85, align 4
  %87 = load ptr, ptr @wp_offset, align 8
  %88 = load ptr, ptr %87, align 8
  %arrayidx103 = getelementptr inbounds ptr, ptr %88, i64 %idxprom90
  %89 = load ptr, ptr %arrayidx103, align 8
  %90 = load i32, ptr %89, align 4
  %arrayidx105 = getelementptr inbounds ptr, ptr %87, i64 1
  %91 = load ptr, ptr %arrayidx105, align 8
  %arrayidx107 = getelementptr inbounds ptr, ptr %91, i64 %idxprom92
  %92 = load ptr, ptr %arrayidx107, align 8
  %93 = load i32, ptr %92, align 4
  %add109 = add i32 %90, 1
  %add110 = add i32 %add109, %93
  %shr111 = ashr i32 %add110, 1
  %94 = load i32, ptr @wp_luma_round, align 4
  %mul = shl nsw i32 %94, 1
  %95 = load i32, ptr @luma_log_weight_denom, align 4
  %add112 = add nsw i32 %95, 1
  %96 = load ptr, ptr @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 156
  %97 = load i32, ptr %max_imgpel_value, align 8
  %98 = sext i32 %block_x to i64
  %99 = sext i32 %add to i64
  %100 = sext i32 %block_y to i64
  %101 = sext i32 %add1 to i64
  %102 = load i16, ptr @LumaPrediction4x4.l0_pred, align 16
  %conv119 = zext i16 %102 to i32
  %mul120 = mul nsw i32 %82, %conv119
  %103 = load i16, ptr @LumaPrediction4x4.l1_pred, align 16
  %conv122 = zext i16 %103 to i32
  %mul123 = mul nsw i32 %86, %conv122
  %add124 = add i32 %mul120, %mul
  %add125 = add i32 %add124, %mul123
  %shr126 = ashr i32 %add125, %add112
  %add127 = add nsw i32 %shr126, %shr111
  %cond.i.i = tail call i32 @llvm.smax.i32(i32 %add127, i32 0)
  %cond.i4.i = tail call i32 @llvm.smin.i32(i32 %cond.i.i, i32 %97)
  %conv128 = trunc i32 %cond.i4.i to i16
  %arrayidx132 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %100, i64 %98
  store i16 %conv128, ptr %arrayidx132, align 2
  %indvars.iv.next585 = add nsw i64 %98, 1
  %cmp116 = icmp slt i64 %indvars.iv.next585, %99
  br i1 %cmp116, label %for.body118.1, label %for.inc133

for.body118.1:                                    ; preds = %if.then88
  %104 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 1), align 2
  %conv119.1 = zext i16 %104 to i32
  %mul120.1 = mul nsw i32 %82, %conv119.1
  %105 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 1), align 2
  %conv122.1 = zext i16 %105 to i32
  %mul123.1 = mul nsw i32 %86, %conv122.1
  %add124.1 = add i32 %mul120.1, %mul
  %add125.1 = add i32 %add124.1, %mul123.1
  %shr126.1 = ashr i32 %add125.1, %add112
  %add127.1 = add nsw i32 %shr126.1, %shr111
  %cond.i.i.1 = tail call i32 @llvm.smax.i32(i32 %add127.1, i32 0)
  %cond.i4.i.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1, i32 %97)
  %conv128.1 = trunc i32 %cond.i4.i.1 to i16
  %arrayidx132.1 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %100, i64 %indvars.iv.next585
  store i16 %conv128.1, ptr %arrayidx132.1, align 2
  %indvars.iv.next585.1 = add nsw i64 %98, 2
  %106 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 2), align 4
  %conv119.2 = zext i16 %106 to i32
  %mul120.2 = mul nsw i32 %82, %conv119.2
  %107 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 2), align 4
  %conv122.2 = zext i16 %107 to i32
  %mul123.2 = mul nsw i32 %86, %conv122.2
  %add124.2 = add i32 %mul120.2, %mul
  %add125.2 = add i32 %add124.2, %mul123.2
  %shr126.2 = ashr i32 %add125.2, %add112
  %add127.2 = add nsw i32 %shr126.2, %shr111
  %cond.i.i.2 = tail call i32 @llvm.smax.i32(i32 %add127.2, i32 0)
  %cond.i4.i.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2, i32 %97)
  %conv128.2 = trunc i32 %cond.i4.i.2 to i16
  %arrayidx132.2 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %100, i64 %indvars.iv.next585.1
  store i16 %conv128.2, ptr %arrayidx132.2, align 2
  %indvars.iv.next585.2 = add nsw i64 %98, 3
  %108 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 3), align 2
  %conv119.3 = zext i16 %108 to i32
  %mul120.3 = mul nsw i32 %82, %conv119.3
  %109 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 3), align 2
  %conv122.3 = zext i16 %109 to i32
  %mul123.3 = mul nsw i32 %86, %conv122.3
  %add124.3 = add i32 %mul120.3, %mul
  %add125.3 = add i32 %add124.3, %mul123.3
  %shr126.3 = ashr i32 %add125.3, %add112
  %add127.3 = add nsw i32 %shr126.3, %shr111
  %cond.i.i.3 = tail call i32 @llvm.smax.i32(i32 %add127.3, i32 0)
  %cond.i4.i.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3, i32 %97)
  %conv128.3 = trunc i32 %cond.i4.i.3 to i16
  %arrayidx132.3 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %100, i64 %indvars.iv.next585.2
  store i16 %conv128.3, ptr %arrayidx132.3, align 2
  br label %for.inc133

for.inc133:                                       ; preds = %for.body118.1, %if.then88
  %incdec.ptr.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 1), %if.then88 ], [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 4), %for.body118.1 ]
  %incdec.ptr121.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 1), %if.then88 ], [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 4), %for.body118.1 ]
  %indvars.iv.next587 = add nsw i64 %100, 1
  %cmp113 = icmp slt i64 %indvars.iv.next587, %101
  br i1 %cmp113, label %for.cond115.preheader.1, label %if.end280

for.cond115.preheader.1:                          ; preds = %for.inc133
  %incdec.ptr.1589 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa, i64 1
  %110 = load i16, ptr %incdec.ptr.lcssa, align 2
  %conv119.1590 = zext i16 %110 to i32
  %mul120.1591 = mul nsw i32 %82, %conv119.1590
  %incdec.ptr121.1592 = getelementptr inbounds i16, ptr %incdec.ptr121.lcssa, i64 1
  %111 = load i16, ptr %incdec.ptr121.lcssa, align 2
  %conv122.1593 = zext i16 %111 to i32
  %mul123.1594 = mul nsw i32 %86, %conv122.1593
  %add124.1595 = add i32 %mul120.1591, %mul
  %add125.1596 = add i32 %add124.1595, %mul123.1594
  %shr126.1597 = ashr i32 %add125.1596, %add112
  %add127.1598 = add nsw i32 %shr126.1597, %shr111
  %cond.i.i.1599 = tail call i32 @llvm.smax.i32(i32 %add127.1598, i32 0)
  %cond.i4.i.1600 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1599, i32 %97)
  %conv128.1601 = trunc i32 %cond.i4.i.1600 to i16
  %arrayidx132.1602 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %indvars.iv.next587, i64 %98
  store i16 %conv128.1601, ptr %arrayidx132.1602, align 2
  br i1 %cmp116, label %for.body118.1.1, label %for.inc133.1

for.body118.1.1:                                  ; preds = %for.cond115.preheader.1
  %incdec.ptr.1.1 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa, i64 2
  %112 = load i16, ptr %incdec.ptr.1589, align 2
  %conv119.1.1 = zext i16 %112 to i32
  %mul120.1.1 = mul nsw i32 %82, %conv119.1.1
  %incdec.ptr121.1.1 = getelementptr inbounds i16, ptr %incdec.ptr121.lcssa, i64 2
  %113 = load i16, ptr %incdec.ptr121.1592, align 2
  %conv122.1.1 = zext i16 %113 to i32
  %mul123.1.1 = mul nsw i32 %86, %conv122.1.1
  %add124.1.1 = add i32 %mul120.1.1, %mul
  %add125.1.1 = add i32 %add124.1.1, %mul123.1.1
  %shr126.1.1 = ashr i32 %add125.1.1, %add112
  %add127.1.1 = add nsw i32 %shr126.1.1, %shr111
  %cond.i.i.1.1 = tail call i32 @llvm.smax.i32(i32 %add127.1.1, i32 0)
  %cond.i4.i.1.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1.1, i32 %97)
  %conv128.1.1 = trunc i32 %cond.i4.i.1.1 to i16
  %arrayidx132.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %indvars.iv.next587, i64 %indvars.iv.next585
  store i16 %conv128.1.1, ptr %arrayidx132.1.1, align 2
  %indvars.iv.next585.1.1 = add nsw i64 %98, 2
  %incdec.ptr.2.1 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa, i64 3
  %114 = load i16, ptr %incdec.ptr.1.1, align 2
  %conv119.2.1 = zext i16 %114 to i32
  %mul120.2.1 = mul nsw i32 %82, %conv119.2.1
  %incdec.ptr121.2.1 = getelementptr inbounds i16, ptr %incdec.ptr121.lcssa, i64 3
  %115 = load i16, ptr %incdec.ptr121.1.1, align 2
  %conv122.2.1 = zext i16 %115 to i32
  %mul123.2.1 = mul nsw i32 %86, %conv122.2.1
  %add124.2.1 = add i32 %mul120.2.1, %mul
  %add125.2.1 = add i32 %add124.2.1, %mul123.2.1
  %shr126.2.1 = ashr i32 %add125.2.1, %add112
  %add127.2.1 = add nsw i32 %shr126.2.1, %shr111
  %cond.i.i.2.1 = tail call i32 @llvm.smax.i32(i32 %add127.2.1, i32 0)
  %cond.i4.i.2.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2.1, i32 %97)
  %conv128.2.1 = trunc i32 %cond.i4.i.2.1 to i16
  %arrayidx132.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %indvars.iv.next587, i64 %indvars.iv.next585.1.1
  store i16 %conv128.2.1, ptr %arrayidx132.2.1, align 2
  %indvars.iv.next585.2.1 = add nsw i64 %98, 3
  %incdec.ptr.3.1 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa, i64 4
  %116 = load i16, ptr %incdec.ptr.2.1, align 2
  %conv119.3.1 = zext i16 %116 to i32
  %mul120.3.1 = mul nsw i32 %82, %conv119.3.1
  %incdec.ptr121.3.1 = getelementptr inbounds i16, ptr %incdec.ptr121.lcssa, i64 4
  %117 = load i16, ptr %incdec.ptr121.2.1, align 2
  %conv122.3.1 = zext i16 %117 to i32
  %mul123.3.1 = mul nsw i32 %86, %conv122.3.1
  %add124.3.1 = add i32 %mul120.3.1, %mul
  %add125.3.1 = add i32 %add124.3.1, %mul123.3.1
  %shr126.3.1 = ashr i32 %add125.3.1, %add112
  %add127.3.1 = add nsw i32 %shr126.3.1, %shr111
  %cond.i.i.3.1 = tail call i32 @llvm.smax.i32(i32 %add127.3.1, i32 0)
  %cond.i4.i.3.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3.1, i32 %97)
  %conv128.3.1 = trunc i32 %cond.i4.i.3.1 to i16
  %arrayidx132.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %indvars.iv.next587, i64 %indvars.iv.next585.2.1
  store i16 %conv128.3.1, ptr %arrayidx132.3.1, align 2
  br label %for.inc133.1

for.inc133.1:                                     ; preds = %for.body118.1.1, %for.cond115.preheader.1
  %incdec.ptr.lcssa.1 = phi ptr [ %incdec.ptr.1589, %for.cond115.preheader.1 ], [ %incdec.ptr.3.1, %for.body118.1.1 ]
  %incdec.ptr121.lcssa.1 = phi ptr [ %incdec.ptr121.1592, %for.cond115.preheader.1 ], [ %incdec.ptr121.3.1, %for.body118.1.1 ]
  %indvars.iv.next587.1 = add nsw i64 %100, 2
  %incdec.ptr.2605 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.1, i64 1
  %118 = load i16, ptr %incdec.ptr.lcssa.1, align 2
  %conv119.2606 = zext i16 %118 to i32
  %mul120.2607 = mul nsw i32 %82, %conv119.2606
  %incdec.ptr121.2608 = getelementptr inbounds i16, ptr %incdec.ptr121.lcssa.1, i64 1
  %119 = load i16, ptr %incdec.ptr121.lcssa.1, align 2
  %conv122.2609 = zext i16 %119 to i32
  %mul123.2610 = mul nsw i32 %86, %conv122.2609
  %add124.2611 = add i32 %mul120.2607, %mul
  %add125.2612 = add i32 %add124.2611, %mul123.2610
  %shr126.2613 = ashr i32 %add125.2612, %add112
  %add127.2614 = add nsw i32 %shr126.2613, %shr111
  %cond.i.i.2615 = tail call i32 @llvm.smax.i32(i32 %add127.2614, i32 0)
  %cond.i4.i.2616 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2615, i32 %97)
  %conv128.2617 = trunc i32 %cond.i4.i.2616 to i16
  %arrayidx132.2618 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %indvars.iv.next587.1, i64 %98
  store i16 %conv128.2617, ptr %arrayidx132.2618, align 2
  br i1 %cmp116, label %for.body118.1.2, label %for.inc133.2

for.body118.1.2:                                  ; preds = %for.inc133.1
  %incdec.ptr.1.2 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.1, i64 2
  %120 = load i16, ptr %incdec.ptr.2605, align 2
  %conv119.1.2 = zext i16 %120 to i32
  %mul120.1.2 = mul nsw i32 %82, %conv119.1.2
  %incdec.ptr121.1.2 = getelementptr inbounds i16, ptr %incdec.ptr121.lcssa.1, i64 2
  %121 = load i16, ptr %incdec.ptr121.2608, align 2
  %conv122.1.2 = zext i16 %121 to i32
  %mul123.1.2 = mul nsw i32 %86, %conv122.1.2
  %add124.1.2 = add i32 %mul120.1.2, %mul
  %add125.1.2 = add i32 %add124.1.2, %mul123.1.2
  %shr126.1.2 = ashr i32 %add125.1.2, %add112
  %add127.1.2 = add nsw i32 %shr126.1.2, %shr111
  %cond.i.i.1.2 = tail call i32 @llvm.smax.i32(i32 %add127.1.2, i32 0)
  %cond.i4.i.1.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1.2, i32 %97)
  %conv128.1.2 = trunc i32 %cond.i4.i.1.2 to i16
  %arrayidx132.1.2 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %indvars.iv.next587.1, i64 %indvars.iv.next585
  store i16 %conv128.1.2, ptr %arrayidx132.1.2, align 2
  %indvars.iv.next585.1.2 = add nsw i64 %98, 2
  %incdec.ptr.2.2 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.1, i64 3
  %122 = load i16, ptr %incdec.ptr.1.2, align 2
  %conv119.2.2 = zext i16 %122 to i32
  %mul120.2.2 = mul nsw i32 %82, %conv119.2.2
  %incdec.ptr121.2.2 = getelementptr inbounds i16, ptr %incdec.ptr121.lcssa.1, i64 3
  %123 = load i16, ptr %incdec.ptr121.1.2, align 2
  %conv122.2.2 = zext i16 %123 to i32
  %mul123.2.2 = mul nsw i32 %86, %conv122.2.2
  %add124.2.2 = add i32 %mul120.2.2, %mul
  %add125.2.2 = add i32 %add124.2.2, %mul123.2.2
  %shr126.2.2 = ashr i32 %add125.2.2, %add112
  %add127.2.2 = add nsw i32 %shr126.2.2, %shr111
  %cond.i.i.2.2 = tail call i32 @llvm.smax.i32(i32 %add127.2.2, i32 0)
  %cond.i4.i.2.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2.2, i32 %97)
  %conv128.2.2 = trunc i32 %cond.i4.i.2.2 to i16
  %arrayidx132.2.2 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %indvars.iv.next587.1, i64 %indvars.iv.next585.1.2
  store i16 %conv128.2.2, ptr %arrayidx132.2.2, align 2
  %indvars.iv.next585.2.2 = add nsw i64 %98, 3
  %incdec.ptr.3.2 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.1, i64 4
  %124 = load i16, ptr %incdec.ptr.2.2, align 2
  %conv119.3.2 = zext i16 %124 to i32
  %mul120.3.2 = mul nsw i32 %82, %conv119.3.2
  %incdec.ptr121.3.2 = getelementptr inbounds i16, ptr %incdec.ptr121.lcssa.1, i64 4
  %125 = load i16, ptr %incdec.ptr121.2.2, align 2
  %conv122.3.2 = zext i16 %125 to i32
  %mul123.3.2 = mul nsw i32 %86, %conv122.3.2
  %add124.3.2 = add i32 %mul120.3.2, %mul
  %add125.3.2 = add i32 %add124.3.2, %mul123.3.2
  %shr126.3.2 = ashr i32 %add125.3.2, %add112
  %add127.3.2 = add nsw i32 %shr126.3.2, %shr111
  %cond.i.i.3.2 = tail call i32 @llvm.smax.i32(i32 %add127.3.2, i32 0)
  %cond.i4.i.3.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3.2, i32 %97)
  %conv128.3.2 = trunc i32 %cond.i4.i.3.2 to i16
  %arrayidx132.3.2 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %indvars.iv.next587.1, i64 %indvars.iv.next585.2.2
  store i16 %conv128.3.2, ptr %arrayidx132.3.2, align 2
  br label %for.inc133.2

for.inc133.2:                                     ; preds = %for.body118.1.2, %for.inc133.1
  %incdec.ptr.lcssa.2 = phi ptr [ %incdec.ptr.2605, %for.inc133.1 ], [ %incdec.ptr.3.2, %for.body118.1.2 ]
  %incdec.ptr121.lcssa.2 = phi ptr [ %incdec.ptr121.2608, %for.inc133.1 ], [ %incdec.ptr121.3.2, %for.body118.1.2 ]
  %indvars.iv.next587.2 = add nsw i64 %100, 3
  %126 = load i16, ptr %incdec.ptr.lcssa.2, align 2
  %conv119.3621 = zext i16 %126 to i32
  %mul120.3622 = mul nsw i32 %82, %conv119.3621
  %127 = load i16, ptr %incdec.ptr121.lcssa.2, align 2
  %conv122.3624 = zext i16 %127 to i32
  %mul123.3625 = mul nsw i32 %86, %conv122.3624
  %add124.3626 = add i32 %mul120.3622, %mul
  %add125.3627 = add i32 %add124.3626, %mul123.3625
  %shr126.3628 = ashr i32 %add125.3627, %add112
  %add127.3629 = add nsw i32 %shr126.3628, %shr111
  %cond.i.i.3630 = tail call i32 @llvm.smax.i32(i32 %add127.3629, i32 0)
  %cond.i4.i.3631 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3630, i32 %97)
  %conv128.3632 = trunc i32 %cond.i4.i.3631 to i16
  %arrayidx132.3633 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %indvars.iv.next587.2, i64 %98
  store i16 %conv128.3632, ptr %arrayidx132.3633, align 2
  br i1 %cmp116, label %for.body118.1.3, label %if.end280

for.body118.1.3:                                  ; preds = %for.inc133.2
  %incdec.ptr121.3623 = getelementptr inbounds i16, ptr %incdec.ptr121.lcssa.2, i64 1
  %incdec.ptr.3620 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.2, i64 1
  %incdec.ptr.1.3 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.2, i64 2
  %128 = load i16, ptr %incdec.ptr.3620, align 2
  %conv119.1.3 = zext i16 %128 to i32
  %mul120.1.3 = mul nsw i32 %82, %conv119.1.3
  %incdec.ptr121.1.3 = getelementptr inbounds i16, ptr %incdec.ptr121.lcssa.2, i64 2
  %129 = load i16, ptr %incdec.ptr121.3623, align 2
  %conv122.1.3 = zext i16 %129 to i32
  %mul123.1.3 = mul nsw i32 %86, %conv122.1.3
  %add124.1.3 = add i32 %mul120.1.3, %mul
  %add125.1.3 = add i32 %add124.1.3, %mul123.1.3
  %shr126.1.3 = ashr i32 %add125.1.3, %add112
  %add127.1.3 = add nsw i32 %shr126.1.3, %shr111
  %cond.i.i.1.3 = tail call i32 @llvm.smax.i32(i32 %add127.1.3, i32 0)
  %cond.i4.i.1.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1.3, i32 %97)
  %conv128.1.3 = trunc i32 %cond.i4.i.1.3 to i16
  %arrayidx132.1.3 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %indvars.iv.next587.2, i64 %indvars.iv.next585
  store i16 %conv128.1.3, ptr %arrayidx132.1.3, align 2
  %indvars.iv.next585.1.3 = add nsw i64 %98, 2
  %incdec.ptr.2.3 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.2, i64 3
  %130 = load i16, ptr %incdec.ptr.1.3, align 2
  %conv119.2.3 = zext i16 %130 to i32
  %mul120.2.3 = mul nsw i32 %82, %conv119.2.3
  %incdec.ptr121.2.3 = getelementptr inbounds i16, ptr %incdec.ptr121.lcssa.2, i64 3
  %131 = load i16, ptr %incdec.ptr121.1.3, align 2
  %conv122.2.3 = zext i16 %131 to i32
  %mul123.2.3 = mul nsw i32 %86, %conv122.2.3
  %add124.2.3 = add i32 %mul120.2.3, %mul
  %add125.2.3 = add i32 %add124.2.3, %mul123.2.3
  %shr126.2.3 = ashr i32 %add125.2.3, %add112
  %add127.2.3 = add nsw i32 %shr126.2.3, %shr111
  %cond.i.i.2.3 = tail call i32 @llvm.smax.i32(i32 %add127.2.3, i32 0)
  %cond.i4.i.2.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2.3, i32 %97)
  %conv128.2.3 = trunc i32 %cond.i4.i.2.3 to i16
  %arrayidx132.2.3 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %indvars.iv.next587.2, i64 %indvars.iv.next585.1.3
  store i16 %conv128.2.3, ptr %arrayidx132.2.3, align 2
  %indvars.iv.next585.2.3 = add nsw i64 %98, 3
  %132 = load i16, ptr %incdec.ptr.2.3, align 2
  %conv119.3.3 = zext i16 %132 to i32
  %mul120.3.3 = mul nsw i32 %82, %conv119.3.3
  %133 = load i16, ptr %incdec.ptr121.2.3, align 2
  %conv122.3.3 = zext i16 %133 to i32
  %mul123.3.3 = mul nsw i32 %86, %conv122.3.3
  %add124.3.3 = add i32 %mul120.3.3, %mul
  %add125.3.3 = add i32 %add124.3.3, %mul123.3.3
  %shr126.3.3 = ashr i32 %add125.3.3, %add112
  %add127.3.3 = add nsw i32 %shr126.3.3, %shr111
  %cond.i.i.3.3 = tail call i32 @llvm.smax.i32(i32 %add127.3.3, i32 0)
  %cond.i4.i.3.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3.3, i32 %97)
  %conv128.3.3 = trunc i32 %cond.i4.i.3.3 to i16
  %arrayidx132.3.3 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 51, i64 %indvars.iv.next587.2, i64 %indvars.iv.next585.2.3
  store i16 %conv128.3.3, ptr %arrayidx132.3.3, align 2
  br label %if.end280

if.else:                                          ; preds = %if.then85
  %cmp136 = icmp eq i32 %p_dir, 0
  %134 = load ptr, ptr @wp_weight, align 8
  br i1 %cmp136, label %if.then138, label %if.else176

if.then138:                                       ; preds = %if.else
  %135 = load ptr, ptr %134, align 8
  %idxprom140 = sext i16 %l0_ref_idx to i64
  %arrayidx141 = getelementptr inbounds ptr, ptr %135, i64 %idxprom140
  %136 = load ptr, ptr %arrayidx141, align 8
  %137 = load i32, ptr %136, align 4
  %138 = load ptr, ptr @wp_offset, align 8
  %139 = load ptr, ptr %138, align 8
  %arrayidx146 = getelementptr inbounds ptr, ptr %139, i64 %idxprom140
  %140 = load ptr, ptr %arrayidx146, align 8
  %141 = load i32, ptr %140, align 4
  %142 = load ptr, ptr @img, align 8
  %max_imgpel_value156 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 156
  %143 = load i32, ptr %max_imgpel_value156, align 8
  %144 = load i32, ptr @wp_luma_round, align 4
  %145 = load i32, ptr @luma_log_weight_denom, align 4
  %146 = sext i32 %block_x to i64
  %147 = sext i32 %add to i64
  %148 = sext i32 %block_y to i64
  %149 = sext i32 %add1 to i64
  %150 = load i16, ptr @LumaPrediction4x4.l0_pred, align 16
  %conv158 = zext i16 %150 to i32
  %mul159 = mul nsw i32 %137, %conv158
  %add160 = add nsw i32 %mul159, %144
  %shr161 = ashr i32 %add160, %145
  %add162 = add nsw i32 %shr161, %141
  %cond.i.i436 = tail call i32 @llvm.smax.i32(i32 %add162, i32 0)
  %cond.i4.i437 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436, i32 %143)
  %conv164 = trunc i32 %cond.i4.i437 to i16
  %arrayidx169 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %148, i64 %146
  store i16 %conv164, ptr %arrayidx169, align 2
  %indvars.iv.next548 = add nsw i64 %146, 1
  %cmp153 = icmp slt i64 %indvars.iv.next548, %147
  br i1 %cmp153, label %for.body155.1, label %for.inc173

for.body155.1:                                    ; preds = %if.then138
  %151 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 1), align 2
  %conv158.1 = zext i16 %151 to i32
  %mul159.1 = mul nsw i32 %137, %conv158.1
  %add160.1 = add nsw i32 %mul159.1, %144
  %shr161.1 = ashr i32 %add160.1, %145
  %add162.1 = add nsw i32 %shr161.1, %141
  %cond.i.i436.1 = tail call i32 @llvm.smax.i32(i32 %add162.1, i32 0)
  %cond.i4.i437.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.1, i32 %143)
  %conv164.1 = trunc i32 %cond.i4.i437.1 to i16
  %arrayidx169.1 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %148, i64 %indvars.iv.next548
  store i16 %conv164.1, ptr %arrayidx169.1, align 2
  %indvars.iv.next548.1 = add nsw i64 %146, 2
  %152 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 2), align 4
  %conv158.2 = zext i16 %152 to i32
  %mul159.2 = mul nsw i32 %137, %conv158.2
  %add160.2 = add nsw i32 %mul159.2, %144
  %shr161.2 = ashr i32 %add160.2, %145
  %add162.2 = add nsw i32 %shr161.2, %141
  %cond.i.i436.2 = tail call i32 @llvm.smax.i32(i32 %add162.2, i32 0)
  %cond.i4.i437.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.2, i32 %143)
  %conv164.2 = trunc i32 %cond.i4.i437.2 to i16
  %arrayidx169.2 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %148, i64 %indvars.iv.next548.1
  store i16 %conv164.2, ptr %arrayidx169.2, align 2
  %indvars.iv.next548.2 = add nsw i64 %146, 3
  %153 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 3), align 2
  %conv158.3 = zext i16 %153 to i32
  %mul159.3 = mul nsw i32 %137, %conv158.3
  %add160.3 = add nsw i32 %mul159.3, %144
  %shr161.3 = ashr i32 %add160.3, %145
  %add162.3 = add nsw i32 %shr161.3, %141
  %cond.i.i436.3 = tail call i32 @llvm.smax.i32(i32 %add162.3, i32 0)
  %cond.i4.i437.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.3, i32 %143)
  %conv164.3 = trunc i32 %cond.i4.i437.3 to i16
  %arrayidx169.3 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %148, i64 %indvars.iv.next548.2
  store i16 %conv164.3, ptr %arrayidx169.3, align 2
  br label %for.inc173

for.inc173:                                       ; preds = %for.body155.1, %if.then138
  %incdec.ptr157.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 1), %if.then138 ], [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 4), %for.body155.1 ]
  %indvars.iv.next550 = add nsw i64 %148, 1
  %cmp149 = icmp slt i64 %indvars.iv.next550, %149
  br i1 %cmp149, label %for.cond152.preheader.1, label %if.end280

for.cond152.preheader.1:                          ; preds = %for.inc173
  %incdec.ptr157.1552 = getelementptr inbounds i16, ptr %incdec.ptr157.lcssa, i64 1
  %154 = load i16, ptr %incdec.ptr157.lcssa, align 2
  %conv158.1553 = zext i16 %154 to i32
  %mul159.1554 = mul nsw i32 %137, %conv158.1553
  %add160.1555 = add nsw i32 %mul159.1554, %144
  %shr161.1556 = ashr i32 %add160.1555, %145
  %add162.1557 = add nsw i32 %shr161.1556, %141
  %cond.i.i436.1558 = tail call i32 @llvm.smax.i32(i32 %add162.1557, i32 0)
  %cond.i4.i437.1559 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.1558, i32 %143)
  %conv164.1560 = trunc i32 %cond.i4.i437.1559 to i16
  %arrayidx169.1561 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %indvars.iv.next550, i64 %146
  store i16 %conv164.1560, ptr %arrayidx169.1561, align 2
  br i1 %cmp153, label %for.body155.1.1, label %for.inc173.1

for.body155.1.1:                                  ; preds = %for.cond152.preheader.1
  %incdec.ptr157.1.1 = getelementptr inbounds i16, ptr %incdec.ptr157.lcssa, i64 2
  %155 = load i16, ptr %incdec.ptr157.1552, align 2
  %conv158.1.1 = zext i16 %155 to i32
  %mul159.1.1 = mul nsw i32 %137, %conv158.1.1
  %add160.1.1 = add nsw i32 %mul159.1.1, %144
  %shr161.1.1 = ashr i32 %add160.1.1, %145
  %add162.1.1 = add nsw i32 %shr161.1.1, %141
  %cond.i.i436.1.1 = tail call i32 @llvm.smax.i32(i32 %add162.1.1, i32 0)
  %cond.i4.i437.1.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.1.1, i32 %143)
  %conv164.1.1 = trunc i32 %cond.i4.i437.1.1 to i16
  %arrayidx169.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %indvars.iv.next550, i64 %indvars.iv.next548
  store i16 %conv164.1.1, ptr %arrayidx169.1.1, align 2
  %indvars.iv.next548.1.1 = add nsw i64 %146, 2
  %incdec.ptr157.2.1 = getelementptr inbounds i16, ptr %incdec.ptr157.lcssa, i64 3
  %156 = load i16, ptr %incdec.ptr157.1.1, align 2
  %conv158.2.1 = zext i16 %156 to i32
  %mul159.2.1 = mul nsw i32 %137, %conv158.2.1
  %add160.2.1 = add nsw i32 %mul159.2.1, %144
  %shr161.2.1 = ashr i32 %add160.2.1, %145
  %add162.2.1 = add nsw i32 %shr161.2.1, %141
  %cond.i.i436.2.1 = tail call i32 @llvm.smax.i32(i32 %add162.2.1, i32 0)
  %cond.i4.i437.2.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.2.1, i32 %143)
  %conv164.2.1 = trunc i32 %cond.i4.i437.2.1 to i16
  %arrayidx169.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %indvars.iv.next550, i64 %indvars.iv.next548.1.1
  store i16 %conv164.2.1, ptr %arrayidx169.2.1, align 2
  %indvars.iv.next548.2.1 = add nsw i64 %146, 3
  %incdec.ptr157.3.1 = getelementptr inbounds i16, ptr %incdec.ptr157.lcssa, i64 4
  %157 = load i16, ptr %incdec.ptr157.2.1, align 2
  %conv158.3.1 = zext i16 %157 to i32
  %mul159.3.1 = mul nsw i32 %137, %conv158.3.1
  %add160.3.1 = add nsw i32 %mul159.3.1, %144
  %shr161.3.1 = ashr i32 %add160.3.1, %145
  %add162.3.1 = add nsw i32 %shr161.3.1, %141
  %cond.i.i436.3.1 = tail call i32 @llvm.smax.i32(i32 %add162.3.1, i32 0)
  %cond.i4.i437.3.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.3.1, i32 %143)
  %conv164.3.1 = trunc i32 %cond.i4.i437.3.1 to i16
  %arrayidx169.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %indvars.iv.next550, i64 %indvars.iv.next548.2.1
  store i16 %conv164.3.1, ptr %arrayidx169.3.1, align 2
  br label %for.inc173.1

for.inc173.1:                                     ; preds = %for.body155.1.1, %for.cond152.preheader.1
  %incdec.ptr157.lcssa.1 = phi ptr [ %incdec.ptr157.1552, %for.cond152.preheader.1 ], [ %incdec.ptr157.3.1, %for.body155.1.1 ]
  %indvars.iv.next550.1 = add nsw i64 %148, 2
  %incdec.ptr157.2564 = getelementptr inbounds i16, ptr %incdec.ptr157.lcssa.1, i64 1
  %158 = load i16, ptr %incdec.ptr157.lcssa.1, align 2
  %conv158.2565 = zext i16 %158 to i32
  %mul159.2566 = mul nsw i32 %137, %conv158.2565
  %add160.2567 = add nsw i32 %mul159.2566, %144
  %shr161.2568 = ashr i32 %add160.2567, %145
  %add162.2569 = add nsw i32 %shr161.2568, %141
  %cond.i.i436.2570 = tail call i32 @llvm.smax.i32(i32 %add162.2569, i32 0)
  %cond.i4.i437.2571 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.2570, i32 %143)
  %conv164.2572 = trunc i32 %cond.i4.i437.2571 to i16
  %arrayidx169.2573 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %indvars.iv.next550.1, i64 %146
  store i16 %conv164.2572, ptr %arrayidx169.2573, align 2
  br i1 %cmp153, label %for.body155.1.2, label %for.inc173.2

for.body155.1.2:                                  ; preds = %for.inc173.1
  %incdec.ptr157.1.2 = getelementptr inbounds i16, ptr %incdec.ptr157.lcssa.1, i64 2
  %159 = load i16, ptr %incdec.ptr157.2564, align 2
  %conv158.1.2 = zext i16 %159 to i32
  %mul159.1.2 = mul nsw i32 %137, %conv158.1.2
  %add160.1.2 = add nsw i32 %mul159.1.2, %144
  %shr161.1.2 = ashr i32 %add160.1.2, %145
  %add162.1.2 = add nsw i32 %shr161.1.2, %141
  %cond.i.i436.1.2 = tail call i32 @llvm.smax.i32(i32 %add162.1.2, i32 0)
  %cond.i4.i437.1.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.1.2, i32 %143)
  %conv164.1.2 = trunc i32 %cond.i4.i437.1.2 to i16
  %arrayidx169.1.2 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %indvars.iv.next550.1, i64 %indvars.iv.next548
  store i16 %conv164.1.2, ptr %arrayidx169.1.2, align 2
  %indvars.iv.next548.1.2 = add nsw i64 %146, 2
  %incdec.ptr157.2.2 = getelementptr inbounds i16, ptr %incdec.ptr157.lcssa.1, i64 3
  %160 = load i16, ptr %incdec.ptr157.1.2, align 2
  %conv158.2.2 = zext i16 %160 to i32
  %mul159.2.2 = mul nsw i32 %137, %conv158.2.2
  %add160.2.2 = add nsw i32 %mul159.2.2, %144
  %shr161.2.2 = ashr i32 %add160.2.2, %145
  %add162.2.2 = add nsw i32 %shr161.2.2, %141
  %cond.i.i436.2.2 = tail call i32 @llvm.smax.i32(i32 %add162.2.2, i32 0)
  %cond.i4.i437.2.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.2.2, i32 %143)
  %conv164.2.2 = trunc i32 %cond.i4.i437.2.2 to i16
  %arrayidx169.2.2 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %indvars.iv.next550.1, i64 %indvars.iv.next548.1.2
  store i16 %conv164.2.2, ptr %arrayidx169.2.2, align 2
  %indvars.iv.next548.2.2 = add nsw i64 %146, 3
  %incdec.ptr157.3.2 = getelementptr inbounds i16, ptr %incdec.ptr157.lcssa.1, i64 4
  %161 = load i16, ptr %incdec.ptr157.2.2, align 2
  %conv158.3.2 = zext i16 %161 to i32
  %mul159.3.2 = mul nsw i32 %137, %conv158.3.2
  %add160.3.2 = add nsw i32 %mul159.3.2, %144
  %shr161.3.2 = ashr i32 %add160.3.2, %145
  %add162.3.2 = add nsw i32 %shr161.3.2, %141
  %cond.i.i436.3.2 = tail call i32 @llvm.smax.i32(i32 %add162.3.2, i32 0)
  %cond.i4.i437.3.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.3.2, i32 %143)
  %conv164.3.2 = trunc i32 %cond.i4.i437.3.2 to i16
  %arrayidx169.3.2 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %indvars.iv.next550.1, i64 %indvars.iv.next548.2.2
  store i16 %conv164.3.2, ptr %arrayidx169.3.2, align 2
  br label %for.inc173.2

for.inc173.2:                                     ; preds = %for.body155.1.2, %for.inc173.1
  %incdec.ptr157.lcssa.2 = phi ptr [ %incdec.ptr157.2564, %for.inc173.1 ], [ %incdec.ptr157.3.2, %for.body155.1.2 ]
  %indvars.iv.next550.2 = add nsw i64 %148, 3
  %162 = load i16, ptr %incdec.ptr157.lcssa.2, align 2
  %conv158.3576 = zext i16 %162 to i32
  %mul159.3577 = mul nsw i32 %137, %conv158.3576
  %add160.3578 = add nsw i32 %mul159.3577, %144
  %shr161.3579 = ashr i32 %add160.3578, %145
  %add162.3580 = add nsw i32 %shr161.3579, %141
  %cond.i.i436.3581 = tail call i32 @llvm.smax.i32(i32 %add162.3580, i32 0)
  %cond.i4.i437.3582 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.3581, i32 %143)
  %conv164.3583 = trunc i32 %cond.i4.i437.3582 to i16
  %arrayidx169.3584 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %indvars.iv.next550.2, i64 %146
  store i16 %conv164.3583, ptr %arrayidx169.3584, align 2
  br i1 %cmp153, label %for.body155.1.3, label %if.end280

for.body155.1.3:                                  ; preds = %for.inc173.2
  %incdec.ptr157.3575 = getelementptr inbounds i16, ptr %incdec.ptr157.lcssa.2, i64 1
  %incdec.ptr157.1.3 = getelementptr inbounds i16, ptr %incdec.ptr157.lcssa.2, i64 2
  %163 = load i16, ptr %incdec.ptr157.3575, align 2
  %conv158.1.3 = zext i16 %163 to i32
  %mul159.1.3 = mul nsw i32 %137, %conv158.1.3
  %add160.1.3 = add nsw i32 %mul159.1.3, %144
  %shr161.1.3 = ashr i32 %add160.1.3, %145
  %add162.1.3 = add nsw i32 %shr161.1.3, %141
  %cond.i.i436.1.3 = tail call i32 @llvm.smax.i32(i32 %add162.1.3, i32 0)
  %cond.i4.i437.1.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.1.3, i32 %143)
  %conv164.1.3 = trunc i32 %cond.i4.i437.1.3 to i16
  %arrayidx169.1.3 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %indvars.iv.next550.2, i64 %indvars.iv.next548
  store i16 %conv164.1.3, ptr %arrayidx169.1.3, align 2
  %indvars.iv.next548.1.3 = add nsw i64 %146, 2
  %incdec.ptr157.2.3 = getelementptr inbounds i16, ptr %incdec.ptr157.lcssa.2, i64 3
  %164 = load i16, ptr %incdec.ptr157.1.3, align 2
  %conv158.2.3 = zext i16 %164 to i32
  %mul159.2.3 = mul nsw i32 %137, %conv158.2.3
  %add160.2.3 = add nsw i32 %mul159.2.3, %144
  %shr161.2.3 = ashr i32 %add160.2.3, %145
  %add162.2.3 = add nsw i32 %shr161.2.3, %141
  %cond.i.i436.2.3 = tail call i32 @llvm.smax.i32(i32 %add162.2.3, i32 0)
  %cond.i4.i437.2.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.2.3, i32 %143)
  %conv164.2.3 = trunc i32 %cond.i4.i437.2.3 to i16
  %arrayidx169.2.3 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %indvars.iv.next550.2, i64 %indvars.iv.next548.1.3
  store i16 %conv164.2.3, ptr %arrayidx169.2.3, align 2
  %indvars.iv.next548.2.3 = add nsw i64 %146, 3
  %165 = load i16, ptr %incdec.ptr157.2.3, align 2
  %conv158.3.3 = zext i16 %165 to i32
  %mul159.3.3 = mul nsw i32 %137, %conv158.3.3
  %add160.3.3 = add nsw i32 %mul159.3.3, %144
  %shr161.3.3 = ashr i32 %add160.3.3, %145
  %add162.3.3 = add nsw i32 %shr161.3.3, %141
  %cond.i.i436.3.3 = tail call i32 @llvm.smax.i32(i32 %add162.3.3, i32 0)
  %cond.i4.i437.3.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i436.3.3, i32 %143)
  %conv164.3.3 = trunc i32 %cond.i4.i437.3.3 to i16
  %arrayidx169.3.3 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 51, i64 %indvars.iv.next550.2, i64 %indvars.iv.next548.2.3
  store i16 %conv164.3.3, ptr %arrayidx169.3.3, align 2
  br label %if.end280

if.else176:                                       ; preds = %if.else
  %arrayidx178 = getelementptr inbounds ptr, ptr %134, i64 1
  %166 = load ptr, ptr %arrayidx178, align 8
  %idxprom179 = sext i16 %l1_ref_idx to i64
  %arrayidx180 = getelementptr inbounds ptr, ptr %166, i64 %idxprom179
  %167 = load ptr, ptr %arrayidx180, align 8
  %168 = load i32, ptr %167, align 4
  %169 = load ptr, ptr @wp_offset, align 8
  %arrayidx183 = getelementptr inbounds ptr, ptr %169, i64 1
  %170 = load ptr, ptr %arrayidx183, align 8
  %arrayidx185 = getelementptr inbounds ptr, ptr %170, i64 %idxprom179
  %171 = load ptr, ptr %arrayidx185, align 8
  %172 = load i32, ptr %171, align 4
  %173 = load ptr, ptr @img, align 8
  %max_imgpel_value195 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 156
  %174 = load i32, ptr %max_imgpel_value195, align 8
  %175 = load i32, ptr @wp_luma_round, align 4
  %176 = load i32, ptr @luma_log_weight_denom, align 4
  %177 = sext i32 %block_x to i64
  %178 = sext i32 %add to i64
  %179 = sext i32 %block_y to i64
  %180 = sext i32 %add1 to i64
  %181 = load i16, ptr @LumaPrediction4x4.l1_pred, align 16
  %conv197 = zext i16 %181 to i32
  %mul198 = mul nsw i32 %168, %conv197
  %add199 = add nsw i32 %mul198, %175
  %shr200 = ashr i32 %add199, %176
  %add201 = add nsw i32 %shr200, %172
  %cond.i.i438 = tail call i32 @llvm.smax.i32(i32 %add201, i32 0)
  %cond.i4.i439 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438, i32 %174)
  %conv203 = trunc i32 %cond.i4.i439 to i16
  %arrayidx208 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %179, i64 %177
  store i16 %conv203, ptr %arrayidx208, align 2
  %indvars.iv.next511 = add nsw i64 %177, 1
  %cmp192 = icmp slt i64 %indvars.iv.next511, %178
  br i1 %cmp192, label %for.body194.1, label %for.inc212

for.body194.1:                                    ; preds = %if.else176
  %182 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 1), align 2
  %conv197.1 = zext i16 %182 to i32
  %mul198.1 = mul nsw i32 %168, %conv197.1
  %add199.1 = add nsw i32 %mul198.1, %175
  %shr200.1 = ashr i32 %add199.1, %176
  %add201.1 = add nsw i32 %shr200.1, %172
  %cond.i.i438.1 = tail call i32 @llvm.smax.i32(i32 %add201.1, i32 0)
  %cond.i4.i439.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.1, i32 %174)
  %conv203.1 = trunc i32 %cond.i4.i439.1 to i16
  %arrayidx208.1 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %179, i64 %indvars.iv.next511
  store i16 %conv203.1, ptr %arrayidx208.1, align 2
  %indvars.iv.next511.1 = add nsw i64 %177, 2
  %183 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 2), align 4
  %conv197.2 = zext i16 %183 to i32
  %mul198.2 = mul nsw i32 %168, %conv197.2
  %add199.2 = add nsw i32 %mul198.2, %175
  %shr200.2 = ashr i32 %add199.2, %176
  %add201.2 = add nsw i32 %shr200.2, %172
  %cond.i.i438.2 = tail call i32 @llvm.smax.i32(i32 %add201.2, i32 0)
  %cond.i4.i439.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.2, i32 %174)
  %conv203.2 = trunc i32 %cond.i4.i439.2 to i16
  %arrayidx208.2 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %179, i64 %indvars.iv.next511.1
  store i16 %conv203.2, ptr %arrayidx208.2, align 2
  %indvars.iv.next511.2 = add nsw i64 %177, 3
  %184 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 3), align 2
  %conv197.3 = zext i16 %184 to i32
  %mul198.3 = mul nsw i32 %168, %conv197.3
  %add199.3 = add nsw i32 %mul198.3, %175
  %shr200.3 = ashr i32 %add199.3, %176
  %add201.3 = add nsw i32 %shr200.3, %172
  %cond.i.i438.3 = tail call i32 @llvm.smax.i32(i32 %add201.3, i32 0)
  %cond.i4.i439.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.3, i32 %174)
  %conv203.3 = trunc i32 %cond.i4.i439.3 to i16
  %arrayidx208.3 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %179, i64 %indvars.iv.next511.2
  store i16 %conv203.3, ptr %arrayidx208.3, align 2
  br label %for.inc212

for.inc212:                                       ; preds = %for.body194.1, %if.else176
  %incdec.ptr196.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 1), %if.else176 ], [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 4), %for.body194.1 ]
  %indvars.iv.next513 = add nsw i64 %179, 1
  %cmp188 = icmp slt i64 %indvars.iv.next513, %180
  br i1 %cmp188, label %for.cond191.preheader.1, label %if.end280

for.cond191.preheader.1:                          ; preds = %for.inc212
  %incdec.ptr196.1515 = getelementptr inbounds i16, ptr %incdec.ptr196.lcssa, i64 1
  %185 = load i16, ptr %incdec.ptr196.lcssa, align 2
  %conv197.1516 = zext i16 %185 to i32
  %mul198.1517 = mul nsw i32 %168, %conv197.1516
  %add199.1518 = add nsw i32 %mul198.1517, %175
  %shr200.1519 = ashr i32 %add199.1518, %176
  %add201.1520 = add nsw i32 %shr200.1519, %172
  %cond.i.i438.1521 = tail call i32 @llvm.smax.i32(i32 %add201.1520, i32 0)
  %cond.i4.i439.1522 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.1521, i32 %174)
  %conv203.1523 = trunc i32 %cond.i4.i439.1522 to i16
  %arrayidx208.1524 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %indvars.iv.next513, i64 %177
  store i16 %conv203.1523, ptr %arrayidx208.1524, align 2
  br i1 %cmp192, label %for.body194.1.1, label %for.inc212.1

for.body194.1.1:                                  ; preds = %for.cond191.preheader.1
  %incdec.ptr196.1.1 = getelementptr inbounds i16, ptr %incdec.ptr196.lcssa, i64 2
  %186 = load i16, ptr %incdec.ptr196.1515, align 2
  %conv197.1.1 = zext i16 %186 to i32
  %mul198.1.1 = mul nsw i32 %168, %conv197.1.1
  %add199.1.1 = add nsw i32 %mul198.1.1, %175
  %shr200.1.1 = ashr i32 %add199.1.1, %176
  %add201.1.1 = add nsw i32 %shr200.1.1, %172
  %cond.i.i438.1.1 = tail call i32 @llvm.smax.i32(i32 %add201.1.1, i32 0)
  %cond.i4.i439.1.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.1.1, i32 %174)
  %conv203.1.1 = trunc i32 %cond.i4.i439.1.1 to i16
  %arrayidx208.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %indvars.iv.next513, i64 %indvars.iv.next511
  store i16 %conv203.1.1, ptr %arrayidx208.1.1, align 2
  %indvars.iv.next511.1.1 = add nsw i64 %177, 2
  %incdec.ptr196.2.1 = getelementptr inbounds i16, ptr %incdec.ptr196.lcssa, i64 3
  %187 = load i16, ptr %incdec.ptr196.1.1, align 2
  %conv197.2.1 = zext i16 %187 to i32
  %mul198.2.1 = mul nsw i32 %168, %conv197.2.1
  %add199.2.1 = add nsw i32 %mul198.2.1, %175
  %shr200.2.1 = ashr i32 %add199.2.1, %176
  %add201.2.1 = add nsw i32 %shr200.2.1, %172
  %cond.i.i438.2.1 = tail call i32 @llvm.smax.i32(i32 %add201.2.1, i32 0)
  %cond.i4.i439.2.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.2.1, i32 %174)
  %conv203.2.1 = trunc i32 %cond.i4.i439.2.1 to i16
  %arrayidx208.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %indvars.iv.next513, i64 %indvars.iv.next511.1.1
  store i16 %conv203.2.1, ptr %arrayidx208.2.1, align 2
  %indvars.iv.next511.2.1 = add nsw i64 %177, 3
  %incdec.ptr196.3.1 = getelementptr inbounds i16, ptr %incdec.ptr196.lcssa, i64 4
  %188 = load i16, ptr %incdec.ptr196.2.1, align 2
  %conv197.3.1 = zext i16 %188 to i32
  %mul198.3.1 = mul nsw i32 %168, %conv197.3.1
  %add199.3.1 = add nsw i32 %mul198.3.1, %175
  %shr200.3.1 = ashr i32 %add199.3.1, %176
  %add201.3.1 = add nsw i32 %shr200.3.1, %172
  %cond.i.i438.3.1 = tail call i32 @llvm.smax.i32(i32 %add201.3.1, i32 0)
  %cond.i4.i439.3.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.3.1, i32 %174)
  %conv203.3.1 = trunc i32 %cond.i4.i439.3.1 to i16
  %arrayidx208.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %indvars.iv.next513, i64 %indvars.iv.next511.2.1
  store i16 %conv203.3.1, ptr %arrayidx208.3.1, align 2
  br label %for.inc212.1

for.inc212.1:                                     ; preds = %for.body194.1.1, %for.cond191.preheader.1
  %incdec.ptr196.lcssa.1 = phi ptr [ %incdec.ptr196.1515, %for.cond191.preheader.1 ], [ %incdec.ptr196.3.1, %for.body194.1.1 ]
  %indvars.iv.next513.1 = add nsw i64 %179, 2
  %incdec.ptr196.2527 = getelementptr inbounds i16, ptr %incdec.ptr196.lcssa.1, i64 1
  %189 = load i16, ptr %incdec.ptr196.lcssa.1, align 2
  %conv197.2528 = zext i16 %189 to i32
  %mul198.2529 = mul nsw i32 %168, %conv197.2528
  %add199.2530 = add nsw i32 %mul198.2529, %175
  %shr200.2531 = ashr i32 %add199.2530, %176
  %add201.2532 = add nsw i32 %shr200.2531, %172
  %cond.i.i438.2533 = tail call i32 @llvm.smax.i32(i32 %add201.2532, i32 0)
  %cond.i4.i439.2534 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.2533, i32 %174)
  %conv203.2535 = trunc i32 %cond.i4.i439.2534 to i16
  %arrayidx208.2536 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %indvars.iv.next513.1, i64 %177
  store i16 %conv203.2535, ptr %arrayidx208.2536, align 2
  br i1 %cmp192, label %for.body194.1.2, label %for.inc212.2

for.body194.1.2:                                  ; preds = %for.inc212.1
  %incdec.ptr196.1.2 = getelementptr inbounds i16, ptr %incdec.ptr196.lcssa.1, i64 2
  %190 = load i16, ptr %incdec.ptr196.2527, align 2
  %conv197.1.2 = zext i16 %190 to i32
  %mul198.1.2 = mul nsw i32 %168, %conv197.1.2
  %add199.1.2 = add nsw i32 %mul198.1.2, %175
  %shr200.1.2 = ashr i32 %add199.1.2, %176
  %add201.1.2 = add nsw i32 %shr200.1.2, %172
  %cond.i.i438.1.2 = tail call i32 @llvm.smax.i32(i32 %add201.1.2, i32 0)
  %cond.i4.i439.1.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.1.2, i32 %174)
  %conv203.1.2 = trunc i32 %cond.i4.i439.1.2 to i16
  %arrayidx208.1.2 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %indvars.iv.next513.1, i64 %indvars.iv.next511
  store i16 %conv203.1.2, ptr %arrayidx208.1.2, align 2
  %indvars.iv.next511.1.2 = add nsw i64 %177, 2
  %incdec.ptr196.2.2 = getelementptr inbounds i16, ptr %incdec.ptr196.lcssa.1, i64 3
  %191 = load i16, ptr %incdec.ptr196.1.2, align 2
  %conv197.2.2 = zext i16 %191 to i32
  %mul198.2.2 = mul nsw i32 %168, %conv197.2.2
  %add199.2.2 = add nsw i32 %mul198.2.2, %175
  %shr200.2.2 = ashr i32 %add199.2.2, %176
  %add201.2.2 = add nsw i32 %shr200.2.2, %172
  %cond.i.i438.2.2 = tail call i32 @llvm.smax.i32(i32 %add201.2.2, i32 0)
  %cond.i4.i439.2.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.2.2, i32 %174)
  %conv203.2.2 = trunc i32 %cond.i4.i439.2.2 to i16
  %arrayidx208.2.2 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %indvars.iv.next513.1, i64 %indvars.iv.next511.1.2
  store i16 %conv203.2.2, ptr %arrayidx208.2.2, align 2
  %indvars.iv.next511.2.2 = add nsw i64 %177, 3
  %incdec.ptr196.3.2 = getelementptr inbounds i16, ptr %incdec.ptr196.lcssa.1, i64 4
  %192 = load i16, ptr %incdec.ptr196.2.2, align 2
  %conv197.3.2 = zext i16 %192 to i32
  %mul198.3.2 = mul nsw i32 %168, %conv197.3.2
  %add199.3.2 = add nsw i32 %mul198.3.2, %175
  %shr200.3.2 = ashr i32 %add199.3.2, %176
  %add201.3.2 = add nsw i32 %shr200.3.2, %172
  %cond.i.i438.3.2 = tail call i32 @llvm.smax.i32(i32 %add201.3.2, i32 0)
  %cond.i4.i439.3.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.3.2, i32 %174)
  %conv203.3.2 = trunc i32 %cond.i4.i439.3.2 to i16
  %arrayidx208.3.2 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %indvars.iv.next513.1, i64 %indvars.iv.next511.2.2
  store i16 %conv203.3.2, ptr %arrayidx208.3.2, align 2
  br label %for.inc212.2

for.inc212.2:                                     ; preds = %for.body194.1.2, %for.inc212.1
  %incdec.ptr196.lcssa.2 = phi ptr [ %incdec.ptr196.2527, %for.inc212.1 ], [ %incdec.ptr196.3.2, %for.body194.1.2 ]
  %indvars.iv.next513.2 = add nsw i64 %179, 3
  %193 = load i16, ptr %incdec.ptr196.lcssa.2, align 2
  %conv197.3539 = zext i16 %193 to i32
  %mul198.3540 = mul nsw i32 %168, %conv197.3539
  %add199.3541 = add nsw i32 %mul198.3540, %175
  %shr200.3542 = ashr i32 %add199.3541, %176
  %add201.3543 = add nsw i32 %shr200.3542, %172
  %cond.i.i438.3544 = tail call i32 @llvm.smax.i32(i32 %add201.3543, i32 0)
  %cond.i4.i439.3545 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.3544, i32 %174)
  %conv203.3546 = trunc i32 %cond.i4.i439.3545 to i16
  %arrayidx208.3547 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %indvars.iv.next513.2, i64 %177
  store i16 %conv203.3546, ptr %arrayidx208.3547, align 2
  br i1 %cmp192, label %for.body194.1.3, label %if.end280

for.body194.1.3:                                  ; preds = %for.inc212.2
  %incdec.ptr196.3538 = getelementptr inbounds i16, ptr %incdec.ptr196.lcssa.2, i64 1
  %incdec.ptr196.1.3 = getelementptr inbounds i16, ptr %incdec.ptr196.lcssa.2, i64 2
  %194 = load i16, ptr %incdec.ptr196.3538, align 2
  %conv197.1.3 = zext i16 %194 to i32
  %mul198.1.3 = mul nsw i32 %168, %conv197.1.3
  %add199.1.3 = add nsw i32 %mul198.1.3, %175
  %shr200.1.3 = ashr i32 %add199.1.3, %176
  %add201.1.3 = add nsw i32 %shr200.1.3, %172
  %cond.i.i438.1.3 = tail call i32 @llvm.smax.i32(i32 %add201.1.3, i32 0)
  %cond.i4.i439.1.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.1.3, i32 %174)
  %conv203.1.3 = trunc i32 %cond.i4.i439.1.3 to i16
  %arrayidx208.1.3 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %indvars.iv.next513.2, i64 %indvars.iv.next511
  store i16 %conv203.1.3, ptr %arrayidx208.1.3, align 2
  %indvars.iv.next511.1.3 = add nsw i64 %177, 2
  %incdec.ptr196.2.3 = getelementptr inbounds i16, ptr %incdec.ptr196.lcssa.2, i64 3
  %195 = load i16, ptr %incdec.ptr196.1.3, align 2
  %conv197.2.3 = zext i16 %195 to i32
  %mul198.2.3 = mul nsw i32 %168, %conv197.2.3
  %add199.2.3 = add nsw i32 %mul198.2.3, %175
  %shr200.2.3 = ashr i32 %add199.2.3, %176
  %add201.2.3 = add nsw i32 %shr200.2.3, %172
  %cond.i.i438.2.3 = tail call i32 @llvm.smax.i32(i32 %add201.2.3, i32 0)
  %cond.i4.i439.2.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.2.3, i32 %174)
  %conv203.2.3 = trunc i32 %cond.i4.i439.2.3 to i16
  %arrayidx208.2.3 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %indvars.iv.next513.2, i64 %indvars.iv.next511.1.3
  store i16 %conv203.2.3, ptr %arrayidx208.2.3, align 2
  %indvars.iv.next511.2.3 = add nsw i64 %177, 3
  %196 = load i16, ptr %incdec.ptr196.2.3, align 2
  %conv197.3.3 = zext i16 %196 to i32
  %mul198.3.3 = mul nsw i32 %168, %conv197.3.3
  %add199.3.3 = add nsw i32 %mul198.3.3, %175
  %shr200.3.3 = ashr i32 %add199.3.3, %176
  %add201.3.3 = add nsw i32 %shr200.3.3, %172
  %cond.i.i438.3.3 = tail call i32 @llvm.smax.i32(i32 %add201.3.3, i32 0)
  %cond.i4.i439.3.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i438.3.3, i32 %174)
  %conv203.3.3 = trunc i32 %cond.i4.i439.3.3 to i16
  %arrayidx208.3.3 = getelementptr inbounds %struct.ImageParameters, ptr %173, i64 0, i32 51, i64 %indvars.iv.next513.2, i64 %indvars.iv.next511.2.3
  store i16 %conv203.3.3, ptr %arrayidx208.3.3, align 2
  br label %if.end280

if.else217:                                       ; preds = %sw.epilog
  %197 = sext i32 %block_x to i64
  br i1 %cmp27, label %for.cond221.preheader, label %if.else248

for.cond221.preheader:                            ; preds = %if.else217
  %198 = load ptr, ptr @img, align 8
  %199 = sext i32 %add to i64
  %200 = sext i32 %block_y to i64
  %201 = sext i32 %add1 to i64
  %202 = load i16, ptr @LumaPrediction4x4.l0_pred, align 16
  %conv230 = zext i16 %202 to i32
  %203 = load i16, ptr @LumaPrediction4x4.l1_pred, align 16
  %conv232 = zext i16 %203 to i32
  %add233 = add nuw nsw i32 %conv230, 1
  %add234 = add nuw nsw i32 %add233, %conv232
  %shr235 = lshr i32 %add234, 1
  %conv236 = trunc i32 %shr235 to i16
  %arrayidx241 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %200, i64 %197
  store i16 %conv236, ptr %arrayidx241, align 2
  %indvars.iv.next477 = add nsw i64 %197, 1
  %cmp226 = icmp slt i64 %indvars.iv.next477, %199
  br i1 %cmp226, label %for.body228.1, label %for.inc245

for.body228.1:                                    ; preds = %for.cond221.preheader
  %204 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 1), align 2
  %conv230.1 = zext i16 %204 to i32
  %205 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 1), align 2
  %conv232.1 = zext i16 %205 to i32
  %add233.1 = add nuw nsw i32 %conv230.1, 1
  %add234.1 = add nuw nsw i32 %add233.1, %conv232.1
  %shr235.1 = lshr i32 %add234.1, 1
  %conv236.1 = trunc i32 %shr235.1 to i16
  %arrayidx241.1 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %200, i64 %indvars.iv.next477
  store i16 %conv236.1, ptr %arrayidx241.1, align 2
  %indvars.iv.next477.1 = add nsw i64 %197, 2
  %206 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 2), align 4
  %conv230.2 = zext i16 %206 to i32
  %207 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 2), align 4
  %conv232.2 = zext i16 %207 to i32
  %add233.2 = add nuw nsw i32 %conv230.2, 1
  %add234.2 = add nuw nsw i32 %add233.2, %conv232.2
  %shr235.2 = lshr i32 %add234.2, 1
  %conv236.2 = trunc i32 %shr235.2 to i16
  %arrayidx241.2 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %200, i64 %indvars.iv.next477.1
  store i16 %conv236.2, ptr %arrayidx241.2, align 2
  %indvars.iv.next477.2 = add nsw i64 %197, 3
  %208 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 3), align 2
  %conv230.3 = zext i16 %208 to i32
  %209 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 3), align 2
  %conv232.3 = zext i16 %209 to i32
  %add233.3 = add nuw nsw i32 %conv230.3, 1
  %add234.3 = add nuw nsw i32 %add233.3, %conv232.3
  %shr235.3 = lshr i32 %add234.3, 1
  %conv236.3 = trunc i32 %shr235.3 to i16
  %arrayidx241.3 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %200, i64 %indvars.iv.next477.2
  store i16 %conv236.3, ptr %arrayidx241.3, align 2
  br label %for.inc245

for.inc245:                                       ; preds = %for.body228.1, %for.cond221.preheader
  %incdec.ptr229.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 1), %for.cond221.preheader ], [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 4), %for.body228.1 ]
  %incdec.ptr231.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 1), %for.cond221.preheader ], [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 4), %for.body228.1 ]
  %indvars.iv.next479 = add nsw i64 %200, 1
  %cmp222 = icmp slt i64 %indvars.iv.next479, %201
  br i1 %cmp222, label %for.cond225.preheader.1, label %if.end280

for.cond225.preheader.1:                          ; preds = %for.inc245
  %incdec.ptr229.1481 = getelementptr inbounds i16, ptr %incdec.ptr229.lcssa, i64 1
  %210 = load i16, ptr %incdec.ptr229.lcssa, align 2
  %conv230.1482 = zext i16 %210 to i32
  %incdec.ptr231.1483 = getelementptr inbounds i16, ptr %incdec.ptr231.lcssa, i64 1
  %211 = load i16, ptr %incdec.ptr231.lcssa, align 2
  %conv232.1484 = zext i16 %211 to i32
  %add233.1485 = add nuw nsw i32 %conv230.1482, 1
  %add234.1486 = add nuw nsw i32 %add233.1485, %conv232.1484
  %shr235.1487 = lshr i32 %add234.1486, 1
  %conv236.1488 = trunc i32 %shr235.1487 to i16
  %arrayidx241.1489 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %indvars.iv.next479, i64 %197
  store i16 %conv236.1488, ptr %arrayidx241.1489, align 2
  br i1 %cmp226, label %for.body228.1.1, label %for.inc245.1

for.body228.1.1:                                  ; preds = %for.cond225.preheader.1
  %incdec.ptr229.1.1 = getelementptr inbounds i16, ptr %incdec.ptr229.lcssa, i64 2
  %212 = load i16, ptr %incdec.ptr229.1481, align 2
  %conv230.1.1 = zext i16 %212 to i32
  %incdec.ptr231.1.1 = getelementptr inbounds i16, ptr %incdec.ptr231.lcssa, i64 2
  %213 = load i16, ptr %incdec.ptr231.1483, align 2
  %conv232.1.1 = zext i16 %213 to i32
  %add233.1.1 = add nuw nsw i32 %conv230.1.1, 1
  %add234.1.1 = add nuw nsw i32 %add233.1.1, %conv232.1.1
  %shr235.1.1 = lshr i32 %add234.1.1, 1
  %conv236.1.1 = trunc i32 %shr235.1.1 to i16
  %arrayidx241.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %indvars.iv.next479, i64 %indvars.iv.next477
  store i16 %conv236.1.1, ptr %arrayidx241.1.1, align 2
  %indvars.iv.next477.1.1 = add nsw i64 %197, 2
  %incdec.ptr229.2.1 = getelementptr inbounds i16, ptr %incdec.ptr229.lcssa, i64 3
  %214 = load i16, ptr %incdec.ptr229.1.1, align 2
  %conv230.2.1 = zext i16 %214 to i32
  %incdec.ptr231.2.1 = getelementptr inbounds i16, ptr %incdec.ptr231.lcssa, i64 3
  %215 = load i16, ptr %incdec.ptr231.1.1, align 2
  %conv232.2.1 = zext i16 %215 to i32
  %add233.2.1 = add nuw nsw i32 %conv230.2.1, 1
  %add234.2.1 = add nuw nsw i32 %add233.2.1, %conv232.2.1
  %shr235.2.1 = lshr i32 %add234.2.1, 1
  %conv236.2.1 = trunc i32 %shr235.2.1 to i16
  %arrayidx241.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %indvars.iv.next479, i64 %indvars.iv.next477.1.1
  store i16 %conv236.2.1, ptr %arrayidx241.2.1, align 2
  %indvars.iv.next477.2.1 = add nsw i64 %197, 3
  %incdec.ptr229.3.1 = getelementptr inbounds i16, ptr %incdec.ptr229.lcssa, i64 4
  %216 = load i16, ptr %incdec.ptr229.2.1, align 2
  %conv230.3.1 = zext i16 %216 to i32
  %incdec.ptr231.3.1 = getelementptr inbounds i16, ptr %incdec.ptr231.lcssa, i64 4
  %217 = load i16, ptr %incdec.ptr231.2.1, align 2
  %conv232.3.1 = zext i16 %217 to i32
  %add233.3.1 = add nuw nsw i32 %conv230.3.1, 1
  %add234.3.1 = add nuw nsw i32 %add233.3.1, %conv232.3.1
  %shr235.3.1 = lshr i32 %add234.3.1, 1
  %conv236.3.1 = trunc i32 %shr235.3.1 to i16
  %arrayidx241.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %indvars.iv.next479, i64 %indvars.iv.next477.2.1
  store i16 %conv236.3.1, ptr %arrayidx241.3.1, align 2
  br label %for.inc245.1

for.inc245.1:                                     ; preds = %for.body228.1.1, %for.cond225.preheader.1
  %incdec.ptr229.lcssa.1 = phi ptr [ %incdec.ptr229.1481, %for.cond225.preheader.1 ], [ %incdec.ptr229.3.1, %for.body228.1.1 ]
  %incdec.ptr231.lcssa.1 = phi ptr [ %incdec.ptr231.1483, %for.cond225.preheader.1 ], [ %incdec.ptr231.3.1, %for.body228.1.1 ]
  %indvars.iv.next479.1 = add nsw i64 %200, 2
  %incdec.ptr229.2492 = getelementptr inbounds i16, ptr %incdec.ptr229.lcssa.1, i64 1
  %218 = load i16, ptr %incdec.ptr229.lcssa.1, align 2
  %conv230.2493 = zext i16 %218 to i32
  %incdec.ptr231.2494 = getelementptr inbounds i16, ptr %incdec.ptr231.lcssa.1, i64 1
  %219 = load i16, ptr %incdec.ptr231.lcssa.1, align 2
  %conv232.2495 = zext i16 %219 to i32
  %add233.2496 = add nuw nsw i32 %conv230.2493, 1
  %add234.2497 = add nuw nsw i32 %add233.2496, %conv232.2495
  %shr235.2498 = lshr i32 %add234.2497, 1
  %conv236.2499 = trunc i32 %shr235.2498 to i16
  %arrayidx241.2500 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %indvars.iv.next479.1, i64 %197
  store i16 %conv236.2499, ptr %arrayidx241.2500, align 2
  br i1 %cmp226, label %for.body228.1.2, label %for.inc245.2

for.body228.1.2:                                  ; preds = %for.inc245.1
  %incdec.ptr229.1.2 = getelementptr inbounds i16, ptr %incdec.ptr229.lcssa.1, i64 2
  %220 = load i16, ptr %incdec.ptr229.2492, align 2
  %conv230.1.2 = zext i16 %220 to i32
  %incdec.ptr231.1.2 = getelementptr inbounds i16, ptr %incdec.ptr231.lcssa.1, i64 2
  %221 = load i16, ptr %incdec.ptr231.2494, align 2
  %conv232.1.2 = zext i16 %221 to i32
  %add233.1.2 = add nuw nsw i32 %conv230.1.2, 1
  %add234.1.2 = add nuw nsw i32 %add233.1.2, %conv232.1.2
  %shr235.1.2 = lshr i32 %add234.1.2, 1
  %conv236.1.2 = trunc i32 %shr235.1.2 to i16
  %arrayidx241.1.2 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %indvars.iv.next479.1, i64 %indvars.iv.next477
  store i16 %conv236.1.2, ptr %arrayidx241.1.2, align 2
  %indvars.iv.next477.1.2 = add nsw i64 %197, 2
  %incdec.ptr229.2.2 = getelementptr inbounds i16, ptr %incdec.ptr229.lcssa.1, i64 3
  %222 = load i16, ptr %incdec.ptr229.1.2, align 2
  %conv230.2.2 = zext i16 %222 to i32
  %incdec.ptr231.2.2 = getelementptr inbounds i16, ptr %incdec.ptr231.lcssa.1, i64 3
  %223 = load i16, ptr %incdec.ptr231.1.2, align 2
  %conv232.2.2 = zext i16 %223 to i32
  %add233.2.2 = add nuw nsw i32 %conv230.2.2, 1
  %add234.2.2 = add nuw nsw i32 %add233.2.2, %conv232.2.2
  %shr235.2.2 = lshr i32 %add234.2.2, 1
  %conv236.2.2 = trunc i32 %shr235.2.2 to i16
  %arrayidx241.2.2 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %indvars.iv.next479.1, i64 %indvars.iv.next477.1.2
  store i16 %conv236.2.2, ptr %arrayidx241.2.2, align 2
  %indvars.iv.next477.2.2 = add nsw i64 %197, 3
  %incdec.ptr229.3.2 = getelementptr inbounds i16, ptr %incdec.ptr229.lcssa.1, i64 4
  %224 = load i16, ptr %incdec.ptr229.2.2, align 2
  %conv230.3.2 = zext i16 %224 to i32
  %incdec.ptr231.3.2 = getelementptr inbounds i16, ptr %incdec.ptr231.lcssa.1, i64 4
  %225 = load i16, ptr %incdec.ptr231.2.2, align 2
  %conv232.3.2 = zext i16 %225 to i32
  %add233.3.2 = add nuw nsw i32 %conv230.3.2, 1
  %add234.3.2 = add nuw nsw i32 %add233.3.2, %conv232.3.2
  %shr235.3.2 = lshr i32 %add234.3.2, 1
  %conv236.3.2 = trunc i32 %shr235.3.2 to i16
  %arrayidx241.3.2 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %indvars.iv.next479.1, i64 %indvars.iv.next477.2.2
  store i16 %conv236.3.2, ptr %arrayidx241.3.2, align 2
  br label %for.inc245.2

for.inc245.2:                                     ; preds = %for.body228.1.2, %for.inc245.1
  %incdec.ptr229.lcssa.2 = phi ptr [ %incdec.ptr229.2492, %for.inc245.1 ], [ %incdec.ptr229.3.2, %for.body228.1.2 ]
  %incdec.ptr231.lcssa.2 = phi ptr [ %incdec.ptr231.2494, %for.inc245.1 ], [ %incdec.ptr231.3.2, %for.body228.1.2 ]
  %indvars.iv.next479.2 = add nsw i64 %200, 3
  %226 = load i16, ptr %incdec.ptr229.lcssa.2, align 2
  %conv230.3503 = zext i16 %226 to i32
  %227 = load i16, ptr %incdec.ptr231.lcssa.2, align 2
  %conv232.3505 = zext i16 %227 to i32
  %add233.3506 = add nuw nsw i32 %conv230.3503, 1
  %add234.3507 = add nuw nsw i32 %add233.3506, %conv232.3505
  %shr235.3508 = lshr i32 %add234.3507, 1
  %conv236.3509 = trunc i32 %shr235.3508 to i16
  %arrayidx241.3510 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %indvars.iv.next479.2, i64 %197
  store i16 %conv236.3509, ptr %arrayidx241.3510, align 2
  br i1 %cmp226, label %for.body228.1.3, label %if.end280

for.body228.1.3:                                  ; preds = %for.inc245.2
  %incdec.ptr231.3504 = getelementptr inbounds i16, ptr %incdec.ptr231.lcssa.2, i64 1
  %incdec.ptr229.3502 = getelementptr inbounds i16, ptr %incdec.ptr229.lcssa.2, i64 1
  %incdec.ptr229.1.3 = getelementptr inbounds i16, ptr %incdec.ptr229.lcssa.2, i64 2
  %228 = load i16, ptr %incdec.ptr229.3502, align 2
  %conv230.1.3 = zext i16 %228 to i32
  %incdec.ptr231.1.3 = getelementptr inbounds i16, ptr %incdec.ptr231.lcssa.2, i64 2
  %229 = load i16, ptr %incdec.ptr231.3504, align 2
  %conv232.1.3 = zext i16 %229 to i32
  %add233.1.3 = add nuw nsw i32 %conv230.1.3, 1
  %add234.1.3 = add nuw nsw i32 %add233.1.3, %conv232.1.3
  %shr235.1.3 = lshr i32 %add234.1.3, 1
  %conv236.1.3 = trunc i32 %shr235.1.3 to i16
  %arrayidx241.1.3 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %indvars.iv.next479.2, i64 %indvars.iv.next477
  store i16 %conv236.1.3, ptr %arrayidx241.1.3, align 2
  %indvars.iv.next477.1.3 = add nsw i64 %197, 2
  %incdec.ptr229.2.3 = getelementptr inbounds i16, ptr %incdec.ptr229.lcssa.2, i64 3
  %230 = load i16, ptr %incdec.ptr229.1.3, align 2
  %conv230.2.3 = zext i16 %230 to i32
  %incdec.ptr231.2.3 = getelementptr inbounds i16, ptr %incdec.ptr231.lcssa.2, i64 3
  %231 = load i16, ptr %incdec.ptr231.1.3, align 2
  %conv232.2.3 = zext i16 %231 to i32
  %add233.2.3 = add nuw nsw i32 %conv230.2.3, 1
  %add234.2.3 = add nuw nsw i32 %add233.2.3, %conv232.2.3
  %shr235.2.3 = lshr i32 %add234.2.3, 1
  %conv236.2.3 = trunc i32 %shr235.2.3 to i16
  %arrayidx241.2.3 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %indvars.iv.next479.2, i64 %indvars.iv.next477.1.3
  store i16 %conv236.2.3, ptr %arrayidx241.2.3, align 2
  %indvars.iv.next477.2.3 = add nsw i64 %197, 3
  %232 = load i16, ptr %incdec.ptr229.2.3, align 2
  %conv230.3.3 = zext i16 %232 to i32
  %233 = load i16, ptr %incdec.ptr231.2.3, align 2
  %conv232.3.3 = zext i16 %233 to i32
  %add233.3.3 = add nuw nsw i32 %conv230.3.3, 1
  %add234.3.3 = add nuw nsw i32 %add233.3.3, %conv232.3.3
  %shr235.3.3 = lshr i32 %add234.3.3, 1
  %conv236.3.3 = trunc i32 %shr235.3.3 to i16
  %arrayidx241.3.3 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %indvars.iv.next479.2, i64 %indvars.iv.next477.2.3
  store i16 %conv236.3.3, ptr %arrayidx241.3.3, align 2
  br label %if.end280

if.else248:                                       ; preds = %if.else217
  %cmp249 = icmp eq i32 %p_dir, 0
  %234 = sext i32 %block_y to i64
  %235 = sext i32 %add1 to i64
  %236 = load ptr, ptr @img, align 8
  %arrayidx260 = getelementptr inbounds %struct.ImageParameters, ptr %236, i64 0, i32 51, i64 %234, i64 %197
  %indvars.iv.next475 = add nsw i64 %234, 1
  %cmp253 = icmp slt i64 %indvars.iv.next475, %235
  br i1 %cmp249, label %for.cond252.preheader, label %for.cond265.preheader

for.cond265.preheader:                            ; preds = %if.else248
  %237 = load i64, ptr @LumaPrediction4x4.l1_pred, align 16
  store i64 %237, ptr %arrayidx260, align 2
  br i1 %cmp253, label %for.body268.1, label %if.end280

for.cond252.preheader:                            ; preds = %if.else248
  %238 = load i64, ptr @LumaPrediction4x4.l0_pred, align 16
  store i64 %238, ptr %arrayidx260, align 2
  br i1 %cmp253, label %for.body255.1, label %if.end280

for.body255.1:                                    ; preds = %for.cond252.preheader
  %239 = load ptr, ptr @img, align 8
  %arrayidx260.1 = getelementptr inbounds %struct.ImageParameters, ptr %239, i64 0, i32 51, i64 %indvars.iv.next475, i64 %197
  %240 = load i64, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 4), align 8
  store i64 %240, ptr %arrayidx260.1, align 2
  %indvars.iv.next475.1 = add nsw i64 %234, 2
  %241 = load ptr, ptr @img, align 8
  %arrayidx260.2 = getelementptr inbounds %struct.ImageParameters, ptr %241, i64 0, i32 51, i64 %indvars.iv.next475.1, i64 %197
  %242 = load i64, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 8), align 16
  store i64 %242, ptr %arrayidx260.2, align 2
  %indvars.iv.next475.2 = add nsw i64 %234, 3
  %243 = load ptr, ptr @img, align 8
  %arrayidx260.3 = getelementptr inbounds %struct.ImageParameters, ptr %243, i64 0, i32 51, i64 %indvars.iv.next475.2, i64 %197
  %244 = load i64, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l0_pred, i64 0, i64 12), align 8
  store i64 %244, ptr %arrayidx260.3, align 2
  br label %if.end280

for.body268.1:                                    ; preds = %for.cond265.preheader
  %245 = load ptr, ptr @img, align 8
  %arrayidx273.1 = getelementptr inbounds %struct.ImageParameters, ptr %245, i64 0, i32 51, i64 %indvars.iv.next475, i64 %197
  %246 = load i64, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 4), align 8
  store i64 %246, ptr %arrayidx273.1, align 2
  %indvars.iv.next.1 = add nsw i64 %234, 2
  %247 = load ptr, ptr @img, align 8
  %arrayidx273.2 = getelementptr inbounds %struct.ImageParameters, ptr %247, i64 0, i32 51, i64 %indvars.iv.next.1, i64 %197
  %248 = load i64, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 8), align 16
  store i64 %248, ptr %arrayidx273.2, align 2
  %indvars.iv.next.2 = add nsw i64 %234, 3
  %249 = load ptr, ptr @img, align 8
  %arrayidx273.3 = getelementptr inbounds %struct.ImageParameters, ptr %249, i64 0, i32 51, i64 %indvars.iv.next.2, i64 %197
  %250 = load i64, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4.l1_pred, i64 0, i64 12), align 8
  store i64 %250, ptr %arrayidx273.3, align 2
  br label %if.end280

if.end280:                                        ; preds = %for.cond265.preheader, %for.body268.1, %for.cond252.preheader, %for.body255.1, %for.inc245, %for.body228.1.3, %for.inc245.2, %for.inc212, %for.body194.1.3, %for.inc212.2, %for.inc173, %for.body155.1.3, %for.inc173.2, %for.inc133, %for.body118.1.3, %for.inc133.2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @LumaPrediction4x4Bi(i32 noundef %block_x, i32 noundef %block_y, i32 noundef %l0_mode, i32 noundef %l1_mode, i16 noundef signext %l0_ref_idx, i16 noundef signext %l1_ref_idx, i32 noundef %list) local_unnamed_addr #0 {
entry:
  %add = add nsw i32 %block_x, 4
  %add1 = add nsw i32 %block_y, 4
  %0 = load ptr, ptr @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 43
  %1 = load i32, ptr %opix_x, align 8
  %add2 = add nsw i32 %1, %block_x
  %shl = shl i32 %add2, 2
  %add3 = add nsw i32 %shl, 80
  %opix_y = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 44
  %2 = load i32, ptr %opix_y, align 4
  %add4 = add nsw i32 %2, %block_y
  %shl5 = shl i32 %add4, 2
  %add6 = add nsw i32 %shl5, 80
  %shr = ashr i32 %block_x, 2
  %shr7 = ashr i32 %block_y, 2
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %3 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %4 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load ptr, ptr @active_pps, align 8
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %5, i64 0, i32 19
  %6 = load i32, ptr %weighted_pred_flag, align 8
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %lor.rhs, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %7 = load i32, ptr %type, align 4
  switch i32 %7, label %lor.rhs [
    i32 0, label %lor.end
    i32 3, label %lor.end
  ]

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %5, i64 0, i32 20
  %8 = load i32, ptr %weighted_bipred_idc, align 4
  %tobool10.not = icmp eq i32 %8, 0
  br i1 %tobool10.not, label %lor.end, label %land.rhs

land.rhs:                                         ; preds = %lor.rhs
  %type11 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %9 = load i32, ptr %type11, align 4
  %cmp12 = icmp eq i32 %9, 1
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true, %land.lhs.true, %lor.rhs, %land.rhs
  %10 = phi i1 [ true, %land.lhs.true ], [ false, %lor.rhs ], [ %cmp12, %land.rhs ], [ true, %land.lhs.true ]
  %tobool13.not = icmp eq i32 %list, 0
  %idxprom18 = sext i32 %shr7 to i64
  %idxprom20 = sext i32 %shr to i64
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 82
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 81
  %bipred_mv2.sink = select i1 %tobool13.not, ptr %bipred_mv2, ptr %bipred_mv1
  %11 = load ptr, ptr %bipred_mv2.sink, align 8
  %arrayidx19 = getelementptr inbounds ptr, ptr %11, i64 %idxprom18
  %12 = load ptr, ptr %arrayidx19, align 8
  %arrayidx21 = getelementptr inbounds ptr, ptr %12, i64 %idxprom20
  %cond = load ptr, ptr %arrayidx21, align 8
  %13 = load ptr, ptr %cond, align 8
  %idxprom23 = sext i16 %l0_ref_idx to i64
  %arrayidx24 = getelementptr inbounds ptr, ptr %13, i64 %idxprom23
  %14 = load ptr, ptr %arrayidx24, align 8
  %idxprom25 = sext i32 %l0_mode to i64
  %arrayidx26 = getelementptr inbounds ptr, ptr %14, i64 %idxprom25
  %15 = load ptr, ptr %arrayidx26, align 8
  %list_offset = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 21
  %16 = load i32, ptr %list_offset, align 8
  %idxprom28 = sext i32 %16 to i64
  %arrayidx29 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %idxprom28
  %17 = load ptr, ptr %arrayidx29, align 8
  %arrayidx.i = getelementptr inbounds ptr, ptr %17, i64 %idxprom23
  %18 = load ptr, ptr %arrayidx.i, align 8
  %size_x_pad.i = getelementptr inbounds %struct.storable_picture, ptr %18, i64 0, i32 22
  %19 = load i32, ptr %size_x_pad.i, align 8
  store i32 %19, ptr @width_pad, align 4
  %size_y_pad.i = getelementptr inbounds %struct.storable_picture, ptr %18, i64 0, i32 23
  %20 = load i32, ptr %size_y_pad.i, align 4
  store i32 %20, ptr @height_pad, align 4
  %imgY_sub.i = getelementptr inbounds %struct.storable_picture, ptr %18, i64 0, i32 30
  %21 = load ptr, ptr %imgY_sub.i, align 8
  %arrayidx5.i = getelementptr inbounds i16, ptr %15, i64 1
  %22 = load i16, ptr %arrayidx5.i, align 2
  %conv.i = sext i16 %22 to i32
  %add.i = add nsw i32 %add6, %conv.i
  %23 = load i16, ptr %15, align 2
  %conv7.i = sext i16 %23 to i32
  %add8.i = add nsw i32 %add3, %conv7.i
  %call.i = tail call ptr @UMVLine4X(ptr noundef %21, i32 noundef %add.i, i32 noundef %add8.i) #17
  %24 = load i64, ptr %call.i, align 2
  store i64 %24, ptr @LumaPrediction4x4Bi.l0_pred, align 16
  %25 = load i32, ptr @img_padded_size_x, align 4
  %idx.ext.i = sext i32 %25 to i64
  %add.ptr.i = getelementptr inbounds i16, ptr %call.i, i64 %idx.ext.i
  %26 = load i64, ptr %add.ptr.i, align 2
  store i64 %26, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l0_pred, i64 0, i64 4), align 8
  %add.ptr.1.i = getelementptr inbounds i16, ptr %add.ptr.i, i64 %idx.ext.i
  %27 = load i64, ptr %add.ptr.1.i, align 2
  store i64 %27, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l0_pred, i64 0, i64 8), align 16
  %add.ptr.2.i = getelementptr inbounds i16, ptr %add.ptr.1.i, i64 %idx.ext.i
  %28 = load i64, ptr %add.ptr.2.i, align 2
  store i64 %28, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l0_pred, i64 0, i64 12), align 8
  %arrayidx30 = getelementptr inbounds ptr, ptr %cond, i64 1
  %29 = load ptr, ptr %arrayidx30, align 8
  %idxprom31 = sext i16 %l1_ref_idx to i64
  %arrayidx32 = getelementptr inbounds ptr, ptr %29, i64 %idxprom31
  %30 = load ptr, ptr %arrayidx32, align 8
  %idxprom33 = sext i32 %l1_mode to i64
  %arrayidx34 = getelementptr inbounds ptr, ptr %30, i64 %idxprom33
  %31 = load ptr, ptr %arrayidx34, align 8
  %32 = load i32, ptr %list_offset, align 8
  %add36 = add nsw i32 %32, 1
  %idxprom37 = sext i32 %add36 to i64
  %arrayidx38 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %idxprom37
  %33 = load ptr, ptr %arrayidx38, align 8
  %arrayidx.i148 = getelementptr inbounds ptr, ptr %33, i64 %idxprom31
  %34 = load ptr, ptr %arrayidx.i148, align 8
  %size_x_pad.i149 = getelementptr inbounds %struct.storable_picture, ptr %34, i64 0, i32 22
  %35 = load i32, ptr %size_x_pad.i149, align 8
  store i32 %35, ptr @width_pad, align 4
  %size_y_pad.i150 = getelementptr inbounds %struct.storable_picture, ptr %34, i64 0, i32 23
  %36 = load i32, ptr %size_y_pad.i150, align 4
  store i32 %36, ptr @height_pad, align 4
  %imgY_sub.i151 = getelementptr inbounds %struct.storable_picture, ptr %34, i64 0, i32 30
  %37 = load ptr, ptr %imgY_sub.i151, align 8
  %arrayidx5.i152 = getelementptr inbounds i16, ptr %31, i64 1
  %38 = load i16, ptr %arrayidx5.i152, align 2
  %conv.i153 = sext i16 %38 to i32
  %add.i154 = add nsw i32 %add6, %conv.i153
  %39 = load i16, ptr %31, align 2
  %conv7.i155 = sext i16 %39 to i32
  %add8.i156 = add nsw i32 %add3, %conv7.i155
  %call.i157 = tail call ptr @UMVLine4X(ptr noundef %37, i32 noundef %add.i154, i32 noundef %add8.i156) #17
  %40 = load i64, ptr %call.i157, align 2
  store i64 %40, ptr @LumaPrediction4x4Bi.l1_pred, align 16
  %41 = load i32, ptr @img_padded_size_x, align 4
  %idx.ext.i158 = sext i32 %41 to i64
  %add.ptr.i159 = getelementptr inbounds i16, ptr %call.i157, i64 %idx.ext.i158
  %42 = load i64, ptr %add.ptr.i159, align 2
  store i64 %42, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l1_pred, i64 0, i64 4), align 8
  %add.ptr.1.i160 = getelementptr inbounds i16, ptr %add.ptr.i159, i64 %idx.ext.i158
  %43 = load i64, ptr %add.ptr.1.i160, align 2
  store i64 %43, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l1_pred, i64 0, i64 8), align 16
  %add.ptr.2.i161 = getelementptr inbounds i16, ptr %add.ptr.1.i160, i64 %idx.ext.i158
  %44 = load i64, ptr %add.ptr.2.i161, align 2
  store i64 %44, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l1_pred, i64 0, i64 12), align 8
  br i1 %10, label %if.then, label %for.cond84.preheader

for.cond84.preheader:                             ; preds = %lor.end
  %45 = load ptr, ptr @img, align 8
  %46 = sext i32 %block_x to i64
  %47 = sext i32 %add to i64
  %48 = sext i32 %block_y to i64
  %49 = sext i32 %add1 to i64
  %50 = load i16, ptr @LumaPrediction4x4Bi.l0_pred, align 16
  %conv93 = zext i16 %50 to i32
  %51 = trunc i64 %40 to i32
  %conv95 = and i32 %51, 65535
  %add96 = add nuw nsw i32 %conv93, 1
  %add97 = add nuw nsw i32 %add96, %conv95
  %shr98 = lshr i32 %add97, 1
  %conv99 = trunc i32 %shr98 to i16
  %arrayidx104 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %48, i64 %46
  store i16 %conv99, ptr %arrayidx104, align 2
  %indvars.iv.next = add nsw i64 %46, 1
  %cmp89 = icmp slt i64 %indvars.iv.next, %47
  br i1 %cmp89, label %for.body91.1, label %for.inc108

if.then:                                          ; preds = %lor.end
  %52 = trunc i64 %40 to i32
  %53 = load ptr, ptr @wbp_weight, align 8
  %54 = load ptr, ptr %53, align 8
  %arrayidx42 = getelementptr inbounds ptr, ptr %54, i64 %idxprom23
  %55 = load ptr, ptr %arrayidx42, align 8
  %arrayidx44 = getelementptr inbounds ptr, ptr %55, i64 %idxprom31
  %56 = load ptr, ptr %arrayidx44, align 8
  %57 = load i32, ptr %56, align 4
  %arrayidx46 = getelementptr inbounds ptr, ptr %53, i64 1
  %58 = load ptr, ptr %arrayidx46, align 8
  %arrayidx48 = getelementptr inbounds ptr, ptr %58, i64 %idxprom23
  %59 = load ptr, ptr %arrayidx48, align 8
  %arrayidx50 = getelementptr inbounds ptr, ptr %59, i64 %idxprom31
  %60 = load ptr, ptr %arrayidx50, align 8
  %61 = load i32, ptr %60, align 4
  %62 = load ptr, ptr @wp_offset, align 8
  %63 = load ptr, ptr %62, align 8
  %arrayidx54 = getelementptr inbounds ptr, ptr %63, i64 %idxprom23
  %64 = load ptr, ptr %arrayidx54, align 8
  %65 = load i32, ptr %64, align 4
  %arrayidx56 = getelementptr inbounds ptr, ptr %62, i64 1
  %66 = load ptr, ptr %arrayidx56, align 8
  %arrayidx58 = getelementptr inbounds ptr, ptr %66, i64 %idxprom31
  %67 = load ptr, ptr %arrayidx58, align 8
  %68 = load i32, ptr %67, align 4
  %add60 = add i32 %65, 1
  %add61 = add i32 %add60, %68
  %shr62 = ashr i32 %add61, 1
  %69 = load ptr, ptr @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 156
  %70 = load i32, ptr %max_imgpel_value, align 8
  %71 = load i32, ptr @wp_luma_round, align 4
  %mul71 = shl nsw i32 %71, 1
  %72 = load i32, ptr @luma_log_weight_denom, align 4
  %add73 = add nsw i32 %72, 1
  %73 = sext i32 %block_x to i64
  %74 = sext i32 %add to i64
  %75 = sext i32 %block_y to i64
  %76 = sext i32 %add1 to i64
  %77 = load i16, ptr @LumaPrediction4x4Bi.l0_pred, align 16
  %conv = zext i16 %77 to i32
  %mul = mul nsw i32 %57, %conv
  %conv68 = and i32 %52, 65535
  %mul69 = mul nsw i32 %61, %conv68
  %add70 = add nsw i32 %mul69, %mul
  %add72 = add nsw i32 %add70, %mul71
  %shr74 = ashr i32 %add72, %add73
  %add75 = add nsw i32 %shr74, %shr62
  %cond.i.i = tail call i32 @llvm.smax.i32(i32 %add75, i32 0)
  %cond.i4.i = tail call i32 @llvm.smin.i32(i32 %cond.i.i, i32 %70)
  %conv76 = trunc i32 %cond.i4.i to i16
  %arrayidx80 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %75, i64 %73
  store i16 %conv76, ptr %arrayidx80, align 2
  %indvars.iv.next209 = add nsw i64 %73, 1
  %cmp65 = icmp slt i64 %indvars.iv.next209, %74
  br i1 %cmp65, label %for.body66.1, label %for.inc81

for.body66.1:                                     ; preds = %if.then
  %78 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l0_pred, i64 0, i64 1), align 2
  %conv.1 = zext i16 %78 to i32
  %mul.1 = mul nsw i32 %57, %conv.1
  %79 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l1_pred, i64 0, i64 1), align 2
  %conv68.1 = zext i16 %79 to i32
  %mul69.1 = mul nsw i32 %61, %conv68.1
  %add70.1 = add nsw i32 %mul69.1, %mul.1
  %add72.1 = add nsw i32 %add70.1, %mul71
  %shr74.1 = ashr i32 %add72.1, %add73
  %add75.1 = add nsw i32 %shr74.1, %shr62
  %cond.i.i.1 = tail call i32 @llvm.smax.i32(i32 %add75.1, i32 0)
  %cond.i4.i.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1, i32 %70)
  %conv76.1 = trunc i32 %cond.i4.i.1 to i16
  %arrayidx80.1 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %75, i64 %indvars.iv.next209
  store i16 %conv76.1, ptr %arrayidx80.1, align 2
  %indvars.iv.next209.1 = add nsw i64 %73, 2
  %80 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l0_pred, i64 0, i64 2), align 4
  %conv.2 = zext i16 %80 to i32
  %mul.2 = mul nsw i32 %57, %conv.2
  %81 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l1_pred, i64 0, i64 2), align 4
  %conv68.2 = zext i16 %81 to i32
  %mul69.2 = mul nsw i32 %61, %conv68.2
  %add70.2 = add nsw i32 %mul69.2, %mul.2
  %add72.2 = add nsw i32 %add70.2, %mul71
  %shr74.2 = ashr i32 %add72.2, %add73
  %add75.2 = add nsw i32 %shr74.2, %shr62
  %cond.i.i.2 = tail call i32 @llvm.smax.i32(i32 %add75.2, i32 0)
  %cond.i4.i.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2, i32 %70)
  %conv76.2 = trunc i32 %cond.i4.i.2 to i16
  %arrayidx80.2 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %75, i64 %indvars.iv.next209.1
  store i16 %conv76.2, ptr %arrayidx80.2, align 2
  %indvars.iv.next209.2 = add nsw i64 %73, 3
  %82 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l0_pred, i64 0, i64 3), align 2
  %conv.3 = zext i16 %82 to i32
  %mul.3 = mul nsw i32 %57, %conv.3
  %83 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l1_pred, i64 0, i64 3), align 2
  %conv68.3 = zext i16 %83 to i32
  %mul69.3 = mul nsw i32 %61, %conv68.3
  %add70.3 = add nsw i32 %mul69.3, %mul.3
  %add72.3 = add nsw i32 %add70.3, %mul71
  %shr74.3 = ashr i32 %add72.3, %add73
  %add75.3 = add nsw i32 %shr74.3, %shr62
  %cond.i.i.3 = tail call i32 @llvm.smax.i32(i32 %add75.3, i32 0)
  %cond.i4.i.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3, i32 %70)
  %conv76.3 = trunc i32 %cond.i4.i.3 to i16
  %arrayidx80.3 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %75, i64 %indvars.iv.next209.2
  store i16 %conv76.3, ptr %arrayidx80.3, align 2
  br label %for.inc81

for.inc81:                                        ; preds = %for.body66.1, %if.then
  %incdec.ptr.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l0_pred, i64 0, i64 1), %if.then ], [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l0_pred, i64 0, i64 4), %for.body66.1 ]
  %incdec.ptr67.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l1_pred, i64 0, i64 1), %if.then ], [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l1_pred, i64 0, i64 4), %for.body66.1 ]
  %indvars.iv.next211 = add nsw i64 %75, 1
  %cmp63 = icmp slt i64 %indvars.iv.next211, %76
  br i1 %cmp63, label %for.cond64.preheader.1, label %if.end

for.cond64.preheader.1:                           ; preds = %for.inc81
  %incdec.ptr.1213 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa, i64 1
  %84 = load i16, ptr %incdec.ptr.lcssa, align 2
  %conv.1214 = zext i16 %84 to i32
  %mul.1215 = mul nsw i32 %57, %conv.1214
  %incdec.ptr67.1216 = getelementptr inbounds i16, ptr %incdec.ptr67.lcssa, i64 1
  %85 = load i16, ptr %incdec.ptr67.lcssa, align 2
  %conv68.1217 = zext i16 %85 to i32
  %mul69.1218 = mul nsw i32 %61, %conv68.1217
  %add70.1219 = add nsw i32 %mul69.1218, %mul.1215
  %add72.1220 = add nsw i32 %add70.1219, %mul71
  %shr74.1221 = ashr i32 %add72.1220, %add73
  %add75.1222 = add nsw i32 %shr74.1221, %shr62
  %cond.i.i.1223 = tail call i32 @llvm.smax.i32(i32 %add75.1222, i32 0)
  %cond.i4.i.1224 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1223, i32 %70)
  %conv76.1225 = trunc i32 %cond.i4.i.1224 to i16
  %arrayidx80.1226 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %indvars.iv.next211, i64 %73
  store i16 %conv76.1225, ptr %arrayidx80.1226, align 2
  br i1 %cmp65, label %for.body66.1.1, label %for.inc81.1

for.body66.1.1:                                   ; preds = %for.cond64.preheader.1
  %incdec.ptr.1.1 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa, i64 2
  %86 = load i16, ptr %incdec.ptr.1213, align 2
  %conv.1.1 = zext i16 %86 to i32
  %mul.1.1 = mul nsw i32 %57, %conv.1.1
  %incdec.ptr67.1.1 = getelementptr inbounds i16, ptr %incdec.ptr67.lcssa, i64 2
  %87 = load i16, ptr %incdec.ptr67.1216, align 2
  %conv68.1.1 = zext i16 %87 to i32
  %mul69.1.1 = mul nsw i32 %61, %conv68.1.1
  %add70.1.1 = add nsw i32 %mul69.1.1, %mul.1.1
  %add72.1.1 = add nsw i32 %add70.1.1, %mul71
  %shr74.1.1 = ashr i32 %add72.1.1, %add73
  %add75.1.1 = add nsw i32 %shr74.1.1, %shr62
  %cond.i.i.1.1 = tail call i32 @llvm.smax.i32(i32 %add75.1.1, i32 0)
  %cond.i4.i.1.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1.1, i32 %70)
  %conv76.1.1 = trunc i32 %cond.i4.i.1.1 to i16
  %arrayidx80.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %indvars.iv.next211, i64 %indvars.iv.next209
  store i16 %conv76.1.1, ptr %arrayidx80.1.1, align 2
  %indvars.iv.next209.1.1 = add nsw i64 %73, 2
  %incdec.ptr.2.1 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa, i64 3
  %88 = load i16, ptr %incdec.ptr.1.1, align 2
  %conv.2.1 = zext i16 %88 to i32
  %mul.2.1 = mul nsw i32 %57, %conv.2.1
  %incdec.ptr67.2.1 = getelementptr inbounds i16, ptr %incdec.ptr67.lcssa, i64 3
  %89 = load i16, ptr %incdec.ptr67.1.1, align 2
  %conv68.2.1 = zext i16 %89 to i32
  %mul69.2.1 = mul nsw i32 %61, %conv68.2.1
  %add70.2.1 = add nsw i32 %mul69.2.1, %mul.2.1
  %add72.2.1 = add nsw i32 %add70.2.1, %mul71
  %shr74.2.1 = ashr i32 %add72.2.1, %add73
  %add75.2.1 = add nsw i32 %shr74.2.1, %shr62
  %cond.i.i.2.1 = tail call i32 @llvm.smax.i32(i32 %add75.2.1, i32 0)
  %cond.i4.i.2.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2.1, i32 %70)
  %conv76.2.1 = trunc i32 %cond.i4.i.2.1 to i16
  %arrayidx80.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %indvars.iv.next211, i64 %indvars.iv.next209.1.1
  store i16 %conv76.2.1, ptr %arrayidx80.2.1, align 2
  %indvars.iv.next209.2.1 = add nsw i64 %73, 3
  %incdec.ptr.3.1 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa, i64 4
  %90 = load i16, ptr %incdec.ptr.2.1, align 2
  %conv.3.1 = zext i16 %90 to i32
  %mul.3.1 = mul nsw i32 %57, %conv.3.1
  %incdec.ptr67.3.1 = getelementptr inbounds i16, ptr %incdec.ptr67.lcssa, i64 4
  %91 = load i16, ptr %incdec.ptr67.2.1, align 2
  %conv68.3.1 = zext i16 %91 to i32
  %mul69.3.1 = mul nsw i32 %61, %conv68.3.1
  %add70.3.1 = add nsw i32 %mul69.3.1, %mul.3.1
  %add72.3.1 = add nsw i32 %add70.3.1, %mul71
  %shr74.3.1 = ashr i32 %add72.3.1, %add73
  %add75.3.1 = add nsw i32 %shr74.3.1, %shr62
  %cond.i.i.3.1 = tail call i32 @llvm.smax.i32(i32 %add75.3.1, i32 0)
  %cond.i4.i.3.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3.1, i32 %70)
  %conv76.3.1 = trunc i32 %cond.i4.i.3.1 to i16
  %arrayidx80.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %indvars.iv.next211, i64 %indvars.iv.next209.2.1
  store i16 %conv76.3.1, ptr %arrayidx80.3.1, align 2
  br label %for.inc81.1

for.inc81.1:                                      ; preds = %for.body66.1.1, %for.cond64.preheader.1
  %incdec.ptr.lcssa.1 = phi ptr [ %incdec.ptr.1213, %for.cond64.preheader.1 ], [ %incdec.ptr.3.1, %for.body66.1.1 ]
  %incdec.ptr67.lcssa.1 = phi ptr [ %incdec.ptr67.1216, %for.cond64.preheader.1 ], [ %incdec.ptr67.3.1, %for.body66.1.1 ]
  %indvars.iv.next211.1 = add nsw i64 %75, 2
  %incdec.ptr.2229 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.1, i64 1
  %92 = load i16, ptr %incdec.ptr.lcssa.1, align 2
  %conv.2230 = zext i16 %92 to i32
  %mul.2231 = mul nsw i32 %57, %conv.2230
  %incdec.ptr67.2232 = getelementptr inbounds i16, ptr %incdec.ptr67.lcssa.1, i64 1
  %93 = load i16, ptr %incdec.ptr67.lcssa.1, align 2
  %conv68.2233 = zext i16 %93 to i32
  %mul69.2234 = mul nsw i32 %61, %conv68.2233
  %add70.2235 = add nsw i32 %mul69.2234, %mul.2231
  %add72.2236 = add nsw i32 %add70.2235, %mul71
  %shr74.2237 = ashr i32 %add72.2236, %add73
  %add75.2238 = add nsw i32 %shr74.2237, %shr62
  %cond.i.i.2239 = tail call i32 @llvm.smax.i32(i32 %add75.2238, i32 0)
  %cond.i4.i.2240 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2239, i32 %70)
  %conv76.2241 = trunc i32 %cond.i4.i.2240 to i16
  %arrayidx80.2242 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %indvars.iv.next211.1, i64 %73
  store i16 %conv76.2241, ptr %arrayidx80.2242, align 2
  br i1 %cmp65, label %for.body66.1.2, label %for.inc81.2

for.body66.1.2:                                   ; preds = %for.inc81.1
  %incdec.ptr.1.2 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.1, i64 2
  %94 = load i16, ptr %incdec.ptr.2229, align 2
  %conv.1.2 = zext i16 %94 to i32
  %mul.1.2 = mul nsw i32 %57, %conv.1.2
  %incdec.ptr67.1.2 = getelementptr inbounds i16, ptr %incdec.ptr67.lcssa.1, i64 2
  %95 = load i16, ptr %incdec.ptr67.2232, align 2
  %conv68.1.2 = zext i16 %95 to i32
  %mul69.1.2 = mul nsw i32 %61, %conv68.1.2
  %add70.1.2 = add nsw i32 %mul69.1.2, %mul.1.2
  %add72.1.2 = add nsw i32 %add70.1.2, %mul71
  %shr74.1.2 = ashr i32 %add72.1.2, %add73
  %add75.1.2 = add nsw i32 %shr74.1.2, %shr62
  %cond.i.i.1.2 = tail call i32 @llvm.smax.i32(i32 %add75.1.2, i32 0)
  %cond.i4.i.1.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1.2, i32 %70)
  %conv76.1.2 = trunc i32 %cond.i4.i.1.2 to i16
  %arrayidx80.1.2 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %indvars.iv.next211.1, i64 %indvars.iv.next209
  store i16 %conv76.1.2, ptr %arrayidx80.1.2, align 2
  %indvars.iv.next209.1.2 = add nsw i64 %73, 2
  %incdec.ptr.2.2 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.1, i64 3
  %96 = load i16, ptr %incdec.ptr.1.2, align 2
  %conv.2.2 = zext i16 %96 to i32
  %mul.2.2 = mul nsw i32 %57, %conv.2.2
  %incdec.ptr67.2.2 = getelementptr inbounds i16, ptr %incdec.ptr67.lcssa.1, i64 3
  %97 = load i16, ptr %incdec.ptr67.1.2, align 2
  %conv68.2.2 = zext i16 %97 to i32
  %mul69.2.2 = mul nsw i32 %61, %conv68.2.2
  %add70.2.2 = add nsw i32 %mul69.2.2, %mul.2.2
  %add72.2.2 = add nsw i32 %add70.2.2, %mul71
  %shr74.2.2 = ashr i32 %add72.2.2, %add73
  %add75.2.2 = add nsw i32 %shr74.2.2, %shr62
  %cond.i.i.2.2 = tail call i32 @llvm.smax.i32(i32 %add75.2.2, i32 0)
  %cond.i4.i.2.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2.2, i32 %70)
  %conv76.2.2 = trunc i32 %cond.i4.i.2.2 to i16
  %arrayidx80.2.2 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %indvars.iv.next211.1, i64 %indvars.iv.next209.1.2
  store i16 %conv76.2.2, ptr %arrayidx80.2.2, align 2
  %indvars.iv.next209.2.2 = add nsw i64 %73, 3
  %incdec.ptr.3.2 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.1, i64 4
  %98 = load i16, ptr %incdec.ptr.2.2, align 2
  %conv.3.2 = zext i16 %98 to i32
  %mul.3.2 = mul nsw i32 %57, %conv.3.2
  %incdec.ptr67.3.2 = getelementptr inbounds i16, ptr %incdec.ptr67.lcssa.1, i64 4
  %99 = load i16, ptr %incdec.ptr67.2.2, align 2
  %conv68.3.2 = zext i16 %99 to i32
  %mul69.3.2 = mul nsw i32 %61, %conv68.3.2
  %add70.3.2 = add nsw i32 %mul69.3.2, %mul.3.2
  %add72.3.2 = add nsw i32 %add70.3.2, %mul71
  %shr74.3.2 = ashr i32 %add72.3.2, %add73
  %add75.3.2 = add nsw i32 %shr74.3.2, %shr62
  %cond.i.i.3.2 = tail call i32 @llvm.smax.i32(i32 %add75.3.2, i32 0)
  %cond.i4.i.3.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3.2, i32 %70)
  %conv76.3.2 = trunc i32 %cond.i4.i.3.2 to i16
  %arrayidx80.3.2 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %indvars.iv.next211.1, i64 %indvars.iv.next209.2.2
  store i16 %conv76.3.2, ptr %arrayidx80.3.2, align 2
  br label %for.inc81.2

for.inc81.2:                                      ; preds = %for.body66.1.2, %for.inc81.1
  %incdec.ptr.lcssa.2 = phi ptr [ %incdec.ptr.2229, %for.inc81.1 ], [ %incdec.ptr.3.2, %for.body66.1.2 ]
  %incdec.ptr67.lcssa.2 = phi ptr [ %incdec.ptr67.2232, %for.inc81.1 ], [ %incdec.ptr67.3.2, %for.body66.1.2 ]
  %indvars.iv.next211.2 = add nsw i64 %75, 3
  %100 = load i16, ptr %incdec.ptr.lcssa.2, align 2
  %conv.3245 = zext i16 %100 to i32
  %mul.3246 = mul nsw i32 %57, %conv.3245
  %101 = load i16, ptr %incdec.ptr67.lcssa.2, align 2
  %conv68.3248 = zext i16 %101 to i32
  %mul69.3249 = mul nsw i32 %61, %conv68.3248
  %add70.3250 = add nsw i32 %mul69.3249, %mul.3246
  %add72.3251 = add nsw i32 %add70.3250, %mul71
  %shr74.3252 = ashr i32 %add72.3251, %add73
  %add75.3253 = add nsw i32 %shr74.3252, %shr62
  %cond.i.i.3254 = tail call i32 @llvm.smax.i32(i32 %add75.3253, i32 0)
  %cond.i4.i.3255 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3254, i32 %70)
  %conv76.3256 = trunc i32 %cond.i4.i.3255 to i16
  %arrayidx80.3257 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %indvars.iv.next211.2, i64 %73
  store i16 %conv76.3256, ptr %arrayidx80.3257, align 2
  br i1 %cmp65, label %for.body66.1.3, label %if.end

for.body66.1.3:                                   ; preds = %for.inc81.2
  %incdec.ptr67.3247 = getelementptr inbounds i16, ptr %incdec.ptr67.lcssa.2, i64 1
  %incdec.ptr.3244 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.2, i64 1
  %incdec.ptr.1.3 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.2, i64 2
  %102 = load i16, ptr %incdec.ptr.3244, align 2
  %conv.1.3 = zext i16 %102 to i32
  %mul.1.3 = mul nsw i32 %57, %conv.1.3
  %incdec.ptr67.1.3 = getelementptr inbounds i16, ptr %incdec.ptr67.lcssa.2, i64 2
  %103 = load i16, ptr %incdec.ptr67.3247, align 2
  %conv68.1.3 = zext i16 %103 to i32
  %mul69.1.3 = mul nsw i32 %61, %conv68.1.3
  %add70.1.3 = add nsw i32 %mul69.1.3, %mul.1.3
  %add72.1.3 = add nsw i32 %add70.1.3, %mul71
  %shr74.1.3 = ashr i32 %add72.1.3, %add73
  %add75.1.3 = add nsw i32 %shr74.1.3, %shr62
  %cond.i.i.1.3 = tail call i32 @llvm.smax.i32(i32 %add75.1.3, i32 0)
  %cond.i4.i.1.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1.3, i32 %70)
  %conv76.1.3 = trunc i32 %cond.i4.i.1.3 to i16
  %arrayidx80.1.3 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %indvars.iv.next211.2, i64 %indvars.iv.next209
  store i16 %conv76.1.3, ptr %arrayidx80.1.3, align 2
  %indvars.iv.next209.1.3 = add nsw i64 %73, 2
  %incdec.ptr.2.3 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.2, i64 3
  %104 = load i16, ptr %incdec.ptr.1.3, align 2
  %conv.2.3 = zext i16 %104 to i32
  %mul.2.3 = mul nsw i32 %57, %conv.2.3
  %incdec.ptr67.2.3 = getelementptr inbounds i16, ptr %incdec.ptr67.lcssa.2, i64 3
  %105 = load i16, ptr %incdec.ptr67.1.3, align 2
  %conv68.2.3 = zext i16 %105 to i32
  %mul69.2.3 = mul nsw i32 %61, %conv68.2.3
  %add70.2.3 = add nsw i32 %mul69.2.3, %mul.2.3
  %add72.2.3 = add nsw i32 %add70.2.3, %mul71
  %shr74.2.3 = ashr i32 %add72.2.3, %add73
  %add75.2.3 = add nsw i32 %shr74.2.3, %shr62
  %cond.i.i.2.3 = tail call i32 @llvm.smax.i32(i32 %add75.2.3, i32 0)
  %cond.i4.i.2.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2.3, i32 %70)
  %conv76.2.3 = trunc i32 %cond.i4.i.2.3 to i16
  %arrayidx80.2.3 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %indvars.iv.next211.2, i64 %indvars.iv.next209.1.3
  store i16 %conv76.2.3, ptr %arrayidx80.2.3, align 2
  %indvars.iv.next209.2.3 = add nsw i64 %73, 3
  %106 = load i16, ptr %incdec.ptr.2.3, align 2
  %conv.3.3 = zext i16 %106 to i32
  %mul.3.3 = mul nsw i32 %57, %conv.3.3
  %107 = load i16, ptr %incdec.ptr67.2.3, align 2
  %conv68.3.3 = zext i16 %107 to i32
  %mul69.3.3 = mul nsw i32 %61, %conv68.3.3
  %add70.3.3 = add nsw i32 %mul69.3.3, %mul.3.3
  %add72.3.3 = add nsw i32 %add70.3.3, %mul71
  %shr74.3.3 = ashr i32 %add72.3.3, %add73
  %add75.3.3 = add nsw i32 %shr74.3.3, %shr62
  %cond.i.i.3.3 = tail call i32 @llvm.smax.i32(i32 %add75.3.3, i32 0)
  %cond.i4.i.3.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3.3, i32 %70)
  %conv76.3.3 = trunc i32 %cond.i4.i.3.3 to i16
  %arrayidx80.3.3 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %indvars.iv.next211.2, i64 %indvars.iv.next209.2.3
  store i16 %conv76.3.3, ptr %arrayidx80.3.3, align 2
  br label %if.end

for.body91.1:                                     ; preds = %for.cond84.preheader
  %108 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l0_pred, i64 0, i64 1), align 2
  %conv93.1 = zext i16 %108 to i32
  %109 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l1_pred, i64 0, i64 1), align 2
  %conv95.1 = zext i16 %109 to i32
  %add96.1 = add nuw nsw i32 %conv93.1, 1
  %add97.1 = add nuw nsw i32 %add96.1, %conv95.1
  %shr98.1 = lshr i32 %add97.1, 1
  %conv99.1 = trunc i32 %shr98.1 to i16
  %arrayidx104.1 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %48, i64 %indvars.iv.next
  store i16 %conv99.1, ptr %arrayidx104.1, align 2
  %indvars.iv.next.1 = add nsw i64 %46, 2
  %110 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l0_pred, i64 0, i64 2), align 4
  %conv93.2 = zext i16 %110 to i32
  %111 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l1_pred, i64 0, i64 2), align 4
  %conv95.2 = zext i16 %111 to i32
  %add96.2 = add nuw nsw i32 %conv93.2, 1
  %add97.2 = add nuw nsw i32 %add96.2, %conv95.2
  %shr98.2 = lshr i32 %add97.2, 1
  %conv99.2 = trunc i32 %shr98.2 to i16
  %arrayidx104.2 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %48, i64 %indvars.iv.next.1
  store i16 %conv99.2, ptr %arrayidx104.2, align 2
  %indvars.iv.next.2 = add nsw i64 %46, 3
  %112 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l0_pred, i64 0, i64 3), align 2
  %conv93.3 = zext i16 %112 to i32
  %113 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l1_pred, i64 0, i64 3), align 2
  %conv95.3 = zext i16 %113 to i32
  %add96.3 = add nuw nsw i32 %conv93.3, 1
  %add97.3 = add nuw nsw i32 %add96.3, %conv95.3
  %shr98.3 = lshr i32 %add97.3, 1
  %conv99.3 = trunc i32 %shr98.3 to i16
  %arrayidx104.3 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %48, i64 %indvars.iv.next.2
  store i16 %conv99.3, ptr %arrayidx104.3, align 2
  br label %for.inc108

for.inc108:                                       ; preds = %for.body91.1, %for.cond84.preheader
  %incdec.ptr92.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l0_pred, i64 0, i64 1), %for.cond84.preheader ], [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l0_pred, i64 0, i64 4), %for.body91.1 ]
  %incdec.ptr94.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l1_pred, i64 0, i64 1), %for.cond84.preheader ], [ getelementptr inbounds ([16 x i16], ptr @LumaPrediction4x4Bi.l1_pred, i64 0, i64 4), %for.body91.1 ]
  %indvars.iv.next177 = add nsw i64 %48, 1
  %cmp85 = icmp slt i64 %indvars.iv.next177, %49
  br i1 %cmp85, label %for.cond88.preheader.1, label %if.end

for.cond88.preheader.1:                           ; preds = %for.inc108
  %incdec.ptr92.1179 = getelementptr inbounds i16, ptr %incdec.ptr92.lcssa, i64 1
  %114 = load i16, ptr %incdec.ptr92.lcssa, align 2
  %conv93.1180 = zext i16 %114 to i32
  %incdec.ptr94.1181 = getelementptr inbounds i16, ptr %incdec.ptr94.lcssa, i64 1
  %115 = load i16, ptr %incdec.ptr94.lcssa, align 2
  %conv95.1182 = zext i16 %115 to i32
  %add96.1183 = add nuw nsw i32 %conv93.1180, 1
  %add97.1184 = add nuw nsw i32 %add96.1183, %conv95.1182
  %shr98.1185 = lshr i32 %add97.1184, 1
  %conv99.1186 = trunc i32 %shr98.1185 to i16
  %arrayidx104.1187 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next177, i64 %46
  store i16 %conv99.1186, ptr %arrayidx104.1187, align 2
  br i1 %cmp89, label %for.body91.1.1, label %for.inc108.1

for.body91.1.1:                                   ; preds = %for.cond88.preheader.1
  %incdec.ptr92.1.1 = getelementptr inbounds i16, ptr %incdec.ptr92.lcssa, i64 2
  %116 = load i16, ptr %incdec.ptr92.1179, align 2
  %conv93.1.1 = zext i16 %116 to i32
  %incdec.ptr94.1.1 = getelementptr inbounds i16, ptr %incdec.ptr94.lcssa, i64 2
  %117 = load i16, ptr %incdec.ptr94.1181, align 2
  %conv95.1.1 = zext i16 %117 to i32
  %add96.1.1 = add nuw nsw i32 %conv93.1.1, 1
  %add97.1.1 = add nuw nsw i32 %add96.1.1, %conv95.1.1
  %shr98.1.1 = lshr i32 %add97.1.1, 1
  %conv99.1.1 = trunc i32 %shr98.1.1 to i16
  %arrayidx104.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next177, i64 %indvars.iv.next
  store i16 %conv99.1.1, ptr %arrayidx104.1.1, align 2
  %indvars.iv.next.1.1 = add nsw i64 %46, 2
  %incdec.ptr92.2.1 = getelementptr inbounds i16, ptr %incdec.ptr92.lcssa, i64 3
  %118 = load i16, ptr %incdec.ptr92.1.1, align 2
  %conv93.2.1 = zext i16 %118 to i32
  %incdec.ptr94.2.1 = getelementptr inbounds i16, ptr %incdec.ptr94.lcssa, i64 3
  %119 = load i16, ptr %incdec.ptr94.1.1, align 2
  %conv95.2.1 = zext i16 %119 to i32
  %add96.2.1 = add nuw nsw i32 %conv93.2.1, 1
  %add97.2.1 = add nuw nsw i32 %add96.2.1, %conv95.2.1
  %shr98.2.1 = lshr i32 %add97.2.1, 1
  %conv99.2.1 = trunc i32 %shr98.2.1 to i16
  %arrayidx104.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next177, i64 %indvars.iv.next.1.1
  store i16 %conv99.2.1, ptr %arrayidx104.2.1, align 2
  %indvars.iv.next.2.1 = add nsw i64 %46, 3
  %incdec.ptr92.3.1 = getelementptr inbounds i16, ptr %incdec.ptr92.lcssa, i64 4
  %120 = load i16, ptr %incdec.ptr92.2.1, align 2
  %conv93.3.1 = zext i16 %120 to i32
  %incdec.ptr94.3.1 = getelementptr inbounds i16, ptr %incdec.ptr94.lcssa, i64 4
  %121 = load i16, ptr %incdec.ptr94.2.1, align 2
  %conv95.3.1 = zext i16 %121 to i32
  %add96.3.1 = add nuw nsw i32 %conv93.3.1, 1
  %add97.3.1 = add nuw nsw i32 %add96.3.1, %conv95.3.1
  %shr98.3.1 = lshr i32 %add97.3.1, 1
  %conv99.3.1 = trunc i32 %shr98.3.1 to i16
  %arrayidx104.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next177, i64 %indvars.iv.next.2.1
  store i16 %conv99.3.1, ptr %arrayidx104.3.1, align 2
  br label %for.inc108.1

for.inc108.1:                                     ; preds = %for.body91.1.1, %for.cond88.preheader.1
  %incdec.ptr92.lcssa.1 = phi ptr [ %incdec.ptr92.1179, %for.cond88.preheader.1 ], [ %incdec.ptr92.3.1, %for.body91.1.1 ]
  %incdec.ptr94.lcssa.1 = phi ptr [ %incdec.ptr94.1181, %for.cond88.preheader.1 ], [ %incdec.ptr94.3.1, %for.body91.1.1 ]
  %indvars.iv.next177.1 = add nsw i64 %48, 2
  %incdec.ptr92.2190 = getelementptr inbounds i16, ptr %incdec.ptr92.lcssa.1, i64 1
  %122 = load i16, ptr %incdec.ptr92.lcssa.1, align 2
  %conv93.2191 = zext i16 %122 to i32
  %incdec.ptr94.2192 = getelementptr inbounds i16, ptr %incdec.ptr94.lcssa.1, i64 1
  %123 = load i16, ptr %incdec.ptr94.lcssa.1, align 2
  %conv95.2193 = zext i16 %123 to i32
  %add96.2194 = add nuw nsw i32 %conv93.2191, 1
  %add97.2195 = add nuw nsw i32 %add96.2194, %conv95.2193
  %shr98.2196 = lshr i32 %add97.2195, 1
  %conv99.2197 = trunc i32 %shr98.2196 to i16
  %arrayidx104.2198 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next177.1, i64 %46
  store i16 %conv99.2197, ptr %arrayidx104.2198, align 2
  br i1 %cmp89, label %for.body91.1.2, label %for.inc108.2

for.body91.1.2:                                   ; preds = %for.inc108.1
  %incdec.ptr92.1.2 = getelementptr inbounds i16, ptr %incdec.ptr92.lcssa.1, i64 2
  %124 = load i16, ptr %incdec.ptr92.2190, align 2
  %conv93.1.2 = zext i16 %124 to i32
  %incdec.ptr94.1.2 = getelementptr inbounds i16, ptr %incdec.ptr94.lcssa.1, i64 2
  %125 = load i16, ptr %incdec.ptr94.2192, align 2
  %conv95.1.2 = zext i16 %125 to i32
  %add96.1.2 = add nuw nsw i32 %conv93.1.2, 1
  %add97.1.2 = add nuw nsw i32 %add96.1.2, %conv95.1.2
  %shr98.1.2 = lshr i32 %add97.1.2, 1
  %conv99.1.2 = trunc i32 %shr98.1.2 to i16
  %arrayidx104.1.2 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next177.1, i64 %indvars.iv.next
  store i16 %conv99.1.2, ptr %arrayidx104.1.2, align 2
  %indvars.iv.next.1.2 = add nsw i64 %46, 2
  %incdec.ptr92.2.2 = getelementptr inbounds i16, ptr %incdec.ptr92.lcssa.1, i64 3
  %126 = load i16, ptr %incdec.ptr92.1.2, align 2
  %conv93.2.2 = zext i16 %126 to i32
  %incdec.ptr94.2.2 = getelementptr inbounds i16, ptr %incdec.ptr94.lcssa.1, i64 3
  %127 = load i16, ptr %incdec.ptr94.1.2, align 2
  %conv95.2.2 = zext i16 %127 to i32
  %add96.2.2 = add nuw nsw i32 %conv93.2.2, 1
  %add97.2.2 = add nuw nsw i32 %add96.2.2, %conv95.2.2
  %shr98.2.2 = lshr i32 %add97.2.2, 1
  %conv99.2.2 = trunc i32 %shr98.2.2 to i16
  %arrayidx104.2.2 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next177.1, i64 %indvars.iv.next.1.2
  store i16 %conv99.2.2, ptr %arrayidx104.2.2, align 2
  %indvars.iv.next.2.2 = add nsw i64 %46, 3
  %incdec.ptr92.3.2 = getelementptr inbounds i16, ptr %incdec.ptr92.lcssa.1, i64 4
  %128 = load i16, ptr %incdec.ptr92.2.2, align 2
  %conv93.3.2 = zext i16 %128 to i32
  %incdec.ptr94.3.2 = getelementptr inbounds i16, ptr %incdec.ptr94.lcssa.1, i64 4
  %129 = load i16, ptr %incdec.ptr94.2.2, align 2
  %conv95.3.2 = zext i16 %129 to i32
  %add96.3.2 = add nuw nsw i32 %conv93.3.2, 1
  %add97.3.2 = add nuw nsw i32 %add96.3.2, %conv95.3.2
  %shr98.3.2 = lshr i32 %add97.3.2, 1
  %conv99.3.2 = trunc i32 %shr98.3.2 to i16
  %arrayidx104.3.2 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next177.1, i64 %indvars.iv.next.2.2
  store i16 %conv99.3.2, ptr %arrayidx104.3.2, align 2
  br label %for.inc108.2

for.inc108.2:                                     ; preds = %for.body91.1.2, %for.inc108.1
  %incdec.ptr92.lcssa.2 = phi ptr [ %incdec.ptr92.2190, %for.inc108.1 ], [ %incdec.ptr92.3.2, %for.body91.1.2 ]
  %incdec.ptr94.lcssa.2 = phi ptr [ %incdec.ptr94.2192, %for.inc108.1 ], [ %incdec.ptr94.3.2, %for.body91.1.2 ]
  %indvars.iv.next177.2 = add nsw i64 %48, 3
  %130 = load i16, ptr %incdec.ptr92.lcssa.2, align 2
  %conv93.3201 = zext i16 %130 to i32
  %131 = load i16, ptr %incdec.ptr94.lcssa.2, align 2
  %conv95.3203 = zext i16 %131 to i32
  %add96.3204 = add nuw nsw i32 %conv93.3201, 1
  %add97.3205 = add nuw nsw i32 %add96.3204, %conv95.3203
  %shr98.3206 = lshr i32 %add97.3205, 1
  %conv99.3207 = trunc i32 %shr98.3206 to i16
  %arrayidx104.3208 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next177.2, i64 %46
  store i16 %conv99.3207, ptr %arrayidx104.3208, align 2
  br i1 %cmp89, label %for.body91.1.3, label %if.end

for.body91.1.3:                                   ; preds = %for.inc108.2
  %incdec.ptr94.3202 = getelementptr inbounds i16, ptr %incdec.ptr94.lcssa.2, i64 1
  %incdec.ptr92.3200 = getelementptr inbounds i16, ptr %incdec.ptr92.lcssa.2, i64 1
  %incdec.ptr92.1.3 = getelementptr inbounds i16, ptr %incdec.ptr92.lcssa.2, i64 2
  %132 = load i16, ptr %incdec.ptr92.3200, align 2
  %conv93.1.3 = zext i16 %132 to i32
  %incdec.ptr94.1.3 = getelementptr inbounds i16, ptr %incdec.ptr94.lcssa.2, i64 2
  %133 = load i16, ptr %incdec.ptr94.3202, align 2
  %conv95.1.3 = zext i16 %133 to i32
  %add96.1.3 = add nuw nsw i32 %conv93.1.3, 1
  %add97.1.3 = add nuw nsw i32 %add96.1.3, %conv95.1.3
  %shr98.1.3 = lshr i32 %add97.1.3, 1
  %conv99.1.3 = trunc i32 %shr98.1.3 to i16
  %arrayidx104.1.3 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next177.2, i64 %indvars.iv.next
  store i16 %conv99.1.3, ptr %arrayidx104.1.3, align 2
  %indvars.iv.next.1.3 = add nsw i64 %46, 2
  %incdec.ptr92.2.3 = getelementptr inbounds i16, ptr %incdec.ptr92.lcssa.2, i64 3
  %134 = load i16, ptr %incdec.ptr92.1.3, align 2
  %conv93.2.3 = zext i16 %134 to i32
  %incdec.ptr94.2.3 = getelementptr inbounds i16, ptr %incdec.ptr94.lcssa.2, i64 3
  %135 = load i16, ptr %incdec.ptr94.1.3, align 2
  %conv95.2.3 = zext i16 %135 to i32
  %add96.2.3 = add nuw nsw i32 %conv93.2.3, 1
  %add97.2.3 = add nuw nsw i32 %add96.2.3, %conv95.2.3
  %shr98.2.3 = lshr i32 %add97.2.3, 1
  %conv99.2.3 = trunc i32 %shr98.2.3 to i16
  %arrayidx104.2.3 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next177.2, i64 %indvars.iv.next.1.3
  store i16 %conv99.2.3, ptr %arrayidx104.2.3, align 2
  %indvars.iv.next.2.3 = add nsw i64 %46, 3
  %136 = load i16, ptr %incdec.ptr92.2.3, align 2
  %conv93.3.3 = zext i16 %136 to i32
  %137 = load i16, ptr %incdec.ptr94.2.3, align 2
  %conv95.3.3 = zext i16 %137 to i32
  %add96.3.3 = add nuw nsw i32 %conv93.3.3, 1
  %add97.3.3 = add nuw nsw i32 %add96.3.3, %conv95.3.3
  %shr98.3.3 = lshr i32 %add97.3.3, 1
  %conv99.3.3 = trunc i32 %shr98.3.3 to i16
  %arrayidx104.3.3 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next177.2, i64 %indvars.iv.next.2.3
  store i16 %conv99.3.3, ptr %arrayidx104.3.3, align 2
  br label %if.end

if.end:                                           ; preds = %for.inc108, %for.body91.1.3, %for.inc108.2, %for.inc81, %for.body66.1.3, %for.inc81.2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @LumaResidualCoding8x8(ptr nocapture noundef %cbp, ptr nocapture noundef %cbp_blk, i32 noundef %block8x8, i16 noundef signext %p_dir, i32 noundef %l0_mode, i32 noundef %l1_mode, i16 noundef signext %l0_ref_idx, i16 noundef signext %l1_ref_idx) local_unnamed_addr #0 {
entry:
  %coeff_cost = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %coeff_cost) #17
  store i32 0, ptr %coeff_cost, align 4
  %0 = shl i32 %block8x8, 2
  %shl = and i32 %0, -8
  %and = and i32 %block8x8, 1
  %shl1 = shl nuw nsw i32 %and, 3
  %shl2 = shl nuw i32 1, %block8x8
  %1 = or i32 %l1_mode, %l0_mode
  %or.cond = icmp eq i32 %1, 0
  %.pre = load ptr, ptr @img, align 8
  br i1 %or.cond, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %type = getelementptr inbounds %struct.ImageParameters, ptr %.pre, i64 0, i32 5
  %2 = load i32, ptr %type, align 4
  %cmp4 = icmp ne i32 %2, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp4, %land.rhs ]
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %.pre, i64 0, i32 61
  %4 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %.pre, i64 0, i32 3
  %5 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %5 to i64
  %luma_transform_size_8x8_flag = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom, i32 31
  %6 = load i32, ptr %luma_transform_size_8x8_flag, align 8
  %7 = load ptr, ptr @input, align 8
  %ChromaMCBuffer = getelementptr inbounds %struct.InputParameters, ptr %7, i64 0, i32 197
  %8 = load i32, ptr %ChromaMCBuffer, align 4
  %tobool.not = icmp eq i32 %8, 0
  %OneComponentChromaPrediction4x4_regenerate.OneComponentChromaPrediction4x4_retrieve = select i1 %tobool.not, ptr @OneComponentChromaPrediction4x4_regenerate, ptr @OneComponentChromaPrediction4x4_retrieve
  store ptr %OneComponentChromaPrediction4x4_regenerate.OneComponentChromaPrediction4x4_retrieve, ptr @OneComponentChromaPrediction4x4, align 8
  %tobool5.not = icmp eq i32 %6, 0
  %conv = sext i16 %p_dir to i32
  %9 = shl i32 %block8x8, 3
  %10 = and i32 %9, 8
  %11 = zext i32 %10 to i64
  %12 = sext i32 %shl to i64
  %13 = or i32 %0, 4
  %14 = sext i32 %13 to i64
  br i1 %tobool5.not, label %for.body.preheader, label %for.body88.preheader

for.body88.preheader:                             ; preds = %land.end
  %indvars.iv.next = or i64 %11, 4
  %15 = trunc i64 %indvars.iv.next to i32
  br label %for.body88

for.body.preheader:                               ; preds = %land.end
  %16 = lshr exact i64 %11, 2
  %indvars.iv.next437 = or i64 %11, 4
  %17 = lshr exact i64 %indvars.iv.next437, 2
  %18 = trunc i64 %indvars.iv.next437 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc75.1
  %indvars.iv442 = phi i64 [ %indvars.iv.next443, %for.inc75.1 ], [ %12, %for.body.preheader ]
  %19 = load ptr, ptr @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 44
  %20 = load i32, ptr %opix_y, align 4
  %21 = sext i32 %20 to i64
  %22 = add nsw i64 %indvars.iv442, %21
  %23 = trunc i64 %indvars.iv442 to i32
  %24 = add nsw i64 %22, 1
  %25 = or i64 %indvars.iv442, 1
  %26 = add nsw i64 %22, 2
  %27 = or i64 %indvars.iv442, 2
  %28 = add nsw i64 %22, 3
  %29 = or i64 %indvars.iv442, 3
  %30 = load ptr, ptr @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 43
  %31 = load i32, ptr %opix_x, align 8
  %32 = sext i32 %31 to i64
  %33 = add nsw i64 %11, %32
  call void @LumaPrediction4x4(i32 noundef %10, i32 noundef %23, i32 noundef %conv, i32 noundef %l0_mode, i32 noundef %l1_mode, i16 noundef signext %l0_ref_idx, i16 noundef signext %l1_ref_idx)
  %34 = load ptr, ptr @imgY_org, align 8
  %35 = load ptr, ptr @img, align 8
  %arrayidx26 = getelementptr inbounds ptr, ptr %34, i64 %22
  %36 = load ptr, ptr %arrayidx26, align 8
  %arrayidx29 = getelementptr inbounds i16, ptr %36, i64 %33
  %arrayidx36 = getelementptr inbounds %struct.ImageParameters, ptr %35, i64 0, i32 51, i64 %indvars.iv442, i64 %11
  %arrayidx41 = getelementptr inbounds %struct.ImageParameters, ptr %35, i64 0, i32 52, i64 0, i64 0
  %37 = load <4 x i16>, ptr %arrayidx29, align 2
  %38 = zext <4 x i16> %37 to <4 x i32>
  %39 = load <4 x i16>, ptr %arrayidx36, align 2
  %40 = zext <4 x i16> %39 to <4 x i32>
  %41 = sub nsw <4 x i32> %38, %40
  store <4 x i32> %41, ptr %arrayidx41, align 4
  %arrayidx26.1 = getelementptr inbounds ptr, ptr %34, i64 %24
  %42 = load ptr, ptr %arrayidx26.1, align 8
  %arrayidx29.1418 = getelementptr inbounds i16, ptr %42, i64 %33
  %arrayidx36.1420 = getelementptr inbounds %struct.ImageParameters, ptr %35, i64 0, i32 51, i64 %25, i64 %11
  %arrayidx41.1423 = getelementptr inbounds %struct.ImageParameters, ptr %35, i64 0, i32 52, i64 1, i64 0
  %43 = load <4 x i16>, ptr %arrayidx29.1418, align 2
  %44 = zext <4 x i16> %43 to <4 x i32>
  %45 = load <4 x i16>, ptr %arrayidx36.1420, align 2
  %46 = zext <4 x i16> %45 to <4 x i32>
  %47 = sub nsw <4 x i32> %44, %46
  store <4 x i32> %47, ptr %arrayidx41.1423, align 4
  %arrayidx26.2 = getelementptr inbounds ptr, ptr %34, i64 %26
  %48 = load ptr, ptr %arrayidx26.2, align 8
  %arrayidx29.2424 = getelementptr inbounds i16, ptr %48, i64 %33
  %arrayidx36.2426 = getelementptr inbounds %struct.ImageParameters, ptr %35, i64 0, i32 51, i64 %27, i64 %11
  %arrayidx41.2429 = getelementptr inbounds %struct.ImageParameters, ptr %35, i64 0, i32 52, i64 2, i64 0
  %49 = load <4 x i16>, ptr %arrayidx29.2424, align 2
  %50 = zext <4 x i16> %49 to <4 x i32>
  %51 = load <4 x i16>, ptr %arrayidx36.2426, align 2
  %52 = zext <4 x i16> %51 to <4 x i32>
  %53 = sub nsw <4 x i32> %50, %52
  store <4 x i32> %53, ptr %arrayidx41.2429, align 4
  %arrayidx26.3 = getelementptr inbounds ptr, ptr %34, i64 %28
  %54 = load ptr, ptr %arrayidx26.3, align 8
  %arrayidx29.3430 = getelementptr inbounds i16, ptr %54, i64 %33
  %arrayidx36.3432 = getelementptr inbounds %struct.ImageParameters, ptr %35, i64 0, i32 51, i64 %29, i64 %11
  %arrayidx41.3435 = getelementptr inbounds %struct.ImageParameters, ptr %35, i64 0, i32 52, i64 3, i64 0
  %55 = load <4 x i16>, ptr %arrayidx29.3430, align 2
  %56 = zext <4 x i16> %55 to <4 x i32>
  %57 = load <4 x i16>, ptr %arrayidx36.3432, align 2
  %58 = zext <4 x i16> %57 to <4 x i32>
  %59 = sub nsw <4 x i32> %56, %58
  store <4 x i32> %59, ptr %arrayidx41.3435, align 4
  %60 = load ptr, ptr @img, align 8
  %NoResidueDirect = getelementptr inbounds %struct.ImageParameters, ptr %60, i64 0, i32 97
  %61 = load i32, ptr %NoResidueDirect, align 8
  %cmp45 = icmp eq i32 %61, 1
  %or.cond248 = select i1 %cmp45, i1 true, i1 %3
  br i1 %or.cond248, label %lor.lhs.false, label %if.then54

lor.lhs.false:                                    ; preds = %for.body
  %qp_scaled = getelementptr inbounds %struct.ImageParameters, ptr %60, i64 0, i32 11
  %62 = load i32, ptr %qp_scaled, align 4
  %cmp49 = icmp eq i32 %62, 0
  br i1 %cmp49, label %land.lhs.true51, label %for.inc75

land.lhs.true51:                                  ; preds = %lor.lhs.false
  %lossless_qpprime_flag = getelementptr inbounds %struct.ImageParameters, ptr %60, i64 0, i32 161
  %63 = load i32, ptr %lossless_qpprime_flag, align 4
  %cmp52 = icmp eq i32 %63, 1
  br i1 %cmp52, label %if.then54, label %for.inc75

if.then54:                                        ; preds = %for.body, %land.lhs.true51
  %type55 = getelementptr inbounds %struct.ImageParameters, ptr %60, i64 0, i32 5
  %64 = load i32, ptr %type55, align 4
  %cmp56.not = icmp eq i32 %64, 3
  br i1 %cmp56.not, label %if.else59, label %if.then58

if.then58:                                        ; preds = %if.then54
  %call = call i32 @dct_luma(i32 noundef %10, i32 noundef %23, ptr noundef nonnull %coeff_cost, i32 noundef 0) #17
  br label %if.end68

if.else59:                                        ; preds = %if.then54
  %65 = load i32, ptr @si_frame_indicator, align 4
  %tobool60 = icmp ne i32 %65, 0
  %66 = load i32, ptr @sp2_frame_indicator, align 4
  %tobool62 = icmp ne i32 %66, 0
  %or.cond249 = select i1 %tobool60, i1 true, i1 %tobool62
  br i1 %or.cond249, label %if.else65, label %if.then63

if.then63:                                        ; preds = %if.else59
  %call64 = call i32 @dct_luma_sp(i32 noundef %10, i32 noundef %23, ptr noundef nonnull %coeff_cost) #17
  br label %if.end68

if.else65:                                        ; preds = %if.else59
  %call66 = call i32 @dct_luma_sp2(i32 noundef %10, i32 noundef %23, ptr noundef nonnull %coeff_cost) #17
  br label %if.end68

if.end68:                                         ; preds = %if.then63, %if.else65, %if.then58
  %nonzero.0 = phi i32 [ %call, %if.then58 ], [ %call66, %if.else65 ], [ %call64, %if.then63 ]
  %tobool69.not = icmp eq i32 %nonzero.0, 0
  br i1 %tobool69.not, label %for.inc75, label %if.then70

if.then70:                                        ; preds = %if.end68
  %indvars.iv442.masked = and i64 %indvars.iv442, 4294967292
  %sh_prom = or i64 %16, %indvars.iv442.masked
  %shl71 = shl nuw i64 1, %sh_prom
  %67 = load i64, ptr %cbp_blk, align 8
  %or = or i64 %67, %shl71
  store i64 %or, ptr %cbp_blk, align 8
  %68 = load i32, ptr %cbp, align 4
  %or72 = or i32 %68, %shl2
  store i32 %or72, ptr %cbp, align 4
  br label %for.inc75

for.inc75:                                        ; preds = %lor.lhs.false, %land.lhs.true51, %if.then70, %if.end68
  %69 = load ptr, ptr @img, align 8
  %opix_x.1 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 43
  %70 = load i32, ptr %opix_x.1, align 8
  %71 = sext i32 %70 to i64
  %72 = add nsw i64 %indvars.iv.next437, %71
  call void @LumaPrediction4x4(i32 noundef %18, i32 noundef %23, i32 noundef %conv, i32 noundef %l0_mode, i32 noundef %l1_mode, i16 noundef signext %l0_ref_idx, i16 noundef signext %l1_ref_idx)
  %73 = load ptr, ptr @imgY_org, align 8
  %74 = load ptr, ptr @img, align 8
  %arrayidx26.1452 = getelementptr inbounds ptr, ptr %73, i64 %22
  %75 = load ptr, ptr %arrayidx26.1452, align 8
  %arrayidx29.1 = getelementptr inbounds i16, ptr %75, i64 %72
  %arrayidx36.1 = getelementptr inbounds %struct.ImageParameters, ptr %74, i64 0, i32 51, i64 %indvars.iv442, i64 %indvars.iv.next437
  %arrayidx41.1 = getelementptr inbounds %struct.ImageParameters, ptr %74, i64 0, i32 52, i64 0, i64 0
  %76 = load <4 x i16>, ptr %arrayidx29.1, align 2
  %77 = zext <4 x i16> %76 to <4 x i32>
  %78 = load <4 x i16>, ptr %arrayidx36.1, align 2
  %79 = zext <4 x i16> %78 to <4 x i32>
  %80 = sub nsw <4 x i32> %77, %79
  store <4 x i32> %80, ptr %arrayidx41.1, align 4
  %arrayidx26.1.1 = getelementptr inbounds ptr, ptr %73, i64 %24
  %81 = load ptr, ptr %arrayidx26.1.1, align 8
  %arrayidx29.1418.1 = getelementptr inbounds i16, ptr %81, i64 %72
  %arrayidx36.1420.1 = getelementptr inbounds %struct.ImageParameters, ptr %74, i64 0, i32 51, i64 %25, i64 %indvars.iv.next437
  %arrayidx41.1423.1 = getelementptr inbounds %struct.ImageParameters, ptr %74, i64 0, i32 52, i64 1, i64 0
  %82 = load <4 x i16>, ptr %arrayidx29.1418.1, align 2
  %83 = zext <4 x i16> %82 to <4 x i32>
  %84 = load <4 x i16>, ptr %arrayidx36.1420.1, align 2
  %85 = zext <4 x i16> %84 to <4 x i32>
  %86 = sub nsw <4 x i32> %83, %85
  store <4 x i32> %86, ptr %arrayidx41.1423.1, align 4
  %arrayidx26.2.1 = getelementptr inbounds ptr, ptr %73, i64 %26
  %87 = load ptr, ptr %arrayidx26.2.1, align 8
  %arrayidx29.2424.1 = getelementptr inbounds i16, ptr %87, i64 %72
  %arrayidx36.2426.1 = getelementptr inbounds %struct.ImageParameters, ptr %74, i64 0, i32 51, i64 %27, i64 %indvars.iv.next437
  %arrayidx41.2429.1 = getelementptr inbounds %struct.ImageParameters, ptr %74, i64 0, i32 52, i64 2, i64 0
  %88 = load <4 x i16>, ptr %arrayidx29.2424.1, align 2
  %89 = zext <4 x i16> %88 to <4 x i32>
  %90 = load <4 x i16>, ptr %arrayidx36.2426.1, align 2
  %91 = zext <4 x i16> %90 to <4 x i32>
  %92 = sub nsw <4 x i32> %89, %91
  store <4 x i32> %92, ptr %arrayidx41.2429.1, align 4
  %arrayidx26.3.1 = getelementptr inbounds ptr, ptr %73, i64 %28
  %93 = load ptr, ptr %arrayidx26.3.1, align 8
  %arrayidx29.3430.1 = getelementptr inbounds i16, ptr %93, i64 %72
  %arrayidx36.3432.1 = getelementptr inbounds %struct.ImageParameters, ptr %74, i64 0, i32 51, i64 %29, i64 %indvars.iv.next437
  %arrayidx41.3435.1 = getelementptr inbounds %struct.ImageParameters, ptr %74, i64 0, i32 52, i64 3, i64 0
  %94 = load <4 x i16>, ptr %arrayidx29.3430.1, align 2
  %95 = zext <4 x i16> %94 to <4 x i32>
  %96 = load <4 x i16>, ptr %arrayidx36.3432.1, align 2
  %97 = zext <4 x i16> %96 to <4 x i32>
  %98 = sub nsw <4 x i32> %95, %97
  store <4 x i32> %98, ptr %arrayidx41.3435.1, align 4
  %99 = load ptr, ptr @img, align 8
  %NoResidueDirect.1 = getelementptr inbounds %struct.ImageParameters, ptr %99, i64 0, i32 97
  %100 = load i32, ptr %NoResidueDirect.1, align 8
  %cmp45.1 = icmp eq i32 %100, 1
  %or.cond248.1 = select i1 %cmp45.1, i1 true, i1 %3
  br i1 %or.cond248.1, label %lor.lhs.false.1, label %if.then54.1

lor.lhs.false.1:                                  ; preds = %for.inc75
  %qp_scaled.1 = getelementptr inbounds %struct.ImageParameters, ptr %99, i64 0, i32 11
  %101 = load i32, ptr %qp_scaled.1, align 4
  %cmp49.1 = icmp eq i32 %101, 0
  br i1 %cmp49.1, label %land.lhs.true51.1, label %for.inc75.1

land.lhs.true51.1:                                ; preds = %lor.lhs.false.1
  %lossless_qpprime_flag.1 = getelementptr inbounds %struct.ImageParameters, ptr %99, i64 0, i32 161
  %102 = load i32, ptr %lossless_qpprime_flag.1, align 4
  %cmp52.1 = icmp eq i32 %102, 1
  br i1 %cmp52.1, label %if.then54.1, label %for.inc75.1

if.then54.1:                                      ; preds = %land.lhs.true51.1, %for.inc75
  %type55.1 = getelementptr inbounds %struct.ImageParameters, ptr %99, i64 0, i32 5
  %103 = load i32, ptr %type55.1, align 4
  %cmp56.not.1 = icmp eq i32 %103, 3
  br i1 %cmp56.not.1, label %if.else59.1, label %if.then58.1

if.then58.1:                                      ; preds = %if.then54.1
  %call.1 = call i32 @dct_luma(i32 noundef %18, i32 noundef %23, ptr noundef nonnull %coeff_cost, i32 noundef 0) #17
  br label %if.end68.1

if.else59.1:                                      ; preds = %if.then54.1
  %104 = load i32, ptr @si_frame_indicator, align 4
  %tobool60.1 = icmp ne i32 %104, 0
  %105 = load i32, ptr @sp2_frame_indicator, align 4
  %tobool62.1 = icmp ne i32 %105, 0
  %or.cond249.1 = select i1 %tobool60.1, i1 true, i1 %tobool62.1
  br i1 %or.cond249.1, label %if.else65.1, label %if.then63.1

if.then63.1:                                      ; preds = %if.else59.1
  %call64.1 = call i32 @dct_luma_sp(i32 noundef %18, i32 noundef %23, ptr noundef nonnull %coeff_cost) #17
  br label %if.end68.1

if.else65.1:                                      ; preds = %if.else59.1
  %call66.1 = call i32 @dct_luma_sp2(i32 noundef %18, i32 noundef %23, ptr noundef nonnull %coeff_cost) #17
  br label %if.end68.1

if.end68.1:                                       ; preds = %if.else65.1, %if.then63.1, %if.then58.1
  %nonzero.0.1 = phi i32 [ %call.1, %if.then58.1 ], [ %call66.1, %if.else65.1 ], [ %call64.1, %if.then63.1 ]
  %tobool69.not.1 = icmp eq i32 %nonzero.0.1, 0
  br i1 %tobool69.not.1, label %for.inc75.1, label %if.then70.1

if.then70.1:                                      ; preds = %if.end68.1
  %indvars.iv442.masked453 = and i64 %indvars.iv442, 4294967292
  %sh_prom.1 = or i64 %17, %indvars.iv442.masked453
  %shl71.1 = shl nuw i64 1, %sh_prom.1
  %106 = load i64, ptr %cbp_blk, align 8
  %or.1 = or i64 %106, %shl71.1
  store i64 %or.1, ptr %cbp_blk, align 8
  %107 = load i32, ptr %cbp, align 4
  %or72.1 = or i32 %107, %shl2
  store i32 %or72.1, ptr %cbp, align 4
  br label %for.inc75.1

for.inc75.1:                                      ; preds = %if.then70.1, %if.end68.1, %land.lhs.true51.1, %lor.lhs.false.1
  %indvars.iv.next443 = add nsw i64 %indvars.iv442, 4
  %cmp7 = icmp slt i64 %indvars.iv442, %14
  br i1 %cmp7, label %for.body, label %if.end169

for.body88:                                       ; preds = %for.body88.preheader, %for.body88
  %indvars.iv403 = phi i64 [ %indvars.iv.next404, %for.body88 ], [ 0, %for.body88.preheader ]
  %indvars.iv400 = phi i64 [ %indvars.iv.next401, %for.body88 ], [ %12, %for.body88.preheader ]
  %108 = or i64 %indvars.iv403, 3
  %109 = or i64 %indvars.iv400, 3
  %110 = load ptr, ptr @img, align 8
  %opix_y89 = getelementptr inbounds %struct.ImageParameters, ptr %110, i64 0, i32 44
  %111 = load i32, ptr %opix_y89, align 4
  %112 = sext i32 %111 to i64
  %113 = add nsw i64 %indvars.iv400, %112
  %114 = add nsw i64 %113, 3
  %115 = or i64 %indvars.iv403, 2
  %116 = or i64 %indvars.iv400, 2
  %117 = add nsw i64 %113, 2
  %118 = or i64 %indvars.iv403, 1
  %119 = or i64 %indvars.iv400, 1
  %120 = add nsw i64 %113, 1
  %121 = trunc i64 %indvars.iv400 to i32
  %122 = load ptr, ptr @img, align 8
  %opix_x96 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 43
  %123 = load i32, ptr %opix_x96, align 8
  %124 = sext i32 %123 to i64
  %125 = add nsw i64 %11, %124
  tail call void @LumaPrediction4x4(i32 noundef %10, i32 noundef %121, i32 noundef %conv, i32 noundef %l0_mode, i32 noundef %l1_mode, i16 noundef signext %l0_ref_idx, i16 noundef signext %l1_ref_idx)
  %126 = load ptr, ptr @imgY_org, align 8
  %127 = load ptr, ptr @img, align 8
  %arrayidx111 = getelementptr inbounds ptr, ptr %126, i64 %113
  %128 = load ptr, ptr %arrayidx111, align 8
  %arrayidx114 = getelementptr inbounds i16, ptr %128, i64 %125
  %arrayidx122 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 51, i64 %indvars.iv400, i64 %11
  %arrayidx131 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 52, i64 %indvars.iv403, i64 0
  %129 = load <4 x i16>, ptr %arrayidx114, align 2
  %130 = zext <4 x i16> %129 to <4 x i32>
  %131 = load <4 x i16>, ptr %arrayidx122, align 2
  %132 = zext <4 x i16> %131 to <4 x i32>
  %133 = sub nsw <4 x i32> %130, %132
  store <4 x i32> %133, ptr %arrayidx131, align 4
  %arrayidx111.1 = getelementptr inbounds ptr, ptr %126, i64 %120
  %134 = load ptr, ptr %arrayidx111.1, align 8
  %arrayidx114.1376 = getelementptr inbounds i16, ptr %134, i64 %125
  %arrayidx122.1378 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 51, i64 %119, i64 %11
  %arrayidx131.1381 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 52, i64 %118, i64 0
  %135 = load <4 x i16>, ptr %arrayidx114.1376, align 2
  %136 = zext <4 x i16> %135 to <4 x i32>
  %137 = load <4 x i16>, ptr %arrayidx122.1378, align 2
  %138 = zext <4 x i16> %137 to <4 x i32>
  %139 = sub nsw <4 x i32> %136, %138
  store <4 x i32> %139, ptr %arrayidx131.1381, align 4
  %arrayidx111.2 = getelementptr inbounds ptr, ptr %126, i64 %117
  %140 = load ptr, ptr %arrayidx111.2, align 8
  %arrayidx114.2382 = getelementptr inbounds i16, ptr %140, i64 %125
  %arrayidx122.2384 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 51, i64 %116, i64 %11
  %arrayidx131.2387 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 52, i64 %115, i64 0
  %141 = load <4 x i16>, ptr %arrayidx114.2382, align 2
  %142 = zext <4 x i16> %141 to <4 x i32>
  %143 = load <4 x i16>, ptr %arrayidx122.2384, align 2
  %144 = zext <4 x i16> %143 to <4 x i32>
  %145 = sub nsw <4 x i32> %142, %144
  store <4 x i32> %145, ptr %arrayidx131.2387, align 4
  %arrayidx111.3 = getelementptr inbounds ptr, ptr %126, i64 %114
  %146 = load ptr, ptr %arrayidx111.3, align 8
  %arrayidx114.3388 = getelementptr inbounds i16, ptr %146, i64 %125
  %arrayidx122.3390 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 51, i64 %109, i64 %11
  %arrayidx131.3393 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 52, i64 %108, i64 0
  %147 = load <4 x i16>, ptr %arrayidx114.3388, align 2
  %148 = zext <4 x i16> %147 to <4 x i32>
  %149 = load <4 x i16>, ptr %arrayidx122.3390, align 2
  %150 = zext <4 x i16> %149 to <4 x i32>
  %151 = sub nsw <4 x i32> %148, %150
  store <4 x i32> %151, ptr %arrayidx131.3393, align 4
  %152 = load ptr, ptr @img, align 8
  %opix_x96.1 = getelementptr inbounds %struct.ImageParameters, ptr %152, i64 0, i32 43
  %153 = load i32, ptr %opix_x96.1, align 8
  %154 = sext i32 %153 to i64
  %155 = add nsw i64 %indvars.iv.next, %154
  tail call void @LumaPrediction4x4(i32 noundef %15, i32 noundef %121, i32 noundef %conv, i32 noundef %l0_mode, i32 noundef %l1_mode, i16 noundef signext %l0_ref_idx, i16 noundef signext %l1_ref_idx)
  %156 = load ptr, ptr @imgY_org, align 8
  %157 = load ptr, ptr @img, align 8
  %arrayidx111.1451 = getelementptr inbounds ptr, ptr %156, i64 %113
  %158 = load ptr, ptr %arrayidx111.1451, align 8
  %arrayidx114.1 = getelementptr inbounds i16, ptr %158, i64 %155
  %arrayidx122.1 = getelementptr inbounds %struct.ImageParameters, ptr %157, i64 0, i32 51, i64 %indvars.iv400, i64 %indvars.iv.next
  %arrayidx131.1 = getelementptr inbounds %struct.ImageParameters, ptr %157, i64 0, i32 52, i64 %indvars.iv403, i64 4
  %159 = load <4 x i16>, ptr %arrayidx114.1, align 2
  %160 = zext <4 x i16> %159 to <4 x i32>
  %161 = load <4 x i16>, ptr %arrayidx122.1, align 2
  %162 = zext <4 x i16> %161 to <4 x i32>
  %163 = sub nsw <4 x i32> %160, %162
  store <4 x i32> %163, ptr %arrayidx131.1, align 4
  %arrayidx111.1.1 = getelementptr inbounds ptr, ptr %156, i64 %120
  %164 = load ptr, ptr %arrayidx111.1.1, align 8
  %arrayidx114.1376.1 = getelementptr inbounds i16, ptr %164, i64 %155
  %arrayidx122.1378.1 = getelementptr inbounds %struct.ImageParameters, ptr %157, i64 0, i32 51, i64 %119, i64 %indvars.iv.next
  %arrayidx131.1381.1 = getelementptr inbounds %struct.ImageParameters, ptr %157, i64 0, i32 52, i64 %118, i64 4
  %165 = load <4 x i16>, ptr %arrayidx114.1376.1, align 2
  %166 = zext <4 x i16> %165 to <4 x i32>
  %167 = load <4 x i16>, ptr %arrayidx122.1378.1, align 2
  %168 = zext <4 x i16> %167 to <4 x i32>
  %169 = sub nsw <4 x i32> %166, %168
  store <4 x i32> %169, ptr %arrayidx131.1381.1, align 4
  %arrayidx111.2.1 = getelementptr inbounds ptr, ptr %156, i64 %117
  %170 = load ptr, ptr %arrayidx111.2.1, align 8
  %arrayidx114.2382.1 = getelementptr inbounds i16, ptr %170, i64 %155
  %arrayidx122.2384.1 = getelementptr inbounds %struct.ImageParameters, ptr %157, i64 0, i32 51, i64 %116, i64 %indvars.iv.next
  %arrayidx131.2387.1 = getelementptr inbounds %struct.ImageParameters, ptr %157, i64 0, i32 52, i64 %115, i64 4
  %171 = load <4 x i16>, ptr %arrayidx114.2382.1, align 2
  %172 = zext <4 x i16> %171 to <4 x i32>
  %173 = load <4 x i16>, ptr %arrayidx122.2384.1, align 2
  %174 = zext <4 x i16> %173 to <4 x i32>
  %175 = sub nsw <4 x i32> %172, %174
  store <4 x i32> %175, ptr %arrayidx131.2387.1, align 4
  %arrayidx111.3.1 = getelementptr inbounds ptr, ptr %156, i64 %114
  %176 = load ptr, ptr %arrayidx111.3.1, align 8
  %arrayidx114.3388.1 = getelementptr inbounds i16, ptr %176, i64 %155
  %arrayidx122.3390.1 = getelementptr inbounds %struct.ImageParameters, ptr %157, i64 0, i32 51, i64 %109, i64 %indvars.iv.next
  %arrayidx131.3393.1 = getelementptr inbounds %struct.ImageParameters, ptr %157, i64 0, i32 52, i64 %108, i64 4
  %177 = load <4 x i16>, ptr %arrayidx114.3388.1, align 2
  %178 = zext <4 x i16> %177 to <4 x i32>
  %179 = load <4 x i16>, ptr %arrayidx122.3390.1, align 2
  %180 = zext <4 x i16> %179 to <4 x i32>
  %181 = sub nsw <4 x i32> %178, %180
  store <4 x i32> %181, ptr %arrayidx131.3393.1, align 4
  %indvars.iv.next404 = add nuw nsw i64 %indvars.iv403, 4
  %indvars.iv.next401 = add nsw i64 %indvars.iv400, 4
  %cmp86 = icmp slt i64 %indvars.iv400, %14
  br i1 %cmp86, label %for.body88, label %for.end145

for.end145:                                       ; preds = %for.body88
  %182 = load ptr, ptr @img, align 8
  %NoResidueDirect146 = getelementptr inbounds %struct.ImageParameters, ptr %182, i64 0, i32 97
  %183 = load i32, ptr %NoResidueDirect146, align 8
  %cmp147 = icmp eq i32 %183, 1
  %or.cond250 = select i1 %cmp147, i1 true, i1 %3
  br i1 %or.cond250, label %if.end169, label %if.then151

if.then151:                                       ; preds = %for.end145
  %type152 = getelementptr inbounds %struct.ImageParameters, ptr %182, i64 0, i32 5
  %184 = load i32, ptr %type152, align 4
  %cmp153.not = icmp eq i32 %184, 3
  br i1 %cmp153.not, label %if.end169, label %if.then155

if.then155:                                       ; preds = %if.then151
  %call156 = call i32 @dct_luma8x8(i32 noundef %block8x8, ptr noundef nonnull %coeff_cost, i32 noundef 0) #17
  %185 = icmp eq i32 %call156, 0
  br i1 %185, label %if.end169, label %if.then159

if.then159:                                       ; preds = %if.then155
  %mul161 = shl nuw nsw i32 %and, 1
  %sub162 = sub nsw i32 %0, %mul161
  %shl163 = shl i32 51, %sub162
  %conv164 = sext i32 %shl163 to i64
  %186 = load i64, ptr %cbp_blk, align 8
  %or165 = or i64 %186, %conv164
  store i64 %or165, ptr %cbp_blk, align 8
  %187 = load i32, ptr %cbp, align 4
  %or166 = or i32 %187, %shl2
  store i32 %or166, ptr %cbp, align 4
  br label %if.end169

if.end169:                                        ; preds = %for.inc75.1, %if.then151, %for.end145, %if.then159, %if.then155
  %188 = load ptr, ptr @img, align 8
  %NoResidueDirect170 = getelementptr inbounds %struct.ImageParameters, ptr %188, i64 0, i32 97
  %189 = load i32, ptr %NoResidueDirect170, align 8
  %cmp171 = icmp eq i32 %189, 1
  %or.cond251 = select i1 %cmp171, i1 true, i1 %3
  %190 = load i32, ptr %coeff_cost, align 4
  %cmp176 = icmp sgt i32 %190, 4
  %or.cond252.not = select i1 %or.cond251, i1 true, i1 %cmp176
  br i1 %or.cond252.not, label %if.end247, label %land.lhs.true178

land.lhs.true178:                                 ; preds = %if.end169
  %qp_scaled179 = getelementptr inbounds %struct.ImageParameters, ptr %188, i64 0, i32 11
  %191 = load i32, ptr %qp_scaled179, align 4
  %cmp180.not = icmp eq i32 %191, 0
  br i1 %cmp180.not, label %lor.lhs.false182, label %land.lhs.true186

lor.lhs.false182:                                 ; preds = %land.lhs.true178
  %lossless_qpprime_flag183 = getelementptr inbounds %struct.ImageParameters, ptr %188, i64 0, i32 161
  %192 = load i32, ptr %lossless_qpprime_flag183, align 4
  %cmp184 = icmp eq i32 %192, 0
  br i1 %cmp184, label %land.lhs.true186, label %if.end247

land.lhs.true186:                                 ; preds = %lor.lhs.false182, %land.lhs.true178
  %type187 = getelementptr inbounds %struct.ImageParameters, ptr %188, i64 0, i32 5
  %193 = load i32, ptr %type187, align 4
  %cmp188 = icmp eq i32 %193, 3
  br i1 %cmp188, label %land.lhs.true190, label %if.then196

land.lhs.true190:                                 ; preds = %land.lhs.true186
  %194 = load i32, ptr @si_frame_indicator, align 4
  %cmp191 = icmp eq i32 %194, 1
  %195 = load i32, ptr @sp2_frame_indicator, align 4
  %cmp194 = icmp eq i32 %195, 1
  %or.cond253 = select i1 %cmp191, i1 true, i1 %cmp194
  br i1 %or.cond253, label %if.end247, label %if.then196

if.then196:                                       ; preds = %land.lhs.true190, %land.lhs.true186
  store i32 0, ptr %coeff_cost, align 4
  %sub197 = sub nsw i32 63, %shl2
  %196 = load i32, ptr %cbp, align 4
  %and198 = and i32 %196, %sub197
  store i32 %and198, ptr %cbp, align 4
  %mul201 = shl nuw nsw i32 %and, 1
  %sub202 = sub nsw i32 %0, %mul201
  %shl203 = shl i32 51, %sub202
  %not = xor i32 %shl203, -1
  %conv204 = sext i32 %not to i64
  %197 = load i64, ptr %cbp_blk, align 8
  %and205 = and i64 %197, %conv204
  store i64 %and205, ptr %cbp_blk, align 8
  %add207 = add nsw i32 %shl, 8
  %idxprom221 = zext i32 %shl1 to i64
  %198 = sext i32 %shl to i64
  %199 = sext i32 %add207 to i64
  %200 = load ptr, ptr @enc_picture, align 8
  %imgY = getelementptr inbounds %struct.storable_picture, ptr %200, i64 0, i32 29
  %201 = load ptr, ptr %imgY, align 8
  %pix_y211 = getelementptr inbounds %struct.ImageParameters, ptr %188, i64 0, i32 40
  %202 = load i32, ptr %pix_y211, align 4
  %203 = sext i32 %202 to i64
  %204 = add nsw i64 %203, %198
  %arrayidx214 = getelementptr inbounds ptr, ptr %201, i64 %204
  %205 = load ptr, ptr %arrayidx214, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, ptr %188, i64 0, i32 39
  %206 = load i32, ptr %pix_x, align 8
  %add215 = add nsw i32 %206, %shl1
  %idxprom216 = sext i32 %add215 to i64
  %arrayidx217 = getelementptr inbounds i16, ptr %205, i64 %idxprom216
  %arrayidx222 = getelementptr inbounds %struct.ImageParameters, ptr %188, i64 0, i32 51, i64 %198, i64 %idxprom221
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %arrayidx217, ptr noundef nonnull align 2 dereferenceable(16) %arrayidx222, i64 16, i1 false)
  %indvars.iv.next447 = or i64 %198, 1
  %cmp208 = icmp slt i64 %indvars.iv.next447, %199
  br i1 %cmp208, label %for.body210.1, label %for.end225

for.body210.1:                                    ; preds = %if.then196
  %207 = load ptr, ptr @enc_picture, align 8
  %imgY.1 = getelementptr inbounds %struct.storable_picture, ptr %207, i64 0, i32 29
  %208 = load ptr, ptr %imgY.1, align 8
  %209 = load ptr, ptr @img, align 8
  %pix_y211.1 = getelementptr inbounds %struct.ImageParameters, ptr %209, i64 0, i32 40
  %210 = load i32, ptr %pix_y211.1, align 4
  %211 = sext i32 %210 to i64
  %212 = add nsw i64 %indvars.iv.next447, %211
  %arrayidx214.1 = getelementptr inbounds ptr, ptr %208, i64 %212
  %213 = load ptr, ptr %arrayidx214.1, align 8
  %pix_x.1 = getelementptr inbounds %struct.ImageParameters, ptr %209, i64 0, i32 39
  %214 = load i32, ptr %pix_x.1, align 8
  %add215.1 = add nsw i32 %214, %shl1
  %idxprom216.1 = sext i32 %add215.1 to i64
  %arrayidx217.1 = getelementptr inbounds i16, ptr %213, i64 %idxprom216.1
  %arrayidx222.1 = getelementptr inbounds %struct.ImageParameters, ptr %209, i64 0, i32 51, i64 %indvars.iv.next447, i64 %idxprom221
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %arrayidx217.1, ptr noundef nonnull align 2 dereferenceable(16) %arrayidx222.1, i64 16, i1 false)
  %indvars.iv.next447.1 = or i64 %198, 2
  %215 = load ptr, ptr @enc_picture, align 8
  %imgY.2 = getelementptr inbounds %struct.storable_picture, ptr %215, i64 0, i32 29
  %216 = load ptr, ptr %imgY.2, align 8
  %217 = load ptr, ptr @img, align 8
  %pix_y211.2 = getelementptr inbounds %struct.ImageParameters, ptr %217, i64 0, i32 40
  %218 = load i32, ptr %pix_y211.2, align 4
  %219 = sext i32 %218 to i64
  %220 = add nsw i64 %indvars.iv.next447.1, %219
  %arrayidx214.2 = getelementptr inbounds ptr, ptr %216, i64 %220
  %221 = load ptr, ptr %arrayidx214.2, align 8
  %pix_x.2 = getelementptr inbounds %struct.ImageParameters, ptr %217, i64 0, i32 39
  %222 = load i32, ptr %pix_x.2, align 8
  %add215.2 = add nsw i32 %222, %shl1
  %idxprom216.2 = sext i32 %add215.2 to i64
  %arrayidx217.2 = getelementptr inbounds i16, ptr %221, i64 %idxprom216.2
  %arrayidx222.2 = getelementptr inbounds %struct.ImageParameters, ptr %217, i64 0, i32 51, i64 %indvars.iv.next447.1, i64 %idxprom221
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %arrayidx217.2, ptr noundef nonnull align 2 dereferenceable(16) %arrayidx222.2, i64 16, i1 false)
  %indvars.iv.next447.2 = or i64 %198, 3
  %223 = load ptr, ptr @enc_picture, align 8
  %imgY.3 = getelementptr inbounds %struct.storable_picture, ptr %223, i64 0, i32 29
  %224 = load ptr, ptr %imgY.3, align 8
  %225 = load ptr, ptr @img, align 8
  %pix_y211.3 = getelementptr inbounds %struct.ImageParameters, ptr %225, i64 0, i32 40
  %226 = load i32, ptr %pix_y211.3, align 4
  %227 = sext i32 %226 to i64
  %228 = add nsw i64 %indvars.iv.next447.2, %227
  %arrayidx214.3 = getelementptr inbounds ptr, ptr %224, i64 %228
  %229 = load ptr, ptr %arrayidx214.3, align 8
  %pix_x.3 = getelementptr inbounds %struct.ImageParameters, ptr %225, i64 0, i32 39
  %230 = load i32, ptr %pix_x.3, align 8
  %add215.3 = add nsw i32 %230, %shl1
  %idxprom216.3 = sext i32 %add215.3 to i64
  %arrayidx217.3 = getelementptr inbounds i16, ptr %229, i64 %idxprom216.3
  %arrayidx222.3 = getelementptr inbounds %struct.ImageParameters, ptr %225, i64 0, i32 51, i64 %indvars.iv.next447.2, i64 %idxprom221
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %arrayidx217.3, ptr noundef nonnull align 2 dereferenceable(16) %arrayidx222.3, i64 16, i1 false)
  %indvars.iv.next447.3 = or i64 %198, 4
  %231 = load ptr, ptr @enc_picture, align 8
  %imgY.4 = getelementptr inbounds %struct.storable_picture, ptr %231, i64 0, i32 29
  %232 = load ptr, ptr %imgY.4, align 8
  %233 = load ptr, ptr @img, align 8
  %pix_y211.4 = getelementptr inbounds %struct.ImageParameters, ptr %233, i64 0, i32 40
  %234 = load i32, ptr %pix_y211.4, align 4
  %235 = sext i32 %234 to i64
  %236 = add nsw i64 %indvars.iv.next447.3, %235
  %arrayidx214.4 = getelementptr inbounds ptr, ptr %232, i64 %236
  %237 = load ptr, ptr %arrayidx214.4, align 8
  %pix_x.4 = getelementptr inbounds %struct.ImageParameters, ptr %233, i64 0, i32 39
  %238 = load i32, ptr %pix_x.4, align 8
  %add215.4 = add nsw i32 %238, %shl1
  %idxprom216.4 = sext i32 %add215.4 to i64
  %arrayidx217.4 = getelementptr inbounds i16, ptr %237, i64 %idxprom216.4
  %arrayidx222.4 = getelementptr inbounds %struct.ImageParameters, ptr %233, i64 0, i32 51, i64 %indvars.iv.next447.3, i64 %idxprom221
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %arrayidx217.4, ptr noundef nonnull align 2 dereferenceable(16) %arrayidx222.4, i64 16, i1 false)
  %indvars.iv.next447.4 = or i64 %198, 5
  %239 = load ptr, ptr @enc_picture, align 8
  %imgY.5 = getelementptr inbounds %struct.storable_picture, ptr %239, i64 0, i32 29
  %240 = load ptr, ptr %imgY.5, align 8
  %241 = load ptr, ptr @img, align 8
  %pix_y211.5 = getelementptr inbounds %struct.ImageParameters, ptr %241, i64 0, i32 40
  %242 = load i32, ptr %pix_y211.5, align 4
  %243 = sext i32 %242 to i64
  %244 = add nsw i64 %indvars.iv.next447.4, %243
  %arrayidx214.5 = getelementptr inbounds ptr, ptr %240, i64 %244
  %245 = load ptr, ptr %arrayidx214.5, align 8
  %pix_x.5 = getelementptr inbounds %struct.ImageParameters, ptr %241, i64 0, i32 39
  %246 = load i32, ptr %pix_x.5, align 8
  %add215.5 = add nsw i32 %246, %shl1
  %idxprom216.5 = sext i32 %add215.5 to i64
  %arrayidx217.5 = getelementptr inbounds i16, ptr %245, i64 %idxprom216.5
  %arrayidx222.5 = getelementptr inbounds %struct.ImageParameters, ptr %241, i64 0, i32 51, i64 %indvars.iv.next447.4, i64 %idxprom221
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %arrayidx217.5, ptr noundef nonnull align 2 dereferenceable(16) %arrayidx222.5, i64 16, i1 false)
  %indvars.iv.next447.5 = or i64 %198, 6
  %247 = load ptr, ptr @enc_picture, align 8
  %imgY.6 = getelementptr inbounds %struct.storable_picture, ptr %247, i64 0, i32 29
  %248 = load ptr, ptr %imgY.6, align 8
  %249 = load ptr, ptr @img, align 8
  %pix_y211.6 = getelementptr inbounds %struct.ImageParameters, ptr %249, i64 0, i32 40
  %250 = load i32, ptr %pix_y211.6, align 4
  %251 = sext i32 %250 to i64
  %252 = add nsw i64 %indvars.iv.next447.5, %251
  %arrayidx214.6 = getelementptr inbounds ptr, ptr %248, i64 %252
  %253 = load ptr, ptr %arrayidx214.6, align 8
  %pix_x.6 = getelementptr inbounds %struct.ImageParameters, ptr %249, i64 0, i32 39
  %254 = load i32, ptr %pix_x.6, align 8
  %add215.6 = add nsw i32 %254, %shl1
  %idxprom216.6 = sext i32 %add215.6 to i64
  %arrayidx217.6 = getelementptr inbounds i16, ptr %253, i64 %idxprom216.6
  %arrayidx222.6 = getelementptr inbounds %struct.ImageParameters, ptr %249, i64 0, i32 51, i64 %indvars.iv.next447.5, i64 %idxprom221
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %arrayidx217.6, ptr noundef nonnull align 2 dereferenceable(16) %arrayidx222.6, i64 16, i1 false)
  %indvars.iv.next447.6 = or i64 %198, 7
  %255 = load ptr, ptr @enc_picture, align 8
  %imgY.7 = getelementptr inbounds %struct.storable_picture, ptr %255, i64 0, i32 29
  %256 = load ptr, ptr %imgY.7, align 8
  %257 = load ptr, ptr @img, align 8
  %pix_y211.7 = getelementptr inbounds %struct.ImageParameters, ptr %257, i64 0, i32 40
  %258 = load i32, ptr %pix_y211.7, align 4
  %259 = sext i32 %258 to i64
  %260 = add nsw i64 %indvars.iv.next447.6, %259
  %arrayidx214.7 = getelementptr inbounds ptr, ptr %256, i64 %260
  %261 = load ptr, ptr %arrayidx214.7, align 8
  %pix_x.7 = getelementptr inbounds %struct.ImageParameters, ptr %257, i64 0, i32 39
  %262 = load i32, ptr %pix_x.7, align 8
  %add215.7 = add nsw i32 %262, %shl1
  %idxprom216.7 = sext i32 %add215.7 to i64
  %arrayidx217.7 = getelementptr inbounds i16, ptr %261, i64 %idxprom216.7
  %arrayidx222.7 = getelementptr inbounds %struct.ImageParameters, ptr %257, i64 0, i32 51, i64 %indvars.iv.next447.6, i64 %idxprom221
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(16) %arrayidx217.7, ptr noundef nonnull align 2 dereferenceable(16) %arrayidx222.7, i64 16, i1 false)
  br label %for.end225

for.end225:                                       ; preds = %for.body210.1, %if.then196
  %263 = load ptr, ptr @img, align 8
  %type226 = getelementptr inbounds %struct.ImageParameters, ptr %263, i64 0, i32 5
  %264 = load i32, ptr %type226, align 4
  %cmp227 = icmp eq i32 %264, 3
  br i1 %cmp227, label %for.inc243.1, label %if.end247

for.inc243.1:                                     ; preds = %for.end225
  call void @copyblock_sp(i32 noundef %shl1, i32 noundef %shl) #17
  %add241 = or i32 %0, 4
  call void @copyblock_sp(i32 noundef %shl1, i32 noundef %add241) #17
  %add244 = or i32 %shl1, 4
  call void @copyblock_sp(i32 noundef %add244, i32 noundef %shl) #17
  call void @copyblock_sp(i32 noundef %add244, i32 noundef %add241) #17
  br label %if.end247

if.end247:                                        ; preds = %for.inc243.1, %for.end225, %land.lhs.true190, %lor.lhs.false182, %if.end169
  %265 = load i32, ptr %coeff_cost, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %coeff_cost) #17
  ret i32 %265
}

; Function Attrs: nounwind uwtable
define internal void @OneComponentChromaPrediction4x4_retrieve(ptr nocapture noundef writeonly %mpred, i32 noundef %block_c_x, i32 noundef %block_c_y, ptr nocapture noundef readonly %mv, i32 noundef %list_idx, i16 noundef signext %ref, i32 noundef %blocktype, i32 noundef %uv) #0 {
entry:
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  %list_offset1 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 21
  %3 = load i32, ptr %list_offset1, align 8
  %4 = load i32, ptr @chroma_shift_x, align 4
  %5 = load i32, ptr @chroma_shift_y, align 4
  %opix_c_x = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 45
  %6 = load i32, ptr %opix_c_x, align 8
  %add11 = add nsw i32 %3, %list_idx
  %idxprom12 = sext i32 %add11 to i64
  %arrayidx13 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %idxprom12
  %7 = load ptr, ptr %arrayidx13, align 8
  %idxprom14 = sext i16 %ref to i64
  %arrayidx15 = getelementptr inbounds ptr, ptr %7, i64 %idxprom14
  %8 = load ptr, ptr %arrayidx15, align 8
  %imgUV_sub = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 32
  %9 = load ptr, ptr %imgUV_sub, align 8
  %idxprom16 = sext i32 %uv to i64
  %arrayidx17 = getelementptr inbounds ptr, ptr %9, i64 %idxprom16
  %10 = load ptr, ptr %arrayidx17, align 8
  %11 = load ptr, ptr @active_sps, align 8
  %chroma_format_idc = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %11, i64 0, i32 8
  %12 = load i32, ptr %chroma_format_idc, align 4
  %cmp = icmp eq i32 %12, 1
  br i1 %cmp, label %cond.true, label %for.end

cond.true:                                        ; preds = %entry
  %chroma_vector_adjustment = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 26
  %13 = load i32, ptr %chroma_vector_adjustment, align 8
  %14 = add nsw i32 %13, 80
  br label %for.end

for.end:                                          ; preds = %entry, %cond.true
  %cond = phi i32 [ %14, %cond.true ], [ 80, %entry ]
  %add = add nsw i32 %block_c_x, 2
  %add8 = add nsw i32 %6, %add
  %shl9 = shl i32 %add8, %4
  %add10 = add nsw i32 %shl9, 80
  %add4 = add nsw i32 %6, %block_c_x
  %shl = shl i32 %add4, %4
  %add5 = add nsw i32 %shl, 80
  %sub = sub nsw i32 4, %4
  %shr3 = ashr i32 %add, %sub
  %shr = ashr i32 %block_c_x, %sub
  %sub2 = sub nsw i32 4, %5
  %size_x_cr_pad = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 24
  %15 = load i32, ptr %size_x_cr_pad, align 8
  store i32 %15, ptr @width_pad_cr, align 4
  %size_y_cr_pad = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 25
  %16 = load i32, ptr %size_y_cr_pad, align 4
  store i32 %16, ptr @height_pad_cr, align 4
  %idxprom33 = sext i32 %shr to i64
  %idxprom35 = sext i32 %list_idx to i64
  %idxprom39 = sext i32 %blocktype to i64
  %idxprom50 = sext i32 %shr3 to i64
  %shr27 = ashr i32 %block_c_y, %sub2
  %opix_c_y = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 46
  %17 = load i32, ptr %opix_c_y, align 4
  %add28 = add nsw i32 %17, %block_c_y
  %shl29 = shl i32 %add28, %5
  %add30 = add nsw i32 %shl29, %cond
  %idxprom31 = sext i32 %shr27 to i64
  %arrayidx32 = getelementptr inbounds ptr, ptr %mv, i64 %idxprom31
  %18 = load ptr, ptr %arrayidx32, align 8
  %arrayidx34 = getelementptr inbounds ptr, ptr %18, i64 %idxprom33
  %19 = load ptr, ptr %arrayidx34, align 8
  %arrayidx36 = getelementptr inbounds ptr, ptr %19, i64 %idxprom35
  %20 = load ptr, ptr %arrayidx36, align 8
  %arrayidx38 = getelementptr inbounds ptr, ptr %20, i64 %idxprom14
  %21 = load ptr, ptr %arrayidx38, align 8
  %arrayidx40 = getelementptr inbounds ptr, ptr %21, i64 %idxprom39
  %22 = load ptr, ptr %arrayidx40, align 8
  %23 = load i16, ptr %22, align 2
  %conv = sext i16 %23 to i32
  %add42 = add nsw i32 %add5, %conv
  %arrayidx43 = getelementptr inbounds i16, ptr %22, i64 1
  %24 = load i16, ptr %arrayidx43, align 2
  %conv44 = sext i16 %24 to i32
  %add45 = add nsw i32 %add30, %conv44
  %call = tail call ptr @UMVLine8X_chroma(ptr noundef %10, i32 noundef %add45, i32 noundef %add42) #17
  %incdec.ptr = getelementptr inbounds i16, ptr %call, i64 1
  %25 = load i16, ptr %call, align 2
  %incdec.ptr46 = getelementptr inbounds i16, ptr %mpred, i64 1
  store i16 %25, ptr %mpred, align 2
  %26 = load i16, ptr %incdec.ptr, align 2
  %incdec.ptr47 = getelementptr inbounds i16, ptr %mpred, i64 2
  store i16 %26, ptr %incdec.ptr46, align 2
  %27 = load ptr, ptr %arrayidx32, align 8
  %arrayidx51 = getelementptr inbounds ptr, ptr %27, i64 %idxprom50
  %28 = load ptr, ptr %arrayidx51, align 8
  %arrayidx53 = getelementptr inbounds ptr, ptr %28, i64 %idxprom35
  %29 = load ptr, ptr %arrayidx53, align 8
  %arrayidx55 = getelementptr inbounds ptr, ptr %29, i64 %idxprom14
  %30 = load ptr, ptr %arrayidx55, align 8
  %arrayidx57 = getelementptr inbounds ptr, ptr %30, i64 %idxprom39
  %31 = load ptr, ptr %arrayidx57, align 8
  %32 = load i16, ptr %31, align 2
  %conv59 = sext i16 %32 to i32
  %add60 = add nsw i32 %add10, %conv59
  %arrayidx61 = getelementptr inbounds i16, ptr %31, i64 1
  %33 = load i16, ptr %arrayidx61, align 2
  %conv62 = sext i16 %33 to i32
  %add63 = add nsw i32 %add30, %conv62
  %call64 = tail call ptr @UMVLine8X_chroma(ptr noundef %10, i32 noundef %add63, i32 noundef %add60) #17
  %incdec.ptr65 = getelementptr inbounds i16, ptr %call64, i64 1
  %34 = load i16, ptr %call64, align 2
  %incdec.ptr66 = getelementptr inbounds i16, ptr %mpred, i64 3
  store i16 %34, ptr %incdec.ptr47, align 2
  %35 = load i16, ptr %incdec.ptr65, align 2
  store i16 %35, ptr %incdec.ptr66, align 2
  %inc = add nsw i32 %block_c_y, 1
  %incdec.ptr67 = getelementptr inbounds i16, ptr %mpred, i64 4
  %shr27.1 = ashr i32 %inc, %sub2
  %36 = load ptr, ptr @img, align 8
  %opix_c_y.1 = getelementptr inbounds %struct.ImageParameters, ptr %36, i64 0, i32 46
  %37 = load i32, ptr %opix_c_y.1, align 4
  %add28.1 = add nsw i32 %37, %inc
  %38 = load i32, ptr @chroma_shift_y, align 4
  %shl29.1 = shl i32 %add28.1, %38
  %add30.1 = add nsw i32 %shl29.1, %cond
  %idxprom31.1 = sext i32 %shr27.1 to i64
  %arrayidx32.1 = getelementptr inbounds ptr, ptr %mv, i64 %idxprom31.1
  %39 = load ptr, ptr %arrayidx32.1, align 8
  %arrayidx34.1 = getelementptr inbounds ptr, ptr %39, i64 %idxprom33
  %40 = load ptr, ptr %arrayidx34.1, align 8
  %arrayidx36.1 = getelementptr inbounds ptr, ptr %40, i64 %idxprom35
  %41 = load ptr, ptr %arrayidx36.1, align 8
  %arrayidx38.1 = getelementptr inbounds ptr, ptr %41, i64 %idxprom14
  %42 = load ptr, ptr %arrayidx38.1, align 8
  %arrayidx40.1 = getelementptr inbounds ptr, ptr %42, i64 %idxprom39
  %43 = load ptr, ptr %arrayidx40.1, align 8
  %44 = load i16, ptr %43, align 2
  %conv.1 = sext i16 %44 to i32
  %add42.1 = add nsw i32 %add5, %conv.1
  %arrayidx43.1 = getelementptr inbounds i16, ptr %43, i64 1
  %45 = load i16, ptr %arrayidx43.1, align 2
  %conv44.1 = sext i16 %45 to i32
  %add45.1 = add nsw i32 %add30.1, %conv44.1
  %call.1 = tail call ptr @UMVLine8X_chroma(ptr noundef %10, i32 noundef %add45.1, i32 noundef %add42.1) #17
  %incdec.ptr.1 = getelementptr inbounds i16, ptr %call.1, i64 1
  %46 = load i16, ptr %call.1, align 2
  %incdec.ptr46.1 = getelementptr inbounds i16, ptr %mpred, i64 5
  store i16 %46, ptr %incdec.ptr67, align 2
  %47 = load i16, ptr %incdec.ptr.1, align 2
  %incdec.ptr47.1 = getelementptr inbounds i16, ptr %mpred, i64 6
  store i16 %47, ptr %incdec.ptr46.1, align 2
  %48 = load ptr, ptr %arrayidx32.1, align 8
  %arrayidx51.1 = getelementptr inbounds ptr, ptr %48, i64 %idxprom50
  %49 = load ptr, ptr %arrayidx51.1, align 8
  %arrayidx53.1 = getelementptr inbounds ptr, ptr %49, i64 %idxprom35
  %50 = load ptr, ptr %arrayidx53.1, align 8
  %arrayidx55.1 = getelementptr inbounds ptr, ptr %50, i64 %idxprom14
  %51 = load ptr, ptr %arrayidx55.1, align 8
  %arrayidx57.1 = getelementptr inbounds ptr, ptr %51, i64 %idxprom39
  %52 = load ptr, ptr %arrayidx57.1, align 8
  %53 = load i16, ptr %52, align 2
  %conv59.1 = sext i16 %53 to i32
  %add60.1 = add nsw i32 %add10, %conv59.1
  %arrayidx61.1 = getelementptr inbounds i16, ptr %52, i64 1
  %54 = load i16, ptr %arrayidx61.1, align 2
  %conv62.1 = sext i16 %54 to i32
  %add63.1 = add nsw i32 %add30.1, %conv62.1
  %call64.1 = tail call ptr @UMVLine8X_chroma(ptr noundef %10, i32 noundef %add63.1, i32 noundef %add60.1) #17
  %incdec.ptr65.1 = getelementptr inbounds i16, ptr %call64.1, i64 1
  %55 = load i16, ptr %call64.1, align 2
  %incdec.ptr66.1 = getelementptr inbounds i16, ptr %mpred, i64 7
  store i16 %55, ptr %incdec.ptr47.1, align 2
  %56 = load i16, ptr %incdec.ptr65.1, align 2
  %incdec.ptr67.1 = getelementptr inbounds i16, ptr %mpred, i64 8
  store i16 %56, ptr %incdec.ptr66.1, align 2
  %inc.1 = add nsw i32 %block_c_y, 2
  %shr27.2 = ashr i32 %inc.1, %sub2
  %57 = load ptr, ptr @img, align 8
  %opix_c_y.2 = getelementptr inbounds %struct.ImageParameters, ptr %57, i64 0, i32 46
  %58 = load i32, ptr %opix_c_y.2, align 4
  %add28.2 = add nsw i32 %58, %inc.1
  %59 = load i32, ptr @chroma_shift_y, align 4
  %shl29.2 = shl i32 %add28.2, %59
  %add30.2 = add nsw i32 %shl29.2, %cond
  %idxprom31.2 = sext i32 %shr27.2 to i64
  %arrayidx32.2 = getelementptr inbounds ptr, ptr %mv, i64 %idxprom31.2
  %60 = load ptr, ptr %arrayidx32.2, align 8
  %arrayidx34.2 = getelementptr inbounds ptr, ptr %60, i64 %idxprom33
  %61 = load ptr, ptr %arrayidx34.2, align 8
  %arrayidx36.2 = getelementptr inbounds ptr, ptr %61, i64 %idxprom35
  %62 = load ptr, ptr %arrayidx36.2, align 8
  %arrayidx38.2 = getelementptr inbounds ptr, ptr %62, i64 %idxprom14
  %63 = load ptr, ptr %arrayidx38.2, align 8
  %arrayidx40.2 = getelementptr inbounds ptr, ptr %63, i64 %idxprom39
  %64 = load ptr, ptr %arrayidx40.2, align 8
  %65 = load i16, ptr %64, align 2
  %conv.2 = sext i16 %65 to i32
  %add42.2 = add nsw i32 %add5, %conv.2
  %arrayidx43.2 = getelementptr inbounds i16, ptr %64, i64 1
  %66 = load i16, ptr %arrayidx43.2, align 2
  %conv44.2 = sext i16 %66 to i32
  %add45.2 = add nsw i32 %add30.2, %conv44.2
  %call.2 = tail call ptr @UMVLine8X_chroma(ptr noundef %10, i32 noundef %add45.2, i32 noundef %add42.2) #17
  %incdec.ptr.2 = getelementptr inbounds i16, ptr %call.2, i64 1
  %67 = load i16, ptr %call.2, align 2
  %incdec.ptr46.2 = getelementptr inbounds i16, ptr %mpred, i64 9
  store i16 %67, ptr %incdec.ptr67.1, align 2
  %68 = load i16, ptr %incdec.ptr.2, align 2
  %incdec.ptr47.2 = getelementptr inbounds i16, ptr %mpred, i64 10
  store i16 %68, ptr %incdec.ptr46.2, align 2
  %69 = load ptr, ptr %arrayidx32.2, align 8
  %arrayidx51.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom50
  %70 = load ptr, ptr %arrayidx51.2, align 8
  %arrayidx53.2 = getelementptr inbounds ptr, ptr %70, i64 %idxprom35
  %71 = load ptr, ptr %arrayidx53.2, align 8
  %arrayidx55.2 = getelementptr inbounds ptr, ptr %71, i64 %idxprom14
  %72 = load ptr, ptr %arrayidx55.2, align 8
  %arrayidx57.2 = getelementptr inbounds ptr, ptr %72, i64 %idxprom39
  %73 = load ptr, ptr %arrayidx57.2, align 8
  %74 = load i16, ptr %73, align 2
  %conv59.2 = sext i16 %74 to i32
  %add60.2 = add nsw i32 %add10, %conv59.2
  %arrayidx61.2 = getelementptr inbounds i16, ptr %73, i64 1
  %75 = load i16, ptr %arrayidx61.2, align 2
  %conv62.2 = sext i16 %75 to i32
  %add63.2 = add nsw i32 %add30.2, %conv62.2
  %call64.2 = tail call ptr @UMVLine8X_chroma(ptr noundef %10, i32 noundef %add63.2, i32 noundef %add60.2) #17
  %incdec.ptr65.2 = getelementptr inbounds i16, ptr %call64.2, i64 1
  %76 = load i16, ptr %call64.2, align 2
  %incdec.ptr66.2 = getelementptr inbounds i16, ptr %mpred, i64 11
  store i16 %76, ptr %incdec.ptr47.2, align 2
  %77 = load i16, ptr %incdec.ptr65.2, align 2
  %incdec.ptr67.2 = getelementptr inbounds i16, ptr %mpred, i64 12
  store i16 %77, ptr %incdec.ptr66.2, align 2
  %inc.2 = add nsw i32 %block_c_y, 3
  %shr27.3 = ashr i32 %inc.2, %sub2
  %78 = load ptr, ptr @img, align 8
  %opix_c_y.3 = getelementptr inbounds %struct.ImageParameters, ptr %78, i64 0, i32 46
  %79 = load i32, ptr %opix_c_y.3, align 4
  %add28.3 = add nsw i32 %79, %inc.2
  %80 = load i32, ptr @chroma_shift_y, align 4
  %shl29.3 = shl i32 %add28.3, %80
  %add30.3 = add nsw i32 %shl29.3, %cond
  %idxprom31.3 = sext i32 %shr27.3 to i64
  %arrayidx32.3 = getelementptr inbounds ptr, ptr %mv, i64 %idxprom31.3
  %81 = load ptr, ptr %arrayidx32.3, align 8
  %arrayidx34.3 = getelementptr inbounds ptr, ptr %81, i64 %idxprom33
  %82 = load ptr, ptr %arrayidx34.3, align 8
  %arrayidx36.3 = getelementptr inbounds ptr, ptr %82, i64 %idxprom35
  %83 = load ptr, ptr %arrayidx36.3, align 8
  %arrayidx38.3 = getelementptr inbounds ptr, ptr %83, i64 %idxprom14
  %84 = load ptr, ptr %arrayidx38.3, align 8
  %arrayidx40.3 = getelementptr inbounds ptr, ptr %84, i64 %idxprom39
  %85 = load ptr, ptr %arrayidx40.3, align 8
  %86 = load i16, ptr %85, align 2
  %conv.3 = sext i16 %86 to i32
  %add42.3 = add nsw i32 %add5, %conv.3
  %arrayidx43.3 = getelementptr inbounds i16, ptr %85, i64 1
  %87 = load i16, ptr %arrayidx43.3, align 2
  %conv44.3 = sext i16 %87 to i32
  %add45.3 = add nsw i32 %add30.3, %conv44.3
  %call.3 = tail call ptr @UMVLine8X_chroma(ptr noundef %10, i32 noundef %add45.3, i32 noundef %add42.3) #17
  %incdec.ptr.3 = getelementptr inbounds i16, ptr %call.3, i64 1
  %88 = load i16, ptr %call.3, align 2
  %incdec.ptr46.3 = getelementptr inbounds i16, ptr %mpred, i64 13
  store i16 %88, ptr %incdec.ptr67.2, align 2
  %89 = load i16, ptr %incdec.ptr.3, align 2
  %incdec.ptr47.3 = getelementptr inbounds i16, ptr %mpred, i64 14
  store i16 %89, ptr %incdec.ptr46.3, align 2
  %90 = load ptr, ptr %arrayidx32.3, align 8
  %arrayidx51.3 = getelementptr inbounds ptr, ptr %90, i64 %idxprom50
  %91 = load ptr, ptr %arrayidx51.3, align 8
  %arrayidx53.3 = getelementptr inbounds ptr, ptr %91, i64 %idxprom35
  %92 = load ptr, ptr %arrayidx53.3, align 8
  %arrayidx55.3 = getelementptr inbounds ptr, ptr %92, i64 %idxprom14
  %93 = load ptr, ptr %arrayidx55.3, align 8
  %arrayidx57.3 = getelementptr inbounds ptr, ptr %93, i64 %idxprom39
  %94 = load ptr, ptr %arrayidx57.3, align 8
  %95 = load i16, ptr %94, align 2
  %conv59.3 = sext i16 %95 to i32
  %add60.3 = add nsw i32 %add10, %conv59.3
  %arrayidx61.3 = getelementptr inbounds i16, ptr %94, i64 1
  %96 = load i16, ptr %arrayidx61.3, align 2
  %conv62.3 = sext i16 %96 to i32
  %add63.3 = add nsw i32 %add30.3, %conv62.3
  %call64.3 = tail call ptr @UMVLine8X_chroma(ptr noundef %10, i32 noundef %add63.3, i32 noundef %add60.3) #17
  %incdec.ptr65.3 = getelementptr inbounds i16, ptr %call64.3, i64 1
  %97 = load i16, ptr %call64.3, align 2
  %incdec.ptr66.3 = getelementptr inbounds i16, ptr %mpred, i64 15
  store i16 %97, ptr %incdec.ptr47.3, align 2
  %98 = load i16, ptr %incdec.ptr65.3, align 2
  store i16 %98, ptr %incdec.ptr66.3, align 2
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @OneComponentChromaPrediction4x4_regenerate(ptr nocapture noundef writeonly %mpred, i32 noundef %block_c_x, i32 noundef %block_c_y, ptr nocapture noundef readonly %mv, i32 noundef %list_idx, i16 noundef signext %ref, i32 noundef %blocktype, i32 noundef %uv) #8 {
entry:
  %0 = load ptr, ptr @img, align 8
  %mb_cr_size_x = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 162
  %1 = load i32, ptr %mb_cr_size_x, align 8
  %div = sdiv i32 64, %1
  %sub = add nsw i32 %div, -1
  %mb_cr_size_y = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 163
  %2 = load i32, ptr %mb_cr_size_y, align 4
  %div1 = sdiv i32 64, %2
  %sub2 = add nsw i32 %div1, -1
  %mul = mul nsw i32 %div1, %div
  %shr = ashr i32 %mul, 1
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %3 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %4 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %4 to i64
  %list_offset3 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 21
  %5 = load i32, ptr %list_offset3, align 8
  %tobool.not = icmp ne i32 %5, 0
  %height_cr6 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 20
  %6 = load i32, ptr %height_cr6, align 8
  %shr4 = zext i1 %tobool.not to i32
  %cond.in = ashr i32 %6, %shr4
  %cond = add nsw i32 %cond.in, -1
  %width_cr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 16
  %7 = load i32, ptr %width_cr, align 8
  %sub8 = add nsw i32 %7, -1
  %shr10 = ashr i32 %2, 2
  %shr12 = ashr i32 %1, 2
  %add = add nsw i32 %5, %list_idx
  %idxprom13 = sext i32 %add to i64
  %arrayidx14 = getelementptr inbounds [6 x ptr], ptr @listX, i64 0, i64 %idxprom13
  %8 = load ptr, ptr %arrayidx14, align 8
  %idxprom15 = sext i16 %ref to i64
  %arrayidx16 = getelementptr inbounds ptr, ptr %8, i64 %idxprom15
  %9 = load ptr, ptr %arrayidx16, align 8
  %imgUV = getelementptr inbounds %struct.storable_picture, ptr %9, i64 0, i32 33
  %10 = load ptr, ptr %imgUV, align 8
  %idxprom17 = sext i32 %uv to i64
  %arrayidx18 = getelementptr inbounds ptr, ptr %10, i64 %idxprom17
  %11 = load ptr, ptr %arrayidx18, align 8
  %opix_c_y = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 46
  %12 = load i32, ptr %opix_c_y, align 4
  %idxprom32 = sext i32 %list_idx to i64
  %idxprom36 = sext i32 %blocktype to i64
  %opix_c_x = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 45
  %13 = load i32, ptr %opix_c_x, align 8
  %14 = load ptr, ptr @active_sps, align 8
  %chroma_format_idc = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %14, i64 0, i32 8
  %15 = load i32, ptr %chroma_format_idc, align 4
  %cmp45 = icmp eq i32 %15, 1
  %chroma_vector_adjustment = getelementptr inbounds %struct.storable_picture, ptr %9, i64 0, i32 26
  %16 = add nsw i32 %block_c_x, 3
  %17 = add nsw i32 %block_c_y, 3
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc96
  %mpred.addr.0157 = phi ptr [ %mpred, %entry ], [ %incdec.ptr, %for.inc96 ]
  %j.0156 = phi i32 [ %block_c_y, %entry ], [ %inc97, %for.inc96 ]
  %div20 = sdiv i32 %j.0156, %shr10
  %add21 = add nsw i32 %12, %j.0156
  %mul22 = mul nsw i32 %add21, %div1
  %idxprom28 = sext i32 %div20 to i64
  %arrayidx29 = getelementptr inbounds ptr, ptr %mv, i64 %idxprom28
  %18 = load ptr, ptr %arrayidx29, align 8
  br label %for.body26

for.body26:                                       ; preds = %for.body, %if.end
  %mpred.addr.1155 = phi ptr [ %mpred.addr.0157, %for.body ], [ %incdec.ptr, %if.end ]
  %i.0154 = phi i32 [ %block_c_x, %for.body ], [ %inc, %if.end ]
  %div27 = sdiv i32 %i.0154, %shr12
  %idxprom30 = sext i32 %div27 to i64
  %arrayidx31 = getelementptr inbounds ptr, ptr %18, i64 %idxprom30
  %19 = load ptr, ptr %arrayidx31, align 8
  %arrayidx33 = getelementptr inbounds ptr, ptr %19, i64 %idxprom32
  %20 = load ptr, ptr %arrayidx33, align 8
  %arrayidx35 = getelementptr inbounds ptr, ptr %20, i64 %idxprom15
  %21 = load ptr, ptr %arrayidx35, align 8
  %arrayidx37 = getelementptr inbounds ptr, ptr %21, i64 %idxprom36
  %22 = load ptr, ptr %arrayidx37, align 8
  %add38 = add nsw i32 %13, %i.0154
  %mul39 = mul nsw i32 %add38, %div
  %23 = load i16, ptr %22, align 2
  %conv = sext i16 %23 to i32
  %add41 = add nsw i32 %mul39, %conv
  %arrayidx42 = getelementptr inbounds i16, ptr %22, i64 1
  %24 = load i16, ptr %arrayidx42, align 2
  %conv43 = sext i16 %24 to i32
  %add44 = add nsw i32 %mul22, %conv43
  br i1 %cmp45, label %if.then, label %if.end

if.then:                                          ; preds = %for.body26
  %25 = load i32, ptr %chroma_vector_adjustment, align 8
  %add49 = add nsw i32 %25, %add44
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body26
  %jj.0 = phi i32 [ %add49, %if.then ], [ %add44, %for.body26 ]
  %div50 = sdiv i32 %add41, %div
  %cond.i.i = tail call i32 @llvm.smax.i32(i32 %div50, i32 0)
  %cond.i4.i = tail call i32 @llvm.smin.i32(i32 %cond.i.i, i32 %sub8)
  %div51 = sdiv i32 %jj.0, %div1
  %cond.i.i146 = tail call i32 @llvm.smax.i32(i32 %div51, i32 0)
  %cond.i4.i147 = tail call i32 @llvm.smin.i32(i32 %cond.i.i146, i32 %cond)
  %add53 = add nsw i32 %add41, %sub
  %div54 = sdiv i32 %add53, %div
  %cond.i.i148 = tail call i32 @llvm.smax.i32(i32 %div54, i32 0)
  %cond.i4.i149 = tail call i32 @llvm.smin.i32(i32 %cond.i.i148, i32 %sub8)
  %add56 = add nsw i32 %jj.0, %sub2
  %div57 = sdiv i32 %add56, %div1
  %cond.i.i150 = tail call i32 @llvm.smax.i32(i32 %div57, i32 0)
  %cond.i4.i151 = tail call i32 @llvm.smin.i32(i32 %cond.i.i150, i32 %cond)
  %and = and i32 %add41, %sub
  %sub59 = sub nsw i32 %div, %and
  %and60 = and i32 %jj.0, %sub2
  %sub61 = sub nsw i32 %div1, %and60
  %idxprom63 = sext i32 %cond.i4.i147 to i64
  %arrayidx64 = getelementptr inbounds ptr, ptr %11, i64 %idxprom63
  %26 = load ptr, ptr %arrayidx64, align 8
  %idxprom65 = sext i32 %cond.i4.i to i64
  %arrayidx66 = getelementptr inbounds i16, ptr %26, i64 %idxprom65
  %27 = load i16, ptr %arrayidx66, align 2
  %conv67 = zext i16 %27 to i32
  %mul68 = mul i32 %sub59, %conv67
  %idxprom72 = sext i32 %cond.i4.i149 to i64
  %arrayidx73 = getelementptr inbounds i16, ptr %26, i64 %idxprom72
  %28 = load i16, ptr %arrayidx73, align 2
  %conv74 = zext i16 %28 to i32
  %mul75 = mul i32 %and, %conv74
  %idxprom78 = sext i32 %cond.i4.i151 to i64
  %arrayidx79 = getelementptr inbounds ptr, ptr %11, i64 %idxprom78
  %29 = load ptr, ptr %arrayidx79, align 8
  %arrayidx81 = getelementptr inbounds i16, ptr %29, i64 %idxprom65
  %30 = load i16, ptr %arrayidx81, align 2
  %conv82 = zext i16 %30 to i32
  %mul83 = mul i32 %sub59, %conv82
  %arrayidx89 = getelementptr inbounds i16, ptr %29, i64 %idxprom72
  %31 = load i16, ptr %arrayidx89, align 2
  %conv90 = zext i16 %31 to i32
  %mul91 = mul i32 %and, %conv90
  %reass.add = add i32 %mul91, %mul83
  %reass.mul = mul i32 %reass.add, %and60
  %reass.add152 = add i32 %mul75, %mul68
  %reass.mul153 = mul i32 %reass.add152, %sub61
  %add92 = add i32 %reass.mul153, %shr
  %add93 = add i32 %add92, %reass.mul
  %div94 = sdiv i32 %add93, %mul
  %conv95 = trunc i32 %div94 to i16
  %incdec.ptr = getelementptr inbounds i16, ptr %mpred.addr.1155, i64 1
  store i16 %conv95, ptr %mpred.addr.1155, align 2
  %inc = add nsw i32 %i.0154, 1
  %cmp25 = icmp slt i32 %i.0154, %16
  br i1 %cmp25, label %for.body26, label %for.inc96

for.inc96:                                        ; preds = %if.end
  %inc97 = add nsw i32 %j.0156, 1
  %cmp = icmp slt i32 %j.0156, %17
  br i1 %cmp, label %for.body, label %for.end98

for.end98:                                        ; preds = %for.inc96
  ret void
}

declare i32 @dct_luma(i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare i32 @dct_luma_sp(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

declare i32 @dct_luma_sp2(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

declare i32 @dct_luma8x8(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare void @copyblock_sp(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @SetModesAndRefframe(i32 noundef %b8, ptr nocapture noundef writeonly %p_dir, ptr nocapture noundef writeonly %l0_mode, ptr nocapture noundef writeonly %l1_mode, ptr nocapture noundef writeonly %fw_ref, ptr nocapture noundef writeonly %bw_ref) local_unnamed_addr #9 {
entry:
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  %mul = and i32 %b8, -2
  %and = shl i32 %b8, 1
  %mul1 = and i32 %and, 2
  store i16 -1, ptr %bw_ref, align 2
  store i16 -1, ptr %fw_ref, align 2
  store i32 -1, ptr %l1_mode, align 4
  store i32 -1, ptr %l0_mode, align 4
  %idxprom2 = sext i32 %b8 to i64
  %arrayidx3 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 15, i64 %idxprom2
  %3 = load i32, ptr %arrayidx3, align 4
  %conv = trunc i32 %3 to i16
  store i16 %conv, ptr %p_dir, align 2
  %type = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %4 = load i32, ptr %type, align 4
  %cmp.not = icmp eq i32 %4, 1
  br i1 %cmp.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, ptr %5, i64 0, i32 35
  %6 = load ptr, ptr %ref_idx, align 8
  %7 = load ptr, ptr %6, align 8
  %block_y = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 38
  %8 = load i32, ptr %block_y, align 4
  %add = add nsw i32 %8, %mul
  %idxprom6 = sext i32 %add to i64
  %arrayidx7 = getelementptr inbounds ptr, ptr %7, i64 %idxprom6
  %9 = load ptr, ptr %arrayidx7, align 8
  %block_x = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 37
  %10 = load i32, ptr %block_x, align 8
  %add8 = add nsw i32 %10, %mul1
  %idxprom9 = sext i32 %add8 to i64
  %arrayidx10 = getelementptr inbounds i8, ptr %9, i64 %idxprom9
  %11 = load i8, ptr %arrayidx10, align 1
  %conv11 = sext i8 %11 to i16
  store i16 %conv11, ptr %fw_ref, align 2
  store i16 0, ptr %bw_ref, align 2
  %arrayidx13 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 14, i64 %idxprom2
  %12 = load i32, ptr %arrayidx13, align 4
  store i32 %12, ptr %l0_mode, align 4
  br label %if.end93

if.else:                                          ; preds = %entry
  switch i32 %3, label %if.else62 [
    i32 -1, label %if.then19
    i32 0, label %if.then26
    i32 1, label %if.then47
  ]

if.then19:                                        ; preds = %if.else
  store i16 -1, ptr %fw_ref, align 2
  store i16 -1, ptr %bw_ref, align 2
  store i32 0, ptr %l0_mode, align 4
  br label %if.end93

if.then26:                                        ; preds = %if.else
  %13 = load ptr, ptr @enc_picture, align 8
  %ref_idx27 = getelementptr inbounds %struct.storable_picture, ptr %13, i64 0, i32 35
  %14 = load ptr, ptr %ref_idx27, align 8
  %15 = load ptr, ptr %14, align 8
  %block_y29 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 38
  %16 = load i32, ptr %block_y29, align 4
  %add30 = add nsw i32 %16, %mul
  %idxprom31 = sext i32 %add30 to i64
  %arrayidx32 = getelementptr inbounds ptr, ptr %15, i64 %idxprom31
  %17 = load ptr, ptr %arrayidx32, align 8
  %block_x33 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 37
  %18 = load i32, ptr %block_x33, align 8
  %add34 = add nsw i32 %18, %mul1
  %idxprom35 = sext i32 %add34 to i64
  %arrayidx36 = getelementptr inbounds i8, ptr %17, i64 %idxprom35
  %19 = load i8, ptr %arrayidx36, align 1
  %conv37 = sext i8 %19 to i16
  store i16 %conv37, ptr %fw_ref, align 2
  store i16 0, ptr %bw_ref, align 2
  %arrayidx40 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 14, i64 %idxprom2
  %20 = load i32, ptr %arrayidx40, align 4
  store i32 %20, ptr %l0_mode, align 4
  br label %if.end93

if.then47:                                        ; preds = %if.else
  store i16 0, ptr %fw_ref, align 2
  %21 = load ptr, ptr @enc_picture, align 8
  %ref_idx48 = getelementptr inbounds %struct.storable_picture, ptr %21, i64 0, i32 35
  %22 = load ptr, ptr %ref_idx48, align 8
  %arrayidx49 = getelementptr inbounds ptr, ptr %22, i64 1
  %23 = load ptr, ptr %arrayidx49, align 8
  %block_y50 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 38
  %24 = load i32, ptr %block_y50, align 4
  %add51 = add nsw i32 %24, %mul
  %idxprom52 = sext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds ptr, ptr %23, i64 %idxprom52
  %25 = load ptr, ptr %arrayidx53, align 8
  %block_x54 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 37
  %26 = load i32, ptr %block_x54, align 8
  %add55 = add nsw i32 %26, %mul1
  %idxprom56 = sext i32 %add55 to i64
  %arrayidx57 = getelementptr inbounds i8, ptr %25, i64 %idxprom56
  %27 = load i8, ptr %arrayidx57, align 1
  %conv58 = sext i8 %27 to i16
  store i16 %conv58, ptr %bw_ref, align 2
  store i32 0, ptr %l0_mode, align 4
  %arrayidx61 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 14, i64 %idxprom2
  %28 = load i32, ptr %arrayidx61, align 4
  br label %if.end93

if.else62:                                        ; preds = %if.else
  %29 = load ptr, ptr @enc_picture, align 8
  %ref_idx63 = getelementptr inbounds %struct.storable_picture, ptr %29, i64 0, i32 35
  %30 = load ptr, ptr %ref_idx63, align 8
  %31 = load ptr, ptr %30, align 8
  %block_y65 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 38
  %32 = load i32, ptr %block_y65, align 4
  %add66 = add nsw i32 %32, %mul
  %idxprom67 = sext i32 %add66 to i64
  %arrayidx68 = getelementptr inbounds ptr, ptr %31, i64 %idxprom67
  %33 = load ptr, ptr %arrayidx68, align 8
  %block_x69 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 37
  %34 = load i32, ptr %block_x69, align 8
  %add70 = add nsw i32 %34, %mul1
  %idxprom71 = sext i32 %add70 to i64
  %arrayidx72 = getelementptr inbounds i8, ptr %33, i64 %idxprom71
  %35 = load i8, ptr %arrayidx72, align 1
  %conv73 = sext i8 %35 to i16
  store i16 %conv73, ptr %fw_ref, align 2
  %arrayidx75 = getelementptr inbounds ptr, ptr %30, i64 1
  %36 = load ptr, ptr %arrayidx75, align 8
  %arrayidx79 = getelementptr inbounds ptr, ptr %36, i64 %idxprom67
  %37 = load ptr, ptr %arrayidx79, align 8
  %arrayidx83 = getelementptr inbounds i8, ptr %37, i64 %idxprom71
  %38 = load i8, ptr %arrayidx83, align 1
  %conv84 = sext i8 %38 to i16
  store i16 %conv84, ptr %bw_ref, align 2
  %arrayidx87 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 14, i64 %idxprom2
  %39 = load i32, ptr %arrayidx87, align 4
  store i32 %39, ptr %l0_mode, align 4
  %40 = load i32, ptr %arrayidx87, align 4
  br label %if.end93

if.end93:                                         ; preds = %if.then19, %if.then47, %if.else62, %if.then26, %if.then
  %.sink = phi i32 [ 0, %if.then19 ], [ %28, %if.then47 ], [ %40, %if.else62 ], [ 0, %if.then26 ], [ 0, %if.then ]
  store i32 %.sink, ptr %l1_mode, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @LumaResidualCoding() local_unnamed_addr #0 {
entry:
  %l0_mode = alloca i32, align 4
  %l1_mode = alloca i32, align 4
  %p_dir = alloca i16, align 2
  %refframe = alloca i16, align 2
  %bw_ref = alloca i16, align 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %l0_mode) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %l1_mode) #17
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %p_dir) #17
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %refframe) #17
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  %cbp = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 12
  store i32 0, ptr %cbp, align 4
  %cbp_blk = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 13
  store i64 0, ptr %cbp_blk, align 8
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %bw_ref) #17
  call void @SetModesAndRefframe(i32 noundef 0, ptr noundef nonnull %p_dir, ptr noundef nonnull %l0_mode, ptr noundef nonnull %l1_mode, ptr noundef nonnull %refframe, ptr noundef nonnull %bw_ref)
  %3 = load i16, ptr %p_dir, align 2
  %4 = load i32, ptr %l0_mode, align 4
  %5 = load i32, ptr %l1_mode, align 4
  %6 = load i16, ptr %refframe, align 2
  %7 = load i16, ptr %bw_ref, align 2
  %call = tail call i32 @LumaResidualCoding8x8(ptr noundef nonnull %cbp, ptr noundef nonnull %cbp_blk, i32 noundef 0, i16 noundef signext %3, i32 noundef %4, i32 noundef %5, i16 noundef signext %6, i16 noundef signext %7)
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %bw_ref) #17
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %bw_ref) #17
  call void @SetModesAndRefframe(i32 noundef 1, ptr noundef nonnull %p_dir, ptr noundef nonnull %l0_mode, ptr noundef nonnull %l1_mode, ptr noundef nonnull %refframe, ptr noundef nonnull %bw_ref)
  %8 = load i16, ptr %p_dir, align 2
  %9 = load i32, ptr %l0_mode, align 4
  %10 = load i32, ptr %l1_mode, align 4
  %11 = load i16, ptr %refframe, align 2
  %12 = load i16, ptr %bw_ref, align 2
  %call.1 = tail call i32 @LumaResidualCoding8x8(ptr noundef nonnull %cbp, ptr noundef nonnull %cbp_blk, i32 noundef 1, i16 noundef signext %8, i32 noundef %9, i32 noundef %10, i16 noundef signext %11, i16 noundef signext %12)
  %add.1 = add nsw i32 %call.1, %call
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %bw_ref) #17
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %bw_ref) #17
  call void @SetModesAndRefframe(i32 noundef 2, ptr noundef nonnull %p_dir, ptr noundef nonnull %l0_mode, ptr noundef nonnull %l1_mode, ptr noundef nonnull %refframe, ptr noundef nonnull %bw_ref)
  %13 = load i16, ptr %p_dir, align 2
  %14 = load i32, ptr %l0_mode, align 4
  %15 = load i32, ptr %l1_mode, align 4
  %16 = load i16, ptr %refframe, align 2
  %17 = load i16, ptr %bw_ref, align 2
  %call.2 = tail call i32 @LumaResidualCoding8x8(ptr noundef nonnull %cbp, ptr noundef nonnull %cbp_blk, i32 noundef 2, i16 noundef signext %13, i32 noundef %14, i32 noundef %15, i16 noundef signext %16, i16 noundef signext %17)
  %add.2 = add nsw i32 %call.2, %add.1
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %bw_ref) #17
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %bw_ref) #17
  call void @SetModesAndRefframe(i32 noundef 3, ptr noundef nonnull %p_dir, ptr noundef nonnull %l0_mode, ptr noundef nonnull %l1_mode, ptr noundef nonnull %refframe, ptr noundef nonnull %bw_ref)
  %18 = load i16, ptr %p_dir, align 2
  %19 = load i32, ptr %l0_mode, align 4
  %20 = load i32, ptr %l1_mode, align 4
  %21 = load i16, ptr %refframe, align 2
  %22 = load i16, ptr %bw_ref, align 2
  %call.3 = tail call i32 @LumaResidualCoding8x8(ptr noundef nonnull %cbp, ptr noundef nonnull %cbp_blk, i32 noundef 3, i16 noundef signext %18, i32 noundef %19, i32 noundef %20, i16 noundef signext %21, i16 noundef signext %22)
  %add.3 = add nsw i32 %call.3, %add.2
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %bw_ref) #17
  %cmp3 = icmp slt i32 %add.3, 6
  br i1 %cmp3, label %land.lhs.true, label %if.end54

land.lhs.true:                                    ; preds = %entry
  %23 = load ptr, ptr @img, align 8
  %qp_scaled = getelementptr inbounds %struct.ImageParameters, ptr %23, i64 0, i32 11
  %24 = load i32, ptr %qp_scaled, align 4
  %cmp4.not = icmp eq i32 %24, 0
  br i1 %cmp4.not, label %lor.lhs.false, label %land.lhs.true6

lor.lhs.false:                                    ; preds = %land.lhs.true
  %lossless_qpprime_flag = getelementptr inbounds %struct.ImageParameters, ptr %23, i64 0, i32 161
  %25 = load i32, ptr %lossless_qpprime_flag, align 4
  %cmp5 = icmp eq i32 %25, 0
  br i1 %cmp5, label %land.lhs.true6, label %if.end54

land.lhs.true6:                                   ; preds = %lor.lhs.false, %land.lhs.true
  %type = getelementptr inbounds %struct.ImageParameters, ptr %23, i64 0, i32 5
  %26 = load i32, ptr %type, align 4
  %cmp7 = icmp eq i32 %26, 3
  br i1 %cmp7, label %land.lhs.true8, label %if.then

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %27 = load i32, ptr @si_frame_indicator, align 4
  %cmp9 = icmp eq i32 %27, 1
  %28 = load i32, ptr @sp2_frame_indicator, align 4
  %cmp11 = icmp eq i32 %28, 1
  %or.cond = select i1 %cmp9, i1 true, i1 %cmp11
  br i1 %or.cond, label %if.end54, label %if.then

if.then:                                          ; preds = %land.lhs.true8, %land.lhs.true6
  %29 = load i32, ptr %cbp, align 4
  %and = and i32 %29, 16777200
  store i32 %and, ptr %cbp, align 4
  %30 = load i64, ptr %cbp_blk, align 8
  %and14 = and i64 %30, 16711680
  store i64 %and14, ptr %cbp_blk, align 8
  %31 = load ptr, ptr @enc_picture, align 8
  %imgY = getelementptr inbounds %struct.storable_picture, ptr %31, i64 0, i32 29
  %32 = load ptr, ptr %imgY, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, ptr %23, i64 0, i32 40
  %33 = load i32, ptr %pix_y, align 4
  %idxprom19 = sext i32 %33 to i64
  %arrayidx20 = getelementptr inbounds ptr, ptr %32, i64 %idxprom19
  %34 = load ptr, ptr %arrayidx20, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, ptr %23, i64 0, i32 39
  %35 = load i32, ptr %pix_x, align 8
  %idxprom21 = sext i32 %35 to i64
  %arrayidx22 = getelementptr inbounds i16, ptr %34, i64 %idxprom21
  %arrayidx24 = getelementptr inbounds %struct.ImageParameters, ptr %23, i64 0, i32 51, i64 0
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24, i64 32, i1 false)
  %36 = load ptr, ptr @enc_picture, align 8
  %imgY.1 = getelementptr inbounds %struct.storable_picture, ptr %36, i64 0, i32 29
  %37 = load ptr, ptr %imgY.1, align 8
  %38 = load ptr, ptr @img, align 8
  %pix_y.1 = getelementptr inbounds %struct.ImageParameters, ptr %38, i64 0, i32 40
  %39 = load i32, ptr %pix_y.1, align 4
  %add18.1 = add nsw i32 %39, 1
  %idxprom19.1 = sext i32 %add18.1 to i64
  %arrayidx20.1 = getelementptr inbounds ptr, ptr %37, i64 %idxprom19.1
  %40 = load ptr, ptr %arrayidx20.1, align 8
  %pix_x.1 = getelementptr inbounds %struct.ImageParameters, ptr %38, i64 0, i32 39
  %41 = load i32, ptr %pix_x.1, align 8
  %idxprom21.1 = sext i32 %41 to i64
  %arrayidx22.1 = getelementptr inbounds i16, ptr %40, i64 %idxprom21.1
  %arrayidx24.1 = getelementptr inbounds %struct.ImageParameters, ptr %38, i64 0, i32 51, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.1, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.1, i64 32, i1 false)
  %42 = load ptr, ptr @enc_picture, align 8
  %imgY.2 = getelementptr inbounds %struct.storable_picture, ptr %42, i64 0, i32 29
  %43 = load ptr, ptr %imgY.2, align 8
  %44 = load ptr, ptr @img, align 8
  %pix_y.2 = getelementptr inbounds %struct.ImageParameters, ptr %44, i64 0, i32 40
  %45 = load i32, ptr %pix_y.2, align 4
  %add18.2 = add nsw i32 %45, 2
  %idxprom19.2 = sext i32 %add18.2 to i64
  %arrayidx20.2 = getelementptr inbounds ptr, ptr %43, i64 %idxprom19.2
  %46 = load ptr, ptr %arrayidx20.2, align 8
  %pix_x.2 = getelementptr inbounds %struct.ImageParameters, ptr %44, i64 0, i32 39
  %47 = load i32, ptr %pix_x.2, align 8
  %idxprom21.2 = sext i32 %47 to i64
  %arrayidx22.2 = getelementptr inbounds i16, ptr %46, i64 %idxprom21.2
  %arrayidx24.2 = getelementptr inbounds %struct.ImageParameters, ptr %44, i64 0, i32 51, i64 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.2, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.2, i64 32, i1 false)
  %48 = load ptr, ptr @enc_picture, align 8
  %imgY.3 = getelementptr inbounds %struct.storable_picture, ptr %48, i64 0, i32 29
  %49 = load ptr, ptr %imgY.3, align 8
  %50 = load ptr, ptr @img, align 8
  %pix_y.3 = getelementptr inbounds %struct.ImageParameters, ptr %50, i64 0, i32 40
  %51 = load i32, ptr %pix_y.3, align 4
  %add18.3 = add nsw i32 %51, 3
  %idxprom19.3 = sext i32 %add18.3 to i64
  %arrayidx20.3 = getelementptr inbounds ptr, ptr %49, i64 %idxprom19.3
  %52 = load ptr, ptr %arrayidx20.3, align 8
  %pix_x.3 = getelementptr inbounds %struct.ImageParameters, ptr %50, i64 0, i32 39
  %53 = load i32, ptr %pix_x.3, align 8
  %idxprom21.3 = sext i32 %53 to i64
  %arrayidx22.3 = getelementptr inbounds i16, ptr %52, i64 %idxprom21.3
  %arrayidx24.3 = getelementptr inbounds %struct.ImageParameters, ptr %50, i64 0, i32 51, i64 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.3, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.3, i64 32, i1 false)
  %54 = load ptr, ptr @enc_picture, align 8
  %imgY.4 = getelementptr inbounds %struct.storable_picture, ptr %54, i64 0, i32 29
  %55 = load ptr, ptr %imgY.4, align 8
  %56 = load ptr, ptr @img, align 8
  %pix_y.4 = getelementptr inbounds %struct.ImageParameters, ptr %56, i64 0, i32 40
  %57 = load i32, ptr %pix_y.4, align 4
  %add18.4 = add nsw i32 %57, 4
  %idxprom19.4 = sext i32 %add18.4 to i64
  %arrayidx20.4 = getelementptr inbounds ptr, ptr %55, i64 %idxprom19.4
  %58 = load ptr, ptr %arrayidx20.4, align 8
  %pix_x.4 = getelementptr inbounds %struct.ImageParameters, ptr %56, i64 0, i32 39
  %59 = load i32, ptr %pix_x.4, align 8
  %idxprom21.4 = sext i32 %59 to i64
  %arrayidx22.4 = getelementptr inbounds i16, ptr %58, i64 %idxprom21.4
  %arrayidx24.4 = getelementptr inbounds %struct.ImageParameters, ptr %56, i64 0, i32 51, i64 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.4, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.4, i64 32, i1 false)
  %60 = load ptr, ptr @enc_picture, align 8
  %imgY.5 = getelementptr inbounds %struct.storable_picture, ptr %60, i64 0, i32 29
  %61 = load ptr, ptr %imgY.5, align 8
  %62 = load ptr, ptr @img, align 8
  %pix_y.5 = getelementptr inbounds %struct.ImageParameters, ptr %62, i64 0, i32 40
  %63 = load i32, ptr %pix_y.5, align 4
  %add18.5 = add nsw i32 %63, 5
  %idxprom19.5 = sext i32 %add18.5 to i64
  %arrayidx20.5 = getelementptr inbounds ptr, ptr %61, i64 %idxprom19.5
  %64 = load ptr, ptr %arrayidx20.5, align 8
  %pix_x.5 = getelementptr inbounds %struct.ImageParameters, ptr %62, i64 0, i32 39
  %65 = load i32, ptr %pix_x.5, align 8
  %idxprom21.5 = sext i32 %65 to i64
  %arrayidx22.5 = getelementptr inbounds i16, ptr %64, i64 %idxprom21.5
  %arrayidx24.5 = getelementptr inbounds %struct.ImageParameters, ptr %62, i64 0, i32 51, i64 5
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.5, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.5, i64 32, i1 false)
  %66 = load ptr, ptr @enc_picture, align 8
  %imgY.6 = getelementptr inbounds %struct.storable_picture, ptr %66, i64 0, i32 29
  %67 = load ptr, ptr %imgY.6, align 8
  %68 = load ptr, ptr @img, align 8
  %pix_y.6 = getelementptr inbounds %struct.ImageParameters, ptr %68, i64 0, i32 40
  %69 = load i32, ptr %pix_y.6, align 4
  %add18.6 = add nsw i32 %69, 6
  %idxprom19.6 = sext i32 %add18.6 to i64
  %arrayidx20.6 = getelementptr inbounds ptr, ptr %67, i64 %idxprom19.6
  %70 = load ptr, ptr %arrayidx20.6, align 8
  %pix_x.6 = getelementptr inbounds %struct.ImageParameters, ptr %68, i64 0, i32 39
  %71 = load i32, ptr %pix_x.6, align 8
  %idxprom21.6 = sext i32 %71 to i64
  %arrayidx22.6 = getelementptr inbounds i16, ptr %70, i64 %idxprom21.6
  %arrayidx24.6 = getelementptr inbounds %struct.ImageParameters, ptr %68, i64 0, i32 51, i64 6
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.6, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.6, i64 32, i1 false)
  %72 = load ptr, ptr @enc_picture, align 8
  %imgY.7 = getelementptr inbounds %struct.storable_picture, ptr %72, i64 0, i32 29
  %73 = load ptr, ptr %imgY.7, align 8
  %74 = load ptr, ptr @img, align 8
  %pix_y.7 = getelementptr inbounds %struct.ImageParameters, ptr %74, i64 0, i32 40
  %75 = load i32, ptr %pix_y.7, align 4
  %add18.7 = add nsw i32 %75, 7
  %idxprom19.7 = sext i32 %add18.7 to i64
  %arrayidx20.7 = getelementptr inbounds ptr, ptr %73, i64 %idxprom19.7
  %76 = load ptr, ptr %arrayidx20.7, align 8
  %pix_x.7 = getelementptr inbounds %struct.ImageParameters, ptr %74, i64 0, i32 39
  %77 = load i32, ptr %pix_x.7, align 8
  %idxprom21.7 = sext i32 %77 to i64
  %arrayidx22.7 = getelementptr inbounds i16, ptr %76, i64 %idxprom21.7
  %arrayidx24.7 = getelementptr inbounds %struct.ImageParameters, ptr %74, i64 0, i32 51, i64 7
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.7, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.7, i64 32, i1 false)
  %78 = load ptr, ptr @enc_picture, align 8
  %imgY.8 = getelementptr inbounds %struct.storable_picture, ptr %78, i64 0, i32 29
  %79 = load ptr, ptr %imgY.8, align 8
  %80 = load ptr, ptr @img, align 8
  %pix_y.8 = getelementptr inbounds %struct.ImageParameters, ptr %80, i64 0, i32 40
  %81 = load i32, ptr %pix_y.8, align 4
  %add18.8 = add nsw i32 %81, 8
  %idxprom19.8 = sext i32 %add18.8 to i64
  %arrayidx20.8 = getelementptr inbounds ptr, ptr %79, i64 %idxprom19.8
  %82 = load ptr, ptr %arrayidx20.8, align 8
  %pix_x.8 = getelementptr inbounds %struct.ImageParameters, ptr %80, i64 0, i32 39
  %83 = load i32, ptr %pix_x.8, align 8
  %idxprom21.8 = sext i32 %83 to i64
  %arrayidx22.8 = getelementptr inbounds i16, ptr %82, i64 %idxprom21.8
  %arrayidx24.8 = getelementptr inbounds %struct.ImageParameters, ptr %80, i64 0, i32 51, i64 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.8, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.8, i64 32, i1 false)
  %84 = load ptr, ptr @enc_picture, align 8
  %imgY.9 = getelementptr inbounds %struct.storable_picture, ptr %84, i64 0, i32 29
  %85 = load ptr, ptr %imgY.9, align 8
  %86 = load ptr, ptr @img, align 8
  %pix_y.9 = getelementptr inbounds %struct.ImageParameters, ptr %86, i64 0, i32 40
  %87 = load i32, ptr %pix_y.9, align 4
  %add18.9 = add nsw i32 %87, 9
  %idxprom19.9 = sext i32 %add18.9 to i64
  %arrayidx20.9 = getelementptr inbounds ptr, ptr %85, i64 %idxprom19.9
  %88 = load ptr, ptr %arrayidx20.9, align 8
  %pix_x.9 = getelementptr inbounds %struct.ImageParameters, ptr %86, i64 0, i32 39
  %89 = load i32, ptr %pix_x.9, align 8
  %idxprom21.9 = sext i32 %89 to i64
  %arrayidx22.9 = getelementptr inbounds i16, ptr %88, i64 %idxprom21.9
  %arrayidx24.9 = getelementptr inbounds %struct.ImageParameters, ptr %86, i64 0, i32 51, i64 9
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.9, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.9, i64 32, i1 false)
  %90 = load ptr, ptr @enc_picture, align 8
  %imgY.10 = getelementptr inbounds %struct.storable_picture, ptr %90, i64 0, i32 29
  %91 = load ptr, ptr %imgY.10, align 8
  %92 = load ptr, ptr @img, align 8
  %pix_y.10 = getelementptr inbounds %struct.ImageParameters, ptr %92, i64 0, i32 40
  %93 = load i32, ptr %pix_y.10, align 4
  %add18.10 = add nsw i32 %93, 10
  %idxprom19.10 = sext i32 %add18.10 to i64
  %arrayidx20.10 = getelementptr inbounds ptr, ptr %91, i64 %idxprom19.10
  %94 = load ptr, ptr %arrayidx20.10, align 8
  %pix_x.10 = getelementptr inbounds %struct.ImageParameters, ptr %92, i64 0, i32 39
  %95 = load i32, ptr %pix_x.10, align 8
  %idxprom21.10 = sext i32 %95 to i64
  %arrayidx22.10 = getelementptr inbounds i16, ptr %94, i64 %idxprom21.10
  %arrayidx24.10 = getelementptr inbounds %struct.ImageParameters, ptr %92, i64 0, i32 51, i64 10
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.10, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.10, i64 32, i1 false)
  %96 = load ptr, ptr @enc_picture, align 8
  %imgY.11 = getelementptr inbounds %struct.storable_picture, ptr %96, i64 0, i32 29
  %97 = load ptr, ptr %imgY.11, align 8
  %98 = load ptr, ptr @img, align 8
  %pix_y.11 = getelementptr inbounds %struct.ImageParameters, ptr %98, i64 0, i32 40
  %99 = load i32, ptr %pix_y.11, align 4
  %add18.11 = add nsw i32 %99, 11
  %idxprom19.11 = sext i32 %add18.11 to i64
  %arrayidx20.11 = getelementptr inbounds ptr, ptr %97, i64 %idxprom19.11
  %100 = load ptr, ptr %arrayidx20.11, align 8
  %pix_x.11 = getelementptr inbounds %struct.ImageParameters, ptr %98, i64 0, i32 39
  %101 = load i32, ptr %pix_x.11, align 8
  %idxprom21.11 = sext i32 %101 to i64
  %arrayidx22.11 = getelementptr inbounds i16, ptr %100, i64 %idxprom21.11
  %arrayidx24.11 = getelementptr inbounds %struct.ImageParameters, ptr %98, i64 0, i32 51, i64 11
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.11, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.11, i64 32, i1 false)
  %102 = load ptr, ptr @enc_picture, align 8
  %imgY.12 = getelementptr inbounds %struct.storable_picture, ptr %102, i64 0, i32 29
  %103 = load ptr, ptr %imgY.12, align 8
  %104 = load ptr, ptr @img, align 8
  %pix_y.12 = getelementptr inbounds %struct.ImageParameters, ptr %104, i64 0, i32 40
  %105 = load i32, ptr %pix_y.12, align 4
  %add18.12 = add nsw i32 %105, 12
  %idxprom19.12 = sext i32 %add18.12 to i64
  %arrayidx20.12 = getelementptr inbounds ptr, ptr %103, i64 %idxprom19.12
  %106 = load ptr, ptr %arrayidx20.12, align 8
  %pix_x.12 = getelementptr inbounds %struct.ImageParameters, ptr %104, i64 0, i32 39
  %107 = load i32, ptr %pix_x.12, align 8
  %idxprom21.12 = sext i32 %107 to i64
  %arrayidx22.12 = getelementptr inbounds i16, ptr %106, i64 %idxprom21.12
  %arrayidx24.12 = getelementptr inbounds %struct.ImageParameters, ptr %104, i64 0, i32 51, i64 12
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.12, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.12, i64 32, i1 false)
  %108 = load ptr, ptr @enc_picture, align 8
  %imgY.13 = getelementptr inbounds %struct.storable_picture, ptr %108, i64 0, i32 29
  %109 = load ptr, ptr %imgY.13, align 8
  %110 = load ptr, ptr @img, align 8
  %pix_y.13 = getelementptr inbounds %struct.ImageParameters, ptr %110, i64 0, i32 40
  %111 = load i32, ptr %pix_y.13, align 4
  %add18.13 = add nsw i32 %111, 13
  %idxprom19.13 = sext i32 %add18.13 to i64
  %arrayidx20.13 = getelementptr inbounds ptr, ptr %109, i64 %idxprom19.13
  %112 = load ptr, ptr %arrayidx20.13, align 8
  %pix_x.13 = getelementptr inbounds %struct.ImageParameters, ptr %110, i64 0, i32 39
  %113 = load i32, ptr %pix_x.13, align 8
  %idxprom21.13 = sext i32 %113 to i64
  %arrayidx22.13 = getelementptr inbounds i16, ptr %112, i64 %idxprom21.13
  %arrayidx24.13 = getelementptr inbounds %struct.ImageParameters, ptr %110, i64 0, i32 51, i64 13
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.13, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.13, i64 32, i1 false)
  %114 = load ptr, ptr @enc_picture, align 8
  %imgY.14 = getelementptr inbounds %struct.storable_picture, ptr %114, i64 0, i32 29
  %115 = load ptr, ptr %imgY.14, align 8
  %116 = load ptr, ptr @img, align 8
  %pix_y.14 = getelementptr inbounds %struct.ImageParameters, ptr %116, i64 0, i32 40
  %117 = load i32, ptr %pix_y.14, align 4
  %add18.14 = add nsw i32 %117, 14
  %idxprom19.14 = sext i32 %add18.14 to i64
  %arrayidx20.14 = getelementptr inbounds ptr, ptr %115, i64 %idxprom19.14
  %118 = load ptr, ptr %arrayidx20.14, align 8
  %pix_x.14 = getelementptr inbounds %struct.ImageParameters, ptr %116, i64 0, i32 39
  %119 = load i32, ptr %pix_x.14, align 8
  %idxprom21.14 = sext i32 %119 to i64
  %arrayidx22.14 = getelementptr inbounds i16, ptr %118, i64 %idxprom21.14
  %arrayidx24.14 = getelementptr inbounds %struct.ImageParameters, ptr %116, i64 0, i32 51, i64 14
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.14, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.14, i64 32, i1 false)
  %120 = load ptr, ptr @enc_picture, align 8
  %imgY.15 = getelementptr inbounds %struct.storable_picture, ptr %120, i64 0, i32 29
  %121 = load ptr, ptr %imgY.15, align 8
  %122 = load ptr, ptr @img, align 8
  %pix_y.15 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 40
  %123 = load i32, ptr %pix_y.15, align 4
  %add18.15 = add nsw i32 %123, 15
  %idxprom19.15 = sext i32 %add18.15 to i64
  %arrayidx20.15 = getelementptr inbounds ptr, ptr %121, i64 %idxprom19.15
  %124 = load ptr, ptr %arrayidx20.15, align 8
  %pix_x.15 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 39
  %125 = load i32, ptr %pix_x.15, align 8
  %idxprom21.15 = sext i32 %125 to i64
  %arrayidx22.15 = getelementptr inbounds i16, ptr %124, i64 %idxprom21.15
  %arrayidx24.15 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 15
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(32) %arrayidx22.15, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx24.15, i64 32, i1 false)
  %126 = load ptr, ptr @img, align 8
  %type28 = getelementptr inbounds %struct.ImageParameters, ptr %126, i64 0, i32 5
  %127 = load i32, ptr %type28, align 4
  %cmp29 = icmp eq i32 %127, 3
  br i1 %cmp29, label %for.body33.preheader, label %if.end54

for.body33.preheader:                             ; preds = %if.then
  tail call void @copyblock_sp(i32 noundef 0, i32 noundef 0) #17
  tail call void @copyblock_sp(i32 noundef 0, i32 noundef 4) #17
  tail call void @copyblock_sp(i32 noundef 4, i32 noundef 0) #17
  tail call void @copyblock_sp(i32 noundef 4, i32 noundef 4) #17
  tail call void @copyblock_sp(i32 noundef 8, i32 noundef 0) #17
  tail call void @copyblock_sp(i32 noundef 8, i32 noundef 4) #17
  tail call void @copyblock_sp(i32 noundef 12, i32 noundef 0) #17
  tail call void @copyblock_sp(i32 noundef 12, i32 noundef 4) #17
  tail call void @copyblock_sp(i32 noundef 0, i32 noundef 8) #17
  tail call void @copyblock_sp(i32 noundef 0, i32 noundef 12) #17
  tail call void @copyblock_sp(i32 noundef 4, i32 noundef 8) #17
  tail call void @copyblock_sp(i32 noundef 4, i32 noundef 12) #17
  tail call void @copyblock_sp(i32 noundef 8, i32 noundef 8) #17
  tail call void @copyblock_sp(i32 noundef 8, i32 noundef 12) #17
  tail call void @copyblock_sp(i32 noundef 12, i32 noundef 8) #17
  tail call void @copyblock_sp(i32 noundef 12, i32 noundef 12) #17
  br label %if.end54

if.end54:                                         ; preds = %for.body33.preheader, %if.then, %land.lhs.true8, %lor.lhs.false, %entry
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %refframe) #17
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %p_dir) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %l1_mode) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %l0_mode) #17
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @TransformDecision(i32 noundef %block_check, ptr nocapture noundef %cost) local_unnamed_addr #0 {
entry:
  %l0_mode = alloca i32, align 4
  %l1_mode = alloca i32, align 4
  %p_dir = alloca i16, align 2
  %fw_ref = alloca i16, align 2
  %bw_ref = alloca i16, align 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %l0_mode) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %l1_mode) #17
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %p_dir) #17
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %fw_ref) #17
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %bw_ref) #17
  %cmp = icmp eq i32 %block_check, -1
  %add = add nuw nsw i32 %block_check, 1
  %block8x8.0 = select i1 %cmp, i32 0, i32 %block_check
  %num_blks.0 = select i1 %cmp, i32 4, i32 %add
  %cmp1120 = icmp slt i32 %block8x8.0, %num_blks.0
  br i1 %cmp1120, label %for.body.preheader, label %for.end52

for.body.preheader:                               ; preds = %entry
  %0 = shl i32 %block8x8.0, 3
  %1 = shl i32 %block8x8.0, 2
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.end47
  %indvars.iv162 = phi i32 [ %1, %for.body.preheader ], [ %indvars.iv.next163, %for.end47 ]
  %indvars.iv = phi i32 [ %0, %for.body.preheader ], [ %indvars.iv.next157, %for.end47 ]
  %cost4x4.0123 = phi i32 [ 0, %for.body.preheader ], [ %add41.1, %for.end47 ]
  %cost8x8.0122 = phi i32 [ 0, %for.body.preheader ], [ %add49, %for.end47 ]
  %block8x8.1121 = phi i32 [ %block8x8.0, %for.body.preheader ], [ %inc51, %for.end47 ]
  %2 = and i32 %indvars.iv162, -8
  %3 = sext i32 %2 to i64
  %.lobit = and i32 %indvars.iv, 8
  %4 = zext i32 %.lobit to i64
  call void @SetModesAndRefframe(i32 noundef %block8x8.1121, ptr noundef nonnull %p_dir, ptr noundef nonnull %l0_mode, ptr noundef nonnull %l1_mode, ptr noundef nonnull %fw_ref, ptr noundef nonnull %bw_ref)
  %5 = shl i32 %block8x8.1121, 2
  %6 = load i16, ptr %p_dir, align 2
  %conv = sext i16 %6 to i32
  %7 = load i32, ptr %l0_mode, align 4
  %8 = load i32, ptr %l1_mode, align 4
  %9 = load i16, ptr %fw_ref, align 2
  %10 = load i16, ptr %bw_ref, align 2
  %11 = or i32 %5, 4
  %12 = sext i32 %11 to i64
  %indvars.iv.next159 = or i64 %4, 4
  %13 = trunc i64 %indvars.iv.next159 to i32
  br label %for.body6

for.body6:                                        ; preds = %for.body, %for.body6
  %indvars.iv164 = phi i64 [ %3, %for.body ], [ %indvars.iv.next165, %for.body6 ]
  %cost4x4.1119 = phi i32 [ %cost4x4.0123, %for.body ], [ %add41.1, %for.body6 ]
  %k.0117 = phi i64 [ 0, %for.body ], [ %indvars.iv.next.3.3.1, %for.body6 ]
  %14 = or i64 %indvars.iv164, 3
  %15 = load ptr, ptr @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, ptr %15, i64 0, i32 44
  %16 = load i32, ptr %opix_y, align 4
  %17 = sext i32 %16 to i64
  %18 = add nsw i64 %indvars.iv164, %17
  %19 = add nsw i64 %18, 3
  %20 = or i64 %indvars.iv164, 2
  %21 = add nsw i64 %18, 2
  %22 = or i64 %indvars.iv164, 1
  %23 = add nsw i64 %18, 1
  %24 = trunc i64 %indvars.iv164 to i32
  %25 = load ptr, ptr @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, ptr %25, i64 0, i32 43
  %26 = load i32, ptr %opix_x, align 8
  %27 = sext i32 %26 to i64
  %28 = add nsw i64 %4, %27
  tail call void @LumaPrediction4x4(i32 noundef %.lobit, i32 noundef %24, i32 noundef %conv, i32 noundef %7, i32 noundef %8, i16 noundef signext %9, i16 noundef signext %10)
  %sext = shl i64 %k.0117, 32
  %idxprom = ashr exact i64 %sext, 32
  %29 = load ptr, ptr @imgY_org, align 8
  %30 = load ptr, ptr @img, align 8
  %arrayidx23 = getelementptr inbounds ptr, ptr %29, i64 %18
  %31 = load ptr, ptr %arrayidx23, align 8
  %arrayidx26 = getelementptr inbounds i16, ptr %31, i64 %28
  %arrayidx33 = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 51, i64 %indvars.iv164, i64 %4
  %arrayidx36 = getelementptr inbounds [64 x i32], ptr @diff64, i64 0, i64 %idxprom
  %32 = load <4 x i16>, ptr %arrayidx26, align 2
  %33 = zext <4 x i16> %32 to <4 x i32>
  %34 = load <4 x i16>, ptr %arrayidx33, align 2
  %35 = zext <4 x i16> %34 to <4 x i32>
  %36 = sub nsw <4 x i32> %33, %35
  store <4 x i32> %36, ptr %arrayidx36, align 4
  %arrayidx23.1 = getelementptr inbounds ptr, ptr %29, i64 %23
  %37 = load ptr, ptr %arrayidx23.1, align 8
  %38 = shl i64 %k.0117, 32
  %sext168 = add i64 %38, 17179869184
  %39 = ashr exact i64 %sext168, 32
  %arrayidx26.1136 = getelementptr inbounds i16, ptr %37, i64 %28
  %arrayidx33.1138 = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 51, i64 %22, i64 %4
  %arrayidx36.1141 = getelementptr inbounds [64 x i32], ptr @diff64, i64 0, i64 %39
  %40 = load <4 x i16>, ptr %arrayidx26.1136, align 2
  %41 = zext <4 x i16> %40 to <4 x i32>
  %42 = load <4 x i16>, ptr %arrayidx33.1138, align 2
  %43 = zext <4 x i16> %42 to <4 x i32>
  %44 = sub nsw <4 x i32> %41, %43
  store <4 x i32> %44, ptr %arrayidx36.1141, align 4
  %arrayidx23.2 = getelementptr inbounds ptr, ptr %29, i64 %21
  %45 = load ptr, ptr %arrayidx23.2, align 8
  %sext169 = add i64 %38, 34359738368
  %46 = ashr exact i64 %sext169, 32
  %arrayidx26.2143 = getelementptr inbounds i16, ptr %45, i64 %28
  %arrayidx33.2145 = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 51, i64 %20, i64 %4
  %arrayidx36.2148 = getelementptr inbounds [64 x i32], ptr @diff64, i64 0, i64 %46
  %47 = load <4 x i16>, ptr %arrayidx26.2143, align 2
  %48 = zext <4 x i16> %47 to <4 x i32>
  %49 = load <4 x i16>, ptr %arrayidx33.2145, align 2
  %50 = zext <4 x i16> %49 to <4 x i32>
  %51 = sub nsw <4 x i32> %48, %50
  store <4 x i32> %51, ptr %arrayidx36.2148, align 4
  %arrayidx23.3 = getelementptr inbounds ptr, ptr %29, i64 %19
  %52 = load ptr, ptr %arrayidx23.3, align 8
  %sext170 = add i64 %38, 51539607552
  %53 = ashr exact i64 %sext170, 32
  %arrayidx26.3150 = getelementptr inbounds i16, ptr %52, i64 %28
  %arrayidx33.3152 = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 51, i64 %14, i64 %4
  %arrayidx36.3155 = getelementptr inbounds [64 x i32], ptr @diff64, i64 0, i64 %53
  %54 = load <4 x i16>, ptr %arrayidx26.3150, align 2
  %55 = zext <4 x i16> %54 to <4 x i32>
  %56 = load <4 x i16>, ptr %arrayidx33.3152, align 2
  %57 = zext <4 x i16> %56 to <4 x i32>
  %58 = sub nsw <4 x i32> %55, %57
  store <4 x i32> %58, ptr %arrayidx36.3155, align 4
  %indvars.iv.next.3.3 = add nsw i64 %53, 4
  %call = tail call i32 @distortion4x4(ptr noundef nonnull %arrayidx36) #17
  %add41 = add nsw i32 %call, %cost4x4.1119
  %59 = load ptr, ptr @img, align 8
  %opix_x.1 = getelementptr inbounds %struct.ImageParameters, ptr %59, i64 0, i32 43
  %60 = load i32, ptr %opix_x.1, align 8
  %61 = sext i32 %60 to i64
  %62 = add nsw i64 %indvars.iv.next159, %61
  tail call void @LumaPrediction4x4(i32 noundef %13, i32 noundef %24, i32 noundef %conv, i32 noundef %7, i32 noundef %8, i16 noundef signext %9, i16 noundef signext %10)
  %sext.1 = shl i64 %indvars.iv.next.3.3, 32
  %idxprom.1 = ashr exact i64 %sext.1, 32
  %63 = load ptr, ptr @imgY_org, align 8
  %64 = load ptr, ptr @img, align 8
  %arrayidx23.1171 = getelementptr inbounds ptr, ptr %63, i64 %18
  %65 = load ptr, ptr %arrayidx23.1171, align 8
  %arrayidx26.1 = getelementptr inbounds i16, ptr %65, i64 %62
  %arrayidx33.1 = getelementptr inbounds %struct.ImageParameters, ptr %64, i64 0, i32 51, i64 %indvars.iv164, i64 %indvars.iv.next159
  %arrayidx36.1 = getelementptr inbounds [64 x i32], ptr @diff64, i64 0, i64 %idxprom.1
  %66 = load <4 x i16>, ptr %arrayidx26.1, align 2
  %67 = zext <4 x i16> %66 to <4 x i32>
  %68 = load <4 x i16>, ptr %arrayidx33.1, align 2
  %69 = zext <4 x i16> %68 to <4 x i32>
  %70 = sub nsw <4 x i32> %67, %69
  store <4 x i32> %70, ptr %arrayidx36.1, align 4
  %arrayidx23.1.1 = getelementptr inbounds ptr, ptr %63, i64 %23
  %71 = load ptr, ptr %arrayidx23.1.1, align 8
  %72 = shl i64 %indvars.iv.next.3.3, 32
  %sext168.1 = add i64 %72, 17179869184
  %73 = ashr exact i64 %sext168.1, 32
  %arrayidx26.1136.1 = getelementptr inbounds i16, ptr %71, i64 %62
  %arrayidx33.1138.1 = getelementptr inbounds %struct.ImageParameters, ptr %64, i64 0, i32 51, i64 %22, i64 %indvars.iv.next159
  %arrayidx36.1141.1 = getelementptr inbounds [64 x i32], ptr @diff64, i64 0, i64 %73
  %74 = load <4 x i16>, ptr %arrayidx26.1136.1, align 2
  %75 = zext <4 x i16> %74 to <4 x i32>
  %76 = load <4 x i16>, ptr %arrayidx33.1138.1, align 2
  %77 = zext <4 x i16> %76 to <4 x i32>
  %78 = sub nsw <4 x i32> %75, %77
  store <4 x i32> %78, ptr %arrayidx36.1141.1, align 4
  %arrayidx23.2.1 = getelementptr inbounds ptr, ptr %63, i64 %21
  %79 = load ptr, ptr %arrayidx23.2.1, align 8
  %sext169.1 = add i64 %72, 34359738368
  %80 = ashr exact i64 %sext169.1, 32
  %arrayidx26.2143.1 = getelementptr inbounds i16, ptr %79, i64 %62
  %arrayidx33.2145.1 = getelementptr inbounds %struct.ImageParameters, ptr %64, i64 0, i32 51, i64 %20, i64 %indvars.iv.next159
  %arrayidx36.2148.1 = getelementptr inbounds [64 x i32], ptr @diff64, i64 0, i64 %80
  %81 = load <4 x i16>, ptr %arrayidx26.2143.1, align 2
  %82 = zext <4 x i16> %81 to <4 x i32>
  %83 = load <4 x i16>, ptr %arrayidx33.2145.1, align 2
  %84 = zext <4 x i16> %83 to <4 x i32>
  %85 = sub nsw <4 x i32> %82, %84
  store <4 x i32> %85, ptr %arrayidx36.2148.1, align 4
  %arrayidx23.3.1 = getelementptr inbounds ptr, ptr %63, i64 %19
  %86 = load ptr, ptr %arrayidx23.3.1, align 8
  %sext170.1 = add i64 %72, 51539607552
  %87 = ashr exact i64 %sext170.1, 32
  %arrayidx26.3150.1 = getelementptr inbounds i16, ptr %86, i64 %62
  %arrayidx33.3152.1 = getelementptr inbounds %struct.ImageParameters, ptr %64, i64 0, i32 51, i64 %14, i64 %indvars.iv.next159
  %arrayidx36.3155.1 = getelementptr inbounds [64 x i32], ptr @diff64, i64 0, i64 %87
  %88 = load <4 x i16>, ptr %arrayidx26.3150.1, align 2
  %89 = zext <4 x i16> %88 to <4 x i32>
  %90 = load <4 x i16>, ptr %arrayidx33.3152.1, align 2
  %91 = zext <4 x i16> %90 to <4 x i32>
  %92 = sub nsw <4 x i32> %89, %91
  store <4 x i32> %92, ptr %arrayidx36.3155.1, align 4
  %indvars.iv.next.3.3.1 = add nsw i64 %87, 4
  %call.1 = tail call i32 @distortion4x4(ptr noundef nonnull %arrayidx36.1) #17
  %add41.1 = add nsw i32 %call.1, %add41
  %indvars.iv.next165 = add nsw i64 %indvars.iv164, 4
  %cmp5 = icmp slt i64 %indvars.iv164, %12
  br i1 %cmp5, label %for.body6, label %for.end47

for.end47:                                        ; preds = %for.body6
  %call48 = tail call i32 @distortion8x8(ptr noundef nonnull @diff64) #17
  %add49 = add nsw i32 %call48, %cost8x8.0122
  %inc51 = add i32 %block8x8.1121, 1
  %indvars.iv.next157 = add i32 %indvars.iv, 8
  %indvars.iv.next163 = add i32 %indvars.iv162, 4
  %exitcond.not = icmp eq i32 %inc51, %num_blks.0
  br i1 %exitcond.not, label %for.end52, label %for.body

for.end52:                                        ; preds = %for.end47, %entry
  %cost8x8.0.lcssa = phi i32 [ 0, %entry ], [ %add49, %for.end47 ]
  %cost4x4.0.lcssa = phi i32 [ 0, %entry ], [ %add41.1, %for.end47 ]
  %93 = load ptr, ptr @input, align 8
  %Transform8x8Mode = getelementptr inbounds %struct.InputParameters, ptr %93, i64 0, i32 153
  %94 = load i32, ptr %Transform8x8Mode, align 4
  %cmp53 = icmp eq i32 %94, 2
  %cmp57 = icmp slt i32 %cost8x8.0.lcssa, %cost4x4.0.lcssa
  %or.cond = select i1 %cmp53, i1 true, i1 %cmp57
  br i1 %or.cond, label %cleanup, label %if.else60

if.else60:                                        ; preds = %for.end52
  %95 = load i32, ptr %cost, align 4
  %sub61 = sub i32 %cost4x4.0.lcssa, %cost8x8.0.lcssa
  %add62 = add i32 %sub61, %95
  store i32 %add62, ptr %cost, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end52, %if.else60
  %retval.0 = phi i32 [ 0, %if.else60 ], [ 1, %for.end52 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %bw_ref) #17
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %fw_ref) #17
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %p_dir) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %l1_mode) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %l0_mode) #17
  ret i32 %retval.0
}

declare i32 @distortion4x4(ptr noundef) local_unnamed_addr #5

declare i32 @distortion8x8(ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @IntraChromaPrediction4x4(i32 noundef %uv, i32 noundef %block_x, i32 noundef %block_y) local_unnamed_addr #10 {
entry:
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  %c_ipred_mode = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 17
  %3 = load i32, ptr %c_ipred_mode, align 8
  %idxprom3 = sext i32 %block_x to i64
  %idxprom5 = sext i32 %uv to i64
  %idxprom7 = sext i32 %3 to i64
  %4 = sext i32 %block_y to i64
  %arrayidx4 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 51, i64 %4, i64 %idxprom3
  %arrayidx12 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 50, i64 %idxprom5, i64 %idxprom7, i64 %4, i64 %idxprom3
  %5 = load i64, ptr %arrayidx12, align 2
  store i64 %5, ptr %arrayidx4, align 2
  %indvars.iv.next = add nsw i64 %4, 1
  %6 = load ptr, ptr @img, align 8
  %arrayidx4.1 = getelementptr inbounds %struct.ImageParameters, ptr %6, i64 0, i32 51, i64 %indvars.iv.next, i64 %idxprom3
  %arrayidx12.1 = getelementptr inbounds %struct.ImageParameters, ptr %6, i64 0, i32 50, i64 %idxprom5, i64 %idxprom7, i64 %indvars.iv.next, i64 %idxprom3
  %7 = load i64, ptr %arrayidx12.1, align 2
  store i64 %7, ptr %arrayidx4.1, align 2
  %indvars.iv.next.1 = add nsw i64 %4, 2
  %8 = load ptr, ptr @img, align 8
  %arrayidx4.2 = getelementptr inbounds %struct.ImageParameters, ptr %8, i64 0, i32 51, i64 %indvars.iv.next.1, i64 %idxprom3
  %arrayidx12.2 = getelementptr inbounds %struct.ImageParameters, ptr %8, i64 0, i32 50, i64 %idxprom5, i64 %idxprom7, i64 %indvars.iv.next.1, i64 %idxprom3
  %9 = load i64, ptr %arrayidx12.2, align 2
  store i64 %9, ptr %arrayidx4.2, align 2
  %indvars.iv.next.2 = add nsw i64 %4, 3
  %10 = load ptr, ptr @img, align 8
  %arrayidx4.3 = getelementptr inbounds %struct.ImageParameters, ptr %10, i64 0, i32 51, i64 %indvars.iv.next.2, i64 %idxprom3
  %arrayidx12.3 = getelementptr inbounds %struct.ImageParameters, ptr %10, i64 0, i32 50, i64 %idxprom5, i64 %idxprom7, i64 %indvars.iv.next.2, i64 %idxprom3
  %11 = load i64, ptr %arrayidx12.3, align 2
  store i64 %11, ptr %arrayidx4.3, align 2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @ChromaPrediction4x4(i32 noundef %uv, i32 noundef %block_x, i32 noundef %block_y, i32 noundef %p_dir, i32 noundef %l0_mode, i32 noundef %l1_mode, i16 noundef signext %l0_ref_idx, i16 noundef signext %l1_ref_idx) local_unnamed_addr #0 {
entry:
  %add = add nsw i32 %block_x, 4
  %add1 = add nsw i32 %block_y, 4
  %0 = load ptr, ptr @img, align 8
  %all_mv = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 80
  %1 = load ptr, ptr %all_mv, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %2 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %3 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load ptr, ptr @active_pps, align 8
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %4, i64 0, i32 19
  %5 = load i32, ptr %weighted_pred_flag, align 8
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %lor.rhs, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %6 = load i32, ptr %type, align 4
  switch i32 %6, label %lor.rhs [
    i32 0, label %lor.end
    i32 3, label %lor.end
  ]

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %4, i64 0, i32 20
  %7 = load i32, ptr %weighted_bipred_idc, align 4
  %tobool4.not = icmp eq i32 %7, 0
  br i1 %tobool4.not, label %lor.end, label %land.rhs

land.rhs:                                         ; preds = %lor.rhs
  %type5 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %8 = load i32, ptr %type5, align 4
  %cmp6 = icmp eq i32 %8, 1
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true, %land.lhs.true, %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.lhs.true ], [ false, %lor.rhs ], [ %cmp6, %land.rhs ], [ true, %land.lhs.true ]
  %bi_pred_me = getelementptr inbounds %struct.macroblock, ptr %2, i64 %idxprom, i32 33
  %10 = load i16, ptr %bi_pred_me, align 8
  %tobool7 = icmp ne i16 %10, 0
  %11 = or i16 %l1_ref_idx, %l0_ref_idx
  %12 = icmp eq i16 %11, 0
  %or.cond267 = and i1 %12, %tobool7
  %cmp17 = icmp eq i32 %p_dir, 2
  %cmp20 = icmp eq i32 %l0_mode, 1
  %13 = and i1 %cmp20, %or.cond267
  %cmp23 = icmp eq i32 %l1_mode, 1
  %14 = and i1 %cmp23, %13
  %or.cond270 = and i1 %cmp17, %14
  br i1 %or.cond270, label %if.end32.thread, label %if.end

if.end32.thread:                                  ; preds = %lor.end
  %cmp27 = icmp eq i16 %10, 1
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 81
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 82
  %cond.in = select i1 %cmp27, ptr %bipred_mv1, ptr %bipred_mv2
  %cond = load ptr, ptr %cond.in, align 8
  br label %if.then38

if.end:                                           ; preds = %lor.end
  %cmp29 = icmp eq i32 %p_dir, -1
  br i1 %cmp29, label %if.then31, label %if.end32

if.then31:                                        ; preds = %if.end
  %c_ipred_mode.i = getelementptr inbounds %struct.macroblock, ptr %2, i64 %idxprom, i32 17
  %15 = load i32, ptr %c_ipred_mode.i, align 8
  %idxprom3.i = sext i32 %block_x to i64
  %idxprom5.i = sext i32 %uv to i64
  %idxprom7.i = sext i32 %15 to i64
  %16 = sext i32 %block_y to i64
  %arrayidx4.i = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 51, i64 %16, i64 %idxprom3.i
  %arrayidx12.i = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 50, i64 %idxprom5.i, i64 %idxprom7.i, i64 %16, i64 %idxprom3.i
  %17 = load i64, ptr %arrayidx12.i, align 2
  store i64 %17, ptr %arrayidx4.i, align 2
  %indvars.iv.next.i = add nsw i64 %16, 1
  %18 = load ptr, ptr @img, align 8
  %arrayidx4.1.i = getelementptr inbounds %struct.ImageParameters, ptr %18, i64 0, i32 51, i64 %indvars.iv.next.i, i64 %idxprom3.i
  %arrayidx12.1.i = getelementptr inbounds %struct.ImageParameters, ptr %18, i64 0, i32 50, i64 %idxprom5.i, i64 %idxprom7.i, i64 %indvars.iv.next.i, i64 %idxprom3.i
  %19 = load i64, ptr %arrayidx12.1.i, align 2
  store i64 %19, ptr %arrayidx4.1.i, align 2
  %indvars.iv.next.1.i = add nsw i64 %16, 2
  %20 = load ptr, ptr @img, align 8
  %arrayidx4.2.i = getelementptr inbounds %struct.ImageParameters, ptr %20, i64 0, i32 51, i64 %indvars.iv.next.1.i, i64 %idxprom3.i
  %arrayidx12.2.i = getelementptr inbounds %struct.ImageParameters, ptr %20, i64 0, i32 50, i64 %idxprom5.i, i64 %idxprom7.i, i64 %indvars.iv.next.1.i, i64 %idxprom3.i
  %21 = load i64, ptr %arrayidx12.2.i, align 2
  store i64 %21, ptr %arrayidx4.2.i, align 2
  %indvars.iv.next.2.i = add nsw i64 %16, 3
  %22 = load ptr, ptr @img, align 8
  %arrayidx4.3.i = getelementptr inbounds %struct.ImageParameters, ptr %22, i64 0, i32 51, i64 %indvars.iv.next.2.i, i64 %idxprom3.i
  %arrayidx12.3.i = getelementptr inbounds %struct.ImageParameters, ptr %22, i64 0, i32 50, i64 %idxprom5.i, i64 %idxprom7.i, i64 %indvars.iv.next.2.i, i64 %idxprom3.i
  %23 = load i64, ptr %arrayidx12.3.i, align 2
  store i64 %23, ptr %arrayidx4.3.i, align 2
  br label %cleanup

if.end32:                                         ; preds = %if.end
  %cmp33 = icmp eq i32 %p_dir, 0
  switch i32 %p_dir, label %if.end39 [
    i32 2, label %if.then38
    i32 0, label %if.then38
  ]

if.then38:                                        ; preds = %if.end32.thread, %if.end32, %if.end32
  %cmp33381 = phi i1 [ false, %if.end32.thread ], [ %cmp33, %if.end32 ], [ %cmp33, %if.end32 ]
  %mv_array.0376379 = phi ptr [ %cond, %if.end32.thread ], [ %1, %if.end32 ], [ %1, %if.end32 ]
  %24 = load ptr, ptr @OneComponentChromaPrediction4x4, align 8
  tail call void %24(ptr noundef nonnull @ChromaPrediction4x4.l0_pred, i32 noundef %block_x, i32 noundef %block_y, ptr noundef %mv_array.0376379, i32 noundef 0, i16 noundef signext %l0_ref_idx, i32 noundef %l0_mode, i32 noundef %uv) #17
  br label %if.end39

if.end39:                                         ; preds = %if.end32, %if.then38
  %cmp33382 = phi i1 [ %cmp33, %if.end32 ], [ %cmp33381, %if.then38 ]
  %mv_array.0376380 = phi ptr [ %1, %if.end32 ], [ %mv_array.0376379, %if.then38 ]
  %25 = add i32 %p_dir, -1
  %or.cond272 = icmp ult i32 %25, 2
  br i1 %or.cond272, label %if.then45, label %if.end46

if.then45:                                        ; preds = %if.end39
  %26 = load ptr, ptr @OneComponentChromaPrediction4x4, align 8
  tail call void %26(ptr noundef nonnull @ChromaPrediction4x4.l1_pred, i32 noundef %block_x, i32 noundef %block_y, ptr noundef %mv_array.0376380, i32 noundef 1, i16 noundef signext %l1_ref_idx, i32 noundef %l1_mode, i32 noundef %uv) #17
  br label %if.end46

if.end46:                                         ; preds = %if.end39, %if.then45
  br i1 %9, label %if.then48, label %if.else195

if.then48:                                        ; preds = %if.end46
  br i1 %cmp17, label %if.then51, label %if.else

if.then51:                                        ; preds = %if.then48
  %27 = load ptr, ptr @wbp_weight, align 8
  %28 = load ptr, ptr %27, align 8
  %idxprom53 = sext i16 %l0_ref_idx to i64
  %arrayidx54 = getelementptr inbounds ptr, ptr %28, i64 %idxprom53
  %29 = load ptr, ptr %arrayidx54, align 8
  %idxprom55 = sext i16 %l1_ref_idx to i64
  %arrayidx56 = getelementptr inbounds ptr, ptr %29, i64 %idxprom55
  %30 = load ptr, ptr %arrayidx56, align 8
  %add57 = add nsw i32 %uv, 1
  %idxprom58 = sext i32 %add57 to i64
  %arrayidx59 = getelementptr inbounds i32, ptr %30, i64 %idxprom58
  %31 = load i32, ptr %arrayidx59, align 4
  %arrayidx60 = getelementptr inbounds ptr, ptr %27, i64 1
  %32 = load ptr, ptr %arrayidx60, align 8
  %arrayidx62 = getelementptr inbounds ptr, ptr %32, i64 %idxprom53
  %33 = load ptr, ptr %arrayidx62, align 8
  %arrayidx64 = getelementptr inbounds ptr, ptr %33, i64 %idxprom55
  %34 = load ptr, ptr %arrayidx64, align 8
  %arrayidx67 = getelementptr inbounds i32, ptr %34, i64 %idxprom58
  %35 = load i32, ptr %arrayidx67, align 4
  %36 = load ptr, ptr @wp_offset, align 8
  %37 = load ptr, ptr %36, align 8
  %arrayidx70 = getelementptr inbounds ptr, ptr %37, i64 %idxprom53
  %38 = load ptr, ptr %arrayidx70, align 8
  %arrayidx73 = getelementptr inbounds i32, ptr %38, i64 %idxprom58
  %39 = load i32, ptr %arrayidx73, align 4
  %arrayidx74 = getelementptr inbounds ptr, ptr %36, i64 1
  %40 = load ptr, ptr %arrayidx74, align 8
  %arrayidx76 = getelementptr inbounds ptr, ptr %40, i64 %idxprom55
  %41 = load ptr, ptr %arrayidx76, align 8
  %arrayidx79 = getelementptr inbounds i32, ptr %41, i64 %idxprom58
  %42 = load i32, ptr %arrayidx79, align 4
  %add80 = add i32 %39, 1
  %add81 = add i32 %add80, %42
  %shr = ashr i32 %add81, 1
  %43 = load i32, ptr @wp_chroma_round, align 4
  %mul = shl nsw i32 %43, 1
  %44 = load i32, ptr @luma_log_weight_denom, align 4
  %add82 = add nsw i32 %44, 1
  %45 = load ptr, ptr @img, align 8
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 157
  %46 = load i32, ptr %max_imgpel_value_uv, align 4
  %47 = sext i32 %block_x to i64
  %48 = sext i32 %add to i64
  %49 = sext i32 %block_y to i64
  %50 = sext i32 %add1 to i64
  %51 = load i16, ptr @ChromaPrediction4x4.l0_pred, align 16
  %conv89 = zext i16 %51 to i32
  %mul90 = mul nsw i32 %31, %conv89
  %52 = load i16, ptr @ChromaPrediction4x4.l1_pred, align 16
  %conv92 = zext i16 %52 to i32
  %mul93 = mul nsw i32 %35, %conv92
  %add94 = add i32 %mul90, %mul
  %add95 = add i32 %add94, %mul93
  %shr96 = ashr i32 %add95, %add82
  %add97 = add nsw i32 %shr96, %shr
  %cond.i.i = tail call i32 @llvm.smax.i32(i32 %add97, i32 0)
  %cond.i4.i = tail call i32 @llvm.smin.i32(i32 %cond.i.i, i32 %46)
  %conv98 = trunc i32 %cond.i4.i to i16
  %arrayidx102 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %49, i64 %47
  store i16 %conv98, ptr %arrayidx102, align 2
  %indvars.iv.next528 = add nsw i64 %47, 1
  %cmp86 = icmp slt i64 %indvars.iv.next528, %48
  br i1 %cmp86, label %for.body88.1, label %for.inc103

for.body88.1:                                     ; preds = %if.then51
  %53 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 1), align 2
  %conv89.1 = zext i16 %53 to i32
  %mul90.1 = mul nsw i32 %31, %conv89.1
  %54 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 1), align 2
  %conv92.1 = zext i16 %54 to i32
  %mul93.1 = mul nsw i32 %35, %conv92.1
  %add94.1 = add i32 %mul90.1, %mul
  %add95.1 = add i32 %add94.1, %mul93.1
  %shr96.1 = ashr i32 %add95.1, %add82
  %add97.1 = add nsw i32 %shr96.1, %shr
  %cond.i.i.1 = tail call i32 @llvm.smax.i32(i32 %add97.1, i32 0)
  %cond.i4.i.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1, i32 %46)
  %conv98.1 = trunc i32 %cond.i4.i.1 to i16
  %arrayidx102.1 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %49, i64 %indvars.iv.next528
  store i16 %conv98.1, ptr %arrayidx102.1, align 2
  %indvars.iv.next528.1 = add nsw i64 %47, 2
  %55 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 2), align 4
  %conv89.2 = zext i16 %55 to i32
  %mul90.2 = mul nsw i32 %31, %conv89.2
  %56 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 2), align 4
  %conv92.2 = zext i16 %56 to i32
  %mul93.2 = mul nsw i32 %35, %conv92.2
  %add94.2 = add i32 %mul90.2, %mul
  %add95.2 = add i32 %add94.2, %mul93.2
  %shr96.2 = ashr i32 %add95.2, %add82
  %add97.2 = add nsw i32 %shr96.2, %shr
  %cond.i.i.2 = tail call i32 @llvm.smax.i32(i32 %add97.2, i32 0)
  %cond.i4.i.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2, i32 %46)
  %conv98.2 = trunc i32 %cond.i4.i.2 to i16
  %arrayidx102.2 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %49, i64 %indvars.iv.next528.1
  store i16 %conv98.2, ptr %arrayidx102.2, align 2
  %indvars.iv.next528.2 = add nsw i64 %47, 3
  %57 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 3), align 2
  %conv89.3 = zext i16 %57 to i32
  %mul90.3 = mul nsw i32 %31, %conv89.3
  %58 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 3), align 2
  %conv92.3 = zext i16 %58 to i32
  %mul93.3 = mul nsw i32 %35, %conv92.3
  %add94.3 = add i32 %mul90.3, %mul
  %add95.3 = add i32 %add94.3, %mul93.3
  %shr96.3 = ashr i32 %add95.3, %add82
  %add97.3 = add nsw i32 %shr96.3, %shr
  %cond.i.i.3 = tail call i32 @llvm.smax.i32(i32 %add97.3, i32 0)
  %cond.i4.i.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3, i32 %46)
  %conv98.3 = trunc i32 %cond.i4.i.3 to i16
  %arrayidx102.3 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %49, i64 %indvars.iv.next528.2
  store i16 %conv98.3, ptr %arrayidx102.3, align 2
  br label %for.inc103

for.inc103:                                       ; preds = %for.body88.1, %if.then51
  %incdec.ptr.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 1), %if.then51 ], [ getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 4), %for.body88.1 ]
  %incdec.ptr91.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 1), %if.then51 ], [ getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 4), %for.body88.1 ]
  %indvars.iv.next530 = add nsw i64 %49, 1
  %cmp83 = icmp slt i64 %indvars.iv.next530, %50
  br i1 %cmp83, label %for.cond85.preheader.1, label %cleanup

for.cond85.preheader.1:                           ; preds = %for.inc103
  %incdec.ptr.1532 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa, i64 1
  %59 = load i16, ptr %incdec.ptr.lcssa, align 2
  %conv89.1533 = zext i16 %59 to i32
  %mul90.1534 = mul nsw i32 %31, %conv89.1533
  %incdec.ptr91.1535 = getelementptr inbounds i16, ptr %incdec.ptr91.lcssa, i64 1
  %60 = load i16, ptr %incdec.ptr91.lcssa, align 2
  %conv92.1536 = zext i16 %60 to i32
  %mul93.1537 = mul nsw i32 %35, %conv92.1536
  %add94.1538 = add i32 %mul90.1534, %mul
  %add95.1539 = add i32 %add94.1538, %mul93.1537
  %shr96.1540 = ashr i32 %add95.1539, %add82
  %add97.1541 = add nsw i32 %shr96.1540, %shr
  %cond.i.i.1542 = tail call i32 @llvm.smax.i32(i32 %add97.1541, i32 0)
  %cond.i4.i.1543 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1542, i32 %46)
  %conv98.1544 = trunc i32 %cond.i4.i.1543 to i16
  %arrayidx102.1545 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next530, i64 %47
  store i16 %conv98.1544, ptr %arrayidx102.1545, align 2
  br i1 %cmp86, label %for.body88.1.1, label %for.inc103.1

for.body88.1.1:                                   ; preds = %for.cond85.preheader.1
  %incdec.ptr.1.1 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa, i64 2
  %61 = load i16, ptr %incdec.ptr.1532, align 2
  %conv89.1.1 = zext i16 %61 to i32
  %mul90.1.1 = mul nsw i32 %31, %conv89.1.1
  %incdec.ptr91.1.1 = getelementptr inbounds i16, ptr %incdec.ptr91.lcssa, i64 2
  %62 = load i16, ptr %incdec.ptr91.1535, align 2
  %conv92.1.1 = zext i16 %62 to i32
  %mul93.1.1 = mul nsw i32 %35, %conv92.1.1
  %add94.1.1 = add i32 %mul90.1.1, %mul
  %add95.1.1 = add i32 %add94.1.1, %mul93.1.1
  %shr96.1.1 = ashr i32 %add95.1.1, %add82
  %add97.1.1 = add nsw i32 %shr96.1.1, %shr
  %cond.i.i.1.1 = tail call i32 @llvm.smax.i32(i32 %add97.1.1, i32 0)
  %cond.i4.i.1.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1.1, i32 %46)
  %conv98.1.1 = trunc i32 %cond.i4.i.1.1 to i16
  %arrayidx102.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next530, i64 %indvars.iv.next528
  store i16 %conv98.1.1, ptr %arrayidx102.1.1, align 2
  %indvars.iv.next528.1.1 = add nsw i64 %47, 2
  %incdec.ptr.2.1 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa, i64 3
  %63 = load i16, ptr %incdec.ptr.1.1, align 2
  %conv89.2.1 = zext i16 %63 to i32
  %mul90.2.1 = mul nsw i32 %31, %conv89.2.1
  %incdec.ptr91.2.1 = getelementptr inbounds i16, ptr %incdec.ptr91.lcssa, i64 3
  %64 = load i16, ptr %incdec.ptr91.1.1, align 2
  %conv92.2.1 = zext i16 %64 to i32
  %mul93.2.1 = mul nsw i32 %35, %conv92.2.1
  %add94.2.1 = add i32 %mul90.2.1, %mul
  %add95.2.1 = add i32 %add94.2.1, %mul93.2.1
  %shr96.2.1 = ashr i32 %add95.2.1, %add82
  %add97.2.1 = add nsw i32 %shr96.2.1, %shr
  %cond.i.i.2.1 = tail call i32 @llvm.smax.i32(i32 %add97.2.1, i32 0)
  %cond.i4.i.2.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2.1, i32 %46)
  %conv98.2.1 = trunc i32 %cond.i4.i.2.1 to i16
  %arrayidx102.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next530, i64 %indvars.iv.next528.1.1
  store i16 %conv98.2.1, ptr %arrayidx102.2.1, align 2
  %indvars.iv.next528.2.1 = add nsw i64 %47, 3
  %incdec.ptr.3.1 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa, i64 4
  %65 = load i16, ptr %incdec.ptr.2.1, align 2
  %conv89.3.1 = zext i16 %65 to i32
  %mul90.3.1 = mul nsw i32 %31, %conv89.3.1
  %incdec.ptr91.3.1 = getelementptr inbounds i16, ptr %incdec.ptr91.lcssa, i64 4
  %66 = load i16, ptr %incdec.ptr91.2.1, align 2
  %conv92.3.1 = zext i16 %66 to i32
  %mul93.3.1 = mul nsw i32 %35, %conv92.3.1
  %add94.3.1 = add i32 %mul90.3.1, %mul
  %add95.3.1 = add i32 %add94.3.1, %mul93.3.1
  %shr96.3.1 = ashr i32 %add95.3.1, %add82
  %add97.3.1 = add nsw i32 %shr96.3.1, %shr
  %cond.i.i.3.1 = tail call i32 @llvm.smax.i32(i32 %add97.3.1, i32 0)
  %cond.i4.i.3.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3.1, i32 %46)
  %conv98.3.1 = trunc i32 %cond.i4.i.3.1 to i16
  %arrayidx102.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next530, i64 %indvars.iv.next528.2.1
  store i16 %conv98.3.1, ptr %arrayidx102.3.1, align 2
  br label %for.inc103.1

for.inc103.1:                                     ; preds = %for.body88.1.1, %for.cond85.preheader.1
  %incdec.ptr.lcssa.1 = phi ptr [ %incdec.ptr.1532, %for.cond85.preheader.1 ], [ %incdec.ptr.3.1, %for.body88.1.1 ]
  %incdec.ptr91.lcssa.1 = phi ptr [ %incdec.ptr91.1535, %for.cond85.preheader.1 ], [ %incdec.ptr91.3.1, %for.body88.1.1 ]
  %indvars.iv.next530.1 = add nsw i64 %49, 2
  %incdec.ptr.2548 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.1, i64 1
  %67 = load i16, ptr %incdec.ptr.lcssa.1, align 2
  %conv89.2549 = zext i16 %67 to i32
  %mul90.2550 = mul nsw i32 %31, %conv89.2549
  %incdec.ptr91.2551 = getelementptr inbounds i16, ptr %incdec.ptr91.lcssa.1, i64 1
  %68 = load i16, ptr %incdec.ptr91.lcssa.1, align 2
  %conv92.2552 = zext i16 %68 to i32
  %mul93.2553 = mul nsw i32 %35, %conv92.2552
  %add94.2554 = add i32 %mul90.2550, %mul
  %add95.2555 = add i32 %add94.2554, %mul93.2553
  %shr96.2556 = ashr i32 %add95.2555, %add82
  %add97.2557 = add nsw i32 %shr96.2556, %shr
  %cond.i.i.2558 = tail call i32 @llvm.smax.i32(i32 %add97.2557, i32 0)
  %cond.i4.i.2559 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2558, i32 %46)
  %conv98.2560 = trunc i32 %cond.i4.i.2559 to i16
  %arrayidx102.2561 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next530.1, i64 %47
  store i16 %conv98.2560, ptr %arrayidx102.2561, align 2
  br i1 %cmp86, label %for.body88.1.2, label %for.inc103.2

for.body88.1.2:                                   ; preds = %for.inc103.1
  %incdec.ptr.1.2 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.1, i64 2
  %69 = load i16, ptr %incdec.ptr.2548, align 2
  %conv89.1.2 = zext i16 %69 to i32
  %mul90.1.2 = mul nsw i32 %31, %conv89.1.2
  %incdec.ptr91.1.2 = getelementptr inbounds i16, ptr %incdec.ptr91.lcssa.1, i64 2
  %70 = load i16, ptr %incdec.ptr91.2551, align 2
  %conv92.1.2 = zext i16 %70 to i32
  %mul93.1.2 = mul nsw i32 %35, %conv92.1.2
  %add94.1.2 = add i32 %mul90.1.2, %mul
  %add95.1.2 = add i32 %add94.1.2, %mul93.1.2
  %shr96.1.2 = ashr i32 %add95.1.2, %add82
  %add97.1.2 = add nsw i32 %shr96.1.2, %shr
  %cond.i.i.1.2 = tail call i32 @llvm.smax.i32(i32 %add97.1.2, i32 0)
  %cond.i4.i.1.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1.2, i32 %46)
  %conv98.1.2 = trunc i32 %cond.i4.i.1.2 to i16
  %arrayidx102.1.2 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next530.1, i64 %indvars.iv.next528
  store i16 %conv98.1.2, ptr %arrayidx102.1.2, align 2
  %indvars.iv.next528.1.2 = add nsw i64 %47, 2
  %incdec.ptr.2.2 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.1, i64 3
  %71 = load i16, ptr %incdec.ptr.1.2, align 2
  %conv89.2.2 = zext i16 %71 to i32
  %mul90.2.2 = mul nsw i32 %31, %conv89.2.2
  %incdec.ptr91.2.2 = getelementptr inbounds i16, ptr %incdec.ptr91.lcssa.1, i64 3
  %72 = load i16, ptr %incdec.ptr91.1.2, align 2
  %conv92.2.2 = zext i16 %72 to i32
  %mul93.2.2 = mul nsw i32 %35, %conv92.2.2
  %add94.2.2 = add i32 %mul90.2.2, %mul
  %add95.2.2 = add i32 %add94.2.2, %mul93.2.2
  %shr96.2.2 = ashr i32 %add95.2.2, %add82
  %add97.2.2 = add nsw i32 %shr96.2.2, %shr
  %cond.i.i.2.2 = tail call i32 @llvm.smax.i32(i32 %add97.2.2, i32 0)
  %cond.i4.i.2.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2.2, i32 %46)
  %conv98.2.2 = trunc i32 %cond.i4.i.2.2 to i16
  %arrayidx102.2.2 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next530.1, i64 %indvars.iv.next528.1.2
  store i16 %conv98.2.2, ptr %arrayidx102.2.2, align 2
  %indvars.iv.next528.2.2 = add nsw i64 %47, 3
  %incdec.ptr.3.2 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.1, i64 4
  %73 = load i16, ptr %incdec.ptr.2.2, align 2
  %conv89.3.2 = zext i16 %73 to i32
  %mul90.3.2 = mul nsw i32 %31, %conv89.3.2
  %incdec.ptr91.3.2 = getelementptr inbounds i16, ptr %incdec.ptr91.lcssa.1, i64 4
  %74 = load i16, ptr %incdec.ptr91.2.2, align 2
  %conv92.3.2 = zext i16 %74 to i32
  %mul93.3.2 = mul nsw i32 %35, %conv92.3.2
  %add94.3.2 = add i32 %mul90.3.2, %mul
  %add95.3.2 = add i32 %add94.3.2, %mul93.3.2
  %shr96.3.2 = ashr i32 %add95.3.2, %add82
  %add97.3.2 = add nsw i32 %shr96.3.2, %shr
  %cond.i.i.3.2 = tail call i32 @llvm.smax.i32(i32 %add97.3.2, i32 0)
  %cond.i4.i.3.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3.2, i32 %46)
  %conv98.3.2 = trunc i32 %cond.i4.i.3.2 to i16
  %arrayidx102.3.2 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next530.1, i64 %indvars.iv.next528.2.2
  store i16 %conv98.3.2, ptr %arrayidx102.3.2, align 2
  br label %for.inc103.2

for.inc103.2:                                     ; preds = %for.body88.1.2, %for.inc103.1
  %incdec.ptr.lcssa.2 = phi ptr [ %incdec.ptr.2548, %for.inc103.1 ], [ %incdec.ptr.3.2, %for.body88.1.2 ]
  %incdec.ptr91.lcssa.2 = phi ptr [ %incdec.ptr91.2551, %for.inc103.1 ], [ %incdec.ptr91.3.2, %for.body88.1.2 ]
  %indvars.iv.next530.2 = add nsw i64 %49, 3
  %75 = load i16, ptr %incdec.ptr.lcssa.2, align 2
  %conv89.3564 = zext i16 %75 to i32
  %mul90.3565 = mul nsw i32 %31, %conv89.3564
  %76 = load i16, ptr %incdec.ptr91.lcssa.2, align 2
  %conv92.3567 = zext i16 %76 to i32
  %mul93.3568 = mul nsw i32 %35, %conv92.3567
  %add94.3569 = add i32 %mul90.3565, %mul
  %add95.3570 = add i32 %add94.3569, %mul93.3568
  %shr96.3571 = ashr i32 %add95.3570, %add82
  %add97.3572 = add nsw i32 %shr96.3571, %shr
  %cond.i.i.3573 = tail call i32 @llvm.smax.i32(i32 %add97.3572, i32 0)
  %cond.i4.i.3574 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3573, i32 %46)
  %conv98.3575 = trunc i32 %cond.i4.i.3574 to i16
  %arrayidx102.3576 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next530.2, i64 %47
  store i16 %conv98.3575, ptr %arrayidx102.3576, align 2
  br i1 %cmp86, label %for.body88.1.3, label %cleanup

for.body88.1.3:                                   ; preds = %for.inc103.2
  %incdec.ptr91.3566 = getelementptr inbounds i16, ptr %incdec.ptr91.lcssa.2, i64 1
  %incdec.ptr.3563 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.2, i64 1
  %incdec.ptr.1.3 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.2, i64 2
  %77 = load i16, ptr %incdec.ptr.3563, align 2
  %conv89.1.3 = zext i16 %77 to i32
  %mul90.1.3 = mul nsw i32 %31, %conv89.1.3
  %incdec.ptr91.1.3 = getelementptr inbounds i16, ptr %incdec.ptr91.lcssa.2, i64 2
  %78 = load i16, ptr %incdec.ptr91.3566, align 2
  %conv92.1.3 = zext i16 %78 to i32
  %mul93.1.3 = mul nsw i32 %35, %conv92.1.3
  %add94.1.3 = add i32 %mul90.1.3, %mul
  %add95.1.3 = add i32 %add94.1.3, %mul93.1.3
  %shr96.1.3 = ashr i32 %add95.1.3, %add82
  %add97.1.3 = add nsw i32 %shr96.1.3, %shr
  %cond.i.i.1.3 = tail call i32 @llvm.smax.i32(i32 %add97.1.3, i32 0)
  %cond.i4.i.1.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.1.3, i32 %46)
  %conv98.1.3 = trunc i32 %cond.i4.i.1.3 to i16
  %arrayidx102.1.3 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next530.2, i64 %indvars.iv.next528
  store i16 %conv98.1.3, ptr %arrayidx102.1.3, align 2
  %indvars.iv.next528.1.3 = add nsw i64 %47, 2
  %incdec.ptr.2.3 = getelementptr inbounds i16, ptr %incdec.ptr.lcssa.2, i64 3
  %79 = load i16, ptr %incdec.ptr.1.3, align 2
  %conv89.2.3 = zext i16 %79 to i32
  %mul90.2.3 = mul nsw i32 %31, %conv89.2.3
  %incdec.ptr91.2.3 = getelementptr inbounds i16, ptr %incdec.ptr91.lcssa.2, i64 3
  %80 = load i16, ptr %incdec.ptr91.1.3, align 2
  %conv92.2.3 = zext i16 %80 to i32
  %mul93.2.3 = mul nsw i32 %35, %conv92.2.3
  %add94.2.3 = add i32 %mul90.2.3, %mul
  %add95.2.3 = add i32 %add94.2.3, %mul93.2.3
  %shr96.2.3 = ashr i32 %add95.2.3, %add82
  %add97.2.3 = add nsw i32 %shr96.2.3, %shr
  %cond.i.i.2.3 = tail call i32 @llvm.smax.i32(i32 %add97.2.3, i32 0)
  %cond.i4.i.2.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.2.3, i32 %46)
  %conv98.2.3 = trunc i32 %cond.i4.i.2.3 to i16
  %arrayidx102.2.3 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next530.2, i64 %indvars.iv.next528.1.3
  store i16 %conv98.2.3, ptr %arrayidx102.2.3, align 2
  %indvars.iv.next528.2.3 = add nsw i64 %47, 3
  %81 = load i16, ptr %incdec.ptr.2.3, align 2
  %conv89.3.3 = zext i16 %81 to i32
  %mul90.3.3 = mul nsw i32 %31, %conv89.3.3
  %82 = load i16, ptr %incdec.ptr91.2.3, align 2
  %conv92.3.3 = zext i16 %82 to i32
  %mul93.3.3 = mul nsw i32 %35, %conv92.3.3
  %add94.3.3 = add i32 %mul90.3.3, %mul
  %add95.3.3 = add i32 %add94.3.3, %mul93.3.3
  %shr96.3.3 = ashr i32 %add95.3.3, %add82
  %add97.3.3 = add nsw i32 %shr96.3.3, %shr
  %cond.i.i.3.3 = tail call i32 @llvm.smax.i32(i32 %add97.3.3, i32 0)
  %cond.i4.i.3.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.3.3, i32 %46)
  %conv98.3.3 = trunc i32 %cond.i4.i.3.3 to i16
  %arrayidx102.3.3 = getelementptr inbounds %struct.ImageParameters, ptr %45, i64 0, i32 51, i64 %indvars.iv.next530.2, i64 %indvars.iv.next528.2.3
  store i16 %conv98.3.3, ptr %arrayidx102.3.3, align 2
  br label %cleanup

if.else:                                          ; preds = %if.then48
  %83 = load ptr, ptr @wp_weight, align 8
  br i1 %cmp33382, label %if.then108, label %if.else150

if.then108:                                       ; preds = %if.else
  %84 = load ptr, ptr %83, align 8
  %idxprom110 = sext i16 %l0_ref_idx to i64
  %arrayidx111 = getelementptr inbounds ptr, ptr %84, i64 %idxprom110
  %85 = load ptr, ptr %arrayidx111, align 8
  %add112 = add nsw i32 %uv, 1
  %idxprom113 = sext i32 %add112 to i64
  %arrayidx114 = getelementptr inbounds i32, ptr %85, i64 %idxprom113
  %86 = load i32, ptr %arrayidx114, align 4
  %87 = load ptr, ptr @wp_offset, align 8
  %88 = load ptr, ptr %87, align 8
  %arrayidx118 = getelementptr inbounds ptr, ptr %88, i64 %idxprom110
  %89 = load ptr, ptr %arrayidx118, align 8
  %arrayidx121 = getelementptr inbounds i32, ptr %89, i64 %idxprom113
  %90 = load i32, ptr %arrayidx121, align 4
  %91 = load ptr, ptr @img, align 8
  %max_imgpel_value_uv130 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 157
  %92 = load i32, ptr %max_imgpel_value_uv130, align 4
  %93 = load i32, ptr @wp_chroma_round, align 4
  %94 = load i32, ptr @chroma_log_weight_denom, align 4
  %95 = sext i32 %block_x to i64
  %96 = sext i32 %add to i64
  %97 = sext i32 %block_y to i64
  %98 = sext i32 %add1 to i64
  %99 = load i16, ptr @ChromaPrediction4x4.l0_pred, align 16
  %conv132 = zext i16 %99 to i32
  %mul133 = mul nsw i32 %86, %conv132
  %add134 = add nsw i32 %mul133, %93
  %shr135 = ashr i32 %add134, %94
  %add136 = add nsw i32 %shr135, %90
  %cond.i.i370 = tail call i32 @llvm.smax.i32(i32 %add136, i32 0)
  %cond.i4.i371 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370, i32 %92)
  %conv138 = trunc i32 %cond.i4.i371 to i16
  %arrayidx143 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %97, i64 %95
  store i16 %conv138, ptr %arrayidx143, align 2
  %indvars.iv.next491 = add nsw i64 %95, 1
  %cmp127 = icmp slt i64 %indvars.iv.next491, %96
  br i1 %cmp127, label %for.body129.1, label %for.inc147

for.body129.1:                                    ; preds = %if.then108
  %100 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 1), align 2
  %conv132.1 = zext i16 %100 to i32
  %mul133.1 = mul nsw i32 %86, %conv132.1
  %add134.1 = add nsw i32 %mul133.1, %93
  %shr135.1 = ashr i32 %add134.1, %94
  %add136.1 = add nsw i32 %shr135.1, %90
  %cond.i.i370.1 = tail call i32 @llvm.smax.i32(i32 %add136.1, i32 0)
  %cond.i4.i371.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.1, i32 %92)
  %conv138.1 = trunc i32 %cond.i4.i371.1 to i16
  %arrayidx143.1 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %97, i64 %indvars.iv.next491
  store i16 %conv138.1, ptr %arrayidx143.1, align 2
  %indvars.iv.next491.1 = add nsw i64 %95, 2
  %101 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 2), align 4
  %conv132.2 = zext i16 %101 to i32
  %mul133.2 = mul nsw i32 %86, %conv132.2
  %add134.2 = add nsw i32 %mul133.2, %93
  %shr135.2 = ashr i32 %add134.2, %94
  %add136.2 = add nsw i32 %shr135.2, %90
  %cond.i.i370.2 = tail call i32 @llvm.smax.i32(i32 %add136.2, i32 0)
  %cond.i4.i371.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.2, i32 %92)
  %conv138.2 = trunc i32 %cond.i4.i371.2 to i16
  %arrayidx143.2 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %97, i64 %indvars.iv.next491.1
  store i16 %conv138.2, ptr %arrayidx143.2, align 2
  %indvars.iv.next491.2 = add nsw i64 %95, 3
  %102 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 3), align 2
  %conv132.3 = zext i16 %102 to i32
  %mul133.3 = mul nsw i32 %86, %conv132.3
  %add134.3 = add nsw i32 %mul133.3, %93
  %shr135.3 = ashr i32 %add134.3, %94
  %add136.3 = add nsw i32 %shr135.3, %90
  %cond.i.i370.3 = tail call i32 @llvm.smax.i32(i32 %add136.3, i32 0)
  %cond.i4.i371.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.3, i32 %92)
  %conv138.3 = trunc i32 %cond.i4.i371.3 to i16
  %arrayidx143.3 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %97, i64 %indvars.iv.next491.2
  store i16 %conv138.3, ptr %arrayidx143.3, align 2
  br label %for.inc147

for.inc147:                                       ; preds = %for.body129.1, %if.then108
  %incdec.ptr131.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 1), %if.then108 ], [ getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 4), %for.body129.1 ]
  %indvars.iv.next493 = add nsw i64 %97, 1
  %cmp123 = icmp slt i64 %indvars.iv.next493, %98
  br i1 %cmp123, label %for.cond126.preheader.1, label %cleanup

for.cond126.preheader.1:                          ; preds = %for.inc147
  %incdec.ptr131.1495 = getelementptr inbounds i16, ptr %incdec.ptr131.lcssa, i64 1
  %103 = load i16, ptr %incdec.ptr131.lcssa, align 2
  %conv132.1496 = zext i16 %103 to i32
  %mul133.1497 = mul nsw i32 %86, %conv132.1496
  %add134.1498 = add nsw i32 %mul133.1497, %93
  %shr135.1499 = ashr i32 %add134.1498, %94
  %add136.1500 = add nsw i32 %shr135.1499, %90
  %cond.i.i370.1501 = tail call i32 @llvm.smax.i32(i32 %add136.1500, i32 0)
  %cond.i4.i371.1502 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.1501, i32 %92)
  %conv138.1503 = trunc i32 %cond.i4.i371.1502 to i16
  %arrayidx143.1504 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %indvars.iv.next493, i64 %95
  store i16 %conv138.1503, ptr %arrayidx143.1504, align 2
  br i1 %cmp127, label %for.body129.1.1, label %for.inc147.1

for.body129.1.1:                                  ; preds = %for.cond126.preheader.1
  %incdec.ptr131.1.1 = getelementptr inbounds i16, ptr %incdec.ptr131.lcssa, i64 2
  %104 = load i16, ptr %incdec.ptr131.1495, align 2
  %conv132.1.1 = zext i16 %104 to i32
  %mul133.1.1 = mul nsw i32 %86, %conv132.1.1
  %add134.1.1 = add nsw i32 %mul133.1.1, %93
  %shr135.1.1 = ashr i32 %add134.1.1, %94
  %add136.1.1 = add nsw i32 %shr135.1.1, %90
  %cond.i.i370.1.1 = tail call i32 @llvm.smax.i32(i32 %add136.1.1, i32 0)
  %cond.i4.i371.1.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.1.1, i32 %92)
  %conv138.1.1 = trunc i32 %cond.i4.i371.1.1 to i16
  %arrayidx143.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %indvars.iv.next493, i64 %indvars.iv.next491
  store i16 %conv138.1.1, ptr %arrayidx143.1.1, align 2
  %indvars.iv.next491.1.1 = add nsw i64 %95, 2
  %incdec.ptr131.2.1 = getelementptr inbounds i16, ptr %incdec.ptr131.lcssa, i64 3
  %105 = load i16, ptr %incdec.ptr131.1.1, align 2
  %conv132.2.1 = zext i16 %105 to i32
  %mul133.2.1 = mul nsw i32 %86, %conv132.2.1
  %add134.2.1 = add nsw i32 %mul133.2.1, %93
  %shr135.2.1 = ashr i32 %add134.2.1, %94
  %add136.2.1 = add nsw i32 %shr135.2.1, %90
  %cond.i.i370.2.1 = tail call i32 @llvm.smax.i32(i32 %add136.2.1, i32 0)
  %cond.i4.i371.2.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.2.1, i32 %92)
  %conv138.2.1 = trunc i32 %cond.i4.i371.2.1 to i16
  %arrayidx143.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %indvars.iv.next493, i64 %indvars.iv.next491.1.1
  store i16 %conv138.2.1, ptr %arrayidx143.2.1, align 2
  %indvars.iv.next491.2.1 = add nsw i64 %95, 3
  %incdec.ptr131.3.1 = getelementptr inbounds i16, ptr %incdec.ptr131.lcssa, i64 4
  %106 = load i16, ptr %incdec.ptr131.2.1, align 2
  %conv132.3.1 = zext i16 %106 to i32
  %mul133.3.1 = mul nsw i32 %86, %conv132.3.1
  %add134.3.1 = add nsw i32 %mul133.3.1, %93
  %shr135.3.1 = ashr i32 %add134.3.1, %94
  %add136.3.1 = add nsw i32 %shr135.3.1, %90
  %cond.i.i370.3.1 = tail call i32 @llvm.smax.i32(i32 %add136.3.1, i32 0)
  %cond.i4.i371.3.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.3.1, i32 %92)
  %conv138.3.1 = trunc i32 %cond.i4.i371.3.1 to i16
  %arrayidx143.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %indvars.iv.next493, i64 %indvars.iv.next491.2.1
  store i16 %conv138.3.1, ptr %arrayidx143.3.1, align 2
  br label %for.inc147.1

for.inc147.1:                                     ; preds = %for.body129.1.1, %for.cond126.preheader.1
  %incdec.ptr131.lcssa.1 = phi ptr [ %incdec.ptr131.1495, %for.cond126.preheader.1 ], [ %incdec.ptr131.3.1, %for.body129.1.1 ]
  %indvars.iv.next493.1 = add nsw i64 %97, 2
  %incdec.ptr131.2507 = getelementptr inbounds i16, ptr %incdec.ptr131.lcssa.1, i64 1
  %107 = load i16, ptr %incdec.ptr131.lcssa.1, align 2
  %conv132.2508 = zext i16 %107 to i32
  %mul133.2509 = mul nsw i32 %86, %conv132.2508
  %add134.2510 = add nsw i32 %mul133.2509, %93
  %shr135.2511 = ashr i32 %add134.2510, %94
  %add136.2512 = add nsw i32 %shr135.2511, %90
  %cond.i.i370.2513 = tail call i32 @llvm.smax.i32(i32 %add136.2512, i32 0)
  %cond.i4.i371.2514 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.2513, i32 %92)
  %conv138.2515 = trunc i32 %cond.i4.i371.2514 to i16
  %arrayidx143.2516 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %indvars.iv.next493.1, i64 %95
  store i16 %conv138.2515, ptr %arrayidx143.2516, align 2
  br i1 %cmp127, label %for.body129.1.2, label %for.inc147.2

for.body129.1.2:                                  ; preds = %for.inc147.1
  %incdec.ptr131.1.2 = getelementptr inbounds i16, ptr %incdec.ptr131.lcssa.1, i64 2
  %108 = load i16, ptr %incdec.ptr131.2507, align 2
  %conv132.1.2 = zext i16 %108 to i32
  %mul133.1.2 = mul nsw i32 %86, %conv132.1.2
  %add134.1.2 = add nsw i32 %mul133.1.2, %93
  %shr135.1.2 = ashr i32 %add134.1.2, %94
  %add136.1.2 = add nsw i32 %shr135.1.2, %90
  %cond.i.i370.1.2 = tail call i32 @llvm.smax.i32(i32 %add136.1.2, i32 0)
  %cond.i4.i371.1.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.1.2, i32 %92)
  %conv138.1.2 = trunc i32 %cond.i4.i371.1.2 to i16
  %arrayidx143.1.2 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %indvars.iv.next493.1, i64 %indvars.iv.next491
  store i16 %conv138.1.2, ptr %arrayidx143.1.2, align 2
  %indvars.iv.next491.1.2 = add nsw i64 %95, 2
  %incdec.ptr131.2.2 = getelementptr inbounds i16, ptr %incdec.ptr131.lcssa.1, i64 3
  %109 = load i16, ptr %incdec.ptr131.1.2, align 2
  %conv132.2.2 = zext i16 %109 to i32
  %mul133.2.2 = mul nsw i32 %86, %conv132.2.2
  %add134.2.2 = add nsw i32 %mul133.2.2, %93
  %shr135.2.2 = ashr i32 %add134.2.2, %94
  %add136.2.2 = add nsw i32 %shr135.2.2, %90
  %cond.i.i370.2.2 = tail call i32 @llvm.smax.i32(i32 %add136.2.2, i32 0)
  %cond.i4.i371.2.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.2.2, i32 %92)
  %conv138.2.2 = trunc i32 %cond.i4.i371.2.2 to i16
  %arrayidx143.2.2 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %indvars.iv.next493.1, i64 %indvars.iv.next491.1.2
  store i16 %conv138.2.2, ptr %arrayidx143.2.2, align 2
  %indvars.iv.next491.2.2 = add nsw i64 %95, 3
  %incdec.ptr131.3.2 = getelementptr inbounds i16, ptr %incdec.ptr131.lcssa.1, i64 4
  %110 = load i16, ptr %incdec.ptr131.2.2, align 2
  %conv132.3.2 = zext i16 %110 to i32
  %mul133.3.2 = mul nsw i32 %86, %conv132.3.2
  %add134.3.2 = add nsw i32 %mul133.3.2, %93
  %shr135.3.2 = ashr i32 %add134.3.2, %94
  %add136.3.2 = add nsw i32 %shr135.3.2, %90
  %cond.i.i370.3.2 = tail call i32 @llvm.smax.i32(i32 %add136.3.2, i32 0)
  %cond.i4.i371.3.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.3.2, i32 %92)
  %conv138.3.2 = trunc i32 %cond.i4.i371.3.2 to i16
  %arrayidx143.3.2 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %indvars.iv.next493.1, i64 %indvars.iv.next491.2.2
  store i16 %conv138.3.2, ptr %arrayidx143.3.2, align 2
  br label %for.inc147.2

for.inc147.2:                                     ; preds = %for.body129.1.2, %for.inc147.1
  %incdec.ptr131.lcssa.2 = phi ptr [ %incdec.ptr131.2507, %for.inc147.1 ], [ %incdec.ptr131.3.2, %for.body129.1.2 ]
  %indvars.iv.next493.2 = add nsw i64 %97, 3
  %111 = load i16, ptr %incdec.ptr131.lcssa.2, align 2
  %conv132.3519 = zext i16 %111 to i32
  %mul133.3520 = mul nsw i32 %86, %conv132.3519
  %add134.3521 = add nsw i32 %mul133.3520, %93
  %shr135.3522 = ashr i32 %add134.3521, %94
  %add136.3523 = add nsw i32 %shr135.3522, %90
  %cond.i.i370.3524 = tail call i32 @llvm.smax.i32(i32 %add136.3523, i32 0)
  %cond.i4.i371.3525 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.3524, i32 %92)
  %conv138.3526 = trunc i32 %cond.i4.i371.3525 to i16
  %arrayidx143.3527 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %indvars.iv.next493.2, i64 %95
  store i16 %conv138.3526, ptr %arrayidx143.3527, align 2
  br i1 %cmp127, label %for.body129.1.3, label %cleanup

for.body129.1.3:                                  ; preds = %for.inc147.2
  %incdec.ptr131.3518 = getelementptr inbounds i16, ptr %incdec.ptr131.lcssa.2, i64 1
  %incdec.ptr131.1.3 = getelementptr inbounds i16, ptr %incdec.ptr131.lcssa.2, i64 2
  %112 = load i16, ptr %incdec.ptr131.3518, align 2
  %conv132.1.3 = zext i16 %112 to i32
  %mul133.1.3 = mul nsw i32 %86, %conv132.1.3
  %add134.1.3 = add nsw i32 %mul133.1.3, %93
  %shr135.1.3 = ashr i32 %add134.1.3, %94
  %add136.1.3 = add nsw i32 %shr135.1.3, %90
  %cond.i.i370.1.3 = tail call i32 @llvm.smax.i32(i32 %add136.1.3, i32 0)
  %cond.i4.i371.1.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.1.3, i32 %92)
  %conv138.1.3 = trunc i32 %cond.i4.i371.1.3 to i16
  %arrayidx143.1.3 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %indvars.iv.next493.2, i64 %indvars.iv.next491
  store i16 %conv138.1.3, ptr %arrayidx143.1.3, align 2
  %indvars.iv.next491.1.3 = add nsw i64 %95, 2
  %incdec.ptr131.2.3 = getelementptr inbounds i16, ptr %incdec.ptr131.lcssa.2, i64 3
  %113 = load i16, ptr %incdec.ptr131.1.3, align 2
  %conv132.2.3 = zext i16 %113 to i32
  %mul133.2.3 = mul nsw i32 %86, %conv132.2.3
  %add134.2.3 = add nsw i32 %mul133.2.3, %93
  %shr135.2.3 = ashr i32 %add134.2.3, %94
  %add136.2.3 = add nsw i32 %shr135.2.3, %90
  %cond.i.i370.2.3 = tail call i32 @llvm.smax.i32(i32 %add136.2.3, i32 0)
  %cond.i4.i371.2.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.2.3, i32 %92)
  %conv138.2.3 = trunc i32 %cond.i4.i371.2.3 to i16
  %arrayidx143.2.3 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %indvars.iv.next493.2, i64 %indvars.iv.next491.1.3
  store i16 %conv138.2.3, ptr %arrayidx143.2.3, align 2
  %indvars.iv.next491.2.3 = add nsw i64 %95, 3
  %114 = load i16, ptr %incdec.ptr131.2.3, align 2
  %conv132.3.3 = zext i16 %114 to i32
  %mul133.3.3 = mul nsw i32 %86, %conv132.3.3
  %add134.3.3 = add nsw i32 %mul133.3.3, %93
  %shr135.3.3 = ashr i32 %add134.3.3, %94
  %add136.3.3 = add nsw i32 %shr135.3.3, %90
  %cond.i.i370.3.3 = tail call i32 @llvm.smax.i32(i32 %add136.3.3, i32 0)
  %cond.i4.i371.3.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i370.3.3, i32 %92)
  %conv138.3.3 = trunc i32 %cond.i4.i371.3.3 to i16
  %arrayidx143.3.3 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 51, i64 %indvars.iv.next493.2, i64 %indvars.iv.next491.2.3
  store i16 %conv138.3.3, ptr %arrayidx143.3.3, align 2
  br label %cleanup

if.else150:                                       ; preds = %if.else
  %arrayidx152 = getelementptr inbounds ptr, ptr %83, i64 1
  %115 = load ptr, ptr %arrayidx152, align 8
  %idxprom153 = sext i16 %l1_ref_idx to i64
  %arrayidx154 = getelementptr inbounds ptr, ptr %115, i64 %idxprom153
  %116 = load ptr, ptr %arrayidx154, align 8
  %add155 = add nsw i32 %uv, 1
  %idxprom156 = sext i32 %add155 to i64
  %arrayidx157 = getelementptr inbounds i32, ptr %116, i64 %idxprom156
  %117 = load i32, ptr %arrayidx157, align 4
  %118 = load ptr, ptr @wp_offset, align 8
  %arrayidx159 = getelementptr inbounds ptr, ptr %118, i64 1
  %119 = load ptr, ptr %arrayidx159, align 8
  %arrayidx161 = getelementptr inbounds ptr, ptr %119, i64 %idxprom153
  %120 = load ptr, ptr %arrayidx161, align 8
  %arrayidx164 = getelementptr inbounds i32, ptr %120, i64 %idxprom156
  %121 = load i32, ptr %arrayidx164, align 4
  %122 = load ptr, ptr @img, align 8
  %max_imgpel_value_uv173 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 157
  %123 = load i32, ptr %max_imgpel_value_uv173, align 4
  %124 = load i32, ptr @wp_chroma_round, align 4
  %125 = load i32, ptr @chroma_log_weight_denom, align 4
  %126 = sext i32 %block_x to i64
  %127 = sext i32 %add to i64
  %128 = sext i32 %block_y to i64
  %129 = sext i32 %add1 to i64
  %130 = load i16, ptr @ChromaPrediction4x4.l1_pred, align 16
  %conv175 = zext i16 %130 to i32
  %mul176 = mul nsw i32 %117, %conv175
  %add177 = add nsw i32 %mul176, %124
  %shr178 = ashr i32 %add177, %125
  %add179 = add nsw i32 %shr178, %121
  %cond.i.i372 = tail call i32 @llvm.smax.i32(i32 %add179, i32 0)
  %cond.i4.i373 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372, i32 %123)
  %conv181 = trunc i32 %cond.i4.i373 to i16
  %arrayidx186 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %128, i64 %126
  store i16 %conv181, ptr %arrayidx186, align 2
  %indvars.iv.next454 = add nsw i64 %126, 1
  %cmp170 = icmp slt i64 %indvars.iv.next454, %127
  br i1 %cmp170, label %for.body172.1, label %for.inc190

for.body172.1:                                    ; preds = %if.else150
  %131 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 1), align 2
  %conv175.1 = zext i16 %131 to i32
  %mul176.1 = mul nsw i32 %117, %conv175.1
  %add177.1 = add nsw i32 %mul176.1, %124
  %shr178.1 = ashr i32 %add177.1, %125
  %add179.1 = add nsw i32 %shr178.1, %121
  %cond.i.i372.1 = tail call i32 @llvm.smax.i32(i32 %add179.1, i32 0)
  %cond.i4.i373.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.1, i32 %123)
  %conv181.1 = trunc i32 %cond.i4.i373.1 to i16
  %arrayidx186.1 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %128, i64 %indvars.iv.next454
  store i16 %conv181.1, ptr %arrayidx186.1, align 2
  %indvars.iv.next454.1 = add nsw i64 %126, 2
  %132 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 2), align 4
  %conv175.2 = zext i16 %132 to i32
  %mul176.2 = mul nsw i32 %117, %conv175.2
  %add177.2 = add nsw i32 %mul176.2, %124
  %shr178.2 = ashr i32 %add177.2, %125
  %add179.2 = add nsw i32 %shr178.2, %121
  %cond.i.i372.2 = tail call i32 @llvm.smax.i32(i32 %add179.2, i32 0)
  %cond.i4.i373.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.2, i32 %123)
  %conv181.2 = trunc i32 %cond.i4.i373.2 to i16
  %arrayidx186.2 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %128, i64 %indvars.iv.next454.1
  store i16 %conv181.2, ptr %arrayidx186.2, align 2
  %indvars.iv.next454.2 = add nsw i64 %126, 3
  %133 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 3), align 2
  %conv175.3 = zext i16 %133 to i32
  %mul176.3 = mul nsw i32 %117, %conv175.3
  %add177.3 = add nsw i32 %mul176.3, %124
  %shr178.3 = ashr i32 %add177.3, %125
  %add179.3 = add nsw i32 %shr178.3, %121
  %cond.i.i372.3 = tail call i32 @llvm.smax.i32(i32 %add179.3, i32 0)
  %cond.i4.i373.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.3, i32 %123)
  %conv181.3 = trunc i32 %cond.i4.i373.3 to i16
  %arrayidx186.3 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %128, i64 %indvars.iv.next454.2
  store i16 %conv181.3, ptr %arrayidx186.3, align 2
  br label %for.inc190

for.inc190:                                       ; preds = %for.body172.1, %if.else150
  %incdec.ptr174.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 1), %if.else150 ], [ getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 4), %for.body172.1 ]
  %indvars.iv.next456 = add nsw i64 %128, 1
  %cmp166 = icmp slt i64 %indvars.iv.next456, %129
  br i1 %cmp166, label %for.cond169.preheader.1, label %cleanup

for.cond169.preheader.1:                          ; preds = %for.inc190
  %incdec.ptr174.1458 = getelementptr inbounds i16, ptr %incdec.ptr174.lcssa, i64 1
  %134 = load i16, ptr %incdec.ptr174.lcssa, align 2
  %conv175.1459 = zext i16 %134 to i32
  %mul176.1460 = mul nsw i32 %117, %conv175.1459
  %add177.1461 = add nsw i32 %mul176.1460, %124
  %shr178.1462 = ashr i32 %add177.1461, %125
  %add179.1463 = add nsw i32 %shr178.1462, %121
  %cond.i.i372.1464 = tail call i32 @llvm.smax.i32(i32 %add179.1463, i32 0)
  %cond.i4.i373.1465 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.1464, i32 %123)
  %conv181.1466 = trunc i32 %cond.i4.i373.1465 to i16
  %arrayidx186.1467 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %indvars.iv.next456, i64 %126
  store i16 %conv181.1466, ptr %arrayidx186.1467, align 2
  br i1 %cmp170, label %for.body172.1.1, label %for.inc190.1

for.body172.1.1:                                  ; preds = %for.cond169.preheader.1
  %incdec.ptr174.1.1 = getelementptr inbounds i16, ptr %incdec.ptr174.lcssa, i64 2
  %135 = load i16, ptr %incdec.ptr174.1458, align 2
  %conv175.1.1 = zext i16 %135 to i32
  %mul176.1.1 = mul nsw i32 %117, %conv175.1.1
  %add177.1.1 = add nsw i32 %mul176.1.1, %124
  %shr178.1.1 = ashr i32 %add177.1.1, %125
  %add179.1.1 = add nsw i32 %shr178.1.1, %121
  %cond.i.i372.1.1 = tail call i32 @llvm.smax.i32(i32 %add179.1.1, i32 0)
  %cond.i4.i373.1.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.1.1, i32 %123)
  %conv181.1.1 = trunc i32 %cond.i4.i373.1.1 to i16
  %arrayidx186.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %indvars.iv.next456, i64 %indvars.iv.next454
  store i16 %conv181.1.1, ptr %arrayidx186.1.1, align 2
  %indvars.iv.next454.1.1 = add nsw i64 %126, 2
  %incdec.ptr174.2.1 = getelementptr inbounds i16, ptr %incdec.ptr174.lcssa, i64 3
  %136 = load i16, ptr %incdec.ptr174.1.1, align 2
  %conv175.2.1 = zext i16 %136 to i32
  %mul176.2.1 = mul nsw i32 %117, %conv175.2.1
  %add177.2.1 = add nsw i32 %mul176.2.1, %124
  %shr178.2.1 = ashr i32 %add177.2.1, %125
  %add179.2.1 = add nsw i32 %shr178.2.1, %121
  %cond.i.i372.2.1 = tail call i32 @llvm.smax.i32(i32 %add179.2.1, i32 0)
  %cond.i4.i373.2.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.2.1, i32 %123)
  %conv181.2.1 = trunc i32 %cond.i4.i373.2.1 to i16
  %arrayidx186.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %indvars.iv.next456, i64 %indvars.iv.next454.1.1
  store i16 %conv181.2.1, ptr %arrayidx186.2.1, align 2
  %indvars.iv.next454.2.1 = add nsw i64 %126, 3
  %incdec.ptr174.3.1 = getelementptr inbounds i16, ptr %incdec.ptr174.lcssa, i64 4
  %137 = load i16, ptr %incdec.ptr174.2.1, align 2
  %conv175.3.1 = zext i16 %137 to i32
  %mul176.3.1 = mul nsw i32 %117, %conv175.3.1
  %add177.3.1 = add nsw i32 %mul176.3.1, %124
  %shr178.3.1 = ashr i32 %add177.3.1, %125
  %add179.3.1 = add nsw i32 %shr178.3.1, %121
  %cond.i.i372.3.1 = tail call i32 @llvm.smax.i32(i32 %add179.3.1, i32 0)
  %cond.i4.i373.3.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.3.1, i32 %123)
  %conv181.3.1 = trunc i32 %cond.i4.i373.3.1 to i16
  %arrayidx186.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %indvars.iv.next456, i64 %indvars.iv.next454.2.1
  store i16 %conv181.3.1, ptr %arrayidx186.3.1, align 2
  br label %for.inc190.1

for.inc190.1:                                     ; preds = %for.body172.1.1, %for.cond169.preheader.1
  %incdec.ptr174.lcssa.1 = phi ptr [ %incdec.ptr174.1458, %for.cond169.preheader.1 ], [ %incdec.ptr174.3.1, %for.body172.1.1 ]
  %indvars.iv.next456.1 = add nsw i64 %128, 2
  %incdec.ptr174.2470 = getelementptr inbounds i16, ptr %incdec.ptr174.lcssa.1, i64 1
  %138 = load i16, ptr %incdec.ptr174.lcssa.1, align 2
  %conv175.2471 = zext i16 %138 to i32
  %mul176.2472 = mul nsw i32 %117, %conv175.2471
  %add177.2473 = add nsw i32 %mul176.2472, %124
  %shr178.2474 = ashr i32 %add177.2473, %125
  %add179.2475 = add nsw i32 %shr178.2474, %121
  %cond.i.i372.2476 = tail call i32 @llvm.smax.i32(i32 %add179.2475, i32 0)
  %cond.i4.i373.2477 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.2476, i32 %123)
  %conv181.2478 = trunc i32 %cond.i4.i373.2477 to i16
  %arrayidx186.2479 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %indvars.iv.next456.1, i64 %126
  store i16 %conv181.2478, ptr %arrayidx186.2479, align 2
  br i1 %cmp170, label %for.body172.1.2, label %for.inc190.2

for.body172.1.2:                                  ; preds = %for.inc190.1
  %incdec.ptr174.1.2 = getelementptr inbounds i16, ptr %incdec.ptr174.lcssa.1, i64 2
  %139 = load i16, ptr %incdec.ptr174.2470, align 2
  %conv175.1.2 = zext i16 %139 to i32
  %mul176.1.2 = mul nsw i32 %117, %conv175.1.2
  %add177.1.2 = add nsw i32 %mul176.1.2, %124
  %shr178.1.2 = ashr i32 %add177.1.2, %125
  %add179.1.2 = add nsw i32 %shr178.1.2, %121
  %cond.i.i372.1.2 = tail call i32 @llvm.smax.i32(i32 %add179.1.2, i32 0)
  %cond.i4.i373.1.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.1.2, i32 %123)
  %conv181.1.2 = trunc i32 %cond.i4.i373.1.2 to i16
  %arrayidx186.1.2 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %indvars.iv.next456.1, i64 %indvars.iv.next454
  store i16 %conv181.1.2, ptr %arrayidx186.1.2, align 2
  %indvars.iv.next454.1.2 = add nsw i64 %126, 2
  %incdec.ptr174.2.2 = getelementptr inbounds i16, ptr %incdec.ptr174.lcssa.1, i64 3
  %140 = load i16, ptr %incdec.ptr174.1.2, align 2
  %conv175.2.2 = zext i16 %140 to i32
  %mul176.2.2 = mul nsw i32 %117, %conv175.2.2
  %add177.2.2 = add nsw i32 %mul176.2.2, %124
  %shr178.2.2 = ashr i32 %add177.2.2, %125
  %add179.2.2 = add nsw i32 %shr178.2.2, %121
  %cond.i.i372.2.2 = tail call i32 @llvm.smax.i32(i32 %add179.2.2, i32 0)
  %cond.i4.i373.2.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.2.2, i32 %123)
  %conv181.2.2 = trunc i32 %cond.i4.i373.2.2 to i16
  %arrayidx186.2.2 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %indvars.iv.next456.1, i64 %indvars.iv.next454.1.2
  store i16 %conv181.2.2, ptr %arrayidx186.2.2, align 2
  %indvars.iv.next454.2.2 = add nsw i64 %126, 3
  %incdec.ptr174.3.2 = getelementptr inbounds i16, ptr %incdec.ptr174.lcssa.1, i64 4
  %141 = load i16, ptr %incdec.ptr174.2.2, align 2
  %conv175.3.2 = zext i16 %141 to i32
  %mul176.3.2 = mul nsw i32 %117, %conv175.3.2
  %add177.3.2 = add nsw i32 %mul176.3.2, %124
  %shr178.3.2 = ashr i32 %add177.3.2, %125
  %add179.3.2 = add nsw i32 %shr178.3.2, %121
  %cond.i.i372.3.2 = tail call i32 @llvm.smax.i32(i32 %add179.3.2, i32 0)
  %cond.i4.i373.3.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.3.2, i32 %123)
  %conv181.3.2 = trunc i32 %cond.i4.i373.3.2 to i16
  %arrayidx186.3.2 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %indvars.iv.next456.1, i64 %indvars.iv.next454.2.2
  store i16 %conv181.3.2, ptr %arrayidx186.3.2, align 2
  br label %for.inc190.2

for.inc190.2:                                     ; preds = %for.body172.1.2, %for.inc190.1
  %incdec.ptr174.lcssa.2 = phi ptr [ %incdec.ptr174.2470, %for.inc190.1 ], [ %incdec.ptr174.3.2, %for.body172.1.2 ]
  %indvars.iv.next456.2 = add nsw i64 %128, 3
  %142 = load i16, ptr %incdec.ptr174.lcssa.2, align 2
  %conv175.3482 = zext i16 %142 to i32
  %mul176.3483 = mul nsw i32 %117, %conv175.3482
  %add177.3484 = add nsw i32 %mul176.3483, %124
  %shr178.3485 = ashr i32 %add177.3484, %125
  %add179.3486 = add nsw i32 %shr178.3485, %121
  %cond.i.i372.3487 = tail call i32 @llvm.smax.i32(i32 %add179.3486, i32 0)
  %cond.i4.i373.3488 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.3487, i32 %123)
  %conv181.3489 = trunc i32 %cond.i4.i373.3488 to i16
  %arrayidx186.3490 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %indvars.iv.next456.2, i64 %126
  store i16 %conv181.3489, ptr %arrayidx186.3490, align 2
  br i1 %cmp170, label %for.body172.1.3, label %cleanup

for.body172.1.3:                                  ; preds = %for.inc190.2
  %incdec.ptr174.3481 = getelementptr inbounds i16, ptr %incdec.ptr174.lcssa.2, i64 1
  %incdec.ptr174.1.3 = getelementptr inbounds i16, ptr %incdec.ptr174.lcssa.2, i64 2
  %143 = load i16, ptr %incdec.ptr174.3481, align 2
  %conv175.1.3 = zext i16 %143 to i32
  %mul176.1.3 = mul nsw i32 %117, %conv175.1.3
  %add177.1.3 = add nsw i32 %mul176.1.3, %124
  %shr178.1.3 = ashr i32 %add177.1.3, %125
  %add179.1.3 = add nsw i32 %shr178.1.3, %121
  %cond.i.i372.1.3 = tail call i32 @llvm.smax.i32(i32 %add179.1.3, i32 0)
  %cond.i4.i373.1.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.1.3, i32 %123)
  %conv181.1.3 = trunc i32 %cond.i4.i373.1.3 to i16
  %arrayidx186.1.3 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %indvars.iv.next456.2, i64 %indvars.iv.next454
  store i16 %conv181.1.3, ptr %arrayidx186.1.3, align 2
  %indvars.iv.next454.1.3 = add nsw i64 %126, 2
  %incdec.ptr174.2.3 = getelementptr inbounds i16, ptr %incdec.ptr174.lcssa.2, i64 3
  %144 = load i16, ptr %incdec.ptr174.1.3, align 2
  %conv175.2.3 = zext i16 %144 to i32
  %mul176.2.3 = mul nsw i32 %117, %conv175.2.3
  %add177.2.3 = add nsw i32 %mul176.2.3, %124
  %shr178.2.3 = ashr i32 %add177.2.3, %125
  %add179.2.3 = add nsw i32 %shr178.2.3, %121
  %cond.i.i372.2.3 = tail call i32 @llvm.smax.i32(i32 %add179.2.3, i32 0)
  %cond.i4.i373.2.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.2.3, i32 %123)
  %conv181.2.3 = trunc i32 %cond.i4.i373.2.3 to i16
  %arrayidx186.2.3 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %indvars.iv.next456.2, i64 %indvars.iv.next454.1.3
  store i16 %conv181.2.3, ptr %arrayidx186.2.3, align 2
  %indvars.iv.next454.2.3 = add nsw i64 %126, 3
  %145 = load i16, ptr %incdec.ptr174.2.3, align 2
  %conv175.3.3 = zext i16 %145 to i32
  %mul176.3.3 = mul nsw i32 %117, %conv175.3.3
  %add177.3.3 = add nsw i32 %mul176.3.3, %124
  %shr178.3.3 = ashr i32 %add177.3.3, %125
  %add179.3.3 = add nsw i32 %shr178.3.3, %121
  %cond.i.i372.3.3 = tail call i32 @llvm.smax.i32(i32 %add179.3.3, i32 0)
  %cond.i4.i373.3.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i372.3.3, i32 %123)
  %conv181.3.3 = trunc i32 %cond.i4.i373.3.3 to i16
  %arrayidx186.3.3 = getelementptr inbounds %struct.ImageParameters, ptr %122, i64 0, i32 51, i64 %indvars.iv.next456.2, i64 %indvars.iv.next454.2.3
  store i16 %conv181.3.3, ptr %arrayidx186.3.3, align 2
  br label %cleanup

if.else195:                                       ; preds = %if.end46
  br i1 %cmp17, label %for.cond199.preheader, label %if.else226

for.cond199.preheader:                            ; preds = %if.else195
  %146 = load ptr, ptr @img, align 8
  %147 = sext i32 %block_x to i64
  %148 = sext i32 %add to i64
  %149 = sext i32 %block_y to i64
  %150 = sext i32 %add1 to i64
  %151 = load i16, ptr @ChromaPrediction4x4.l0_pred, align 16
  %conv208 = zext i16 %151 to i32
  %152 = load i16, ptr @ChromaPrediction4x4.l1_pred, align 16
  %conv210 = zext i16 %152 to i32
  %add211 = add nuw nsw i32 %conv208, 1
  %add212 = add nuw nsw i32 %add211, %conv210
  %shr213 = lshr i32 %add212, 1
  %conv214 = trunc i32 %shr213 to i16
  %arrayidx219 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %149, i64 %147
  store i16 %conv214, ptr %arrayidx219, align 2
  %indvars.iv.next420 = add nsw i64 %147, 1
  %cmp204 = icmp slt i64 %indvars.iv.next420, %148
  br i1 %cmp204, label %for.body206.1, label %for.inc223

for.body206.1:                                    ; preds = %for.cond199.preheader
  %153 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 1), align 2
  %conv208.1 = zext i16 %153 to i32
  %154 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 1), align 2
  %conv210.1 = zext i16 %154 to i32
  %add211.1 = add nuw nsw i32 %conv208.1, 1
  %add212.1 = add nuw nsw i32 %add211.1, %conv210.1
  %shr213.1 = lshr i32 %add212.1, 1
  %conv214.1 = trunc i32 %shr213.1 to i16
  %arrayidx219.1 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %149, i64 %indvars.iv.next420
  store i16 %conv214.1, ptr %arrayidx219.1, align 2
  %indvars.iv.next420.1 = add nsw i64 %147, 2
  %155 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 2), align 4
  %conv208.2 = zext i16 %155 to i32
  %156 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 2), align 4
  %conv210.2 = zext i16 %156 to i32
  %add211.2 = add nuw nsw i32 %conv208.2, 1
  %add212.2 = add nuw nsw i32 %add211.2, %conv210.2
  %shr213.2 = lshr i32 %add212.2, 1
  %conv214.2 = trunc i32 %shr213.2 to i16
  %arrayidx219.2 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %149, i64 %indvars.iv.next420.1
  store i16 %conv214.2, ptr %arrayidx219.2, align 2
  %indvars.iv.next420.2 = add nsw i64 %147, 3
  %157 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 3), align 2
  %conv208.3 = zext i16 %157 to i32
  %158 = load i16, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 3), align 2
  %conv210.3 = zext i16 %158 to i32
  %add211.3 = add nuw nsw i32 %conv208.3, 1
  %add212.3 = add nuw nsw i32 %add211.3, %conv210.3
  %shr213.3 = lshr i32 %add212.3, 1
  %conv214.3 = trunc i32 %shr213.3 to i16
  %arrayidx219.3 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %149, i64 %indvars.iv.next420.2
  store i16 %conv214.3, ptr %arrayidx219.3, align 2
  br label %for.inc223

for.inc223:                                       ; preds = %for.body206.1, %for.cond199.preheader
  %incdec.ptr207.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 1), %for.cond199.preheader ], [ getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 4), %for.body206.1 ]
  %incdec.ptr209.lcssa = phi ptr [ getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 1), %for.cond199.preheader ], [ getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 4), %for.body206.1 ]
  %indvars.iv.next422 = add nsw i64 %149, 1
  %cmp200 = icmp slt i64 %indvars.iv.next422, %150
  br i1 %cmp200, label %for.cond203.preheader.1, label %cleanup

for.cond203.preheader.1:                          ; preds = %for.inc223
  %incdec.ptr207.1424 = getelementptr inbounds i16, ptr %incdec.ptr207.lcssa, i64 1
  %159 = load i16, ptr %incdec.ptr207.lcssa, align 2
  %conv208.1425 = zext i16 %159 to i32
  %incdec.ptr209.1426 = getelementptr inbounds i16, ptr %incdec.ptr209.lcssa, i64 1
  %160 = load i16, ptr %incdec.ptr209.lcssa, align 2
  %conv210.1427 = zext i16 %160 to i32
  %add211.1428 = add nuw nsw i32 %conv208.1425, 1
  %add212.1429 = add nuw nsw i32 %add211.1428, %conv210.1427
  %shr213.1430 = lshr i32 %add212.1429, 1
  %conv214.1431 = trunc i32 %shr213.1430 to i16
  %arrayidx219.1432 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %indvars.iv.next422, i64 %147
  store i16 %conv214.1431, ptr %arrayidx219.1432, align 2
  br i1 %cmp204, label %for.body206.1.1, label %for.inc223.1

for.body206.1.1:                                  ; preds = %for.cond203.preheader.1
  %incdec.ptr207.1.1 = getelementptr inbounds i16, ptr %incdec.ptr207.lcssa, i64 2
  %161 = load i16, ptr %incdec.ptr207.1424, align 2
  %conv208.1.1 = zext i16 %161 to i32
  %incdec.ptr209.1.1 = getelementptr inbounds i16, ptr %incdec.ptr209.lcssa, i64 2
  %162 = load i16, ptr %incdec.ptr209.1426, align 2
  %conv210.1.1 = zext i16 %162 to i32
  %add211.1.1 = add nuw nsw i32 %conv208.1.1, 1
  %add212.1.1 = add nuw nsw i32 %add211.1.1, %conv210.1.1
  %shr213.1.1 = lshr i32 %add212.1.1, 1
  %conv214.1.1 = trunc i32 %shr213.1.1 to i16
  %arrayidx219.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %indvars.iv.next422, i64 %indvars.iv.next420
  store i16 %conv214.1.1, ptr %arrayidx219.1.1, align 2
  %indvars.iv.next420.1.1 = add nsw i64 %147, 2
  %incdec.ptr207.2.1 = getelementptr inbounds i16, ptr %incdec.ptr207.lcssa, i64 3
  %163 = load i16, ptr %incdec.ptr207.1.1, align 2
  %conv208.2.1 = zext i16 %163 to i32
  %incdec.ptr209.2.1 = getelementptr inbounds i16, ptr %incdec.ptr209.lcssa, i64 3
  %164 = load i16, ptr %incdec.ptr209.1.1, align 2
  %conv210.2.1 = zext i16 %164 to i32
  %add211.2.1 = add nuw nsw i32 %conv208.2.1, 1
  %add212.2.1 = add nuw nsw i32 %add211.2.1, %conv210.2.1
  %shr213.2.1 = lshr i32 %add212.2.1, 1
  %conv214.2.1 = trunc i32 %shr213.2.1 to i16
  %arrayidx219.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %indvars.iv.next422, i64 %indvars.iv.next420.1.1
  store i16 %conv214.2.1, ptr %arrayidx219.2.1, align 2
  %indvars.iv.next420.2.1 = add nsw i64 %147, 3
  %incdec.ptr207.3.1 = getelementptr inbounds i16, ptr %incdec.ptr207.lcssa, i64 4
  %165 = load i16, ptr %incdec.ptr207.2.1, align 2
  %conv208.3.1 = zext i16 %165 to i32
  %incdec.ptr209.3.1 = getelementptr inbounds i16, ptr %incdec.ptr209.lcssa, i64 4
  %166 = load i16, ptr %incdec.ptr209.2.1, align 2
  %conv210.3.1 = zext i16 %166 to i32
  %add211.3.1 = add nuw nsw i32 %conv208.3.1, 1
  %add212.3.1 = add nuw nsw i32 %add211.3.1, %conv210.3.1
  %shr213.3.1 = lshr i32 %add212.3.1, 1
  %conv214.3.1 = trunc i32 %shr213.3.1 to i16
  %arrayidx219.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %indvars.iv.next422, i64 %indvars.iv.next420.2.1
  store i16 %conv214.3.1, ptr %arrayidx219.3.1, align 2
  br label %for.inc223.1

for.inc223.1:                                     ; preds = %for.body206.1.1, %for.cond203.preheader.1
  %incdec.ptr207.lcssa.1 = phi ptr [ %incdec.ptr207.1424, %for.cond203.preheader.1 ], [ %incdec.ptr207.3.1, %for.body206.1.1 ]
  %incdec.ptr209.lcssa.1 = phi ptr [ %incdec.ptr209.1426, %for.cond203.preheader.1 ], [ %incdec.ptr209.3.1, %for.body206.1.1 ]
  %indvars.iv.next422.1 = add nsw i64 %149, 2
  %incdec.ptr207.2435 = getelementptr inbounds i16, ptr %incdec.ptr207.lcssa.1, i64 1
  %167 = load i16, ptr %incdec.ptr207.lcssa.1, align 2
  %conv208.2436 = zext i16 %167 to i32
  %incdec.ptr209.2437 = getelementptr inbounds i16, ptr %incdec.ptr209.lcssa.1, i64 1
  %168 = load i16, ptr %incdec.ptr209.lcssa.1, align 2
  %conv210.2438 = zext i16 %168 to i32
  %add211.2439 = add nuw nsw i32 %conv208.2436, 1
  %add212.2440 = add nuw nsw i32 %add211.2439, %conv210.2438
  %shr213.2441 = lshr i32 %add212.2440, 1
  %conv214.2442 = trunc i32 %shr213.2441 to i16
  %arrayidx219.2443 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %indvars.iv.next422.1, i64 %147
  store i16 %conv214.2442, ptr %arrayidx219.2443, align 2
  br i1 %cmp204, label %for.body206.1.2, label %for.inc223.2

for.body206.1.2:                                  ; preds = %for.inc223.1
  %incdec.ptr207.1.2 = getelementptr inbounds i16, ptr %incdec.ptr207.lcssa.1, i64 2
  %169 = load i16, ptr %incdec.ptr207.2435, align 2
  %conv208.1.2 = zext i16 %169 to i32
  %incdec.ptr209.1.2 = getelementptr inbounds i16, ptr %incdec.ptr209.lcssa.1, i64 2
  %170 = load i16, ptr %incdec.ptr209.2437, align 2
  %conv210.1.2 = zext i16 %170 to i32
  %add211.1.2 = add nuw nsw i32 %conv208.1.2, 1
  %add212.1.2 = add nuw nsw i32 %add211.1.2, %conv210.1.2
  %shr213.1.2 = lshr i32 %add212.1.2, 1
  %conv214.1.2 = trunc i32 %shr213.1.2 to i16
  %arrayidx219.1.2 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %indvars.iv.next422.1, i64 %indvars.iv.next420
  store i16 %conv214.1.2, ptr %arrayidx219.1.2, align 2
  %indvars.iv.next420.1.2 = add nsw i64 %147, 2
  %incdec.ptr207.2.2 = getelementptr inbounds i16, ptr %incdec.ptr207.lcssa.1, i64 3
  %171 = load i16, ptr %incdec.ptr207.1.2, align 2
  %conv208.2.2 = zext i16 %171 to i32
  %incdec.ptr209.2.2 = getelementptr inbounds i16, ptr %incdec.ptr209.lcssa.1, i64 3
  %172 = load i16, ptr %incdec.ptr209.1.2, align 2
  %conv210.2.2 = zext i16 %172 to i32
  %add211.2.2 = add nuw nsw i32 %conv208.2.2, 1
  %add212.2.2 = add nuw nsw i32 %add211.2.2, %conv210.2.2
  %shr213.2.2 = lshr i32 %add212.2.2, 1
  %conv214.2.2 = trunc i32 %shr213.2.2 to i16
  %arrayidx219.2.2 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %indvars.iv.next422.1, i64 %indvars.iv.next420.1.2
  store i16 %conv214.2.2, ptr %arrayidx219.2.2, align 2
  %indvars.iv.next420.2.2 = add nsw i64 %147, 3
  %incdec.ptr207.3.2 = getelementptr inbounds i16, ptr %incdec.ptr207.lcssa.1, i64 4
  %173 = load i16, ptr %incdec.ptr207.2.2, align 2
  %conv208.3.2 = zext i16 %173 to i32
  %incdec.ptr209.3.2 = getelementptr inbounds i16, ptr %incdec.ptr209.lcssa.1, i64 4
  %174 = load i16, ptr %incdec.ptr209.2.2, align 2
  %conv210.3.2 = zext i16 %174 to i32
  %add211.3.2 = add nuw nsw i32 %conv208.3.2, 1
  %add212.3.2 = add nuw nsw i32 %add211.3.2, %conv210.3.2
  %shr213.3.2 = lshr i32 %add212.3.2, 1
  %conv214.3.2 = trunc i32 %shr213.3.2 to i16
  %arrayidx219.3.2 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %indvars.iv.next422.1, i64 %indvars.iv.next420.2.2
  store i16 %conv214.3.2, ptr %arrayidx219.3.2, align 2
  br label %for.inc223.2

for.inc223.2:                                     ; preds = %for.body206.1.2, %for.inc223.1
  %incdec.ptr207.lcssa.2 = phi ptr [ %incdec.ptr207.2435, %for.inc223.1 ], [ %incdec.ptr207.3.2, %for.body206.1.2 ]
  %incdec.ptr209.lcssa.2 = phi ptr [ %incdec.ptr209.2437, %for.inc223.1 ], [ %incdec.ptr209.3.2, %for.body206.1.2 ]
  %indvars.iv.next422.2 = add nsw i64 %149, 3
  %175 = load i16, ptr %incdec.ptr207.lcssa.2, align 2
  %conv208.3446 = zext i16 %175 to i32
  %176 = load i16, ptr %incdec.ptr209.lcssa.2, align 2
  %conv210.3448 = zext i16 %176 to i32
  %add211.3449 = add nuw nsw i32 %conv208.3446, 1
  %add212.3450 = add nuw nsw i32 %add211.3449, %conv210.3448
  %shr213.3451 = lshr i32 %add212.3450, 1
  %conv214.3452 = trunc i32 %shr213.3451 to i16
  %arrayidx219.3453 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %indvars.iv.next422.2, i64 %147
  store i16 %conv214.3452, ptr %arrayidx219.3453, align 2
  br i1 %cmp204, label %for.body206.1.3, label %cleanup

for.body206.1.3:                                  ; preds = %for.inc223.2
  %incdec.ptr209.3447 = getelementptr inbounds i16, ptr %incdec.ptr209.lcssa.2, i64 1
  %incdec.ptr207.3445 = getelementptr inbounds i16, ptr %incdec.ptr207.lcssa.2, i64 1
  %incdec.ptr207.1.3 = getelementptr inbounds i16, ptr %incdec.ptr207.lcssa.2, i64 2
  %177 = load i16, ptr %incdec.ptr207.3445, align 2
  %conv208.1.3 = zext i16 %177 to i32
  %incdec.ptr209.1.3 = getelementptr inbounds i16, ptr %incdec.ptr209.lcssa.2, i64 2
  %178 = load i16, ptr %incdec.ptr209.3447, align 2
  %conv210.1.3 = zext i16 %178 to i32
  %add211.1.3 = add nuw nsw i32 %conv208.1.3, 1
  %add212.1.3 = add nuw nsw i32 %add211.1.3, %conv210.1.3
  %shr213.1.3 = lshr i32 %add212.1.3, 1
  %conv214.1.3 = trunc i32 %shr213.1.3 to i16
  %arrayidx219.1.3 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %indvars.iv.next422.2, i64 %indvars.iv.next420
  store i16 %conv214.1.3, ptr %arrayidx219.1.3, align 2
  %indvars.iv.next420.1.3 = add nsw i64 %147, 2
  %incdec.ptr207.2.3 = getelementptr inbounds i16, ptr %incdec.ptr207.lcssa.2, i64 3
  %179 = load i16, ptr %incdec.ptr207.1.3, align 2
  %conv208.2.3 = zext i16 %179 to i32
  %incdec.ptr209.2.3 = getelementptr inbounds i16, ptr %incdec.ptr209.lcssa.2, i64 3
  %180 = load i16, ptr %incdec.ptr209.1.3, align 2
  %conv210.2.3 = zext i16 %180 to i32
  %add211.2.3 = add nuw nsw i32 %conv208.2.3, 1
  %add212.2.3 = add nuw nsw i32 %add211.2.3, %conv210.2.3
  %shr213.2.3 = lshr i32 %add212.2.3, 1
  %conv214.2.3 = trunc i32 %shr213.2.3 to i16
  %arrayidx219.2.3 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %indvars.iv.next422.2, i64 %indvars.iv.next420.1.3
  store i16 %conv214.2.3, ptr %arrayidx219.2.3, align 2
  %indvars.iv.next420.2.3 = add nsw i64 %147, 3
  %181 = load i16, ptr %incdec.ptr207.2.3, align 2
  %conv208.3.3 = zext i16 %181 to i32
  %182 = load i16, ptr %incdec.ptr209.2.3, align 2
  %conv210.3.3 = zext i16 %182 to i32
  %add211.3.3 = add nuw nsw i32 %conv208.3.3, 1
  %add212.3.3 = add nuw nsw i32 %add211.3.3, %conv210.3.3
  %shr213.3.3 = lshr i32 %add212.3.3, 1
  %conv214.3.3 = trunc i32 %shr213.3.3 to i16
  %arrayidx219.3.3 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 51, i64 %indvars.iv.next422.2, i64 %indvars.iv.next420.2.3
  store i16 %conv214.3.3, ptr %arrayidx219.3.3, align 2
  br label %cleanup

if.else226:                                       ; preds = %if.else195
  %idxprom237 = sext i32 %block_x to i64
  %183 = sext i32 %block_y to i64
  %184 = sext i32 %add1 to i64
  %185 = load ptr, ptr @img, align 8
  %arrayidx238 = getelementptr inbounds %struct.ImageParameters, ptr %185, i64 0, i32 51, i64 %183, i64 %idxprom237
  %indvars.iv.next418 = add nsw i64 %183, 1
  %cmp231 = icmp slt i64 %indvars.iv.next418, %184
  br i1 %cmp33382, label %for.cond230.preheader, label %for.cond243.preheader

for.cond243.preheader:                            ; preds = %if.else226
  %186 = load i64, ptr @ChromaPrediction4x4.l1_pred, align 16
  store i64 %186, ptr %arrayidx238, align 2
  br i1 %cmp231, label %for.body246.1, label %cleanup

for.cond230.preheader:                            ; preds = %if.else226
  %187 = load i64, ptr @ChromaPrediction4x4.l0_pred, align 16
  store i64 %187, ptr %arrayidx238, align 2
  br i1 %cmp231, label %for.body233.1, label %cleanup

for.body233.1:                                    ; preds = %for.cond230.preheader
  %188 = load ptr, ptr @img, align 8
  %arrayidx238.1 = getelementptr inbounds %struct.ImageParameters, ptr %188, i64 0, i32 51, i64 %indvars.iv.next418, i64 %idxprom237
  %189 = load i64, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 4), align 8
  store i64 %189, ptr %arrayidx238.1, align 2
  %indvars.iv.next418.1 = add nsw i64 %183, 2
  %190 = load ptr, ptr @img, align 8
  %arrayidx238.2 = getelementptr inbounds %struct.ImageParameters, ptr %190, i64 0, i32 51, i64 %indvars.iv.next418.1, i64 %idxprom237
  %191 = load i64, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 8), align 16
  store i64 %191, ptr %arrayidx238.2, align 2
  %indvars.iv.next418.2 = add nsw i64 %183, 3
  %192 = load ptr, ptr @img, align 8
  %arrayidx238.3 = getelementptr inbounds %struct.ImageParameters, ptr %192, i64 0, i32 51, i64 %indvars.iv.next418.2, i64 %idxprom237
  %193 = load i64, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l0_pred, i64 0, i64 12), align 8
  store i64 %193, ptr %arrayidx238.3, align 2
  br label %cleanup

for.body246.1:                                    ; preds = %for.cond243.preheader
  %194 = load ptr, ptr @img, align 8
  %arrayidx251.1 = getelementptr inbounds %struct.ImageParameters, ptr %194, i64 0, i32 51, i64 %indvars.iv.next418, i64 %idxprom237
  %195 = load i64, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 4), align 8
  store i64 %195, ptr %arrayidx251.1, align 2
  %indvars.iv.next.1 = add nsw i64 %183, 2
  %196 = load ptr, ptr @img, align 8
  %arrayidx251.2 = getelementptr inbounds %struct.ImageParameters, ptr %196, i64 0, i32 51, i64 %indvars.iv.next.1, i64 %idxprom237
  %197 = load i64, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 8), align 16
  store i64 %197, ptr %arrayidx251.2, align 2
  %indvars.iv.next.2 = add nsw i64 %183, 3
  %198 = load ptr, ptr @img, align 8
  %arrayidx251.3 = getelementptr inbounds %struct.ImageParameters, ptr %198, i64 0, i32 51, i64 %indvars.iv.next.2, i64 %idxprom237
  %199 = load i64, ptr getelementptr inbounds ([16 x i16], ptr @ChromaPrediction4x4.l1_pred, i64 0, i64 12), align 8
  store i64 %199, ptr %arrayidx251.3, align 2
  br label %cleanup

cleanup:                                          ; preds = %for.cond243.preheader, %for.body246.1, %for.cond230.preheader, %for.body233.1, %for.inc223, %for.body206.1.3, %for.inc223.2, %for.inc190, %for.body172.1.3, %for.inc190.2, %for.inc147, %for.body129.1.3, %for.inc147.2, %for.inc103, %for.body88.1.3, %for.inc103.2, %if.then31
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @ChromaResidualCoding(ptr nocapture noundef %cr_cbp) local_unnamed_addr #0 {
entry:
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  %mb_type = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 8
  %3 = load i32, ptr %mb_type, align 8
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %type = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %4 = load i32, ptr %type, align 4
  %cmp1 = icmp eq i32 %4, 0
  %cmp3 = icmp eq i32 %4, 3
  %spec.select = or i1 %cmp1, %cmp3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %spec.select, %land.rhs ]
  %yuv_format = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 160
  %6 = load i32, ptr %yuv_format, align 8
  %sub = add nsw i32 %6, -1
  %7 = load ptr, ptr @input, align 8
  %ChromaMCBuffer = getelementptr inbounds %struct.InputParameters, ptr %7, i64 0, i32 197
  %8 = load i32, ptr %ChromaMCBuffer, align 4
  %tobool.not = icmp eq i32 %8, 0
  %OneComponentChromaPrediction4x4_regenerate.OneComponentChromaPrediction4x4_retrieve = select i1 %tobool.not, ptr @OneComponentChromaPrediction4x4_regenerate, ptr @OneComponentChromaPrediction4x4_retrieve
  store ptr %OneComponentChromaPrediction4x4_regenerate.OneComponentChromaPrediction4x4_retrieve, ptr @OneComponentChromaPrediction4x4, align 8
  store i32 0, ptr %cr_cbp, align 4
  %idxprom11 = sext i32 %sub to i64
  br label %for.cond5.preheader

for.cond5.preheader:                              ; preds = %land.end, %for.inc169
  %cmp4 = phi i1 [ true, %land.end ], [ false, %for.inc169 ]
  %indvars.iv282 = phi i64 [ 0, %land.end ], [ 1, %for.inc169 ]
  %9 = load ptr, ptr @img, align 8
  %mb_cr_size_y238 = getelementptr inbounds %struct.ImageParameters, ptr %9, i64 0, i32 163
  %10 = load i32, ptr %mb_cr_size_y238, align 4
  %cmp6239 = icmp sgt i32 %10, 0
  br i1 %cmp6239, label %for.cond8.preheader.lr.ph, label %for.end20

for.cond8.preheader.lr.ph:                        ; preds = %for.cond5.preheader
  %11 = getelementptr inbounds %struct.ImageParameters, ptr %9, i64 0, i32 162
  %12 = load i32, ptr %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %for.cond8.preheader.preheader, label %for.end20

for.cond8.preheader.preheader:                    ; preds = %for.cond8.preheader.lr.ph
  %14 = trunc i64 %indvars.iv282 to i32
  br label %for.cond8.preheader

for.cond8.preheader:                              ; preds = %for.cond8.preheader.preheader, %for.inc18
  %15 = phi ptr [ %9, %for.cond8.preheader.preheader ], [ %65, %for.inc18 ]
  %indvars.iv263 = phi i64 [ 0, %for.cond8.preheader.preheader ], [ %indvars.iv.next264, %for.inc18 ]
  %mb_cr_size_x234 = getelementptr inbounds %struct.ImageParameters, ptr %15, i64 0, i32 162
  %16 = load i32, ptr %mb_cr_size_x234, align 8
  %cmp9235 = icmp sgt i32 %16, 0
  br i1 %cmp9235, label %for.body10.lr.ph, label %for.inc18

for.body10.lr.ph:                                 ; preds = %for.cond8.preheader
  %17 = lshr exact i64 %indvars.iv263, 2
  %18 = trunc i64 %indvars.iv263 to i32
  br label %for.body10

for.body10:                                       ; preds = %for.body10.lr.ph, %SetModesAndRefframe.exit
  %indvars.iv = phi i64 [ 0, %for.body10.lr.ph ], [ %indvars.iv.next, %SetModesAndRefframe.exit ]
  %19 = phi ptr [ %15, %for.body10.lr.ph ], [ %62, %SetModesAndRefframe.exit ]
  %20 = lshr exact i64 %indvars.iv, 2
  %arrayidx17 = getelementptr inbounds [3 x [4 x [4 x i32]]], ptr @ChromaResidualCoding.block8x8_idx, i64 0, i64 %idxprom11, i64 %17, i64 %20
  %21 = load i32, ptr %arrayidx17, align 4
  %mb_data.i = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 61
  %22 = load ptr, ptr %mb_data.i, align 8
  %current_mb_nr.i = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 3
  %23 = load i32, ptr %current_mb_nr.i, align 4
  %idxprom.i = sext i32 %23 to i64
  %mul.i = and i32 %21, -2
  %and.i = shl i32 %21, 1
  %mul1.i = and i32 %and.i, 2
  %idxprom2.i = sext i32 %21 to i64
  %arrayidx3.i = getelementptr inbounds %struct.macroblock, ptr %22, i64 %idxprom.i, i32 15, i64 %idxprom2.i
  %24 = load i32, ptr %arrayidx3.i, align 4
  %type.i = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 5
  %25 = load i32, ptr %type.i, align 4
  %cmp.not.i = icmp eq i32 %25, 1
  br i1 %cmp.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %for.body10
  %26 = load ptr, ptr @enc_picture, align 8
  %ref_idx.i = getelementptr inbounds %struct.storable_picture, ptr %26, i64 0, i32 35
  %27 = load ptr, ptr %ref_idx.i, align 8
  %28 = load ptr, ptr %27, align 8
  %block_y.i = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 38
  %29 = load i32, ptr %block_y.i, align 4
  %add.i = add nsw i32 %29, %mul.i
  %idxprom6.i = sext i32 %add.i to i64
  %arrayidx7.i = getelementptr inbounds ptr, ptr %28, i64 %idxprom6.i
  %30 = load ptr, ptr %arrayidx7.i, align 8
  %block_x.i = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 37
  %31 = load i32, ptr %block_x.i, align 8
  %add8.i = add nsw i32 %31, %mul1.i
  %idxprom9.i = sext i32 %add8.i to i64
  %arrayidx10.i = getelementptr inbounds i8, ptr %30, i64 %idxprom9.i
  %32 = load i8, ptr %arrayidx10.i, align 1
  %conv11.i = sext i8 %32 to i16
  %arrayidx13.i = getelementptr inbounds %struct.macroblock, ptr %22, i64 %idxprom.i, i32 14, i64 %idxprom2.i
  %33 = load i32, ptr %arrayidx13.i, align 4
  br label %SetModesAndRefframe.exit

if.else.i:                                        ; preds = %for.body10
  switch i32 %24, label %if.else62.i [
    i32 -1, label %SetModesAndRefframe.exit
    i32 0, label %if.then26.i
    i32 1, label %if.then47.i
  ]

if.then26.i:                                      ; preds = %if.else.i
  %34 = load ptr, ptr @enc_picture, align 8
  %ref_idx27.i = getelementptr inbounds %struct.storable_picture, ptr %34, i64 0, i32 35
  %35 = load ptr, ptr %ref_idx27.i, align 8
  %36 = load ptr, ptr %35, align 8
  %block_y29.i = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 38
  %37 = load i32, ptr %block_y29.i, align 4
  %add30.i = add nsw i32 %37, %mul.i
  %idxprom31.i = sext i32 %add30.i to i64
  %arrayidx32.i = getelementptr inbounds ptr, ptr %36, i64 %idxprom31.i
  %38 = load ptr, ptr %arrayidx32.i, align 8
  %block_x33.i = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 37
  %39 = load i32, ptr %block_x33.i, align 8
  %add34.i = add nsw i32 %39, %mul1.i
  %idxprom35.i = sext i32 %add34.i to i64
  %arrayidx36.i = getelementptr inbounds i8, ptr %38, i64 %idxprom35.i
  %40 = load i8, ptr %arrayidx36.i, align 1
  %conv37.i = sext i8 %40 to i16
  %arrayidx40.i = getelementptr inbounds %struct.macroblock, ptr %22, i64 %idxprom.i, i32 14, i64 %idxprom2.i
  %41 = load i32, ptr %arrayidx40.i, align 4
  br label %SetModesAndRefframe.exit

if.then47.i:                                      ; preds = %if.else.i
  %42 = load ptr, ptr @enc_picture, align 8
  %ref_idx48.i = getelementptr inbounds %struct.storable_picture, ptr %42, i64 0, i32 35
  %43 = load ptr, ptr %ref_idx48.i, align 8
  %arrayidx49.i = getelementptr inbounds ptr, ptr %43, i64 1
  %44 = load ptr, ptr %arrayidx49.i, align 8
  %block_y50.i = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 38
  %45 = load i32, ptr %block_y50.i, align 4
  %add51.i = add nsw i32 %45, %mul.i
  %idxprom52.i = sext i32 %add51.i to i64
  %arrayidx53.i = getelementptr inbounds ptr, ptr %44, i64 %idxprom52.i
  %46 = load ptr, ptr %arrayidx53.i, align 8
  %block_x54.i = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 37
  %47 = load i32, ptr %block_x54.i, align 8
  %add55.i = add nsw i32 %47, %mul1.i
  %idxprom56.i = sext i32 %add55.i to i64
  %arrayidx57.i = getelementptr inbounds i8, ptr %46, i64 %idxprom56.i
  %48 = load i8, ptr %arrayidx57.i, align 1
  %conv58.i = sext i8 %48 to i16
  %arrayidx61.i = getelementptr inbounds %struct.macroblock, ptr %22, i64 %idxprom.i, i32 14, i64 %idxprom2.i
  %49 = load i32, ptr %arrayidx61.i, align 4
  br label %SetModesAndRefframe.exit

if.else62.i:                                      ; preds = %if.else.i
  %50 = load ptr, ptr @enc_picture, align 8
  %ref_idx63.i = getelementptr inbounds %struct.storable_picture, ptr %50, i64 0, i32 35
  %51 = load ptr, ptr %ref_idx63.i, align 8
  %52 = load ptr, ptr %51, align 8
  %block_y65.i = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 38
  %53 = load i32, ptr %block_y65.i, align 4
  %add66.i = add nsw i32 %53, %mul.i
  %idxprom67.i = sext i32 %add66.i to i64
  %arrayidx68.i = getelementptr inbounds ptr, ptr %52, i64 %idxprom67.i
  %54 = load ptr, ptr %arrayidx68.i, align 8
  %block_x69.i = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 37
  %55 = load i32, ptr %block_x69.i, align 8
  %add70.i = add nsw i32 %55, %mul1.i
  %idxprom71.i = sext i32 %add70.i to i64
  %arrayidx72.i = getelementptr inbounds i8, ptr %54, i64 %idxprom71.i
  %56 = load i8, ptr %arrayidx72.i, align 1
  %conv73.i = sext i8 %56 to i16
  %arrayidx75.i = getelementptr inbounds ptr, ptr %51, i64 1
  %57 = load ptr, ptr %arrayidx75.i, align 8
  %arrayidx79.i = getelementptr inbounds ptr, ptr %57, i64 %idxprom67.i
  %58 = load ptr, ptr %arrayidx79.i, align 8
  %arrayidx83.i = getelementptr inbounds i8, ptr %58, i64 %idxprom71.i
  %59 = load i8, ptr %arrayidx83.i, align 1
  %conv84.i = sext i8 %59 to i16
  %arrayidx87.i = getelementptr inbounds %struct.macroblock, ptr %22, i64 %idxprom.i, i32 14, i64 %idxprom2.i
  %60 = load i32, ptr %arrayidx87.i, align 4
  br label %SetModesAndRefframe.exit

SetModesAndRefframe.exit:                         ; preds = %if.else.i, %if.then.i, %if.then26.i, %if.then47.i, %if.else62.i
  %l0_mode.0 = phi i32 [ %60, %if.else62.i ], [ 0, %if.then47.i ], [ %41, %if.then26.i ], [ %33, %if.then.i ], [ 0, %if.else.i ]
  %refframe.0 = phi i16 [ %conv73.i, %if.else62.i ], [ 0, %if.then47.i ], [ %conv37.i, %if.then26.i ], [ %conv11.i, %if.then.i ], [ -1, %if.else.i ]
  %bw_ref.0 = phi i16 [ %conv84.i, %if.else62.i ], [ %conv58.i, %if.then47.i ], [ 0, %if.then26.i ], [ 0, %if.then.i ], [ -1, %if.else.i ]
  %.sink.i = phi i32 [ %60, %if.else62.i ], [ %49, %if.then47.i ], [ 0, %if.then26.i ], [ 0, %if.then.i ], [ 0, %if.else.i ]
  %sext = shl i32 %24, 16
  %conv = ashr exact i32 %sext, 16
  %61 = trunc i64 %indvars.iv to i32
  tail call void @ChromaPrediction4x4(i32 noundef %14, i32 noundef %61, i32 noundef %18, i32 noundef %conv, i32 noundef %l0_mode.0, i32 noundef %.sink.i, i16 noundef signext %refframe.0, i16 noundef signext %bw_ref.0)
  %indvars.iv.next = add nuw i64 %indvars.iv, 4
  %62 = load ptr, ptr @img, align 8
  %mb_cr_size_x = getelementptr inbounds %struct.ImageParameters, ptr %62, i64 0, i32 162
  %63 = load i32, ptr %mb_cr_size_x, align 8
  %64 = trunc i64 %indvars.iv.next to i32
  %cmp9 = icmp sgt i32 %63, %64
  br i1 %cmp9, label %for.body10, label %for.inc18

for.inc18:                                        ; preds = %SetModesAndRefframe.exit, %for.cond8.preheader
  %65 = phi ptr [ %15, %for.cond8.preheader ], [ %62, %SetModesAndRefframe.exit ]
  %indvars.iv.next264 = add nuw i64 %indvars.iv263, 4
  %mb_cr_size_y = getelementptr inbounds %struct.ImageParameters, ptr %65, i64 0, i32 163
  %66 = load i32, ptr %mb_cr_size_y, align 4
  %67 = trunc i64 %indvars.iv.next264 to i32
  %cmp6 = icmp sgt i32 %66, %67
  br i1 %cmp6, label %for.cond8.preheader, label %for.end20

for.end20:                                        ; preds = %for.inc18, %for.cond8.preheader.lr.ph, %for.cond5.preheader
  %68 = phi i32 [ %10, %for.cond5.preheader ], [ %10, %for.cond8.preheader.lr.ph ], [ %66, %for.inc18 ]
  %69 = phi ptr [ %9, %for.cond5.preheader ], [ %9, %for.cond8.preheader.lr.ph ], [ %65, %for.inc18 ]
  %mb_cr_size_y.le = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 163
  %NoResidueDirect = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 97
  %70 = load i32, ptr %NoResidueDirect, align 8
  %tobool21.not = icmp eq i32 %70, 0
  br i1 %tobool21.not, label %if.else41, label %for.cond23.preheader

for.cond23.preheader:                             ; preds = %for.end20
  %cmp25244 = icmp sgt i32 %68, 0
  br i1 %cmp25244, label %for.body27, label %if.end125

for.body27:                                       ; preds = %for.cond23.preheader, %for.body27
  %indvars.iv267 = phi i64 [ %indvars.iv.next268, %for.body27 ], [ 0, %for.cond23.preheader ]
  %71 = phi ptr [ %80, %for.body27 ], [ %69, %for.cond23.preheader ]
  %72 = load ptr, ptr @enc_picture, align 8
  %imgUV = getelementptr inbounds %struct.storable_picture, ptr %72, i64 0, i32 33
  %73 = load ptr, ptr %imgUV, align 8
  %arrayidx29 = getelementptr inbounds ptr, ptr %73, i64 %indvars.iv282
  %74 = load ptr, ptr %arrayidx29, align 8
  %pix_c_y = getelementptr inbounds %struct.ImageParameters, ptr %71, i64 0, i32 42
  %75 = load i32, ptr %pix_c_y, align 4
  %76 = trunc i64 %indvars.iv267 to i32
  %add30 = add nsw i32 %75, %76
  %idxprom31 = sext i32 %add30 to i64
  %arrayidx32 = getelementptr inbounds ptr, ptr %74, i64 %idxprom31
  %77 = load ptr, ptr %arrayidx32, align 8
  %pix_c_x = getelementptr inbounds %struct.ImageParameters, ptr %71, i64 0, i32 41
  %78 = load i32, ptr %pix_c_x, align 8
  %idxprom33 = sext i32 %78 to i64
  %arrayidx34 = getelementptr inbounds i16, ptr %77, i64 %idxprom33
  %arrayidx36 = getelementptr inbounds %struct.ImageParameters, ptr %71, i64 0, i32 51, i64 %indvars.iv267
  %mb_cr_size_x37 = getelementptr inbounds %struct.ImageParameters, ptr %71, i64 0, i32 162
  %79 = load i32, ptr %mb_cr_size_x37, align 8
  %conv38 = sext i32 %79 to i64
  %mul = shl nsw i64 %conv38, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %arrayidx34, ptr nonnull align 8 %arrayidx36, i64 %mul, i1 false)
  %indvars.iv.next268 = add nuw nsw i64 %indvars.iv267, 1
  %80 = load ptr, ptr @img, align 8
  %mb_cr_size_y24 = getelementptr inbounds %struct.ImageParameters, ptr %80, i64 0, i32 163
  %81 = load i32, ptr %mb_cr_size_y24, align 4
  %82 = sext i32 %81 to i64
  %cmp25 = icmp slt i64 %indvars.iv.next268, %82
  br i1 %cmp25, label %for.body27, label %if.end125

if.else41:                                        ; preds = %for.end20
  br i1 %5, label %land.lhs.true, label %for.cond86.preheader

for.cond86.preheader:                             ; preds = %if.else41
  %cmp88248 = icmp sgt i32 %68, 0
  br i1 %cmp88248, label %for.cond91.preheader.lr.ph, label %if.else138

for.cond91.preheader.lr.ph:                       ; preds = %for.cond86.preheader
  %mb_cr_size_x92 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 162
  %83 = load ptr, ptr @imgUV_org, align 8
  %arrayidx97 = getelementptr inbounds ptr, ptr %83, i64 %indvars.iv282
  %opix_c_y = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 46
  %opix_c_x = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 45
  %84 = load i32, ptr %mb_cr_size_x92, align 8
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %for.cond91.preheader, label %if.else138

land.lhs.true:                                    ; preds = %if.else41
  %type43 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 5
  %86 = load i32, ptr %type43, align 4
  %cmp44 = icmp eq i32 %86, 3
  br i1 %cmp44, label %for.body50.preheader, label %for.cond60.preheader

for.body50.preheader:                             ; preds = %land.lhs.true
  %arrayidx52 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 52, i64 0
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %arrayidx52, i8 0, i64 32, i1 false)
  %arrayidx52.1 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 52, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %arrayidx52.1, i8 0, i64 32, i1 false)
  %arrayidx52.2 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 52, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %arrayidx52.2, i8 0, i64 32, i1 false)
  %arrayidx52.3 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 52, i64 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %arrayidx52.3, i8 0, i64 32, i1 false)
  %arrayidx52.4 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 52, i64 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %arrayidx52.4, i8 0, i64 32, i1 false)
  %arrayidx52.5 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 52, i64 5
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %arrayidx52.5, i8 0, i64 32, i1 false)
  %arrayidx52.6 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 52, i64 6
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %arrayidx52.6, i8 0, i64 32, i1 false)
  %arrayidx52.7 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 52, i64 7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %arrayidx52.7, i8 0, i64 32, i1 false)
  br label %land.lhs.true127

for.cond60.preheader:                             ; preds = %land.lhs.true
  %cmp62251 = icmp sgt i32 %68, 0
  br i1 %cmp62251, label %for.body64, label %land.lhs.true127

for.body64:                                       ; preds = %for.cond60.preheader, %for.body64
  %indvars.iv276 = phi i64 [ %indvars.iv.next277, %for.body64 ], [ 0, %for.cond60.preheader ]
  %87 = phi ptr [ %96, %for.body64 ], [ %69, %for.cond60.preheader ]
  %88 = load ptr, ptr @enc_picture, align 8
  %imgUV65 = getelementptr inbounds %struct.storable_picture, ptr %88, i64 0, i32 33
  %89 = load ptr, ptr %imgUV65, align 8
  %arrayidx67 = getelementptr inbounds ptr, ptr %89, i64 %indvars.iv282
  %90 = load ptr, ptr %arrayidx67, align 8
  %pix_c_y68 = getelementptr inbounds %struct.ImageParameters, ptr %87, i64 0, i32 42
  %91 = load i32, ptr %pix_c_y68, align 4
  %92 = trunc i64 %indvars.iv276 to i32
  %add69 = add nsw i32 %91, %92
  %idxprom70 = sext i32 %add69 to i64
  %arrayidx71 = getelementptr inbounds ptr, ptr %90, i64 %idxprom70
  %93 = load ptr, ptr %arrayidx71, align 8
  %pix_c_x72 = getelementptr inbounds %struct.ImageParameters, ptr %87, i64 0, i32 41
  %94 = load i32, ptr %pix_c_x72, align 8
  %idxprom73 = sext i32 %94 to i64
  %arrayidx74 = getelementptr inbounds i16, ptr %93, i64 %idxprom73
  %arrayidx77 = getelementptr inbounds %struct.ImageParameters, ptr %87, i64 0, i32 51, i64 %indvars.iv276
  %mb_cr_size_x79 = getelementptr inbounds %struct.ImageParameters, ptr %87, i64 0, i32 162
  %95 = load i32, ptr %mb_cr_size_x79, align 8
  %conv80 = sext i32 %95 to i64
  %mul81 = shl nsw i64 %conv80, 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %arrayidx74, ptr nonnull align 8 %arrayidx77, i64 %mul81, i1 false)
  %indvars.iv.next277 = add nuw nsw i64 %indvars.iv276, 1
  %96 = load ptr, ptr @img, align 8
  %mb_cr_size_y61 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 163
  %97 = load i32, ptr %mb_cr_size_y61, align 4
  %98 = sext i32 %97 to i64
  %cmp62 = icmp slt i64 %indvars.iv.next277, %98
  br i1 %cmp62, label %for.body64, label %if.end125

for.cond91.preheader:                             ; preds = %for.cond91.preheader.lr.ph, %for.inc120
  %99 = phi i32 [ %111, %for.inc120 ], [ %68, %for.cond91.preheader.lr.ph ]
  %100 = phi i32 [ %112, %for.inc120 ], [ %84, %for.cond91.preheader.lr.ph ]
  %indvars.iv273 = phi i64 [ %indvars.iv.next274, %for.inc120 ], [ 0, %for.cond91.preheader.lr.ph ]
  %cmp93246 = icmp sgt i32 %100, 0
  br i1 %cmp93246, label %for.body95.lr.ph, label %for.inc120

for.body95.lr.ph:                                 ; preds = %for.cond91.preheader
  %101 = load ptr, ptr %arrayidx97, align 8
  %102 = trunc i64 %indvars.iv273 to i32
  br label %for.body95

for.body95:                                       ; preds = %for.body95.lr.ph, %for.body95
  %indvars.iv270 = phi i64 [ 0, %for.body95.lr.ph ], [ %indvars.iv.next271, %for.body95 ]
  %103 = load i32, ptr %opix_c_y, align 4
  %add98 = add nsw i32 %103, %102
  %idxprom99 = sext i32 %add98 to i64
  %arrayidx100 = getelementptr inbounds ptr, ptr %101, i64 %idxprom99
  %104 = load ptr, ptr %arrayidx100, align 8
  %105 = load i32, ptr %opix_c_x, align 8
  %106 = trunc i64 %indvars.iv270 to i32
  %add101 = add nsw i32 %105, %106
  %idxprom102 = sext i32 %add101 to i64
  %arrayidx103 = getelementptr inbounds i16, ptr %104, i64 %idxprom102
  %107 = load i16, ptr %arrayidx103, align 2
  %conv104 = zext i16 %107 to i32
  %arrayidx109 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 51, i64 %indvars.iv273, i64 %indvars.iv270
  %108 = load i16, ptr %arrayidx109, align 2
  %conv110 = zext i16 %108 to i32
  %sub111 = sub nsw i32 %conv104, %conv110
  %arrayidx116 = getelementptr inbounds %struct.ImageParameters, ptr %69, i64 0, i32 52, i64 %indvars.iv273, i64 %indvars.iv270
  store i32 %sub111, ptr %arrayidx116, align 4
  %indvars.iv.next271 = add nuw nsw i64 %indvars.iv270, 1
  %109 = load i32, ptr %mb_cr_size_x92, align 8
  %110 = sext i32 %109 to i64
  %cmp93 = icmp slt i64 %indvars.iv.next271, %110
  br i1 %cmp93, label %for.body95, label %for.inc120.loopexit

for.inc120.loopexit:                              ; preds = %for.body95
  %.pre = load i32, ptr %mb_cr_size_y.le, align 4
  br label %for.inc120

for.inc120:                                       ; preds = %for.inc120.loopexit, %for.cond91.preheader
  %111 = phi i32 [ %.pre, %for.inc120.loopexit ], [ %99, %for.cond91.preheader ]
  %112 = phi i32 [ %109, %for.inc120.loopexit ], [ %100, %for.cond91.preheader ]
  %indvars.iv.next274 = add nuw nsw i64 %indvars.iv273, 1
  %113 = sext i32 %111 to i64
  %cmp88 = icmp slt i64 %indvars.iv.next274, %113
  br i1 %cmp88, label %for.cond91.preheader, label %if.end125

if.end125:                                        ; preds = %for.body27, %for.inc120, %for.body64, %for.cond23.preheader
  %114 = phi ptr [ %69, %for.cond23.preheader ], [ %96, %for.body64 ], [ %69, %for.inc120 ], [ %80, %for.body27 ]
  br i1 %5, label %land.lhs.true127, label %if.else138

land.lhs.true127:                                 ; preds = %for.cond60.preheader, %for.body50.preheader, %if.end125
  %115 = phi ptr [ %114, %if.end125 ], [ %69, %for.body50.preheader ], [ %69, %for.cond60.preheader ]
  %type128 = getelementptr inbounds %struct.ImageParameters, ptr %115, i64 0, i32 5
  %116 = load i32, ptr %type128, align 4
  %cmp129 = icmp eq i32 %116, 3
  br i1 %cmp129, label %if.then131, label %for.inc169

if.then131:                                       ; preds = %land.lhs.true127
  %117 = load i32, ptr @si_frame_indicator, align 4
  %tobool132 = icmp ne i32 %117, 0
  %118 = load i32, ptr @sp2_frame_indicator, align 4
  %tobool133 = icmp ne i32 %118, 0
  %or.cond = select i1 %tobool132, i1 true, i1 %tobool133
  %119 = load i32, ptr %cr_cbp, align 4
  %120 = trunc i64 %indvars.iv282 to i32
  br i1 %or.cond, label %if.then134, label %if.else135

if.then134:                                       ; preds = %if.then131
  %call = tail call i32 @dct_chroma_sp2(i32 noundef %120, i32 noundef %119) #17
  br label %for.inc169.sink.split

if.else135:                                       ; preds = %if.then131
  %call136 = tail call i32 @dct_chroma_sp(i32 noundef %120, i32 noundef %119) #17
  br label %for.inc169.sink.split

if.else138:                                       ; preds = %for.cond86.preheader, %for.cond91.preheader.lr.ph, %if.end125
  %121 = phi ptr [ %114, %if.end125 ], [ %69, %for.cond91.preheader.lr.ph ], [ %69, %for.cond86.preheader ]
  %NoResidueDirect139 = getelementptr inbounds %struct.ImageParameters, ptr %121, i64 0, i32 97
  %122 = load i32, ptr %NoResidueDirect139, align 8
  %tobool140.not = icmp eq i32 %122, 0
  br i1 %tobool140.not, label %if.then143, label %for.inc169

if.then143:                                       ; preds = %if.else138
  %type144 = getelementptr inbounds %struct.ImageParameters, ptr %121, i64 0, i32 5
  %123 = load i32, ptr %type144, align 4
  %cmp145.not = icmp eq i32 %123, 3
  br i1 %cmp145.not, label %lor.lhs.false147, label %if.then155

lor.lhs.false147:                                 ; preds = %if.then143
  %mb_data148 = getelementptr inbounds %struct.ImageParameters, ptr %121, i64 0, i32 61
  %124 = load ptr, ptr %mb_data148, align 8
  %current_mb_nr149 = getelementptr inbounds %struct.ImageParameters, ptr %121, i64 0, i32 3
  %125 = load i32, ptr %current_mb_nr149, align 4
  %idxprom150 = sext i32 %125 to i64
  %mb_type152 = getelementptr inbounds %struct.macroblock, ptr %124, i64 %idxprom150, i32 8
  %126 = load i32, ptr %mb_type152, align 8
  %cmp153 = icmp eq i32 %126, 10
  br i1 %cmp153, label %if.then155, label %if.else157

if.then155:                                       ; preds = %lor.lhs.false147, %if.then143
  %127 = load i32, ptr %cr_cbp, align 4
  %128 = trunc i64 %indvars.iv282 to i32
  %call156 = tail call i32 @dct_chroma(i32 noundef %128, i32 noundef %127) #17
  br label %for.inc169.sink.split

if.else157:                                       ; preds = %lor.lhs.false147
  %129 = load i32, ptr @si_frame_indicator, align 4
  %tobool158 = icmp ne i32 %129, 0
  %130 = load i32, ptr @sp2_frame_indicator, align 4
  %tobool160 = icmp ne i32 %130, 0
  %or.cond178 = select i1 %tobool158, i1 true, i1 %tobool160
  %131 = load i32, ptr %cr_cbp, align 4
  %132 = trunc i64 %indvars.iv282 to i32
  br i1 %or.cond178, label %if.then161, label %if.else163

if.then161:                                       ; preds = %if.else157
  %call162 = tail call i32 @dct_chroma_sp2(i32 noundef %132, i32 noundef %131) #17
  br label %for.inc169.sink.split

if.else163:                                       ; preds = %if.else157
  %call164 = tail call i32 @dct_chroma_sp(i32 noundef %132, i32 noundef %131) #17
  br label %for.inc169.sink.split

for.inc169.sink.split:                            ; preds = %if.then161, %if.else163, %if.then155, %if.then134, %if.else135
  %call136.sink = phi i32 [ %call136, %if.else135 ], [ %call, %if.then134 ], [ %call156, %if.then155 ], [ %call164, %if.else163 ], [ %call162, %if.then161 ]
  store i32 %call136.sink, ptr %cr_cbp, align 4
  br label %for.inc169

for.inc169:                                       ; preds = %for.inc169.sink.split, %land.lhs.true127, %if.else138
  br i1 %cmp4, label %for.cond5.preheader, label %for.end171

for.end171:                                       ; preds = %for.inc169
  %133 = load i32, ptr %cr_cbp, align 4
  %shl = shl i32 %133, 4
  %134 = load ptr, ptr @img, align 8
  %mb_data172 = getelementptr inbounds %struct.ImageParameters, ptr %134, i64 0, i32 61
  %135 = load ptr, ptr %mb_data172, align 8
  %current_mb_nr173 = getelementptr inbounds %struct.ImageParameters, ptr %134, i64 0, i32 3
  %136 = load i32, ptr %current_mb_nr173, align 4
  %idxprom174 = sext i32 %136 to i64
  %cbp = getelementptr inbounds %struct.macroblock, ptr %135, i64 %idxprom174, i32 12
  %137 = load i32, ptr %cbp, align 4
  %add176 = add nsw i32 %137, %shl
  store i32 %add176, ptr %cbp, align 4
  ret void
}

declare i32 @dct_chroma_sp2(i32 noundef, i32 noundef) local_unnamed_addr #5

declare i32 @dct_chroma_sp(i32 noundef, i32 noundef) local_unnamed_addr #5

declare i32 @dct_chroma(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local void @IntraChromaPrediction(ptr noundef writeonly %mb_up, ptr noundef writeonly %mb_left, ptr noundef writeonly %mb_up_left) local_unnamed_addr #0 {
entry:
  %hline = alloca [16 x i16], align 16
  %vline = alloca [16 x i16], align 16
  %up = alloca %struct.pix_pos, align 4
  %left = alloca [17 x %struct.pix_pos], align 16
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %hline) #17
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %vline) #17
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %up) #17
  call void @llvm.lifetime.start.p0(i64 408, ptr nonnull %left) #17
  %mb_cr_size_x = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 162
  %3 = load i32, ptr %mb_cr_size_x, align 8
  %mb_cr_size_y = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 163
  %4 = load i32, ptr %mb_cr_size_y, align 4
  %yuv_format = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 160
  %5 = load i32, ptr %yuv_format, align 8
  %sub = add nsw i32 %5, -1
  %cmp.not1067 = icmp slt i32 %4, 0
  br i1 %cmp.not1067, label %for.end, label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  %6 = add nuw i32 %4, 1
  %wide.trip.count = zext i32 %6 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %7 = load ptr, ptr @getNeighbour, align 8
  %arrayidx4 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv
  %8 = trunc i64 %indvars.iv to i32
  %9 = add i32 %8, -1
  call void %7(i32 noundef %2, i32 noundef -1, i32 noundef %9, i32 noundef 1, ptr noundef nonnull %arrayidx4) #17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %10 = load ptr, ptr @getNeighbour, align 8
  call void %10(i32 noundef %2, i32 noundef 0, i32 noundef -1, i32 noundef 1, ptr noundef nonnull %up) #17
  %11 = load i32, ptr %up, align 4
  %12 = load i32, ptr %left, align 16
  %arrayidx7 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 1
  %13 = load i32, ptr %arrayidx7, align 8
  %14 = load ptr, ptr @input, align 8
  %UseConstrainedIntraPred = getelementptr inbounds %struct.InputParameters, ptr %14, i64 0, i32 23
  %15 = load i32, ptr %UseConstrainedIntraPred, align 8
  %tobool.not = icmp eq i32 %15, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %for.end
  %tobool12.not = icmp eq i32 %11, 0
  br i1 %tobool12.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then
  %16 = load ptr, ptr @img, align 8
  %intra_block = getelementptr inbounds %struct.ImageParameters, ptr %16, i64 0, i32 63
  %17 = load ptr, ptr %intra_block, align 8
  %mb_addr = getelementptr inbounds %struct.pix_pos, ptr %up, i64 0, i32 1
  %18 = load i32, ptr %mb_addr, align 4
  %idxprom13 = sext i32 %18 to i64
  %arrayidx14 = getelementptr inbounds i32, ptr %17, i64 %idxprom13
  %19 = load i32, ptr %arrayidx14, align 4
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi i32 [ %19, %cond.true ], [ 0, %if.then ]
  %shr = ashr i32 %4, 1
  %cmp171069 = icmp sgt i32 %4, 1
  br i1 %cmp171069, label %for.body18.lr.ph, label %for.cond41.preheader

for.body18.lr.ph:                                 ; preds = %cond.end
  %20 = load ptr, ptr @img, align 8
  %intra_block25 = getelementptr inbounds %struct.ImageParameters, ptr %20, i64 0, i32 63
  %smax = call i32 @llvm.smax.i32(i32 %shr, i32 1)
  %wide.trip.count1158 = zext i32 %smax to i64
  %xtraiter = and i64 %wide.trip.count1158, 1
  %21 = icmp slt i32 %4, 4
  br i1 %21, label %for.cond41.preheader.loopexit.unr-lcssa, label %for.body18.lr.ph.new

for.body18.lr.ph.new:                             ; preds = %for.body18.lr.ph
  %unroll_iter = and i64 %wide.trip.count1158, 2147483646
  br label %for.body18

for.cond41.preheader.loopexit.unr-lcssa:          ; preds = %cond.end33.1, %for.body18.lr.ph
  %and.lcssa.ph = phi i32 [ undef, %for.body18.lr.ph ], [ %and.1, %cond.end33.1 ]
  %indvars.iv1155.unr = phi i64 [ 0, %for.body18.lr.ph ], [ %indvars.iv.next1156.1, %cond.end33.1 ]
  %mb_available_left.sroa.0.01070.unr = phi i32 [ 1, %for.body18.lr.ph ], [ %and.1, %cond.end33.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond41.preheader, label %for.body18.epil

for.body18.epil:                                  ; preds = %for.cond41.preheader.loopexit.unr-lcssa
  %indvars.iv.next1156.epil = add nuw nsw i64 %indvars.iv1155.unr, 1
  %arrayidx21.epil = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1156.epil
  %22 = load i32, ptr %arrayidx21.epil, align 8
  %tobool23.not.epil = icmp eq i32 %22, 0
  br i1 %tobool23.not.epil, label %cond.end33.epil, label %cond.true24.epil

cond.true24.epil:                                 ; preds = %for.body18.epil
  %23 = load ptr, ptr %intra_block25, align 8
  %mb_addr29.epil = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1156.epil, i32 1
  %24 = load i32, ptr %mb_addr29.epil, align 4
  %idxprom30.epil = sext i32 %24 to i64
  %arrayidx31.epil = getelementptr inbounds i32, ptr %23, i64 %idxprom30.epil
  %25 = load i32, ptr %arrayidx31.epil, align 4
  br label %cond.end33.epil

cond.end33.epil:                                  ; preds = %cond.true24.epil, %for.body18.epil
  %cond34.epil = phi i32 [ %25, %cond.true24.epil ], [ 0, %for.body18.epil ]
  %and.epil = and i32 %cond34.epil, %mb_available_left.sroa.0.01070.unr
  br label %for.cond41.preheader

for.cond41.preheader:                             ; preds = %cond.end33.epil, %for.cond41.preheader.loopexit.unr-lcssa, %cond.end
  %mb_available_left.sroa.0.0.lcssa = phi i32 [ 1, %cond.end ], [ %and.lcssa.ph, %for.cond41.preheader.loopexit.unr-lcssa ], [ %and.epil, %cond.end33.epil ]
  %cmp421073 = icmp slt i32 %shr, %4
  br i1 %cmp421073, label %for.body43.lr.ph, label %for.end64

for.body43.lr.ph:                                 ; preds = %for.cond41.preheader
  %26 = load ptr, ptr @img, align 8
  %intra_block50 = getelementptr inbounds %struct.ImageParameters, ptr %26, i64 0, i32 63
  %27 = sext i32 %shr to i64
  %wide.trip.count1163 = sext i32 %4 to i64
  %28 = sub nsw i64 %wide.trip.count1163, %27
  %29 = xor i64 %27, -1
  %xtraiter1583 = and i64 %28, 1
  %30 = sub nsw i64 0, %wide.trip.count1163
  %31 = icmp eq i64 %29, %30
  br i1 %31, label %for.end64.loopexit.unr-lcssa, label %for.body43.lr.ph.new

for.body43.lr.ph.new:                             ; preds = %for.body43.lr.ph
  %unroll_iter1586 = and i64 %28, -2
  br label %for.body43

for.body18:                                       ; preds = %cond.end33.1, %for.body18.lr.ph.new
  %indvars.iv1155 = phi i64 [ 0, %for.body18.lr.ph.new ], [ %indvars.iv.next1156.1, %cond.end33.1 ]
  %mb_available_left.sroa.0.01070 = phi i32 [ 1, %for.body18.lr.ph.new ], [ %and.1, %cond.end33.1 ]
  %niter = phi i64 [ 0, %for.body18.lr.ph.new ], [ %niter.next.1, %cond.end33.1 ]
  %indvars.iv.next1156 = or i64 %indvars.iv1155, 1
  %arrayidx21 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1156
  %32 = load i32, ptr %arrayidx21, align 8
  %tobool23.not = icmp eq i32 %32, 0
  br i1 %tobool23.not, label %cond.end33, label %cond.true24

cond.true24:                                      ; preds = %for.body18
  %33 = load ptr, ptr %intra_block25, align 8
  %mb_addr29 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1156, i32 1
  %34 = load i32, ptr %mb_addr29, align 4
  %idxprom30 = sext i32 %34 to i64
  %arrayidx31 = getelementptr inbounds i32, ptr %33, i64 %idxprom30
  %35 = load i32, ptr %arrayidx31, align 4
  br label %cond.end33

cond.end33:                                       ; preds = %for.body18, %cond.true24
  %cond34 = phi i32 [ %35, %cond.true24 ], [ 0, %for.body18 ]
  %and = and i32 %cond34, %mb_available_left.sroa.0.01070
  %indvars.iv.next1156.1 = add nuw nsw i64 %indvars.iv1155, 2
  %arrayidx21.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1156.1
  %36 = load i32, ptr %arrayidx21.1, align 16
  %tobool23.not.1 = icmp eq i32 %36, 0
  br i1 %tobool23.not.1, label %cond.end33.1, label %cond.true24.1

cond.true24.1:                                    ; preds = %cond.end33
  %37 = load ptr, ptr %intra_block25, align 8
  %mb_addr29.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1156.1, i32 1
  %38 = load i32, ptr %mb_addr29.1, align 4
  %idxprom30.1 = sext i32 %38 to i64
  %arrayidx31.1 = getelementptr inbounds i32, ptr %37, i64 %idxprom30.1
  %39 = load i32, ptr %arrayidx31.1, align 4
  br label %cond.end33.1

cond.end33.1:                                     ; preds = %cond.true24.1, %cond.end33
  %cond34.1 = phi i32 [ %39, %cond.true24.1 ], [ 0, %cond.end33 ]
  %and.1 = and i32 %cond34.1, %and
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond41.preheader.loopexit.unr-lcssa, label %for.body18

for.body43:                                       ; preds = %cond.end58.1, %for.body43.lr.ph.new
  %indvars.iv1160 = phi i64 [ %27, %for.body43.lr.ph.new ], [ %indvars.iv.next1161.1, %cond.end58.1 ]
  %mb_available_left.sroa.16.01074 = phi i32 [ 1, %for.body43.lr.ph.new ], [ %and61.1, %cond.end58.1 ]
  %niter1587 = phi i64 [ 0, %for.body43.lr.ph.new ], [ %niter1587.next.1, %cond.end58.1 ]
  %indvars.iv.next1161 = add nsw i64 %indvars.iv1160, 1
  %arrayidx46 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1161
  %40 = load i32, ptr %arrayidx46, align 8
  %tobool48.not = icmp eq i32 %40, 0
  br i1 %tobool48.not, label %cond.end58, label %cond.true49

cond.true49:                                      ; preds = %for.body43
  %41 = load ptr, ptr %intra_block50, align 8
  %mb_addr54 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1161, i32 1
  %42 = load i32, ptr %mb_addr54, align 4
  %idxprom55 = sext i32 %42 to i64
  %arrayidx56 = getelementptr inbounds i32, ptr %41, i64 %idxprom55
  %43 = load i32, ptr %arrayidx56, align 4
  br label %cond.end58

cond.end58:                                       ; preds = %for.body43, %cond.true49
  %cond59 = phi i32 [ %43, %cond.true49 ], [ 0, %for.body43 ]
  %and61 = and i32 %cond59, %mb_available_left.sroa.16.01074
  %indvars.iv.next1161.1 = add nsw i64 %indvars.iv1160, 2
  %arrayidx46.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1161.1
  %44 = load i32, ptr %arrayidx46.1, align 8
  %tobool48.not.1 = icmp eq i32 %44, 0
  br i1 %tobool48.not.1, label %cond.end58.1, label %cond.true49.1

cond.true49.1:                                    ; preds = %cond.end58
  %45 = load ptr, ptr %intra_block50, align 8
  %mb_addr54.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1161.1, i32 1
  %46 = load i32, ptr %mb_addr54.1, align 4
  %idxprom55.1 = sext i32 %46 to i64
  %arrayidx56.1 = getelementptr inbounds i32, ptr %45, i64 %idxprom55.1
  %47 = load i32, ptr %arrayidx56.1, align 4
  br label %cond.end58.1

cond.end58.1:                                     ; preds = %cond.true49.1, %cond.end58
  %cond59.1 = phi i32 [ %47, %cond.true49.1 ], [ 0, %cond.end58 ]
  %and61.1 = and i32 %cond59.1, %and61
  %niter1587.next.1 = add i64 %niter1587, 2
  %niter1587.ncmp.1 = icmp eq i64 %niter1587.next.1, %unroll_iter1586
  br i1 %niter1587.ncmp.1, label %for.end64.loopexit.unr-lcssa, label %for.body43

for.end64.loopexit.unr-lcssa:                     ; preds = %cond.end58.1, %for.body43.lr.ph
  %and61.lcssa.ph = phi i32 [ undef, %for.body43.lr.ph ], [ %and61.1, %cond.end58.1 ]
  %indvars.iv1160.unr = phi i64 [ %27, %for.body43.lr.ph ], [ %indvars.iv.next1161.1, %cond.end58.1 ]
  %mb_available_left.sroa.16.01074.unr = phi i32 [ 1, %for.body43.lr.ph ], [ %and61.1, %cond.end58.1 ]
  %lcmp.mod1584.not = icmp eq i64 %xtraiter1583, 0
  br i1 %lcmp.mod1584.not, label %for.end64, label %for.body43.epil

for.body43.epil:                                  ; preds = %for.end64.loopexit.unr-lcssa
  %indvars.iv.next1161.epil = add nsw i64 %indvars.iv1160.unr, 1
  %arrayidx46.epil = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1161.epil
  %48 = load i32, ptr %arrayidx46.epil, align 8
  %tobool48.not.epil = icmp eq i32 %48, 0
  br i1 %tobool48.not.epil, label %cond.end58.epil, label %cond.true49.epil

cond.true49.epil:                                 ; preds = %for.body43.epil
  %49 = load ptr, ptr %intra_block50, align 8
  %mb_addr54.epil = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1161.epil, i32 1
  %50 = load i32, ptr %mb_addr54.epil, align 4
  %idxprom55.epil = sext i32 %50 to i64
  %arrayidx56.epil = getelementptr inbounds i32, ptr %49, i64 %idxprom55.epil
  %51 = load i32, ptr %arrayidx56.epil, align 4
  br label %cond.end58.epil

cond.end58.epil:                                  ; preds = %cond.true49.epil, %for.body43.epil
  %cond59.epil = phi i32 [ %51, %cond.true49.epil ], [ 0, %for.body43.epil ]
  %and61.epil = and i32 %cond59.epil, %mb_available_left.sroa.16.01074.unr
  br label %for.end64

for.end64:                                        ; preds = %cond.end58.epil, %for.end64.loopexit.unr-lcssa, %for.cond41.preheader
  %mb_available_left.sroa.16.0.lcssa = phi i32 [ 1, %for.cond41.preheader ], [ %and61.lcssa.ph, %for.end64.loopexit.unr-lcssa ], [ %and61.epil, %cond.end58.epil ]
  %tobool67.not = icmp eq i32 %12, 0
  br i1 %tobool67.not, label %if.end, label %cond.true68

cond.true68:                                      ; preds = %for.end64
  %52 = load ptr, ptr @img, align 8
  %intra_block69 = getelementptr inbounds %struct.ImageParameters, ptr %52, i64 0, i32 63
  %53 = load ptr, ptr %intra_block69, align 8
  %mb_addr71 = getelementptr inbounds %struct.pix_pos, ptr %left, i64 0, i32 1
  %54 = load i32, ptr %mb_addr71, align 4
  %idxprom72 = sext i32 %54 to i64
  %arrayidx73 = getelementptr inbounds i32, ptr %53, i64 %idxprom72
  %55 = load i32, ptr %arrayidx73, align 4
  br label %if.end

if.end:                                           ; preds = %cond.true68, %for.end64, %for.end
  %mb_available_up.0 = phi i32 [ %11, %for.end ], [ %cond, %for.end64 ], [ %cond, %cond.true68 ]
  %mb_available_left.sroa.16.1 = phi i32 [ %13, %for.end ], [ %mb_available_left.sroa.16.0.lcssa, %for.end64 ], [ %mb_available_left.sroa.16.0.lcssa, %cond.true68 ]
  %mb_available_left.sroa.0.1 = phi i32 [ %13, %for.end ], [ %mb_available_left.sroa.0.0.lcssa, %for.end64 ], [ %mb_available_left.sroa.0.0.lcssa, %cond.true68 ]
  %mb_available_up_left.0 = phi i32 [ %12, %for.end ], [ 0, %for.end64 ], [ %55, %cond.true68 ]
  %tobool77.not = icmp eq ptr %mb_up, null
  br i1 %tobool77.not, label %if.end79, label %if.then78

if.then78:                                        ; preds = %if.end
  store i32 %mb_available_up.0, ptr %mb_up, align 4
  br label %if.end79

if.end79:                                         ; preds = %if.then78, %if.end
  %tobool80.not = icmp eq ptr %mb_left, null
  br i1 %tobool80.not, label %if.end86, label %if.then81

if.then81:                                        ; preds = %if.end79
  %tobool83 = icmp ne i32 %mb_available_left.sroa.0.1, 0
  %tobool85 = icmp ne i32 %mb_available_left.sroa.16.1, 0
  %56 = select i1 %tobool83, i1 %tobool85, i1 false
  %land.ext = zext i1 %56 to i32
  store i32 %land.ext, ptr %mb_left, align 4
  br label %if.end86

if.end86:                                         ; preds = %if.then81, %if.end79
  %tobool87.not = icmp eq ptr %mb_up_left, null
  br i1 %tobool87.not, label %if.end89, label %if.then88

if.then88:                                        ; preds = %if.end86
  store i32 %mb_available_up_left.0, ptr %mb_up_left, align 4
  br label %if.end89

if.end89:                                         ; preds = %if.then88, %if.end86
  %tobool397 = icmp ne i32 %mb_available_up.0, 0
  %tobool425 = icmp ne i32 %mb_available_left.sroa.0.1, 0
  %tobool428 = icmp ne i32 %mb_available_left.sroa.16.1, 0
  %or.cond765 = select i1 %tobool425, i1 %tobool428, i1 false
  %idxprom102 = sext i32 %sub to i64
  %tobool301.not = icmp eq i32 %mb_available_up.0, 0
  %pos_y308 = getelementptr inbounds %struct.pix_pos, ptr %up, i64 0, i32 5
  %pos_x311 = getelementptr inbounds %struct.pix_pos, ptr %up, i64 0, i32 4
  %tobool322.not = icmp eq i32 %mb_available_left.sroa.16.1, 0
  %tobool206.not = icmp eq i32 %mb_available_left.sroa.0.1, 0
  %conv405 = sext i32 %3 to i64
  %mul = shl nsw i64 %conv405, 1
  %cmp4071098 = icmp slt i32 %4, 1
  %cmp4521104 = icmp slt i32 %3, 1
  %or.cond767 = and i1 %tobool397, %or.cond765
  %tobool484 = icmp ne i32 %mb_available_up_left.0, 0
  %or.cond768 = select i1 %or.cond767, i1 %tobool484, i1 false
  %shr486 = ashr i32 %3, 1
  %sub487 = add nsw i32 %3, -1
  %idxprom488 = sext i32 %sub487 to i64
  %arrayidx489 = getelementptr inbounds [16 x i16], ptr %hline, i64 0, i64 %idxprom488
  %pos_y492 = getelementptr inbounds %struct.pix_pos, ptr %left, i64 0, i32 5
  %pos_x496 = getelementptr inbounds %struct.pix_pos, ptr %left, i64 0, i32 4
  %cmp5051106 = icmp sgt i32 %3, 3
  %sub515 = add nsw i32 %shr486, -2
  %shr526 = ashr i32 %4, 1
  %sub527 = add nsw i32 %4, -1
  %idxprom528 = sext i32 %sub527 to i64
  %arrayidx529 = getelementptr inbounds [16 x i16], ptr %vline, i64 0, i64 %idxprom528
  %cmp5451110 = icmp sgt i32 %4, 3
  %sub555 = add nsw i32 %shr526, -2
  %cmp566 = icmp eq i32 %3, 8
  %cond568 = select i1 %cmp566, i32 17, i32 5
  %mul570 = shl nsw i32 %3, 1
  %cond574 = select i1 %cmp566, i32 5, i32 6
  %cmp576 = icmp eq i32 %4, 8
  %cond578 = select i1 %cmp576, i32 17, i32 5
  %mul580 = shl nsw i32 %4, 1
  %cond584 = select i1 %cmp576, i32 5, i32 6
  %57 = sext i32 %shr486 to i64
  %58 = sext i32 %sub515 to i64
  %59 = call i32 @llvm.smax.i32(i32 %shr486, i32 2)
  %smax1409 = add nsw i32 %59, -1
  %60 = sext i32 %shr526 to i64
  %61 = sext i32 %sub555 to i64
  %62 = call i32 @llvm.smax.i32(i32 %shr526, i32 2)
  %smax1417 = add nsw i32 %62, -1
  %wide.trip.count1387 = zext i32 %4 to i64
  %wide.trip.count1402 = zext i32 %3 to i64
  %wide.trip.count1410 = zext i32 %smax1409 to i64
  %wide.trip.count1418 = zext i32 %smax1417 to i64
  %wide.trip.count1428 = zext i32 %4 to i64
  %wide.trip.count1423 = zext i32 %3 to i64
  %63 = add nsw i64 %wide.trip.count1387, -1
  %xtraiter1588 = and i64 %wide.trip.count1387, 1
  %64 = icmp eq i64 %63, 0
  %unroll_iter1590 = and i64 %wide.trip.count1387, 4294967294
  %lcmp.mod1589.not = icmp eq i64 %xtraiter1588, 0
  %xtraiter1592 = and i64 %wide.trip.count1387, 1
  %65 = icmp eq i64 %63, 0
  %unroll_iter1594 = and i64 %wide.trip.count1387, 4294967294
  %lcmp.mod1593.not = icmp eq i64 %xtraiter1592, 0
  %xtraiter1596 = and i64 %wide.trip.count1387, 3
  %66 = icmp ult i32 %4, 4
  %unroll_iter1598 = and i64 %wide.trip.count1387, 4294967292
  %lcmp.mod1597.not = icmp eq i64 %xtraiter1596, 0
  %min.iters.check1547 = icmp ult i32 %59, 9
  %n.vec1550 = and i64 %wide.trip.count1410, 4294967288
  %cmp.n1552 = icmp eq i64 %n.vec1550, %wide.trip.count1410
  %min.iters.check1528 = icmp ult i32 %62, 9
  %n.vec1531 = and i64 %wide.trip.count1418, 4294967288
  %cmp.n1533 = icmp eq i64 %n.vec1531, %wide.trip.count1418
  %min.iters.check = icmp ult i32 %3, 8
  %n.vec = and i64 %wide.trip.count1402, 4294967288
  %broadcast.splatinsert = insertelement <8 x i32> poison, i32 %shr486, i64 0
  %broadcast.splat = shufflevector <8 x i32> %broadcast.splatinsert, <8 x i32> poison, <8 x i32> zeroinitializer
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count1402
  br label %for.body92

for.body92:                                       ; preds = %if.end89, %for.inc632
  %cmp91 = phi i1 [ true, %if.end89 ], [ false, %for.inc632 ]
  %indvars.iv1430 = phi i64 [ 0, %if.end89 ], [ 1, %for.inc632 ]
  %67 = load ptr, ptr @enc_picture, align 8
  %imgUV = getelementptr inbounds %struct.storable_picture, ptr %67, i64 0, i32 33
  %68 = load ptr, ptr %imgUV, align 8
  %arrayidx94 = getelementptr inbounds ptr, ptr %68, i64 %indvars.iv1430
  %69 = load ptr, ptr %arrayidx94, align 8
  %70 = load ptr, ptr @img, align 8
  %num_blk8x8_uv = getelementptr inbounds %struct.ImageParameters, ptr %70, i64 0, i32 158
  %71 = load i32, ptr %num_blk8x8_uv, align 8
  %cmp971096 = icmp sgt i32 %71, 1
  br i1 %cmp971096, label %for.cond99.preheader.lr.ph, label %for.end396

for.cond99.preheader.lr.ph:                       ; preds = %for.body92
  %shr96 = lshr i32 %71, 1
  %dc_pred_value_chroma = getelementptr inbounds %struct.ImageParameters, ptr %70, i64 0, i32 155
  %72 = load i32, ptr %dc_pred_value_chroma, align 4
  %arrayidx379 = getelementptr inbounds %struct.ImageParameters, ptr %70, i64 0, i32 50, i64 %indvars.iv1430
  %wide.trip.count1382 = zext i32 %shr96 to i64
  br label %for.cond99.preheader

for.cond99.preheader:                             ; preds = %for.cond99.preheader.lr.ph, %sw.epilog.3
  %indvars.iv1378 = phi i64 [ 0, %for.cond99.preheader.lr.ph ], [ %indvars.iv.next1379, %sw.epilog.3 ]
  %73 = load i32, ptr %pos_y308, align 4
  %idxprom309 = sext i32 %73 to i64
  %arrayidx310 = getelementptr inbounds ptr, ptr %69, i64 %idxprom309
  %74 = load i32, ptr %pos_x311, align 4
  %75 = sext i32 %74 to i64
  %arrayidx107 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom102, i64 %indvars.iv1378, i64 0
  %76 = load i8, ptr %arrayidx107, align 4
  %arrayidx113 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom102, i64 %indvars.iv1378, i64 0
  %77 = load i8, ptr %arrayidx113, align 4
  %arrayidx121 = getelementptr inbounds [3 x [4 x [4 x i32]]], ptr @IntraChromaPrediction.block_pos, i64 0, i64 %idxprom102, i64 %indvars.iv1378, i64 0
  %78 = load i32, ptr %arrayidx121, align 16
  switch i32 %78, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb184
    i32 2, label %sw.bb242
    i32 3, label %sw.bb300
  ]

sw.bb:                                            ; preds = %for.cond99.preheader
  br i1 %tobool301.not, label %if.end139.thread, label %for.cond124.preheader

for.cond124.preheader:                            ; preds = %sw.bb
  %79 = load ptr, ptr %arrayidx310, align 8
  %80 = zext i8 %77 to i64
  %81 = add nsw i64 %75, %80
  %arrayidx133 = getelementptr inbounds i16, ptr %79, i64 %81
  %82 = load <4 x i16>, ptr %arrayidx133, align 2
  %83 = zext <4 x i16> %82 to <4 x i32>
  %84 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %83)
  br i1 %tobool206.not, label %if.else.thread, label %for.cond143.preheader

if.end139.thread:                                 ; preds = %sw.bb
  br i1 %tobool206.not, label %sw.epilog, label %for.cond143.preheader

for.cond143.preheader:                            ; preds = %for.cond124.preheader, %if.end139.thread
  %s0.11053.ph = phi i32 [ 0, %if.end139.thread ], [ %84, %for.cond124.preheader ]
  %85 = zext i8 %76 to i64
  %86 = add nuw nsw i64 %85, 1
  %pos_y150 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %86, i32 5
  %87 = load i32, ptr %pos_y150, align 4
  %idxprom151 = sext i32 %87 to i64
  %arrayidx152 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151
  %88 = load ptr, ptr %arrayidx152, align 8
  %pos_x155 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %86, i32 4
  %89 = load i32, ptr %pos_x155, align 8
  %idxprom156 = sext i32 %89 to i64
  %arrayidx157 = getelementptr inbounds i16, ptr %88, i64 %idxprom156
  %90 = load i16, ptr %arrayidx157, align 2
  %conv158 = zext i16 %90 to i32
  %indvars.iv.next1205 = add nuw nsw i64 %85, 2
  %pos_y150.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205, i32 5
  %91 = load i32, ptr %pos_y150.1, align 4
  %idxprom151.1 = sext i32 %91 to i64
  %arrayidx152.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.1
  %92 = load ptr, ptr %arrayidx152.1, align 8
  %pos_x155.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205, i32 4
  %93 = load i32, ptr %pos_x155.1, align 8
  %idxprom156.1 = sext i32 %93 to i64
  %arrayidx157.1 = getelementptr inbounds i16, ptr %92, i64 %idxprom156.1
  %94 = load i16, ptr %arrayidx157.1, align 2
  %conv158.1 = zext i16 %94 to i32
  %add159.1 = add nuw nsw i32 %conv158, %conv158.1
  %indvars.iv.next1205.1 = add nuw nsw i64 %85, 3
  %pos_y150.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.1, i32 5
  %95 = load i32, ptr %pos_y150.2, align 4
  %idxprom151.2 = sext i32 %95 to i64
  %arrayidx152.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.2
  %96 = load ptr, ptr %arrayidx152.2, align 8
  %pos_x155.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.1, i32 4
  %97 = load i32, ptr %pos_x155.2, align 8
  %idxprom156.2 = sext i32 %97 to i64
  %arrayidx157.2 = getelementptr inbounds i16, ptr %96, i64 %idxprom156.2
  %98 = load i16, ptr %arrayidx157.2, align 2
  %conv158.2 = zext i16 %98 to i32
  %add159.2 = add nuw nsw i32 %add159.1, %conv158.2
  %indvars.iv.next1205.2 = add nuw nsw i64 %85, 4
  %pos_y150.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.2, i32 5
  %99 = load i32, ptr %pos_y150.3, align 4
  %idxprom151.3 = sext i32 %99 to i64
  %arrayidx152.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.3
  %100 = load ptr, ptr %arrayidx152.3, align 8
  %pos_x155.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.2, i32 4
  %101 = load i32, ptr %pos_x155.3, align 8
  %idxprom156.3 = sext i32 %101 to i64
  %arrayidx157.3 = getelementptr inbounds i16, ptr %100, i64 %idxprom156.3
  %102 = load i16, ptr %arrayidx157.3, align 2
  %conv158.3 = zext i16 %102 to i32
  %add159.3 = add nuw nsw i32 %add159.2, %conv158.3
  br i1 %tobool301.not, label %if.then178, label %if.then167

if.then167:                                       ; preds = %for.cond143.preheader
  %add168 = add nuw nsw i32 %s0.11053.ph, 4
  %add169 = add nuw nsw i32 %add168, %add159.3
  %shr170 = lshr i32 %add169, 3
  br label %sw.epilog

if.else.thread:                                   ; preds = %for.cond124.preheader
  %add173 = add nuw nsw i32 %84, 2
  %shr174 = lshr i32 %add173, 2
  br label %sw.epilog

if.then178:                                       ; preds = %for.cond143.preheader
  %add179 = add nuw nsw i32 %add159.3, 2
  %shr180 = lshr i32 %add179, 2
  br label %sw.epilog

sw.bb184:                                         ; preds = %for.cond99.preheader
  br i1 %tobool301.not, label %if.else204, label %if.then231

if.else204:                                       ; preds = %sw.bb184
  br i1 %tobool206.not, label %sw.epilog, label %if.then237

if.then231:                                       ; preds = %sw.bb184
  %103 = load ptr, ptr %arrayidx310, align 8
  %104 = zext i8 %77 to i64
  %105 = add nsw i64 %75, %104
  %arrayidx198 = getelementptr inbounds i16, ptr %103, i64 %105
  %106 = load <4 x i16>, ptr %arrayidx198, align 2
  %107 = zext <4 x i16> %106 to <4 x i32>
  %108 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %107)
  %op.rdx1576 = add i32 %108, 2
  %shr233 = lshr i32 %op.rdx1576, 2
  br label %sw.epilog

if.then237:                                       ; preds = %if.else204
  %109 = zext i8 %76 to i64
  %110 = add nuw nsw i64 %109, 1
  %pos_y215 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %110, i32 5
  %111 = load i32, ptr %pos_y215, align 4
  %idxprom216 = sext i32 %111 to i64
  %arrayidx217 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216
  %112 = load ptr, ptr %arrayidx217, align 8
  %pos_x220 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %110, i32 4
  %113 = load i32, ptr %pos_x220, align 8
  %idxprom221 = sext i32 %113 to i64
  %arrayidx222 = getelementptr inbounds i16, ptr %112, i64 %idxprom221
  %114 = load i16, ptr %arrayidx222, align 2
  %conv223 = zext i16 %114 to i32
  %indvars.iv.next1194 = add nuw nsw i64 %109, 2
  %pos_y215.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194, i32 5
  %115 = load i32, ptr %pos_y215.1, align 4
  %idxprom216.1 = sext i32 %115 to i64
  %arrayidx217.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.1
  %116 = load ptr, ptr %arrayidx217.1, align 8
  %pos_x220.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194, i32 4
  %117 = load i32, ptr %pos_x220.1, align 8
  %idxprom221.1 = sext i32 %117 to i64
  %arrayidx222.1 = getelementptr inbounds i16, ptr %116, i64 %idxprom221.1
  %118 = load i16, ptr %arrayidx222.1, align 2
  %conv223.1 = zext i16 %118 to i32
  %add224.1 = add nuw nsw i32 %conv223, %conv223.1
  %indvars.iv.next1194.1 = add nuw nsw i64 %109, 3
  %pos_y215.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.1, i32 5
  %119 = load i32, ptr %pos_y215.2, align 4
  %idxprom216.2 = sext i32 %119 to i64
  %arrayidx217.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.2
  %120 = load ptr, ptr %arrayidx217.2, align 8
  %pos_x220.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.1, i32 4
  %121 = load i32, ptr %pos_x220.2, align 8
  %idxprom221.2 = sext i32 %121 to i64
  %arrayidx222.2 = getelementptr inbounds i16, ptr %120, i64 %idxprom221.2
  %122 = load i16, ptr %arrayidx222.2, align 2
  %conv223.2 = zext i16 %122 to i32
  %add224.2 = add nuw nsw i32 %add224.1, %conv223.2
  %indvars.iv.next1194.2 = add nuw nsw i64 %109, 4
  %pos_y215.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.2, i32 5
  %123 = load i32, ptr %pos_y215.3, align 4
  %idxprom216.3 = sext i32 %123 to i64
  %arrayidx217.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.3
  %124 = load ptr, ptr %arrayidx217.3, align 8
  %pos_x220.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.2, i32 4
  %125 = load i32, ptr %pos_x220.3, align 8
  %idxprom221.3 = sext i32 %125 to i64
  %arrayidx222.3 = getelementptr inbounds i16, ptr %124, i64 %idxprom221.3
  %126 = load i16, ptr %arrayidx222.3, align 2
  %conv223.3 = zext i16 %126 to i32
  %add224.3 = add nuw nsw i32 %add224.2, %conv223.3
  %add238 = add nuw nsw i32 %add224.3, 2
  %shr239 = lshr i32 %add238, 2
  br label %sw.epilog

sw.bb242:                                         ; preds = %for.cond99.preheader
  br i1 %tobool322.not, label %if.else266, label %if.then290

if.else266:                                       ; preds = %sw.bb242
  br i1 %tobool301.not, label %sw.epilog, label %if.then295

if.then290:                                       ; preds = %sw.bb242
  %127 = zext i8 %76 to i64
  %128 = add nuw nsw i64 %127, 1
  %pos_y253 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %128, i32 5
  %129 = load i32, ptr %pos_y253, align 4
  %idxprom254 = sext i32 %129 to i64
  %arrayidx255 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254
  %130 = load ptr, ptr %arrayidx255, align 8
  %pos_x258 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %128, i32 4
  %131 = load i32, ptr %pos_x258, align 8
  %idxprom259 = sext i32 %131 to i64
  %arrayidx260 = getelementptr inbounds i16, ptr %130, i64 %idxprom259
  %132 = load i16, ptr %arrayidx260, align 2
  %conv261 = zext i16 %132 to i32
  %indvars.iv.next1177 = add nuw nsw i64 %127, 2
  %pos_y253.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177, i32 5
  %133 = load i32, ptr %pos_y253.1, align 4
  %idxprom254.1 = sext i32 %133 to i64
  %arrayidx255.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.1
  %134 = load ptr, ptr %arrayidx255.1, align 8
  %pos_x258.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177, i32 4
  %135 = load i32, ptr %pos_x258.1, align 8
  %idxprom259.1 = sext i32 %135 to i64
  %arrayidx260.1 = getelementptr inbounds i16, ptr %134, i64 %idxprom259.1
  %136 = load i16, ptr %arrayidx260.1, align 2
  %conv261.1 = zext i16 %136 to i32
  %add262.1 = add nuw nsw i32 %conv261, %conv261.1
  %indvars.iv.next1177.1 = add nuw nsw i64 %127, 3
  %pos_y253.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.1, i32 5
  %137 = load i32, ptr %pos_y253.2, align 4
  %idxprom254.2 = sext i32 %137 to i64
  %arrayidx255.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.2
  %138 = load ptr, ptr %arrayidx255.2, align 8
  %pos_x258.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.1, i32 4
  %139 = load i32, ptr %pos_x258.2, align 8
  %idxprom259.2 = sext i32 %139 to i64
  %arrayidx260.2 = getelementptr inbounds i16, ptr %138, i64 %idxprom259.2
  %140 = load i16, ptr %arrayidx260.2, align 2
  %conv261.2 = zext i16 %140 to i32
  %add262.2 = add nuw nsw i32 %add262.1, %conv261.2
  %indvars.iv.next1177.2 = add nuw nsw i64 %127, 4
  %pos_y253.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.2, i32 5
  %141 = load i32, ptr %pos_y253.3, align 4
  %idxprom254.3 = sext i32 %141 to i64
  %arrayidx255.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.3
  %142 = load ptr, ptr %arrayidx255.3, align 8
  %pos_x258.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.2, i32 4
  %143 = load i32, ptr %pos_x258.3, align 8
  %idxprom259.3 = sext i32 %143 to i64
  %arrayidx260.3 = getelementptr inbounds i16, ptr %142, i64 %idxprom259.3
  %144 = load i16, ptr %arrayidx260.3, align 2
  %conv261.3 = zext i16 %144 to i32
  %add262.3 = add nuw nsw i32 %add262.2, %conv261.3
  %add291 = add nuw nsw i32 %add262.3, 2
  %shr292 = lshr i32 %add291, 2
  br label %sw.epilog

if.then295:                                       ; preds = %if.else266
  %145 = load ptr, ptr %arrayidx310, align 8
  %146 = zext i8 %77 to i64
  %147 = add nsw i64 %75, %146
  %arrayidx280 = getelementptr inbounds i16, ptr %145, i64 %147
  %148 = load <4 x i16>, ptr %arrayidx280, align 2
  %149 = zext <4 x i16> %148 to <4 x i32>
  %150 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %149)
  %op.rdx1575 = add i32 %150, 2
  %shr297 = lshr i32 %op.rdx1575, 2
  br label %sw.epilog

sw.bb300:                                         ; preds = %for.cond99.preheader
  br i1 %tobool301.not, label %if.end320.thread, label %for.cond303.preheader

for.cond303.preheader:                            ; preds = %sw.bb300
  %151 = load ptr, ptr %arrayidx310, align 8
  %152 = zext i8 %77 to i64
  %153 = add nsw i64 %75, %152
  %arrayidx314 = getelementptr inbounds i16, ptr %151, i64 %153
  %154 = load <4 x i16>, ptr %arrayidx314, align 2
  %155 = zext <4 x i16> %154 to <4 x i32>
  %156 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %155)
  br i1 %tobool322.not, label %if.else353.thread, label %for.cond324.preheader

if.end320.thread:                                 ; preds = %sw.bb300
  br i1 %tobool322.not, label %sw.epilog, label %for.cond324.preheader

for.cond324.preheader:                            ; preds = %for.cond303.preheader, %if.end320.thread
  %s1.31060.ph = phi i32 [ 0, %if.end320.thread ], [ %156, %for.cond303.preheader ]
  %157 = zext i8 %76 to i64
  %158 = add nuw nsw i64 %157, 1
  %pos_y331 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %158, i32 5
  %159 = load i32, ptr %pos_y331, align 4
  %idxprom332 = sext i32 %159 to i64
  %arrayidx333 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332
  %160 = load ptr, ptr %arrayidx333, align 8
  %pos_x336 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %158, i32 4
  %161 = load i32, ptr %pos_x336, align 8
  %idxprom337 = sext i32 %161 to i64
  %arrayidx338 = getelementptr inbounds i16, ptr %160, i64 %idxprom337
  %162 = load i16, ptr %arrayidx338, align 2
  %conv339 = zext i16 %162 to i32
  %indvars.iv.next1172 = add nuw nsw i64 %157, 2
  %pos_y331.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172, i32 5
  %163 = load i32, ptr %pos_y331.1, align 4
  %idxprom332.1 = sext i32 %163 to i64
  %arrayidx333.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.1
  %164 = load ptr, ptr %arrayidx333.1, align 8
  %pos_x336.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172, i32 4
  %165 = load i32, ptr %pos_x336.1, align 8
  %idxprom337.1 = sext i32 %165 to i64
  %arrayidx338.1 = getelementptr inbounds i16, ptr %164, i64 %idxprom337.1
  %166 = load i16, ptr %arrayidx338.1, align 2
  %conv339.1 = zext i16 %166 to i32
  %add340.1 = add nuw nsw i32 %conv339, %conv339.1
  %indvars.iv.next1172.1 = add nuw nsw i64 %157, 3
  %pos_y331.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.1, i32 5
  %167 = load i32, ptr %pos_y331.2, align 4
  %idxprom332.2 = sext i32 %167 to i64
  %arrayidx333.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.2
  %168 = load ptr, ptr %arrayidx333.2, align 8
  %pos_x336.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.1, i32 4
  %169 = load i32, ptr %pos_x336.2, align 8
  %idxprom337.2 = sext i32 %169 to i64
  %arrayidx338.2 = getelementptr inbounds i16, ptr %168, i64 %idxprom337.2
  %170 = load i16, ptr %arrayidx338.2, align 2
  %conv339.2 = zext i16 %170 to i32
  %add340.2 = add nuw nsw i32 %add340.1, %conv339.2
  %indvars.iv.next1172.2 = add nuw nsw i64 %157, 4
  %pos_y331.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.2, i32 5
  %171 = load i32, ptr %pos_y331.3, align 4
  %idxprom332.3 = sext i32 %171 to i64
  %arrayidx333.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.3
  %172 = load ptr, ptr %arrayidx333.3, align 8
  %pos_x336.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.2, i32 4
  %173 = load i32, ptr %pos_x336.3, align 8
  %idxprom337.3 = sext i32 %173 to i64
  %arrayidx338.3 = getelementptr inbounds i16, ptr %172, i64 %idxprom337.3
  %174 = load i16, ptr %arrayidx338.3, align 2
  %conv339.3 = zext i16 %174 to i32
  %add340.3 = add nuw nsw i32 %add340.2, %conv339.3
  br i1 %tobool301.not, label %if.then361, label %if.then349

if.then349:                                       ; preds = %for.cond324.preheader
  %add350 = add nuw nsw i32 %s1.31060.ph, 4
  %add351 = add nuw nsw i32 %add350, %add340.3
  %shr352 = lshr i32 %add351, 3
  br label %sw.epilog

if.else353.thread:                                ; preds = %for.cond303.preheader
  %add356 = add nuw nsw i32 %156, 2
  %shr357 = lshr i32 %add356, 2
  br label %sw.epilog

if.then361:                                       ; preds = %for.cond324.preheader
  %add362 = add nuw nsw i32 %add340.3, 2
  %shr363 = lshr i32 %add362, 2
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end320.thread, %if.end139.thread, %if.else266, %if.else204, %if.then349, %if.then361, %if.else353.thread, %if.then290, %if.then295, %if.then231, %if.then237, %if.then167, %if.then178, %if.else.thread, %for.cond99.preheader
  %s.0 = phi i32 [ %72, %for.cond99.preheader ], [ %shr352, %if.then349 ], [ %shr357, %if.else353.thread ], [ %shr363, %if.then361 ], [ %shr292, %if.then290 ], [ %shr297, %if.then295 ], [ %shr233, %if.then231 ], [ %shr239, %if.then237 ], [ %shr170, %if.then167 ], [ %shr174, %if.else.thread ], [ %shr180, %if.then178 ], [ %72, %if.else204 ], [ %72, %if.else266 ], [ %72, %if.end139.thread ], [ %72, %if.end320.thread ]
  %conv377 = trunc i32 %s.0 to i16
  %175 = zext i8 %77 to i64
  %176 = zext i8 %76 to i64
  %arrayidx384 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %176, i64 %175
  %177 = insertelement <4 x i16> poison, i16 %conv377, i64 0
  %178 = shufflevector <4 x i16> %177, <4 x i16> poison, <4 x i32> zeroinitializer
  store <4 x i16> %178, ptr %arrayidx384, align 2
  %indvars.iv.next1215 = add nuw nsw i64 %176, 1
  %arrayidx384.11219 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %indvars.iv.next1215, i64 %175
  store <4 x i16> %178, ptr %arrayidx384.11219, align 2
  %indvars.iv.next1215.1 = add nuw nsw i64 %176, 2
  %arrayidx384.21221 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %indvars.iv.next1215.1, i64 %175
  store <4 x i16> %178, ptr %arrayidx384.21221, align 2
  %indvars.iv.next1215.2 = add nuw nsw i64 %176, 3
  %arrayidx384.31223 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %indvars.iv.next1215.2, i64 %175
  store <4 x i16> %178, ptr %arrayidx384.31223, align 2
  %arrayidx107.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom102, i64 %indvars.iv1378, i64 1
  %179 = load i8, ptr %arrayidx107.1, align 1
  %arrayidx113.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom102, i64 %indvars.iv1378, i64 1
  %180 = load i8, ptr %arrayidx113.1, align 1
  %arrayidx121.1 = getelementptr inbounds [3 x [4 x [4 x i32]]], ptr @IntraChromaPrediction.block_pos, i64 0, i64 %idxprom102, i64 %indvars.iv1378, i64 1
  %181 = load i32, ptr %arrayidx121.1, align 4
  switch i32 %181, label %sw.epilog.1 [
    i32 0, label %sw.bb.1
    i32 1, label %sw.bb184.1
    i32 2, label %sw.bb242.1
    i32 3, label %sw.bb300.1
  ]

sw.bb300.1:                                       ; preds = %sw.epilog
  br i1 %tobool301.not, label %if.end320.thread.1, label %for.cond303.preheader.1

for.cond303.preheader.1:                          ; preds = %sw.bb300.1
  %182 = load ptr, ptr %arrayidx310, align 8
  %183 = zext i8 %180 to i64
  %184 = add nsw i64 %75, %183
  %arrayidx314.11228 = getelementptr inbounds i16, ptr %182, i64 %184
  %185 = load <4 x i16>, ptr %arrayidx314.11228, align 2
  %186 = zext <4 x i16> %185 to <4 x i32>
  %187 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %186)
  br i1 %tobool322.not, label %if.else353.thread.1, label %for.cond324.preheader.1

if.else353.thread.1:                              ; preds = %for.cond303.preheader.1
  %add356.1 = add nuw nsw i32 %187, 2
  %shr357.1 = lshr i32 %add356.1, 2
  br label %sw.epilog.1

if.end320.thread.1:                               ; preds = %sw.bb300.1
  br i1 %tobool322.not, label %sw.epilog.1, label %for.cond324.preheader.1

for.cond324.preheader.1:                          ; preds = %if.end320.thread.1, %for.cond303.preheader.1
  %s1.31060.ph.1 = phi i32 [ 0, %if.end320.thread.1 ], [ %187, %for.cond303.preheader.1 ]
  %188 = zext i8 %179 to i64
  %189 = add nuw nsw i64 %188, 1
  %pos_y331.11231 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %189, i32 5
  %190 = load i32, ptr %pos_y331.11231, align 4
  %idxprom332.11232 = sext i32 %190 to i64
  %arrayidx333.11233 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.11232
  %191 = load ptr, ptr %arrayidx333.11233, align 8
  %pos_x336.11234 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %189, i32 4
  %192 = load i32, ptr %pos_x336.11234, align 8
  %idxprom337.11235 = sext i32 %192 to i64
  %arrayidx338.11236 = getelementptr inbounds i16, ptr %191, i64 %idxprom337.11235
  %193 = load i16, ptr %arrayidx338.11236, align 2
  %conv339.11237 = zext i16 %193 to i32
  %indvars.iv.next1172.11238 = add nuw nsw i64 %188, 2
  %pos_y331.1.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.11238, i32 5
  %194 = load i32, ptr %pos_y331.1.1, align 4
  %idxprom332.1.1 = sext i32 %194 to i64
  %arrayidx333.1.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.1.1
  %195 = load ptr, ptr %arrayidx333.1.1, align 8
  %pos_x336.1.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.11238, i32 4
  %196 = load i32, ptr %pos_x336.1.1, align 8
  %idxprom337.1.1 = sext i32 %196 to i64
  %arrayidx338.1.1 = getelementptr inbounds i16, ptr %195, i64 %idxprom337.1.1
  %197 = load i16, ptr %arrayidx338.1.1, align 2
  %conv339.1.1 = zext i16 %197 to i32
  %add340.1.1 = add nuw nsw i32 %conv339.11237, %conv339.1.1
  %indvars.iv.next1172.1.1 = add nuw nsw i64 %188, 3
  %pos_y331.2.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.1.1, i32 5
  %198 = load i32, ptr %pos_y331.2.1, align 4
  %idxprom332.2.1 = sext i32 %198 to i64
  %arrayidx333.2.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.2.1
  %199 = load ptr, ptr %arrayidx333.2.1, align 8
  %pos_x336.2.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.1.1, i32 4
  %200 = load i32, ptr %pos_x336.2.1, align 8
  %idxprom337.2.1 = sext i32 %200 to i64
  %arrayidx338.2.1 = getelementptr inbounds i16, ptr %199, i64 %idxprom337.2.1
  %201 = load i16, ptr %arrayidx338.2.1, align 2
  %conv339.2.1 = zext i16 %201 to i32
  %add340.2.1 = add nuw nsw i32 %add340.1.1, %conv339.2.1
  %indvars.iv.next1172.2.1 = add nuw nsw i64 %188, 4
  %pos_y331.3.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.2.1, i32 5
  %202 = load i32, ptr %pos_y331.3.1, align 4
  %idxprom332.3.1 = sext i32 %202 to i64
  %arrayidx333.3.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.3.1
  %203 = load ptr, ptr %arrayidx333.3.1, align 8
  %pos_x336.3.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.2.1, i32 4
  %204 = load i32, ptr %pos_x336.3.1, align 8
  %idxprom337.3.1 = sext i32 %204 to i64
  %arrayidx338.3.1 = getelementptr inbounds i16, ptr %203, i64 %idxprom337.3.1
  %205 = load i16, ptr %arrayidx338.3.1, align 2
  %conv339.3.1 = zext i16 %205 to i32
  %add340.3.1 = add nuw nsw i32 %add340.2.1, %conv339.3.1
  br i1 %tobool301.not, label %if.then361.1, label %if.then349.1

if.then349.1:                                     ; preds = %for.cond324.preheader.1
  %add350.1 = add nuw nsw i32 %s1.31060.ph.1, 4
  %add351.1 = add nuw nsw i32 %add350.1, %add340.3.1
  %shr352.1 = lshr i32 %add351.1, 3
  br label %sw.epilog.1

if.then361.1:                                     ; preds = %for.cond324.preheader.1
  %add362.1 = add nuw nsw i32 %add340.3.1, 2
  %shr363.1 = lshr i32 %add362.1, 2
  br label %sw.epilog.1

sw.bb242.1:                                       ; preds = %sw.epilog
  br i1 %tobool322.not, label %if.else266.1, label %if.then290.1

if.else266.1:                                     ; preds = %sw.bb242.1
  br i1 %tobool301.not, label %sw.epilog.1, label %if.then295.1

if.then290.1:                                     ; preds = %sw.bb242.1
  %206 = zext i8 %179 to i64
  %207 = add nuw nsw i64 %206, 1
  %pos_y253.11239 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %207, i32 5
  %208 = load i32, ptr %pos_y253.11239, align 4
  %idxprom254.11240 = sext i32 %208 to i64
  %arrayidx255.11241 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.11240
  %209 = load ptr, ptr %arrayidx255.11241, align 8
  %pos_x258.11242 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %207, i32 4
  %210 = load i32, ptr %pos_x258.11242, align 8
  %idxprom259.11243 = sext i32 %210 to i64
  %arrayidx260.11244 = getelementptr inbounds i16, ptr %209, i64 %idxprom259.11243
  %211 = load i16, ptr %arrayidx260.11244, align 2
  %conv261.11245 = zext i16 %211 to i32
  %indvars.iv.next1177.11246 = add nuw nsw i64 %206, 2
  %pos_y253.1.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.11246, i32 5
  %212 = load i32, ptr %pos_y253.1.1, align 4
  %idxprom254.1.1 = sext i32 %212 to i64
  %arrayidx255.1.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.1.1
  %213 = load ptr, ptr %arrayidx255.1.1, align 8
  %pos_x258.1.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.11246, i32 4
  %214 = load i32, ptr %pos_x258.1.1, align 8
  %idxprom259.1.1 = sext i32 %214 to i64
  %arrayidx260.1.1 = getelementptr inbounds i16, ptr %213, i64 %idxprom259.1.1
  %215 = load i16, ptr %arrayidx260.1.1, align 2
  %conv261.1.1 = zext i16 %215 to i32
  %add262.1.1 = add nuw nsw i32 %conv261.11245, %conv261.1.1
  %indvars.iv.next1177.1.1 = add nuw nsw i64 %206, 3
  %pos_y253.2.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.1.1, i32 5
  %216 = load i32, ptr %pos_y253.2.1, align 4
  %idxprom254.2.1 = sext i32 %216 to i64
  %arrayidx255.2.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.2.1
  %217 = load ptr, ptr %arrayidx255.2.1, align 8
  %pos_x258.2.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.1.1, i32 4
  %218 = load i32, ptr %pos_x258.2.1, align 8
  %idxprom259.2.1 = sext i32 %218 to i64
  %arrayidx260.2.1 = getelementptr inbounds i16, ptr %217, i64 %idxprom259.2.1
  %219 = load i16, ptr %arrayidx260.2.1, align 2
  %conv261.2.1 = zext i16 %219 to i32
  %add262.2.1 = add nuw nsw i32 %add262.1.1, %conv261.2.1
  %indvars.iv.next1177.2.1 = add nuw nsw i64 %206, 4
  %pos_y253.3.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.2.1, i32 5
  %220 = load i32, ptr %pos_y253.3.1, align 4
  %idxprom254.3.1 = sext i32 %220 to i64
  %arrayidx255.3.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.3.1
  %221 = load ptr, ptr %arrayidx255.3.1, align 8
  %pos_x258.3.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.2.1, i32 4
  %222 = load i32, ptr %pos_x258.3.1, align 8
  %idxprom259.3.1 = sext i32 %222 to i64
  %arrayidx260.3.1 = getelementptr inbounds i16, ptr %221, i64 %idxprom259.3.1
  %223 = load i16, ptr %arrayidx260.3.1, align 2
  %conv261.3.1 = zext i16 %223 to i32
  %add262.3.1 = add nuw nsw i32 %add262.2.1, %conv261.3.1
  %add291.1 = add nuw nsw i32 %add262.3.1, 2
  %shr292.1 = lshr i32 %add291.1, 2
  br label %sw.epilog.1

if.then295.1:                                     ; preds = %if.else266.1
  %224 = load ptr, ptr %arrayidx310, align 8
  %225 = zext i8 %180 to i64
  %226 = add nsw i64 %75, %225
  %arrayidx280.11247 = getelementptr inbounds i16, ptr %224, i64 %226
  %227 = load <4 x i16>, ptr %arrayidx280.11247, align 2
  %228 = zext <4 x i16> %227 to <4 x i32>
  %229 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %228)
  %op.rdx1573 = add i32 %229, 2
  %shr297.1 = lshr i32 %op.rdx1573, 2
  br label %sw.epilog.1

sw.bb184.1:                                       ; preds = %sw.epilog
  br i1 %tobool301.not, label %if.else204.1, label %if.then231.1

if.else204.1:                                     ; preds = %sw.bb184.1
  br i1 %tobool206.not, label %sw.epilog.1, label %if.then237.1

if.then231.1:                                     ; preds = %sw.bb184.1
  %230 = load ptr, ptr %arrayidx310, align 8
  %231 = zext i8 %180 to i64
  %232 = add nsw i64 %75, %231
  %arrayidx198.11250 = getelementptr inbounds i16, ptr %230, i64 %232
  %233 = load <4 x i16>, ptr %arrayidx198.11250, align 2
  %234 = zext <4 x i16> %233 to <4 x i32>
  %235 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %234)
  %op.rdx1574 = add i32 %235, 2
  %shr233.1 = lshr i32 %op.rdx1574, 2
  br label %sw.epilog.1

if.then237.1:                                     ; preds = %if.else204.1
  %236 = zext i8 %179 to i64
  %237 = add nuw nsw i64 %236, 1
  %pos_y215.11253 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %237, i32 5
  %238 = load i32, ptr %pos_y215.11253, align 4
  %idxprom216.11254 = sext i32 %238 to i64
  %arrayidx217.11255 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.11254
  %239 = load ptr, ptr %arrayidx217.11255, align 8
  %pos_x220.11256 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %237, i32 4
  %240 = load i32, ptr %pos_x220.11256, align 8
  %idxprom221.11257 = sext i32 %240 to i64
  %arrayidx222.11258 = getelementptr inbounds i16, ptr %239, i64 %idxprom221.11257
  %241 = load i16, ptr %arrayidx222.11258, align 2
  %conv223.11259 = zext i16 %241 to i32
  %indvars.iv.next1194.11260 = add nuw nsw i64 %236, 2
  %pos_y215.1.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.11260, i32 5
  %242 = load i32, ptr %pos_y215.1.1, align 4
  %idxprom216.1.1 = sext i32 %242 to i64
  %arrayidx217.1.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.1.1
  %243 = load ptr, ptr %arrayidx217.1.1, align 8
  %pos_x220.1.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.11260, i32 4
  %244 = load i32, ptr %pos_x220.1.1, align 8
  %idxprom221.1.1 = sext i32 %244 to i64
  %arrayidx222.1.1 = getelementptr inbounds i16, ptr %243, i64 %idxprom221.1.1
  %245 = load i16, ptr %arrayidx222.1.1, align 2
  %conv223.1.1 = zext i16 %245 to i32
  %add224.1.1 = add nuw nsw i32 %conv223.11259, %conv223.1.1
  %indvars.iv.next1194.1.1 = add nuw nsw i64 %236, 3
  %pos_y215.2.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.1.1, i32 5
  %246 = load i32, ptr %pos_y215.2.1, align 4
  %idxprom216.2.1 = sext i32 %246 to i64
  %arrayidx217.2.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.2.1
  %247 = load ptr, ptr %arrayidx217.2.1, align 8
  %pos_x220.2.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.1.1, i32 4
  %248 = load i32, ptr %pos_x220.2.1, align 8
  %idxprom221.2.1 = sext i32 %248 to i64
  %arrayidx222.2.1 = getelementptr inbounds i16, ptr %247, i64 %idxprom221.2.1
  %249 = load i16, ptr %arrayidx222.2.1, align 2
  %conv223.2.1 = zext i16 %249 to i32
  %add224.2.1 = add nuw nsw i32 %add224.1.1, %conv223.2.1
  %indvars.iv.next1194.2.1 = add nuw nsw i64 %236, 4
  %pos_y215.3.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.2.1, i32 5
  %250 = load i32, ptr %pos_y215.3.1, align 4
  %idxprom216.3.1 = sext i32 %250 to i64
  %arrayidx217.3.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.3.1
  %251 = load ptr, ptr %arrayidx217.3.1, align 8
  %pos_x220.3.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.2.1, i32 4
  %252 = load i32, ptr %pos_x220.3.1, align 8
  %idxprom221.3.1 = sext i32 %252 to i64
  %arrayidx222.3.1 = getelementptr inbounds i16, ptr %251, i64 %idxprom221.3.1
  %253 = load i16, ptr %arrayidx222.3.1, align 2
  %conv223.3.1 = zext i16 %253 to i32
  %add224.3.1 = add nuw nsw i32 %add224.2.1, %conv223.3.1
  %add238.1 = add nuw nsw i32 %add224.3.1, 2
  %shr239.1 = lshr i32 %add238.1, 2
  br label %sw.epilog.1

sw.bb.1:                                          ; preds = %sw.epilog
  br i1 %tobool301.not, label %if.end139.thread.1, label %for.cond124.preheader.1

for.cond124.preheader.1:                          ; preds = %sw.bb.1
  %254 = load ptr, ptr %arrayidx310, align 8
  %255 = zext i8 %180 to i64
  %256 = add nsw i64 %75, %255
  %arrayidx133.11261 = getelementptr inbounds i16, ptr %254, i64 %256
  %257 = load <4 x i16>, ptr %arrayidx133.11261, align 2
  %258 = zext <4 x i16> %257 to <4 x i32>
  %259 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %258)
  br i1 %tobool206.not, label %if.else.thread.1, label %for.cond143.preheader.1

if.else.thread.1:                                 ; preds = %for.cond124.preheader.1
  %add173.1 = add nuw nsw i32 %259, 2
  %shr174.1 = lshr i32 %add173.1, 2
  br label %sw.epilog.1

if.end139.thread.1:                               ; preds = %sw.bb.1
  br i1 %tobool206.not, label %sw.epilog.1, label %for.cond143.preheader.1

for.cond143.preheader.1:                          ; preds = %if.end139.thread.1, %for.cond124.preheader.1
  %s0.11053.ph.1 = phi i32 [ 0, %if.end139.thread.1 ], [ %259, %for.cond124.preheader.1 ]
  %260 = zext i8 %179 to i64
  %261 = add nuw nsw i64 %260, 1
  %pos_y150.11264 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %261, i32 5
  %262 = load i32, ptr %pos_y150.11264, align 4
  %idxprom151.11265 = sext i32 %262 to i64
  %arrayidx152.11266 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.11265
  %263 = load ptr, ptr %arrayidx152.11266, align 8
  %pos_x155.11267 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %261, i32 4
  %264 = load i32, ptr %pos_x155.11267, align 8
  %idxprom156.11268 = sext i32 %264 to i64
  %arrayidx157.11269 = getelementptr inbounds i16, ptr %263, i64 %idxprom156.11268
  %265 = load i16, ptr %arrayidx157.11269, align 2
  %conv158.11270 = zext i16 %265 to i32
  %indvars.iv.next1205.11271 = add nuw nsw i64 %260, 2
  %pos_y150.1.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.11271, i32 5
  %266 = load i32, ptr %pos_y150.1.1, align 4
  %idxprom151.1.1 = sext i32 %266 to i64
  %arrayidx152.1.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.1.1
  %267 = load ptr, ptr %arrayidx152.1.1, align 8
  %pos_x155.1.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.11271, i32 4
  %268 = load i32, ptr %pos_x155.1.1, align 8
  %idxprom156.1.1 = sext i32 %268 to i64
  %arrayidx157.1.1 = getelementptr inbounds i16, ptr %267, i64 %idxprom156.1.1
  %269 = load i16, ptr %arrayidx157.1.1, align 2
  %conv158.1.1 = zext i16 %269 to i32
  %add159.1.1 = add nuw nsw i32 %conv158.11270, %conv158.1.1
  %indvars.iv.next1205.1.1 = add nuw nsw i64 %260, 3
  %pos_y150.2.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.1.1, i32 5
  %270 = load i32, ptr %pos_y150.2.1, align 4
  %idxprom151.2.1 = sext i32 %270 to i64
  %arrayidx152.2.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.2.1
  %271 = load ptr, ptr %arrayidx152.2.1, align 8
  %pos_x155.2.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.1.1, i32 4
  %272 = load i32, ptr %pos_x155.2.1, align 8
  %idxprom156.2.1 = sext i32 %272 to i64
  %arrayidx157.2.1 = getelementptr inbounds i16, ptr %271, i64 %idxprom156.2.1
  %273 = load i16, ptr %arrayidx157.2.1, align 2
  %conv158.2.1 = zext i16 %273 to i32
  %add159.2.1 = add nuw nsw i32 %add159.1.1, %conv158.2.1
  %indvars.iv.next1205.2.1 = add nuw nsw i64 %260, 4
  %pos_y150.3.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.2.1, i32 5
  %274 = load i32, ptr %pos_y150.3.1, align 4
  %idxprom151.3.1 = sext i32 %274 to i64
  %arrayidx152.3.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.3.1
  %275 = load ptr, ptr %arrayidx152.3.1, align 8
  %pos_x155.3.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.2.1, i32 4
  %276 = load i32, ptr %pos_x155.3.1, align 8
  %idxprom156.3.1 = sext i32 %276 to i64
  %arrayidx157.3.1 = getelementptr inbounds i16, ptr %275, i64 %idxprom156.3.1
  %277 = load i16, ptr %arrayidx157.3.1, align 2
  %conv158.3.1 = zext i16 %277 to i32
  %add159.3.1 = add nuw nsw i32 %add159.2.1, %conv158.3.1
  br i1 %tobool301.not, label %if.then178.1, label %if.then167.1

if.then167.1:                                     ; preds = %for.cond143.preheader.1
  %add168.1 = add nuw nsw i32 %s0.11053.ph.1, 4
  %add169.1 = add nuw nsw i32 %add168.1, %add159.3.1
  %shr170.1 = lshr i32 %add169.1, 3
  br label %sw.epilog.1

if.then178.1:                                     ; preds = %for.cond143.preheader.1
  %add179.1 = add nuw nsw i32 %add159.3.1, 2
  %shr180.1 = lshr i32 %add179.1, 2
  br label %sw.epilog.1

sw.epilog.1:                                      ; preds = %if.then178.1, %if.then167.1, %if.end139.thread.1, %if.else.thread.1, %if.then237.1, %if.then231.1, %if.else204.1, %if.then295.1, %if.then290.1, %if.else266.1, %if.then361.1, %if.then349.1, %if.end320.thread.1, %if.else353.thread.1, %sw.epilog
  %s.0.1 = phi i32 [ %72, %sw.epilog ], [ %shr352.1, %if.then349.1 ], [ %shr357.1, %if.else353.thread.1 ], [ %shr363.1, %if.then361.1 ], [ %shr292.1, %if.then290.1 ], [ %shr297.1, %if.then295.1 ], [ %shr233.1, %if.then231.1 ], [ %shr239.1, %if.then237.1 ], [ %shr170.1, %if.then167.1 ], [ %shr174.1, %if.else.thread.1 ], [ %shr180.1, %if.then178.1 ], [ %72, %if.else204.1 ], [ %72, %if.else266.1 ], [ %72, %if.end139.thread.1 ], [ %72, %if.end320.thread.1 ]
  %conv377.1 = trunc i32 %s.0.1 to i16
  %278 = zext i8 %180 to i64
  %279 = zext i8 %179 to i64
  %arrayidx384.11272 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %279, i64 %278
  %280 = insertelement <4 x i16> poison, i16 %conv377.1, i64 0
  %281 = shufflevector <4 x i16> %280, <4 x i16> poison, <4 x i32> zeroinitializer
  store <4 x i16> %281, ptr %arrayidx384.11272, align 2
  %indvars.iv.next1215.11279 = add nuw nsw i64 %279, 1
  %arrayidx384.11219.1 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %indvars.iv.next1215.11279, i64 %278
  store <4 x i16> %281, ptr %arrayidx384.11219.1, align 2
  %indvars.iv.next1215.1.1 = add nuw nsw i64 %279, 2
  %arrayidx384.21221.1 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %indvars.iv.next1215.1.1, i64 %278
  store <4 x i16> %281, ptr %arrayidx384.21221.1, align 2
  %indvars.iv.next1215.2.1 = add nuw nsw i64 %279, 3
  %arrayidx384.31223.1 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %indvars.iv.next1215.2.1, i64 %278
  store <4 x i16> %281, ptr %arrayidx384.31223.1, align 2
  %arrayidx107.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom102, i64 %indvars.iv1378, i64 2
  %282 = load i8, ptr %arrayidx107.2, align 2
  %arrayidx113.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom102, i64 %indvars.iv1378, i64 2
  %283 = load i8, ptr %arrayidx113.2, align 2
  %arrayidx121.2 = getelementptr inbounds [3 x [4 x [4 x i32]]], ptr @IntraChromaPrediction.block_pos, i64 0, i64 %idxprom102, i64 %indvars.iv1378, i64 2
  %284 = load i32, ptr %arrayidx121.2, align 8
  switch i32 %284, label %sw.epilog.2 [
    i32 0, label %sw.bb.2
    i32 1, label %sw.bb184.2
    i32 2, label %sw.bb242.2
    i32 3, label %sw.bb300.2
  ]

sw.bb300.2:                                       ; preds = %sw.epilog.1
  br i1 %tobool301.not, label %if.end320.thread.2, label %for.cond303.preheader.2

for.cond303.preheader.2:                          ; preds = %sw.bb300.2
  %285 = load ptr, ptr %arrayidx310, align 8
  %286 = zext i8 %283 to i64
  %287 = add nsw i64 %75, %286
  %arrayidx314.21281 = getelementptr inbounds i16, ptr %285, i64 %287
  %288 = load <4 x i16>, ptr %arrayidx314.21281, align 2
  %289 = zext <4 x i16> %288 to <4 x i32>
  %290 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %289)
  br i1 %tobool322.not, label %if.else353.thread.2, label %for.cond324.preheader.2

if.else353.thread.2:                              ; preds = %for.cond303.preheader.2
  %add356.2 = add nuw nsw i32 %290, 2
  %shr357.2 = lshr i32 %add356.2, 2
  br label %sw.epilog.2

if.end320.thread.2:                               ; preds = %sw.bb300.2
  br i1 %tobool322.not, label %sw.epilog.2, label %for.cond324.preheader.2

for.cond324.preheader.2:                          ; preds = %if.end320.thread.2, %for.cond303.preheader.2
  %s1.31060.ph.2 = phi i32 [ 0, %if.end320.thread.2 ], [ %290, %for.cond303.preheader.2 ]
  %291 = zext i8 %282 to i64
  %292 = add nuw nsw i64 %291, 1
  %pos_y331.21284 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %292, i32 5
  %293 = load i32, ptr %pos_y331.21284, align 4
  %idxprom332.21285 = sext i32 %293 to i64
  %arrayidx333.21286 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.21285
  %294 = load ptr, ptr %arrayidx333.21286, align 8
  %pos_x336.21287 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %292, i32 4
  %295 = load i32, ptr %pos_x336.21287, align 8
  %idxprom337.21288 = sext i32 %295 to i64
  %arrayidx338.21289 = getelementptr inbounds i16, ptr %294, i64 %idxprom337.21288
  %296 = load i16, ptr %arrayidx338.21289, align 2
  %conv339.21290 = zext i16 %296 to i32
  %indvars.iv.next1172.21291 = add nuw nsw i64 %291, 2
  %pos_y331.1.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.21291, i32 5
  %297 = load i32, ptr %pos_y331.1.2, align 4
  %idxprom332.1.2 = sext i32 %297 to i64
  %arrayidx333.1.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.1.2
  %298 = load ptr, ptr %arrayidx333.1.2, align 8
  %pos_x336.1.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.21291, i32 4
  %299 = load i32, ptr %pos_x336.1.2, align 8
  %idxprom337.1.2 = sext i32 %299 to i64
  %arrayidx338.1.2 = getelementptr inbounds i16, ptr %298, i64 %idxprom337.1.2
  %300 = load i16, ptr %arrayidx338.1.2, align 2
  %conv339.1.2 = zext i16 %300 to i32
  %add340.1.2 = add nuw nsw i32 %conv339.21290, %conv339.1.2
  %indvars.iv.next1172.1.2 = add nuw nsw i64 %291, 3
  %pos_y331.2.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.1.2, i32 5
  %301 = load i32, ptr %pos_y331.2.2, align 4
  %idxprom332.2.2 = sext i32 %301 to i64
  %arrayidx333.2.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.2.2
  %302 = load ptr, ptr %arrayidx333.2.2, align 8
  %pos_x336.2.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.1.2, i32 4
  %303 = load i32, ptr %pos_x336.2.2, align 8
  %idxprom337.2.2 = sext i32 %303 to i64
  %arrayidx338.2.2 = getelementptr inbounds i16, ptr %302, i64 %idxprom337.2.2
  %304 = load i16, ptr %arrayidx338.2.2, align 2
  %conv339.2.2 = zext i16 %304 to i32
  %add340.2.2 = add nuw nsw i32 %add340.1.2, %conv339.2.2
  %indvars.iv.next1172.2.2 = add nuw nsw i64 %291, 4
  %pos_y331.3.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.2.2, i32 5
  %305 = load i32, ptr %pos_y331.3.2, align 4
  %idxprom332.3.2 = sext i32 %305 to i64
  %arrayidx333.3.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.3.2
  %306 = load ptr, ptr %arrayidx333.3.2, align 8
  %pos_x336.3.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.2.2, i32 4
  %307 = load i32, ptr %pos_x336.3.2, align 8
  %idxprom337.3.2 = sext i32 %307 to i64
  %arrayidx338.3.2 = getelementptr inbounds i16, ptr %306, i64 %idxprom337.3.2
  %308 = load i16, ptr %arrayidx338.3.2, align 2
  %conv339.3.2 = zext i16 %308 to i32
  %add340.3.2 = add nuw nsw i32 %add340.2.2, %conv339.3.2
  br i1 %tobool301.not, label %if.then361.2, label %if.then349.2

if.then349.2:                                     ; preds = %for.cond324.preheader.2
  %add350.2 = add nuw nsw i32 %s1.31060.ph.2, 4
  %add351.2 = add nuw nsw i32 %add350.2, %add340.3.2
  %shr352.2 = lshr i32 %add351.2, 3
  br label %sw.epilog.2

if.then361.2:                                     ; preds = %for.cond324.preheader.2
  %add362.2 = add nuw nsw i32 %add340.3.2, 2
  %shr363.2 = lshr i32 %add362.2, 2
  br label %sw.epilog.2

sw.bb242.2:                                       ; preds = %sw.epilog.1
  br i1 %tobool322.not, label %if.else266.2, label %if.then290.2

if.else266.2:                                     ; preds = %sw.bb242.2
  br i1 %tobool301.not, label %sw.epilog.2, label %if.then295.2

if.then290.2:                                     ; preds = %sw.bb242.2
  %309 = zext i8 %282 to i64
  %310 = add nuw nsw i64 %309, 1
  %pos_y253.21292 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %310, i32 5
  %311 = load i32, ptr %pos_y253.21292, align 4
  %idxprom254.21293 = sext i32 %311 to i64
  %arrayidx255.21294 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.21293
  %312 = load ptr, ptr %arrayidx255.21294, align 8
  %pos_x258.21295 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %310, i32 4
  %313 = load i32, ptr %pos_x258.21295, align 8
  %idxprom259.21296 = sext i32 %313 to i64
  %arrayidx260.21297 = getelementptr inbounds i16, ptr %312, i64 %idxprom259.21296
  %314 = load i16, ptr %arrayidx260.21297, align 2
  %conv261.21298 = zext i16 %314 to i32
  %indvars.iv.next1177.21299 = add nuw nsw i64 %309, 2
  %pos_y253.1.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.21299, i32 5
  %315 = load i32, ptr %pos_y253.1.2, align 4
  %idxprom254.1.2 = sext i32 %315 to i64
  %arrayidx255.1.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.1.2
  %316 = load ptr, ptr %arrayidx255.1.2, align 8
  %pos_x258.1.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.21299, i32 4
  %317 = load i32, ptr %pos_x258.1.2, align 8
  %idxprom259.1.2 = sext i32 %317 to i64
  %arrayidx260.1.2 = getelementptr inbounds i16, ptr %316, i64 %idxprom259.1.2
  %318 = load i16, ptr %arrayidx260.1.2, align 2
  %conv261.1.2 = zext i16 %318 to i32
  %add262.1.2 = add nuw nsw i32 %conv261.21298, %conv261.1.2
  %indvars.iv.next1177.1.2 = add nuw nsw i64 %309, 3
  %pos_y253.2.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.1.2, i32 5
  %319 = load i32, ptr %pos_y253.2.2, align 4
  %idxprom254.2.2 = sext i32 %319 to i64
  %arrayidx255.2.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.2.2
  %320 = load ptr, ptr %arrayidx255.2.2, align 8
  %pos_x258.2.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.1.2, i32 4
  %321 = load i32, ptr %pos_x258.2.2, align 8
  %idxprom259.2.2 = sext i32 %321 to i64
  %arrayidx260.2.2 = getelementptr inbounds i16, ptr %320, i64 %idxprom259.2.2
  %322 = load i16, ptr %arrayidx260.2.2, align 2
  %conv261.2.2 = zext i16 %322 to i32
  %add262.2.2 = add nuw nsw i32 %add262.1.2, %conv261.2.2
  %indvars.iv.next1177.2.2 = add nuw nsw i64 %309, 4
  %pos_y253.3.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.2.2, i32 5
  %323 = load i32, ptr %pos_y253.3.2, align 4
  %idxprom254.3.2 = sext i32 %323 to i64
  %arrayidx255.3.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.3.2
  %324 = load ptr, ptr %arrayidx255.3.2, align 8
  %pos_x258.3.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.2.2, i32 4
  %325 = load i32, ptr %pos_x258.3.2, align 8
  %idxprom259.3.2 = sext i32 %325 to i64
  %arrayidx260.3.2 = getelementptr inbounds i16, ptr %324, i64 %idxprom259.3.2
  %326 = load i16, ptr %arrayidx260.3.2, align 2
  %conv261.3.2 = zext i16 %326 to i32
  %add262.3.2 = add nuw nsw i32 %add262.2.2, %conv261.3.2
  %add291.2 = add nuw nsw i32 %add262.3.2, 2
  %shr292.2 = lshr i32 %add291.2, 2
  br label %sw.epilog.2

if.then295.2:                                     ; preds = %if.else266.2
  %327 = load ptr, ptr %arrayidx310, align 8
  %328 = zext i8 %283 to i64
  %329 = add nsw i64 %75, %328
  %arrayidx280.21300 = getelementptr inbounds i16, ptr %327, i64 %329
  %330 = load <4 x i16>, ptr %arrayidx280.21300, align 2
  %331 = zext <4 x i16> %330 to <4 x i32>
  %332 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %331)
  %op.rdx1571 = add i32 %332, 2
  %shr297.2 = lshr i32 %op.rdx1571, 2
  br label %sw.epilog.2

sw.bb184.2:                                       ; preds = %sw.epilog.1
  br i1 %tobool301.not, label %if.else204.2, label %if.then231.2

if.else204.2:                                     ; preds = %sw.bb184.2
  br i1 %tobool206.not, label %sw.epilog.2, label %if.then237.2

if.then231.2:                                     ; preds = %sw.bb184.2
  %333 = load ptr, ptr %arrayidx310, align 8
  %334 = zext i8 %283 to i64
  %335 = add nsw i64 %75, %334
  %arrayidx198.21303 = getelementptr inbounds i16, ptr %333, i64 %335
  %336 = load <4 x i16>, ptr %arrayidx198.21303, align 2
  %337 = zext <4 x i16> %336 to <4 x i32>
  %338 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %337)
  %op.rdx1572 = add i32 %338, 2
  %shr233.2 = lshr i32 %op.rdx1572, 2
  br label %sw.epilog.2

if.then237.2:                                     ; preds = %if.else204.2
  %339 = zext i8 %282 to i64
  %340 = add nuw nsw i64 %339, 1
  %pos_y215.21306 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %340, i32 5
  %341 = load i32, ptr %pos_y215.21306, align 4
  %idxprom216.21307 = sext i32 %341 to i64
  %arrayidx217.21308 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.21307
  %342 = load ptr, ptr %arrayidx217.21308, align 8
  %pos_x220.21309 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %340, i32 4
  %343 = load i32, ptr %pos_x220.21309, align 8
  %idxprom221.21310 = sext i32 %343 to i64
  %arrayidx222.21311 = getelementptr inbounds i16, ptr %342, i64 %idxprom221.21310
  %344 = load i16, ptr %arrayidx222.21311, align 2
  %conv223.21312 = zext i16 %344 to i32
  %indvars.iv.next1194.21313 = add nuw nsw i64 %339, 2
  %pos_y215.1.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.21313, i32 5
  %345 = load i32, ptr %pos_y215.1.2, align 4
  %idxprom216.1.2 = sext i32 %345 to i64
  %arrayidx217.1.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.1.2
  %346 = load ptr, ptr %arrayidx217.1.2, align 8
  %pos_x220.1.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.21313, i32 4
  %347 = load i32, ptr %pos_x220.1.2, align 8
  %idxprom221.1.2 = sext i32 %347 to i64
  %arrayidx222.1.2 = getelementptr inbounds i16, ptr %346, i64 %idxprom221.1.2
  %348 = load i16, ptr %arrayidx222.1.2, align 2
  %conv223.1.2 = zext i16 %348 to i32
  %add224.1.2 = add nuw nsw i32 %conv223.21312, %conv223.1.2
  %indvars.iv.next1194.1.2 = add nuw nsw i64 %339, 3
  %pos_y215.2.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.1.2, i32 5
  %349 = load i32, ptr %pos_y215.2.2, align 4
  %idxprom216.2.2 = sext i32 %349 to i64
  %arrayidx217.2.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.2.2
  %350 = load ptr, ptr %arrayidx217.2.2, align 8
  %pos_x220.2.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.1.2, i32 4
  %351 = load i32, ptr %pos_x220.2.2, align 8
  %idxprom221.2.2 = sext i32 %351 to i64
  %arrayidx222.2.2 = getelementptr inbounds i16, ptr %350, i64 %idxprom221.2.2
  %352 = load i16, ptr %arrayidx222.2.2, align 2
  %conv223.2.2 = zext i16 %352 to i32
  %add224.2.2 = add nuw nsw i32 %add224.1.2, %conv223.2.2
  %indvars.iv.next1194.2.2 = add nuw nsw i64 %339, 4
  %pos_y215.3.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.2.2, i32 5
  %353 = load i32, ptr %pos_y215.3.2, align 4
  %idxprom216.3.2 = sext i32 %353 to i64
  %arrayidx217.3.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.3.2
  %354 = load ptr, ptr %arrayidx217.3.2, align 8
  %pos_x220.3.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.2.2, i32 4
  %355 = load i32, ptr %pos_x220.3.2, align 8
  %idxprom221.3.2 = sext i32 %355 to i64
  %arrayidx222.3.2 = getelementptr inbounds i16, ptr %354, i64 %idxprom221.3.2
  %356 = load i16, ptr %arrayidx222.3.2, align 2
  %conv223.3.2 = zext i16 %356 to i32
  %add224.3.2 = add nuw nsw i32 %add224.2.2, %conv223.3.2
  %add238.2 = add nuw nsw i32 %add224.3.2, 2
  %shr239.2 = lshr i32 %add238.2, 2
  br label %sw.epilog.2

sw.bb.2:                                          ; preds = %sw.epilog.1
  br i1 %tobool301.not, label %if.end139.thread.2, label %for.cond124.preheader.2

for.cond124.preheader.2:                          ; preds = %sw.bb.2
  %357 = load ptr, ptr %arrayidx310, align 8
  %358 = zext i8 %283 to i64
  %359 = add nsw i64 %75, %358
  %arrayidx133.21314 = getelementptr inbounds i16, ptr %357, i64 %359
  %360 = load <4 x i16>, ptr %arrayidx133.21314, align 2
  %361 = zext <4 x i16> %360 to <4 x i32>
  %362 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %361)
  br i1 %tobool206.not, label %if.else.thread.2, label %for.cond143.preheader.2

if.else.thread.2:                                 ; preds = %for.cond124.preheader.2
  %add173.2 = add nuw nsw i32 %362, 2
  %shr174.2 = lshr i32 %add173.2, 2
  br label %sw.epilog.2

if.end139.thread.2:                               ; preds = %sw.bb.2
  br i1 %tobool206.not, label %sw.epilog.2, label %for.cond143.preheader.2

for.cond143.preheader.2:                          ; preds = %if.end139.thread.2, %for.cond124.preheader.2
  %s0.11053.ph.2 = phi i32 [ 0, %if.end139.thread.2 ], [ %362, %for.cond124.preheader.2 ]
  %363 = zext i8 %282 to i64
  %364 = add nuw nsw i64 %363, 1
  %pos_y150.21317 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %364, i32 5
  %365 = load i32, ptr %pos_y150.21317, align 4
  %idxprom151.21318 = sext i32 %365 to i64
  %arrayidx152.21319 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.21318
  %366 = load ptr, ptr %arrayidx152.21319, align 8
  %pos_x155.21320 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %364, i32 4
  %367 = load i32, ptr %pos_x155.21320, align 8
  %idxprom156.21321 = sext i32 %367 to i64
  %arrayidx157.21322 = getelementptr inbounds i16, ptr %366, i64 %idxprom156.21321
  %368 = load i16, ptr %arrayidx157.21322, align 2
  %conv158.21323 = zext i16 %368 to i32
  %indvars.iv.next1205.21324 = add nuw nsw i64 %363, 2
  %pos_y150.1.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.21324, i32 5
  %369 = load i32, ptr %pos_y150.1.2, align 4
  %idxprom151.1.2 = sext i32 %369 to i64
  %arrayidx152.1.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.1.2
  %370 = load ptr, ptr %arrayidx152.1.2, align 8
  %pos_x155.1.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.21324, i32 4
  %371 = load i32, ptr %pos_x155.1.2, align 8
  %idxprom156.1.2 = sext i32 %371 to i64
  %arrayidx157.1.2 = getelementptr inbounds i16, ptr %370, i64 %idxprom156.1.2
  %372 = load i16, ptr %arrayidx157.1.2, align 2
  %conv158.1.2 = zext i16 %372 to i32
  %add159.1.2 = add nuw nsw i32 %conv158.21323, %conv158.1.2
  %indvars.iv.next1205.1.2 = add nuw nsw i64 %363, 3
  %pos_y150.2.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.1.2, i32 5
  %373 = load i32, ptr %pos_y150.2.2, align 4
  %idxprom151.2.2 = sext i32 %373 to i64
  %arrayidx152.2.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.2.2
  %374 = load ptr, ptr %arrayidx152.2.2, align 8
  %pos_x155.2.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.1.2, i32 4
  %375 = load i32, ptr %pos_x155.2.2, align 8
  %idxprom156.2.2 = sext i32 %375 to i64
  %arrayidx157.2.2 = getelementptr inbounds i16, ptr %374, i64 %idxprom156.2.2
  %376 = load i16, ptr %arrayidx157.2.2, align 2
  %conv158.2.2 = zext i16 %376 to i32
  %add159.2.2 = add nuw nsw i32 %add159.1.2, %conv158.2.2
  %indvars.iv.next1205.2.2 = add nuw nsw i64 %363, 4
  %pos_y150.3.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.2.2, i32 5
  %377 = load i32, ptr %pos_y150.3.2, align 4
  %idxprom151.3.2 = sext i32 %377 to i64
  %arrayidx152.3.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.3.2
  %378 = load ptr, ptr %arrayidx152.3.2, align 8
  %pos_x155.3.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.2.2, i32 4
  %379 = load i32, ptr %pos_x155.3.2, align 8
  %idxprom156.3.2 = sext i32 %379 to i64
  %arrayidx157.3.2 = getelementptr inbounds i16, ptr %378, i64 %idxprom156.3.2
  %380 = load i16, ptr %arrayidx157.3.2, align 2
  %conv158.3.2 = zext i16 %380 to i32
  %add159.3.2 = add nuw nsw i32 %add159.2.2, %conv158.3.2
  br i1 %tobool301.not, label %if.then178.2, label %if.then167.2

if.then167.2:                                     ; preds = %for.cond143.preheader.2
  %add168.2 = add nuw nsw i32 %s0.11053.ph.2, 4
  %add169.2 = add nuw nsw i32 %add168.2, %add159.3.2
  %shr170.2 = lshr i32 %add169.2, 3
  br label %sw.epilog.2

if.then178.2:                                     ; preds = %for.cond143.preheader.2
  %add179.2 = add nuw nsw i32 %add159.3.2, 2
  %shr180.2 = lshr i32 %add179.2, 2
  br label %sw.epilog.2

sw.epilog.2:                                      ; preds = %if.then178.2, %if.then167.2, %if.end139.thread.2, %if.else.thread.2, %if.then237.2, %if.then231.2, %if.else204.2, %if.then295.2, %if.then290.2, %if.else266.2, %if.then361.2, %if.then349.2, %if.end320.thread.2, %if.else353.thread.2, %sw.epilog.1
  %s.0.2 = phi i32 [ %72, %sw.epilog.1 ], [ %shr352.2, %if.then349.2 ], [ %shr357.2, %if.else353.thread.2 ], [ %shr363.2, %if.then361.2 ], [ %shr292.2, %if.then290.2 ], [ %shr297.2, %if.then295.2 ], [ %shr233.2, %if.then231.2 ], [ %shr239.2, %if.then237.2 ], [ %shr170.2, %if.then167.2 ], [ %shr174.2, %if.else.thread.2 ], [ %shr180.2, %if.then178.2 ], [ %72, %if.else204.2 ], [ %72, %if.else266.2 ], [ %72, %if.end139.thread.2 ], [ %72, %if.end320.thread.2 ]
  %conv377.2 = trunc i32 %s.0.2 to i16
  %381 = zext i8 %283 to i64
  %382 = zext i8 %282 to i64
  %arrayidx384.21325 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %382, i64 %381
  %383 = insertelement <4 x i16> poison, i16 %conv377.2, i64 0
  %384 = shufflevector <4 x i16> %383, <4 x i16> poison, <4 x i32> zeroinitializer
  store <4 x i16> %384, ptr %arrayidx384.21325, align 2
  %indvars.iv.next1215.21332 = add nuw nsw i64 %382, 1
  %arrayidx384.11219.2 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %indvars.iv.next1215.21332, i64 %381
  store <4 x i16> %384, ptr %arrayidx384.11219.2, align 2
  %indvars.iv.next1215.1.2 = add nuw nsw i64 %382, 2
  %arrayidx384.21221.2 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %indvars.iv.next1215.1.2, i64 %381
  store <4 x i16> %384, ptr %arrayidx384.21221.2, align 2
  %indvars.iv.next1215.2.2 = add nuw nsw i64 %382, 3
  %arrayidx384.31223.2 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %indvars.iv.next1215.2.2, i64 %381
  store <4 x i16> %384, ptr %arrayidx384.31223.2, align 2
  %arrayidx107.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom102, i64 %indvars.iv1378, i64 3
  %385 = load i8, ptr %arrayidx107.3, align 1
  %arrayidx113.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom102, i64 %indvars.iv1378, i64 3
  %386 = load i8, ptr %arrayidx113.3, align 1
  %arrayidx121.3 = getelementptr inbounds [3 x [4 x [4 x i32]]], ptr @IntraChromaPrediction.block_pos, i64 0, i64 %idxprom102, i64 %indvars.iv1378, i64 3
  %387 = load i32, ptr %arrayidx121.3, align 4
  switch i32 %387, label %sw.epilog.3 [
    i32 0, label %sw.bb.3
    i32 1, label %sw.bb184.3
    i32 2, label %sw.bb242.3
    i32 3, label %sw.bb300.3
  ]

sw.bb300.3:                                       ; preds = %sw.epilog.2
  br i1 %tobool301.not, label %if.end320.thread.3, label %for.cond303.preheader.3

for.cond303.preheader.3:                          ; preds = %sw.bb300.3
  %388 = load ptr, ptr %arrayidx310, align 8
  %389 = zext i8 %386 to i64
  %390 = add nsw i64 %75, %389
  %arrayidx314.31334 = getelementptr inbounds i16, ptr %388, i64 %390
  %391 = load <4 x i16>, ptr %arrayidx314.31334, align 2
  %392 = zext <4 x i16> %391 to <4 x i32>
  %393 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %392)
  br i1 %tobool322.not, label %if.else353.thread.3, label %for.cond324.preheader.3

if.else353.thread.3:                              ; preds = %for.cond303.preheader.3
  %add356.3 = add nuw nsw i32 %393, 2
  %shr357.3 = lshr i32 %add356.3, 2
  br label %sw.epilog.3

if.end320.thread.3:                               ; preds = %sw.bb300.3
  br i1 %tobool322.not, label %sw.epilog.3, label %for.cond324.preheader.3

for.cond324.preheader.3:                          ; preds = %if.end320.thread.3, %for.cond303.preheader.3
  %s1.31060.ph.3 = phi i32 [ 0, %if.end320.thread.3 ], [ %393, %for.cond303.preheader.3 ]
  %394 = zext i8 %385 to i64
  %395 = add nuw nsw i64 %394, 1
  %pos_y331.31336 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %395, i32 5
  %396 = load i32, ptr %pos_y331.31336, align 4
  %idxprom332.31337 = sext i32 %396 to i64
  %arrayidx333.31338 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.31337
  %397 = load ptr, ptr %arrayidx333.31338, align 8
  %pos_x336.31339 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %395, i32 4
  %398 = load i32, ptr %pos_x336.31339, align 8
  %idxprom337.31340 = sext i32 %398 to i64
  %arrayidx338.31341 = getelementptr inbounds i16, ptr %397, i64 %idxprom337.31340
  %399 = load i16, ptr %arrayidx338.31341, align 2
  %conv339.31342 = zext i16 %399 to i32
  %indvars.iv.next1172.3 = add nuw nsw i64 %394, 2
  %pos_y331.1.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.3, i32 5
  %400 = load i32, ptr %pos_y331.1.3, align 4
  %idxprom332.1.3 = sext i32 %400 to i64
  %arrayidx333.1.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.1.3
  %401 = load ptr, ptr %arrayidx333.1.3, align 8
  %pos_x336.1.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.3, i32 4
  %402 = load i32, ptr %pos_x336.1.3, align 8
  %idxprom337.1.3 = sext i32 %402 to i64
  %arrayidx338.1.3 = getelementptr inbounds i16, ptr %401, i64 %idxprom337.1.3
  %403 = load i16, ptr %arrayidx338.1.3, align 2
  %conv339.1.3 = zext i16 %403 to i32
  %add340.1.3 = add nuw nsw i32 %conv339.31342, %conv339.1.3
  %indvars.iv.next1172.1.3 = add nuw nsw i64 %394, 3
  %pos_y331.2.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.1.3, i32 5
  %404 = load i32, ptr %pos_y331.2.3, align 4
  %idxprom332.2.3 = sext i32 %404 to i64
  %arrayidx333.2.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.2.3
  %405 = load ptr, ptr %arrayidx333.2.3, align 8
  %pos_x336.2.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.1.3, i32 4
  %406 = load i32, ptr %pos_x336.2.3, align 8
  %idxprom337.2.3 = sext i32 %406 to i64
  %arrayidx338.2.3 = getelementptr inbounds i16, ptr %405, i64 %idxprom337.2.3
  %407 = load i16, ptr %arrayidx338.2.3, align 2
  %conv339.2.3 = zext i16 %407 to i32
  %add340.2.3 = add nuw nsw i32 %add340.1.3, %conv339.2.3
  %indvars.iv.next1172.2.3 = add nuw nsw i64 %394, 4
  %pos_y331.3.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.2.3, i32 5
  %408 = load i32, ptr %pos_y331.3.3, align 4
  %idxprom332.3.3 = sext i32 %408 to i64
  %arrayidx333.3.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom332.3.3
  %409 = load ptr, ptr %arrayidx333.3.3, align 8
  %pos_x336.3.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1172.2.3, i32 4
  %410 = load i32, ptr %pos_x336.3.3, align 8
  %idxprom337.3.3 = sext i32 %410 to i64
  %arrayidx338.3.3 = getelementptr inbounds i16, ptr %409, i64 %idxprom337.3.3
  %411 = load i16, ptr %arrayidx338.3.3, align 2
  %conv339.3.3 = zext i16 %411 to i32
  %add340.3.3 = add nuw nsw i32 %add340.2.3, %conv339.3.3
  br i1 %tobool301.not, label %if.then361.3, label %if.then349.3

if.then349.3:                                     ; preds = %for.cond324.preheader.3
  %add350.3 = add nuw nsw i32 %s1.31060.ph.3, 4
  %add351.3 = add nuw nsw i32 %add350.3, %add340.3.3
  %shr352.3 = lshr i32 %add351.3, 3
  br label %sw.epilog.3

if.then361.3:                                     ; preds = %for.cond324.preheader.3
  %add362.3 = add nuw nsw i32 %add340.3.3, 2
  %shr363.3 = lshr i32 %add362.3, 2
  br label %sw.epilog.3

sw.bb242.3:                                       ; preds = %sw.epilog.2
  br i1 %tobool322.not, label %if.else266.3, label %if.then290.3

if.else266.3:                                     ; preds = %sw.bb242.3
  br i1 %tobool301.not, label %sw.epilog.3, label %if.then295.3

if.then290.3:                                     ; preds = %sw.bb242.3
  %412 = zext i8 %385 to i64
  %413 = add nuw nsw i64 %412, 1
  %pos_y253.31343 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %413, i32 5
  %414 = load i32, ptr %pos_y253.31343, align 4
  %idxprom254.31344 = sext i32 %414 to i64
  %arrayidx255.31345 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.31344
  %415 = load ptr, ptr %arrayidx255.31345, align 8
  %pos_x258.31346 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %413, i32 4
  %416 = load i32, ptr %pos_x258.31346, align 8
  %idxprom259.31347 = sext i32 %416 to i64
  %arrayidx260.31348 = getelementptr inbounds i16, ptr %415, i64 %idxprom259.31347
  %417 = load i16, ptr %arrayidx260.31348, align 2
  %conv261.31349 = zext i16 %417 to i32
  %indvars.iv.next1177.3 = add nuw nsw i64 %412, 2
  %pos_y253.1.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.3, i32 5
  %418 = load i32, ptr %pos_y253.1.3, align 4
  %idxprom254.1.3 = sext i32 %418 to i64
  %arrayidx255.1.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.1.3
  %419 = load ptr, ptr %arrayidx255.1.3, align 8
  %pos_x258.1.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.3, i32 4
  %420 = load i32, ptr %pos_x258.1.3, align 8
  %idxprom259.1.3 = sext i32 %420 to i64
  %arrayidx260.1.3 = getelementptr inbounds i16, ptr %419, i64 %idxprom259.1.3
  %421 = load i16, ptr %arrayidx260.1.3, align 2
  %conv261.1.3 = zext i16 %421 to i32
  %add262.1.3 = add nuw nsw i32 %conv261.31349, %conv261.1.3
  %indvars.iv.next1177.1.3 = add nuw nsw i64 %412, 3
  %pos_y253.2.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.1.3, i32 5
  %422 = load i32, ptr %pos_y253.2.3, align 4
  %idxprom254.2.3 = sext i32 %422 to i64
  %arrayidx255.2.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.2.3
  %423 = load ptr, ptr %arrayidx255.2.3, align 8
  %pos_x258.2.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.1.3, i32 4
  %424 = load i32, ptr %pos_x258.2.3, align 8
  %idxprom259.2.3 = sext i32 %424 to i64
  %arrayidx260.2.3 = getelementptr inbounds i16, ptr %423, i64 %idxprom259.2.3
  %425 = load i16, ptr %arrayidx260.2.3, align 2
  %conv261.2.3 = zext i16 %425 to i32
  %add262.2.3 = add nuw nsw i32 %add262.1.3, %conv261.2.3
  %indvars.iv.next1177.2.3 = add nuw nsw i64 %412, 4
  %pos_y253.3.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.2.3, i32 5
  %426 = load i32, ptr %pos_y253.3.3, align 4
  %idxprom254.3.3 = sext i32 %426 to i64
  %arrayidx255.3.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom254.3.3
  %427 = load ptr, ptr %arrayidx255.3.3, align 8
  %pos_x258.3.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1177.2.3, i32 4
  %428 = load i32, ptr %pos_x258.3.3, align 8
  %idxprom259.3.3 = sext i32 %428 to i64
  %arrayidx260.3.3 = getelementptr inbounds i16, ptr %427, i64 %idxprom259.3.3
  %429 = load i16, ptr %arrayidx260.3.3, align 2
  %conv261.3.3 = zext i16 %429 to i32
  %add262.3.3 = add nuw nsw i32 %add262.2.3, %conv261.3.3
  %add291.3 = add nuw nsw i32 %add262.3.3, 2
  %shr292.3 = lshr i32 %add291.3, 2
  br label %sw.epilog.3

if.then295.3:                                     ; preds = %if.else266.3
  %430 = load ptr, ptr %arrayidx310, align 8
  %431 = zext i8 %386 to i64
  %432 = add nsw i64 %75, %431
  %arrayidx280.31350 = getelementptr inbounds i16, ptr %430, i64 %432
  %433 = load <4 x i16>, ptr %arrayidx280.31350, align 2
  %434 = zext <4 x i16> %433 to <4 x i32>
  %435 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %434)
  %op.rdx = add i32 %435, 2
  %shr297.3 = lshr i32 %op.rdx, 2
  br label %sw.epilog.3

sw.bb184.3:                                       ; preds = %sw.epilog.2
  br i1 %tobool301.not, label %if.else204.3, label %if.then231.3

if.else204.3:                                     ; preds = %sw.bb184.3
  br i1 %tobool206.not, label %sw.epilog.3, label %if.then237.3

if.then231.3:                                     ; preds = %sw.bb184.3
  %436 = load ptr, ptr %arrayidx310, align 8
  %437 = zext i8 %386 to i64
  %438 = add nsw i64 %75, %437
  %arrayidx198.31352 = getelementptr inbounds i16, ptr %436, i64 %438
  %439 = load <4 x i16>, ptr %arrayidx198.31352, align 2
  %440 = zext <4 x i16> %439 to <4 x i32>
  %441 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %440)
  %op.rdx1570 = add i32 %441, 2
  %shr233.3 = lshr i32 %op.rdx1570, 2
  br label %sw.epilog.3

if.then237.3:                                     ; preds = %if.else204.3
  %442 = zext i8 %385 to i64
  %443 = add nuw nsw i64 %442, 1
  %pos_y215.31354 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %443, i32 5
  %444 = load i32, ptr %pos_y215.31354, align 4
  %idxprom216.31355 = sext i32 %444 to i64
  %arrayidx217.31356 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.31355
  %445 = load ptr, ptr %arrayidx217.31356, align 8
  %pos_x220.31357 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %443, i32 4
  %446 = load i32, ptr %pos_x220.31357, align 8
  %idxprom221.31358 = sext i32 %446 to i64
  %arrayidx222.31359 = getelementptr inbounds i16, ptr %445, i64 %idxprom221.31358
  %447 = load i16, ptr %arrayidx222.31359, align 2
  %conv223.31360 = zext i16 %447 to i32
  %indvars.iv.next1194.3 = add nuw nsw i64 %442, 2
  %pos_y215.1.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.3, i32 5
  %448 = load i32, ptr %pos_y215.1.3, align 4
  %idxprom216.1.3 = sext i32 %448 to i64
  %arrayidx217.1.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.1.3
  %449 = load ptr, ptr %arrayidx217.1.3, align 8
  %pos_x220.1.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.3, i32 4
  %450 = load i32, ptr %pos_x220.1.3, align 8
  %idxprom221.1.3 = sext i32 %450 to i64
  %arrayidx222.1.3 = getelementptr inbounds i16, ptr %449, i64 %idxprom221.1.3
  %451 = load i16, ptr %arrayidx222.1.3, align 2
  %conv223.1.3 = zext i16 %451 to i32
  %add224.1.3 = add nuw nsw i32 %conv223.31360, %conv223.1.3
  %indvars.iv.next1194.1.3 = add nuw nsw i64 %442, 3
  %pos_y215.2.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.1.3, i32 5
  %452 = load i32, ptr %pos_y215.2.3, align 4
  %idxprom216.2.3 = sext i32 %452 to i64
  %arrayidx217.2.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.2.3
  %453 = load ptr, ptr %arrayidx217.2.3, align 8
  %pos_x220.2.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.1.3, i32 4
  %454 = load i32, ptr %pos_x220.2.3, align 8
  %idxprom221.2.3 = sext i32 %454 to i64
  %arrayidx222.2.3 = getelementptr inbounds i16, ptr %453, i64 %idxprom221.2.3
  %455 = load i16, ptr %arrayidx222.2.3, align 2
  %conv223.2.3 = zext i16 %455 to i32
  %add224.2.3 = add nuw nsw i32 %add224.1.3, %conv223.2.3
  %indvars.iv.next1194.2.3 = add nuw nsw i64 %442, 4
  %pos_y215.3.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.2.3, i32 5
  %456 = load i32, ptr %pos_y215.3.3, align 4
  %idxprom216.3.3 = sext i32 %456 to i64
  %arrayidx217.3.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom216.3.3
  %457 = load ptr, ptr %arrayidx217.3.3, align 8
  %pos_x220.3.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1194.2.3, i32 4
  %458 = load i32, ptr %pos_x220.3.3, align 8
  %idxprom221.3.3 = sext i32 %458 to i64
  %arrayidx222.3.3 = getelementptr inbounds i16, ptr %457, i64 %idxprom221.3.3
  %459 = load i16, ptr %arrayidx222.3.3, align 2
  %conv223.3.3 = zext i16 %459 to i32
  %add224.3.3 = add nuw nsw i32 %add224.2.3, %conv223.3.3
  %add238.3 = add nuw nsw i32 %add224.3.3, 2
  %shr239.3 = lshr i32 %add238.3, 2
  br label %sw.epilog.3

sw.bb.3:                                          ; preds = %sw.epilog.2
  br i1 %tobool301.not, label %if.end139.thread.3, label %for.cond124.preheader.3

for.cond124.preheader.3:                          ; preds = %sw.bb.3
  %460 = load ptr, ptr %arrayidx310, align 8
  %461 = zext i8 %386 to i64
  %462 = add nsw i64 %75, %461
  %arrayidx133.31361 = getelementptr inbounds i16, ptr %460, i64 %462
  %463 = load <4 x i16>, ptr %arrayidx133.31361, align 2
  %464 = zext <4 x i16> %463 to <4 x i32>
  %465 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %464)
  br i1 %tobool206.not, label %if.else.thread.3, label %for.cond143.preheader.3

if.else.thread.3:                                 ; preds = %for.cond124.preheader.3
  %add173.3 = add nuw nsw i32 %465, 2
  %shr174.3 = lshr i32 %add173.3, 2
  br label %sw.epilog.3

if.end139.thread.3:                               ; preds = %sw.bb.3
  br i1 %tobool206.not, label %sw.epilog.3, label %for.cond143.preheader.3

for.cond143.preheader.3:                          ; preds = %if.end139.thread.3, %for.cond124.preheader.3
  %s0.11053.ph.3 = phi i32 [ 0, %if.end139.thread.3 ], [ %465, %for.cond124.preheader.3 ]
  %466 = zext i8 %385 to i64
  %467 = add nuw nsw i64 %466, 1
  %pos_y150.31363 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %467, i32 5
  %468 = load i32, ptr %pos_y150.31363, align 4
  %idxprom151.31364 = sext i32 %468 to i64
  %arrayidx152.31365 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.31364
  %469 = load ptr, ptr %arrayidx152.31365, align 8
  %pos_x155.31366 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %467, i32 4
  %470 = load i32, ptr %pos_x155.31366, align 8
  %idxprom156.31367 = sext i32 %470 to i64
  %arrayidx157.31368 = getelementptr inbounds i16, ptr %469, i64 %idxprom156.31367
  %471 = load i16, ptr %arrayidx157.31368, align 2
  %conv158.31369 = zext i16 %471 to i32
  %indvars.iv.next1205.3 = add nuw nsw i64 %466, 2
  %pos_y150.1.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.3, i32 5
  %472 = load i32, ptr %pos_y150.1.3, align 4
  %idxprom151.1.3 = sext i32 %472 to i64
  %arrayidx152.1.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.1.3
  %473 = load ptr, ptr %arrayidx152.1.3, align 8
  %pos_x155.1.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.3, i32 4
  %474 = load i32, ptr %pos_x155.1.3, align 8
  %idxprom156.1.3 = sext i32 %474 to i64
  %arrayidx157.1.3 = getelementptr inbounds i16, ptr %473, i64 %idxprom156.1.3
  %475 = load i16, ptr %arrayidx157.1.3, align 2
  %conv158.1.3 = zext i16 %475 to i32
  %add159.1.3 = add nuw nsw i32 %conv158.31369, %conv158.1.3
  %indvars.iv.next1205.1.3 = add nuw nsw i64 %466, 3
  %pos_y150.2.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.1.3, i32 5
  %476 = load i32, ptr %pos_y150.2.3, align 4
  %idxprom151.2.3 = sext i32 %476 to i64
  %arrayidx152.2.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.2.3
  %477 = load ptr, ptr %arrayidx152.2.3, align 8
  %pos_x155.2.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.1.3, i32 4
  %478 = load i32, ptr %pos_x155.2.3, align 8
  %idxprom156.2.3 = sext i32 %478 to i64
  %arrayidx157.2.3 = getelementptr inbounds i16, ptr %477, i64 %idxprom156.2.3
  %479 = load i16, ptr %arrayidx157.2.3, align 2
  %conv158.2.3 = zext i16 %479 to i32
  %add159.2.3 = add nuw nsw i32 %add159.1.3, %conv158.2.3
  %indvars.iv.next1205.2.3 = add nuw nsw i64 %466, 4
  %pos_y150.3.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.2.3, i32 5
  %480 = load i32, ptr %pos_y150.3.3, align 4
  %idxprom151.3.3 = sext i32 %480 to i64
  %arrayidx152.3.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom151.3.3
  %481 = load ptr, ptr %arrayidx152.3.3, align 8
  %pos_x155.3.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1205.2.3, i32 4
  %482 = load i32, ptr %pos_x155.3.3, align 8
  %idxprom156.3.3 = sext i32 %482 to i64
  %arrayidx157.3.3 = getelementptr inbounds i16, ptr %481, i64 %idxprom156.3.3
  %483 = load i16, ptr %arrayidx157.3.3, align 2
  %conv158.3.3 = zext i16 %483 to i32
  %add159.3.3 = add nuw nsw i32 %add159.2.3, %conv158.3.3
  br i1 %tobool301.not, label %if.then178.3, label %if.then167.3

if.then167.3:                                     ; preds = %for.cond143.preheader.3
  %add168.3 = add nuw nsw i32 %s0.11053.ph.3, 4
  %add169.3 = add nuw nsw i32 %add168.3, %add159.3.3
  %shr170.3 = lshr i32 %add169.3, 3
  br label %sw.epilog.3

if.then178.3:                                     ; preds = %for.cond143.preheader.3
  %add179.3 = add nuw nsw i32 %add159.3.3, 2
  %shr180.3 = lshr i32 %add179.3, 2
  br label %sw.epilog.3

sw.epilog.3:                                      ; preds = %if.then178.3, %if.then167.3, %if.end139.thread.3, %if.else.thread.3, %if.then237.3, %if.then231.3, %if.else204.3, %if.then295.3, %if.then290.3, %if.else266.3, %if.then361.3, %if.then349.3, %if.end320.thread.3, %if.else353.thread.3, %sw.epilog.2
  %s.0.3 = phi i32 [ %72, %sw.epilog.2 ], [ %shr352.3, %if.then349.3 ], [ %shr357.3, %if.else353.thread.3 ], [ %shr363.3, %if.then361.3 ], [ %shr292.3, %if.then290.3 ], [ %shr297.3, %if.then295.3 ], [ %shr233.3, %if.then231.3 ], [ %shr239.3, %if.then237.3 ], [ %shr170.3, %if.then167.3 ], [ %shr174.3, %if.else.thread.3 ], [ %shr180.3, %if.then178.3 ], [ %72, %if.else204.3 ], [ %72, %if.else266.3 ], [ %72, %if.end139.thread.3 ], [ %72, %if.end320.thread.3 ]
  %conv377.3 = trunc i32 %s.0.3 to i16
  %484 = zext i8 %386 to i64
  %485 = zext i8 %385 to i64
  %arrayidx384.31370 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %485, i64 %484
  %486 = insertelement <4 x i16> poison, i16 %conv377.3, i64 0
  %487 = shufflevector <4 x i16> %486, <4 x i16> poison, <4 x i32> zeroinitializer
  store <4 x i16> %487, ptr %arrayidx384.31370, align 2
  %indvars.iv.next1215.3 = add nuw nsw i64 %485, 1
  %arrayidx384.11219.3 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %indvars.iv.next1215.3, i64 %484
  store <4 x i16> %487, ptr %arrayidx384.11219.3, align 2
  %indvars.iv.next1215.1.3 = add nuw nsw i64 %485, 2
  %arrayidx384.21221.3 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %indvars.iv.next1215.1.3, i64 %484
  store <4 x i16> %487, ptr %arrayidx384.21221.3, align 2
  %indvars.iv.next1215.2.3 = add nuw nsw i64 %485, 3
  %arrayidx384.31223.3 = getelementptr inbounds [16 x [16 x i16]], ptr %arrayidx379, i64 0, i64 %indvars.iv.next1215.2.3, i64 %484
  store <4 x i16> %487, ptr %arrayidx384.31223.3, align 2
  %indvars.iv.next1379 = add nuw nsw i64 %indvars.iv1378, 1
  %exitcond1383.not = icmp eq i64 %indvars.iv.next1379, %wide.trip.count1382
  br i1 %exitcond1383.not, label %for.end396, label %for.cond99.preheader

for.end396:                                       ; preds = %sw.epilog.3, %for.body92
  br i1 %tobool397, label %if.then398, label %if.end423

if.then398:                                       ; preds = %for.end396
  %488 = load i32, ptr %pos_y308, align 4
  %idxprom400 = sext i32 %488 to i64
  %arrayidx401 = getelementptr inbounds ptr, ptr %69, i64 %idxprom400
  %489 = load ptr, ptr %arrayidx401, align 8
  %490 = load i32, ptr %pos_x311, align 4
  %idxprom403 = sext i32 %490 to i64
  %arrayidx404 = getelementptr inbounds i16, ptr %489, i64 %idxprom403
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 16 %hline, ptr align 2 %arrayidx404, i64 %mul, i1 false)
  br i1 %cmp4071098, label %if.end423.thread, label %for.body409.preheader

for.body409.preheader:                            ; preds = %if.then398
  br i1 %64, label %if.end423.loopexit.unr-lcssa, label %for.body409

for.body409:                                      ; preds = %for.body409.preheader, %for.body409
  %indvars.iv1384 = phi i64 [ %indvars.iv.next1385.1, %for.body409 ], [ 0, %for.body409.preheader ]
  %niter1591 = phi i64 [ %niter1591.next.1, %for.body409 ], [ 0, %for.body409.preheader ]
  %491 = load ptr, ptr @img, align 8
  %arrayidx415 = getelementptr inbounds %struct.ImageParameters, ptr %491, i64 0, i32 50, i64 %indvars.iv1430, i64 2, i64 %indvars.iv1384
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %arrayidx415, ptr nonnull align 16 %hline, i64 %mul, i1 false)
  %indvars.iv.next1385 = or i64 %indvars.iv1384, 1
  %492 = load ptr, ptr @img, align 8
  %arrayidx415.1 = getelementptr inbounds %struct.ImageParameters, ptr %492, i64 0, i32 50, i64 %indvars.iv1430, i64 2, i64 %indvars.iv.next1385
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %arrayidx415.1, ptr nonnull align 16 %hline, i64 %mul, i1 false)
  %indvars.iv.next1385.1 = add nuw nsw i64 %indvars.iv1384, 2
  %niter1591.next.1 = add i64 %niter1591, 2
  %niter1591.ncmp.1 = icmp eq i64 %niter1591.next.1, %unroll_iter1590
  br i1 %niter1591.ncmp.1, label %if.end423.loopexit.unr-lcssa, label %for.body409

if.end423.loopexit.unr-lcssa:                     ; preds = %for.body409, %for.body409.preheader
  %indvars.iv1384.unr = phi i64 [ 0, %for.body409.preheader ], [ %indvars.iv.next1385.1, %for.body409 ]
  br i1 %lcmp.mod1589.not, label %if.end423, label %for.body409.epil

for.body409.epil:                                 ; preds = %if.end423.loopexit.unr-lcssa
  %493 = load ptr, ptr @img, align 8
  %arrayidx415.epil = getelementptr inbounds %struct.ImageParameters, ptr %493, i64 0, i32 50, i64 %indvars.iv1430, i64 2, i64 %indvars.iv1384.unr
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %arrayidx415.epil, ptr nonnull align 16 %hline, i64 %mul, i1 false)
  br label %if.end423

if.end423:                                        ; preds = %for.body409.epil, %if.end423.loopexit.unr-lcssa, %for.end396
  br i1 %or.cond765, label %for.cond430.preheader, label %for.inc632

if.end423.thread:                                 ; preds = %if.then398
  br i1 %or.cond765, label %for.cond451.preheader, label %for.inc632

for.cond430.preheader:                            ; preds = %if.end423
  br i1 %cmp4071098, label %for.cond451.preheader, label %for.body433.preheader

for.body433.preheader:                            ; preds = %for.cond430.preheader
  br i1 %65, label %for.cond451.preheader.loopexit.unr-lcssa, label %for.body433

for.cond451.preheader.loopexit.unr-lcssa:         ; preds = %for.body433, %for.body433.preheader
  %indvars.iv1389.unr = phi i64 [ 0, %for.body433.preheader ], [ %indvars.iv.next1390.1, %for.body433 ]
  br i1 %lcmp.mod1593.not, label %for.cond451.preheader, label %for.body433.epil

for.body433.epil:                                 ; preds = %for.cond451.preheader.loopexit.unr-lcssa
  %indvars.iv.next1390.epil = add nuw nsw i64 %indvars.iv1389.unr, 1
  %pos_y437.epil = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1390.epil, i32 5
  %494 = load i32, ptr %pos_y437.epil, align 4
  %idxprom438.epil = sext i32 %494 to i64
  %arrayidx439.epil = getelementptr inbounds ptr, ptr %69, i64 %idxprom438.epil
  %495 = load ptr, ptr %arrayidx439.epil, align 8
  %pos_x443.epil = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1390.epil, i32 4
  %496 = load i32, ptr %pos_x443.epil, align 8
  %idxprom444.epil = sext i32 %496 to i64
  %arrayidx445.epil = getelementptr inbounds i16, ptr %495, i64 %idxprom444.epil
  %497 = load i16, ptr %arrayidx445.epil, align 2
  %arrayidx447.epil = getelementptr inbounds [16 x i16], ptr %vline, i64 0, i64 %indvars.iv1389.unr
  store i16 %497, ptr %arrayidx447.epil, align 2
  br label %for.cond451.preheader

for.cond451.preheader:                            ; preds = %for.body433.epil, %for.cond451.preheader.loopexit.unr-lcssa, %if.end423.thread, %for.cond430.preheader
  br i1 %cmp4521104, label %if.end475, label %for.cond455.preheader.lr.ph

for.cond455.preheader.lr.ph:                      ; preds = %for.cond451.preheader
  %498 = load ptr, ptr @img, align 8
  br i1 %cmp4071098, label %if.end475, label %for.cond455.preheader.us

for.cond455.preheader.us:                         ; preds = %for.cond455.preheader.lr.ph, %for.cond455.for.inc472_crit_edge.us
  %indvars.iv1399 = phi i64 [ %indvars.iv.next1400, %for.cond455.for.inc472_crit_edge.us ], [ 0, %for.cond455.preheader.lr.ph ]
  br i1 %66, label %for.cond455.for.inc472_crit_edge.us.unr-lcssa, label %for.body458.us

for.body458.us:                                   ; preds = %for.cond455.preheader.us, %for.body458.us
  %indvars.iv1394 = phi i64 [ %indvars.iv.next1395.3, %for.body458.us ], [ 0, %for.cond455.preheader.us ]
  %niter1599 = phi i64 [ %niter1599.next.3, %for.body458.us ], [ 0, %for.cond455.preheader.us ]
  %arrayidx460.us = getelementptr inbounds [16 x i16], ptr %vline, i64 0, i64 %indvars.iv1394
  %499 = load i16, ptr %arrayidx460.us, align 8
  %arrayidx468.us = getelementptr inbounds %struct.ImageParameters, ptr %498, i64 0, i32 50, i64 %indvars.iv1430, i64 1, i64 %indvars.iv1394, i64 %indvars.iv1399
  store i16 %499, ptr %arrayidx468.us, align 2
  %indvars.iv.next1395 = or i64 %indvars.iv1394, 1
  %arrayidx460.us.1 = getelementptr inbounds [16 x i16], ptr %vline, i64 0, i64 %indvars.iv.next1395
  %500 = load i16, ptr %arrayidx460.us.1, align 2
  %arrayidx468.us.1 = getelementptr inbounds %struct.ImageParameters, ptr %498, i64 0, i32 50, i64 %indvars.iv1430, i64 1, i64 %indvars.iv.next1395, i64 %indvars.iv1399
  store i16 %500, ptr %arrayidx468.us.1, align 2
  %indvars.iv.next1395.1 = or i64 %indvars.iv1394, 2
  %arrayidx460.us.2 = getelementptr inbounds [16 x i16], ptr %vline, i64 0, i64 %indvars.iv.next1395.1
  %501 = load i16, ptr %arrayidx460.us.2, align 4
  %arrayidx468.us.2 = getelementptr inbounds %struct.ImageParameters, ptr %498, i64 0, i32 50, i64 %indvars.iv1430, i64 1, i64 %indvars.iv.next1395.1, i64 %indvars.iv1399
  store i16 %501, ptr %arrayidx468.us.2, align 2
  %indvars.iv.next1395.2 = or i64 %indvars.iv1394, 3
  %arrayidx460.us.3 = getelementptr inbounds [16 x i16], ptr %vline, i64 0, i64 %indvars.iv.next1395.2
  %502 = load i16, ptr %arrayidx460.us.3, align 2
  %arrayidx468.us.3 = getelementptr inbounds %struct.ImageParameters, ptr %498, i64 0, i32 50, i64 %indvars.iv1430, i64 1, i64 %indvars.iv.next1395.2, i64 %indvars.iv1399
  store i16 %502, ptr %arrayidx468.us.3, align 2
  %indvars.iv.next1395.3 = add nuw nsw i64 %indvars.iv1394, 4
  %niter1599.next.3 = add i64 %niter1599, 4
  %niter1599.ncmp.3 = icmp eq i64 %niter1599.next.3, %unroll_iter1598
  br i1 %niter1599.ncmp.3, label %for.cond455.for.inc472_crit_edge.us.unr-lcssa, label %for.body458.us

for.cond455.for.inc472_crit_edge.us.unr-lcssa:    ; preds = %for.body458.us, %for.cond455.preheader.us
  %indvars.iv1394.unr = phi i64 [ 0, %for.cond455.preheader.us ], [ %indvars.iv.next1395.3, %for.body458.us ]
  br i1 %lcmp.mod1597.not, label %for.cond455.for.inc472_crit_edge.us, label %for.body458.us.epil

for.body458.us.epil:                              ; preds = %for.cond455.for.inc472_crit_edge.us.unr-lcssa, %for.body458.us.epil
  %indvars.iv1394.epil = phi i64 [ %indvars.iv.next1395.epil, %for.body458.us.epil ], [ %indvars.iv1394.unr, %for.cond455.for.inc472_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body458.us.epil ], [ 0, %for.cond455.for.inc472_crit_edge.us.unr-lcssa ]
  %arrayidx460.us.epil = getelementptr inbounds [16 x i16], ptr %vline, i64 0, i64 %indvars.iv1394.epil
  %503 = load i16, ptr %arrayidx460.us.epil, align 2
  %arrayidx468.us.epil = getelementptr inbounds %struct.ImageParameters, ptr %498, i64 0, i32 50, i64 %indvars.iv1430, i64 1, i64 %indvars.iv1394.epil, i64 %indvars.iv1399
  store i16 %503, ptr %arrayidx468.us.epil, align 2
  %indvars.iv.next1395.epil = add nuw nsw i64 %indvars.iv1394.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter1596
  br i1 %epil.iter.cmp.not, label %for.cond455.for.inc472_crit_edge.us, label %for.body458.us.epil

for.cond455.for.inc472_crit_edge.us:              ; preds = %for.body458.us.epil, %for.cond455.for.inc472_crit_edge.us.unr-lcssa
  %indvars.iv.next1400 = add nuw nsw i64 %indvars.iv1399, 1
  %exitcond1403.not = icmp eq i64 %indvars.iv.next1400, %wide.trip.count1402
  br i1 %exitcond1403.not, label %if.end475, label %for.cond455.preheader.us

for.body433:                                      ; preds = %for.body433.preheader, %for.body433
  %indvars.iv1389 = phi i64 [ %indvars.iv.next1390.1, %for.body433 ], [ 0, %for.body433.preheader ]
  %niter1595 = phi i64 [ %niter1595.next.1, %for.body433 ], [ 0, %for.body433.preheader ]
  %indvars.iv.next1390 = or i64 %indvars.iv1389, 1
  %pos_y437 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1390, i32 5
  %504 = load i32, ptr %pos_y437, align 4
  %idxprom438 = sext i32 %504 to i64
  %arrayidx439 = getelementptr inbounds ptr, ptr %69, i64 %idxprom438
  %505 = load ptr, ptr %arrayidx439, align 8
  %pos_x443 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1390, i32 4
  %506 = load i32, ptr %pos_x443, align 8
  %idxprom444 = sext i32 %506 to i64
  %arrayidx445 = getelementptr inbounds i16, ptr %505, i64 %idxprom444
  %507 = load i16, ptr %arrayidx445, align 2
  %arrayidx447 = getelementptr inbounds [16 x i16], ptr %vline, i64 0, i64 %indvars.iv1389
  store i16 %507, ptr %arrayidx447, align 4
  %indvars.iv.next1390.1 = add nuw nsw i64 %indvars.iv1389, 2
  %pos_y437.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1390.1, i32 5
  %508 = load i32, ptr %pos_y437.1, align 4
  %idxprom438.1 = sext i32 %508 to i64
  %arrayidx439.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom438.1
  %509 = load ptr, ptr %arrayidx439.1, align 8
  %pos_x443.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1390.1, i32 4
  %510 = load i32, ptr %pos_x443.1, align 16
  %idxprom444.1 = sext i32 %510 to i64
  %arrayidx445.1 = getelementptr inbounds i16, ptr %509, i64 %idxprom444.1
  %511 = load i16, ptr %arrayidx445.1, align 2
  %arrayidx447.1 = getelementptr inbounds [16 x i16], ptr %vline, i64 0, i64 %indvars.iv.next1390
  store i16 %511, ptr %arrayidx447.1, align 2
  %niter1595.next.1 = add i64 %niter1595, 2
  %niter1595.ncmp.1 = icmp eq i64 %niter1595.next.1, %unroll_iter1594
  br i1 %niter1595.ncmp.1, label %for.cond451.preheader.loopexit.unr-lcssa, label %for.body433

if.end475:                                        ; preds = %for.cond455.for.inc472_crit_edge.us, %for.cond455.preheader.lr.ph, %for.cond451.preheader
  br i1 %or.cond768, label %if.then485, label %for.inc632

if.then485:                                       ; preds = %if.end475
  %512 = load i16, ptr %arrayidx489, align 2
  %conv490 = zext i16 %512 to i32
  %513 = load i32, ptr %pos_y492, align 4
  %idxprom493 = sext i32 %513 to i64
  %arrayidx494 = getelementptr inbounds ptr, ptr %69, i64 %idxprom493
  %514 = load ptr, ptr %arrayidx494, align 8
  %515 = load i32, ptr %pos_x496, align 16
  %idxprom497 = sext i32 %515 to i64
  %arrayidx498 = getelementptr inbounds i16, ptr %514, i64 %idxprom497
  %516 = load i16, ptr %arrayidx498, align 2
  %conv499 = zext i16 %516 to i32
  %sub500 = sub nsw i32 %conv490, %conv499
  %mul501 = mul nsw i32 %sub500, %shr486
  br i1 %cmp5051106, label %for.body507.preheader, label %for.end525

for.body507.preheader:                            ; preds = %if.then485
  br i1 %min.iters.check1547, label %for.body507.preheader1578, label %vector.ph1548

vector.ph1548:                                    ; preds = %for.body507.preheader
  %517 = insertelement <4 x i32> <i32 poison, i32 0, i32 0, i32 0>, i32 %mul501, i64 0
  br label %vector.body1553

vector.body1553:                                  ; preds = %vector.body1553, %vector.ph1548
  %index1554 = phi i64 [ 0, %vector.ph1548 ], [ %index.next1567, %vector.body1553 ]
  %vec.ind1555 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph1548 ], [ %vec.ind.next1558, %vector.body1553 ]
  %vec.phi1559 = phi <4 x i32> [ %517, %vector.ph1548 ], [ %537, %vector.body1553 ]
  %vec.phi1560 = phi <4 x i32> [ zeroinitializer, %vector.ph1548 ], [ %538, %vector.body1553 ]
  %518 = add nsw i64 %index1554, %57
  %519 = getelementptr inbounds [16 x i16], ptr %hline, i64 0, i64 %518
  %wide.load1561 = load <4 x i16>, ptr %519, align 2
  %520 = getelementptr inbounds i16, ptr %519, i64 4
  %wide.load1562 = load <4 x i16>, ptr %520, align 2
  %521 = zext <4 x i16> %wide.load1561 to <4 x i32>
  %522 = zext <4 x i16> %wide.load1562 to <4 x i32>
  %523 = sub nsw i64 %58, %index1554
  %524 = getelementptr inbounds [16 x i16], ptr %hline, i64 0, i64 %523
  %525 = getelementptr inbounds i16, ptr %524, i64 -3
  %wide.load1563 = load <4 x i16>, ptr %525, align 2
  %reverse1564 = shufflevector <4 x i16> %wide.load1563, <4 x i16> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %526 = getelementptr inbounds i16, ptr %524, i64 -7
  %wide.load1565 = load <4 x i16>, ptr %526, align 2
  %reverse1566 = shufflevector <4 x i16> %wide.load1565, <4 x i16> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %527 = zext <4 x i16> %reverse1564 to <4 x i32>
  %528 = zext <4 x i16> %reverse1566 to <4 x i32>
  %529 = sub nsw <4 x i32> %521, %527
  %530 = sub nsw <4 x i32> %522, %528
  %531 = trunc <4 x i64> %vec.ind1555 to <4 x i32>
  %532 = add <4 x i32> %531, <i32 1, i32 1, i32 1, i32 1>
  %533 = trunc <4 x i64> %vec.ind1555 to <4 x i32>
  %534 = add <4 x i32> %533, <i32 5, i32 5, i32 5, i32 5>
  %535 = mul nsw <4 x i32> %529, %532
  %536 = mul nsw <4 x i32> %530, %534
  %537 = add <4 x i32> %535, %vec.phi1559
  %538 = add <4 x i32> %536, %vec.phi1560
  %index.next1567 = add nuw i64 %index1554, 8
  %vec.ind.next1558 = add <4 x i64> %vec.ind1555, <i64 8, i64 8, i64 8, i64 8>
  %539 = icmp eq i64 %index.next1567, %n.vec1550
  br i1 %539, label %middle.block1545, label %vector.body1553

middle.block1545:                                 ; preds = %vector.body1553
  %bin.rdx1568 = add <4 x i32> %538, %537
  %540 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %bin.rdx1568)
  br i1 %cmp.n1552, label %for.end525, label %for.body507.preheader1578

for.body507.preheader1578:                        ; preds = %for.body507.preheader, %middle.block1545
  %indvars.iv1404.ph = phi i64 [ 0, %for.body507.preheader ], [ %n.vec1550, %middle.block1545 ]
  %ih.01107.ph = phi i32 [ %mul501, %for.body507.preheader ], [ %540, %middle.block1545 ]
  br label %for.body507

for.body507:                                      ; preds = %for.body507.preheader1578, %for.body507
  %indvars.iv1404 = phi i64 [ %indvars.iv.next1405, %for.body507 ], [ %indvars.iv1404.ph, %for.body507.preheader1578 ]
  %ih.01107 = phi i32 [ %add522, %for.body507 ], [ %ih.01107.ph, %for.body507.preheader1578 ]
  %indvars.iv.next1405 = add nuw nsw i64 %indvars.iv1404, 1
  %541 = add nsw i64 %indvars.iv1404, %57
  %arrayidx512 = getelementptr inbounds [16 x i16], ptr %hline, i64 0, i64 %541
  %542 = load i16, ptr %arrayidx512, align 2
  %conv513 = zext i16 %542 to i32
  %543 = sub nsw i64 %58, %indvars.iv1404
  %arrayidx518 = getelementptr inbounds [16 x i16], ptr %hline, i64 0, i64 %543
  %544 = load i16, ptr %arrayidx518, align 2
  %conv519 = zext i16 %544 to i32
  %sub520 = sub nsw i32 %conv513, %conv519
  %545 = trunc i64 %indvars.iv.next1405 to i32
  %mul521 = mul nsw i32 %sub520, %545
  %add522 = add nsw i32 %mul521, %ih.01107
  %exitcond1411.not = icmp eq i64 %indvars.iv.next1405, %wide.trip.count1410
  br i1 %exitcond1411.not, label %for.end525, label %for.body507

for.end525:                                       ; preds = %for.body507, %middle.block1545, %if.then485
  %ih.0.lcssa = phi i32 [ %mul501, %if.then485 ], [ %540, %middle.block1545 ], [ %add522, %for.body507 ]
  %546 = load i16, ptr %arrayidx529, align 2
  %conv530 = zext i16 %546 to i32
  %sub540 = sub nsw i32 %conv530, %conv499
  %mul541 = mul nsw i32 %sub540, %shr526
  br i1 %cmp5451110, label %for.body547.preheader, label %for.end565

for.body547.preheader:                            ; preds = %for.end525
  br i1 %min.iters.check1528, label %for.body547.preheader1577, label %vector.ph1529

vector.ph1529:                                    ; preds = %for.body547.preheader
  %547 = insertelement <4 x i32> <i32 poison, i32 0, i32 0, i32 0>, i32 %mul541, i64 0
  br label %vector.body1534

vector.body1534:                                  ; preds = %vector.body1534, %vector.ph1529
  %index1535 = phi i64 [ 0, %vector.ph1529 ], [ %index.next1544, %vector.body1534 ]
  %vec.ind1536 = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %vector.ph1529 ], [ %vec.ind.next1538, %vector.body1534 ]
  %vec.phi = phi <4 x i32> [ %547, %vector.ph1529 ], [ %567, %vector.body1534 ]
  %vec.phi1539 = phi <4 x i32> [ zeroinitializer, %vector.ph1529 ], [ %568, %vector.body1534 ]
  %548 = add nsw i64 %index1535, %60
  %549 = getelementptr inbounds [16 x i16], ptr %vline, i64 0, i64 %548
  %wide.load = load <4 x i16>, ptr %549, align 2
  %550 = getelementptr inbounds i16, ptr %549, i64 4
  %wide.load1540 = load <4 x i16>, ptr %550, align 2
  %551 = zext <4 x i16> %wide.load to <4 x i32>
  %552 = zext <4 x i16> %wide.load1540 to <4 x i32>
  %553 = sub nsw i64 %61, %index1535
  %554 = getelementptr inbounds [16 x i16], ptr %vline, i64 0, i64 %553
  %555 = getelementptr inbounds i16, ptr %554, i64 -3
  %wide.load1541 = load <4 x i16>, ptr %555, align 2
  %reverse = shufflevector <4 x i16> %wide.load1541, <4 x i16> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %556 = getelementptr inbounds i16, ptr %554, i64 -7
  %wide.load1542 = load <4 x i16>, ptr %556, align 2
  %reverse1543 = shufflevector <4 x i16> %wide.load1542, <4 x i16> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %557 = zext <4 x i16> %reverse to <4 x i32>
  %558 = zext <4 x i16> %reverse1543 to <4 x i32>
  %559 = sub nsw <4 x i32> %551, %557
  %560 = sub nsw <4 x i32> %552, %558
  %561 = trunc <4 x i64> %vec.ind1536 to <4 x i32>
  %562 = add <4 x i32> %561, <i32 1, i32 1, i32 1, i32 1>
  %563 = trunc <4 x i64> %vec.ind1536 to <4 x i32>
  %564 = add <4 x i32> %563, <i32 5, i32 5, i32 5, i32 5>
  %565 = mul nsw <4 x i32> %559, %562
  %566 = mul nsw <4 x i32> %560, %564
  %567 = add <4 x i32> %565, %vec.phi
  %568 = add <4 x i32> %566, %vec.phi1539
  %index.next1544 = add nuw i64 %index1535, 8
  %vec.ind.next1538 = add <4 x i64> %vec.ind1536, <i64 8, i64 8, i64 8, i64 8>
  %569 = icmp eq i64 %index.next1544, %n.vec1531
  br i1 %569, label %middle.block1526, label %vector.body1534

middle.block1526:                                 ; preds = %vector.body1534
  %bin.rdx = add <4 x i32> %568, %567
  %570 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %bin.rdx)
  br i1 %cmp.n1533, label %for.end565, label %for.body547.preheader1577

for.body547.preheader1577:                        ; preds = %for.body547.preheader, %middle.block1526
  %indvars.iv1412.ph = phi i64 [ 0, %for.body547.preheader ], [ %n.vec1531, %middle.block1526 ]
  %iv.01111.ph = phi i32 [ %mul541, %for.body547.preheader ], [ %570, %middle.block1526 ]
  br label %for.body547

for.body547:                                      ; preds = %for.body547.preheader1577, %for.body547
  %indvars.iv1412 = phi i64 [ %indvars.iv.next1413, %for.body547 ], [ %indvars.iv1412.ph, %for.body547.preheader1577 ]
  %iv.01111 = phi i32 [ %add562, %for.body547 ], [ %iv.01111.ph, %for.body547.preheader1577 ]
  %indvars.iv.next1413 = add nuw nsw i64 %indvars.iv1412, 1
  %571 = add nsw i64 %indvars.iv1412, %60
  %arrayidx552 = getelementptr inbounds [16 x i16], ptr %vline, i64 0, i64 %571
  %572 = load i16, ptr %arrayidx552, align 2
  %conv553 = zext i16 %572 to i32
  %573 = sub nsw i64 %61, %indvars.iv1412
  %arrayidx558 = getelementptr inbounds [16 x i16], ptr %vline, i64 0, i64 %573
  %574 = load i16, ptr %arrayidx558, align 2
  %conv559 = zext i16 %574 to i32
  %sub560 = sub nsw i32 %conv553, %conv559
  %575 = trunc i64 %indvars.iv.next1413 to i32
  %mul561 = mul nsw i32 %sub560, %575
  %add562 = add nsw i32 %mul561, %iv.01111
  %exitcond1419.not = icmp eq i64 %indvars.iv.next1413, %wide.trip.count1418
  br i1 %exitcond1419.not, label %for.end565, label %for.body547

for.end565:                                       ; preds = %for.body547, %middle.block1526, %for.end525
  %iv.0.lcssa = phi i32 [ %mul541, %for.end525 ], [ %570, %middle.block1526 ], [ %add562, %for.body547 ]
  %mul569 = mul nsw i32 %ih.0.lcssa, %cond568
  %add571 = add nsw i32 %mul569, %mul570
  %shr575 = ashr i32 %add571, %cond574
  %mul579 = mul nsw i32 %iv.0.lcssa, %cond578
  %add581 = add nsw i32 %mul579, %mul580
  %shr585 = ashr i32 %add581, %cond584
  br i1 %cmp4071098, label %for.inc632, label %for.cond600.preheader.lr.ph

for.cond600.preheader.lr.ph:                      ; preds = %for.end565
  %add594 = add nuw nsw i32 %conv530, %conv490
  %mul595 = shl nuw nsw i32 %add594, 4
  %576 = load ptr, ptr @img, align 8
  %add608 = add nuw nsw i32 %mul595, 16
  br i1 %cmp4521104, label %for.inc632, label %for.cond600.preheader.lr.ph.split.us

for.cond600.preheader.lr.ph.split.us:             ; preds = %for.cond600.preheader.lr.ph
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters, ptr %576, i64 0, i32 157
  %577 = load i32, ptr %max_imgpel_value_uv, align 4
  %broadcast.splatinsert1520 = insertelement <8 x i32> poison, i32 %shr575, i64 0
  %broadcast.splat1521 = shufflevector <8 x i32> %broadcast.splatinsert1520, <8 x i32> poison, <8 x i32> zeroinitializer
  %broadcast.splatinsert1524 = insertelement <8 x i32> poison, i32 %577, i64 0
  %broadcast.splat1525 = shufflevector <8 x i32> %broadcast.splatinsert1524, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %for.cond600.preheader.us

for.cond600.preheader.us:                         ; preds = %for.cond600.for.inc628_crit_edge.us, %for.cond600.preheader.lr.ph.split.us
  %indvars.iv1425 = phi i64 [ %indvars.iv.next1426, %for.cond600.for.inc628_crit_edge.us ], [ 0, %for.cond600.preheader.lr.ph.split.us ]
  %578 = trunc i64 %indvars.iv1425 to i32
  %reass.sub = sub i32 %578, %shr526
  %add611.us = add i32 %reass.sub, 1
  %mul612.us = mul nsw i32 %add611.us, %shr585
  %add613.us = add i32 %add608, %mul612.us
  br i1 %min.iters.check, label %for.body603.us.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.cond600.preheader.us
  %broadcast.splatinsert1522 = insertelement <8 x i32> poison, i32 %add613.us, i64 0
  %broadcast.splat1523 = shufflevector <8 x i32> %broadcast.splatinsert1522, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <8 x i32> [ <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %579 = sub <8 x i32> %vec.ind, %broadcast.splat
  %580 = add <8 x i32> %579, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %581 = mul nsw <8 x i32> %580, %broadcast.splat1521
  %582 = add <8 x i32> %broadcast.splat1523, %581
  %583 = ashr <8 x i32> %582, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>
  %584 = call <8 x i32> @llvm.smax.v8i32(<8 x i32> %583, <8 x i32> zeroinitializer)
  %585 = call <8 x i32> @llvm.smin.v8i32(<8 x i32> %584, <8 x i32> %broadcast.splat1525)
  %586 = trunc <8 x i32> %585 to <8 x i16>
  %587 = getelementptr inbounds %struct.ImageParameters, ptr %576, i64 0, i32 50, i64 %indvars.iv1430, i64 3, i64 %indvars.iv1425, i64 %index
  store <8 x i16> %586, ptr %587, align 2
  %index.next = add nuw i64 %index, 8
  %vec.ind.next = add <8 x i32> %vec.ind, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %588 = icmp eq i64 %index.next, %n.vec
  br i1 %588, label %middle.block, label %vector.body

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.cond600.for.inc628_crit_edge.us, label %for.body603.us.preheader

for.body603.us.preheader:                         ; preds = %for.cond600.preheader.us, %middle.block
  %indvars.iv1420.ph = phi i64 [ 0, %for.cond600.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body603.us

for.body603.us:                                   ; preds = %for.body603.us.preheader, %for.body603.us
  %indvars.iv1420 = phi i64 [ %indvars.iv.next1421, %for.body603.us ], [ %indvars.iv1420.ph, %for.body603.us.preheader ]
  %589 = trunc i64 %indvars.iv1420 to i32
  %reass.sub1145 = sub i32 %589, %shr486
  %add606.us = add i32 %reass.sub1145, 1
  %mul607.us = mul nsw i32 %add606.us, %shr575
  %add614.us = add i32 %add613.us, %mul607.us
  %shr615.us = ashr i32 %add614.us, 5
  %cond.i.i.us = call i32 @llvm.smax.i32(i32 %shr615.us, i32 0)
  %cond.i4.i.us = call i32 @llvm.smin.i32(i32 %cond.i.i.us, i32 %577)
  %conv616.us = trunc i32 %cond.i4.i.us to i16
  %arrayidx624.us = getelementptr inbounds %struct.ImageParameters, ptr %576, i64 0, i32 50, i64 %indvars.iv1430, i64 3, i64 %indvars.iv1425, i64 %indvars.iv1420
  store i16 %conv616.us, ptr %arrayidx624.us, align 2
  %indvars.iv.next1421 = add nuw nsw i64 %indvars.iv1420, 1
  %exitcond1424.not = icmp eq i64 %indvars.iv.next1421, %wide.trip.count1423
  br i1 %exitcond1424.not, label %for.cond600.for.inc628_crit_edge.us, label %for.body603.us

for.cond600.for.inc628_crit_edge.us:              ; preds = %for.body603.us, %middle.block
  %indvars.iv.next1426 = add nuw nsw i64 %indvars.iv1425, 1
  %exitcond1429.not = icmp eq i64 %indvars.iv.next1426, %wide.trip.count1428
  br i1 %exitcond1429.not, label %for.inc632, label %for.cond600.preheader.us

for.inc632:                                       ; preds = %for.cond600.for.inc628_crit_edge.us, %for.cond600.preheader.lr.ph, %if.end423.thread, %for.end565, %if.end423, %if.end475
  br i1 %cmp91, label %for.body92, label %for.end634

for.end634:                                       ; preds = %for.inc632
  %590 = load ptr, ptr @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, ptr %590, i64 0, i32 113
  %591 = load i32, ptr %rdopt, align 8
  %tobool635.not = icmp eq i32 %591, 0
  br i1 %tobool635.not, label %for.cond637.preheader, label %if.end763

for.cond637.preheader:                            ; preds = %for.end634
  br i1 %cmp4071098, label %for.cond646.preheader, label %for.body640.preheader

for.body640.preheader:                            ; preds = %for.cond637.preheader
  %wide.trip.count1436 = zext i32 %4 to i64
  br label %for.body640

for.cond646.preheader:                            ; preds = %for.body640, %for.cond637.preheader
  %or.cond773 = select i1 %or.cond765, i1 %tobool397, i1 false
  %or.cond774 = select i1 %or.cond773, i1 %tobool484, i1 false
  %brmerge = select i1 %cmp4071098, i1 true, i1 %cmp4521104
  br label %for.body649

for.body640:                                      ; preds = %for.body640.preheader, %for.body640
  %indvars.iv1433 = phi i64 [ 0, %for.body640.preheader ], [ %indvars.iv.next1434, %for.body640 ]
  %592 = load ptr, ptr @getNeighbour, align 8
  %arrayidx642 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv1433
  %593 = trunc i64 %indvars.iv1433 to i32
  call void %592(i32 noundef %2, i32 noundef 0, i32 noundef %593, i32 noundef 1, ptr noundef nonnull %arrayidx642) #17
  %indvars.iv.next1434 = add nuw nsw i64 %indvars.iv1433, 1
  %exitcond1437.not = icmp eq i64 %indvars.iv.next1434, %wide.trip.count1436
  br i1 %exitcond1437.not, label %for.cond646.preheader, label %for.body640

for.body649:                                      ; preds = %for.cond646.preheader, %for.inc760
  %indvars.iv1491 = phi i64 [ 0, %for.cond646.preheader ], [ %indvars.iv.next1492, %for.inc760 ]
  %min_cost.01144 = phi i32 [ 2147483647, %for.cond646.preheader ], [ %min_cost.1, %for.inc760 ]
  %best_mode.01143 = phi i32 [ 0, %for.cond646.preheader ], [ %best_mode.1, %for.inc760 ]
  %594 = load ptr, ptr @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, ptr %594, i64 0, i32 5
  %595 = load i32, ptr %type, align 4
  %cmp650.not = icmp eq i32 %595, 2
  %.pre = load ptr, ptr @input, align 8
  br i1 %cmp650.not, label %lor.lhs.false, label %land.lhs.true653

lor.lhs.false:                                    ; preds = %for.body649
  %IntraDisableInterOnly = getelementptr inbounds %struct.InputParameters, ptr %.pre, i64 0, i32 84
  %596 = load i32, ptr %IntraDisableInterOnly, align 8
  %tobool652.not = icmp eq i32 %596, 0
  br i1 %tobool652.not, label %land.lhs.true653, label %if.end660

land.lhs.true653:                                 ; preds = %lor.lhs.false, %for.body649
  %ChromaIntraDisable = getelementptr inbounds %struct.InputParameters, ptr %.pre, i64 0, i32 90
  %597 = load i32, ptr %ChromaIntraDisable, align 8
  %cmp654 = icmp ne i32 %597, 1
  %cmp657 = icmp eq i64 %indvars.iv1491, 0
  %or.cond769.not1146 = or i1 %cmp657, %cmp654
  %cmp661 = icmp ne i64 %indvars.iv1491, 2
  %or.cond770 = select i1 %cmp661, i1 true, i1 %tobool397
  %or.cond = select i1 %or.cond769.not1146, i1 %or.cond770, i1 false
  br i1 %or.cond, label %lor.lhs.false665, label %for.inc760

if.end660:                                        ; preds = %lor.lhs.false
  %cmp661.old = icmp ne i64 %indvars.iv1491, 2
  %or.cond770.old = select i1 %cmp661.old, i1 true, i1 %tobool397
  br i1 %or.cond770.old, label %lor.lhs.false665, label %for.inc760

lor.lhs.false665:                                 ; preds = %land.lhs.true653, %if.end660
  %598 = trunc i64 %indvars.iv1491 to i32
  switch i32 %598, label %if.end688 [
    i32 1, label %land.lhs.true668
    i32 3, label %land.lhs.true677
  ]

land.lhs.true668:                                 ; preds = %lor.lhs.false665
  br i1 %or.cond765, label %if.end688, label %for.inc760

land.lhs.true677:                                 ; preds = %lor.lhs.false665
  br i1 %or.cond774, label %if.end688, label %for.inc760

if.end688:                                        ; preds = %land.lhs.true668, %lor.lhs.false665, %land.lhs.true677
  br i1 %brmerge, label %for.end755, label %for.body692.us.us

for.body692.us.us:                                ; preds = %if.end688
  %599 = load ptr, ptr @imgUV_org, align 8
  %600 = load ptr, ptr %599, align 8
  br label %for.cond699.preheader.us.us.us

for.cond699.preheader.us.us.us:                   ; preds = %for.cond699.for.inc750_crit_edge.us.us.us, %for.body692.us.us
  %indvars.iv1449 = phi i64 [ %indvars.iv.next1450, %for.cond699.for.inc750_crit_edge.us.us.us ], [ 0, %for.body692.us.us ]
  %cost.11131.us.us.us = phi i32 [ %add746.us.us.us, %for.cond699.for.inc750_crit_edge.us.us.us ], [ 0, %for.body692.us.us ]
  %pos_y715.us.us.us = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv1449, i32 5
  %pos_x720.us.us.us = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv1449, i32 4
  %indvars.iv.next1452 = or i64 %indvars.iv1449, 1
  %pos_y715.us.us.us.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1452, i32 5
  %pos_x720.us.us.us.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1452, i32 4
  %indvars.iv.next1452.1 = or i64 %indvars.iv1449, 2
  %pos_y715.us.us.us.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1452.1, i32 5
  %pos_x720.us.us.us.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1452.1, i32 4
  %indvars.iv.next1452.2 = or i64 %indvars.iv1449, 3
  %pos_y715.us.us.us.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1452.2, i32 5
  %pos_x720.us.us.us.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1452.2, i32 4
  br label %for.cond703.preheader.us.us.us

for.cond703.preheader.us.us.us:                   ; preds = %for.cond703.preheader.us.us.us, %for.cond699.preheader.us.us.us
  %indvars.iv1438 = phi i64 [ %indvars.iv.next1439, %for.cond703.preheader.us.us.us ], [ 0, %for.cond699.preheader.us.us.us ]
  %cost.21127.us.us.us = phi i32 [ %add746.us.us.us, %for.cond703.preheader.us.us.us ], [ %cost.11131.us.us.us, %for.cond699.preheader.us.us.us ]
  %601 = load ptr, ptr @img, align 8
  %602 = load i32, ptr %pos_y715.us.us.us, align 4
  %idxprom716.us.us.us = sext i32 %602 to i64
  %arrayidx717.us.us.us = getelementptr inbounds ptr, ptr %600, i64 %idxprom716.us.us.us
  %603 = load ptr, ptr %arrayidx717.us.us.us, align 8
  %604 = load i32, ptr %pos_x720.us.us.us, align 16
  %605 = sext i32 %604 to i64
  %606 = add nsw i64 %indvars.iv1438, %605
  %arrayidx723.us.us.us = getelementptr inbounds i16, ptr %603, i64 %606
  %arrayidx733.us.us.us = getelementptr inbounds %struct.ImageParameters, ptr %601, i64 0, i32 50, i64 0, i64 %indvars.iv1491, i64 %indvars.iv1449, i64 %indvars.iv1438
  %607 = load <4 x i16>, ptr %arrayidx723.us.us.us, align 2
  %608 = zext <4 x i16> %607 to <4 x i32>
  %609 = load <4 x i16>, ptr %arrayidx733.us.us.us, align 2
  %610 = zext <4 x i16> %609 to <4 x i32>
  %611 = sub nsw <4 x i32> %608, %610
  store <4 x i32> %611, ptr @diff, align 16
  %612 = load i32, ptr %pos_y715.us.us.us.1, align 4
  %idxprom716.us.us.us.1 = sext i32 %612 to i64
  %arrayidx717.us.us.us.1 = getelementptr inbounds ptr, ptr %600, i64 %idxprom716.us.us.us.1
  %613 = load ptr, ptr %arrayidx717.us.us.us.1, align 8
  %614 = load i32, ptr %pos_x720.us.us.us.1, align 8
  %615 = sext i32 %614 to i64
  %616 = add nsw i64 %indvars.iv1438, %615
  %arrayidx723.us.us.us.11462 = getelementptr inbounds i16, ptr %613, i64 %616
  %arrayidx733.us.us.us.11464 = getelementptr inbounds %struct.ImageParameters, ptr %601, i64 0, i32 50, i64 0, i64 %indvars.iv1491, i64 %indvars.iv.next1452, i64 %indvars.iv1438
  %617 = load <4 x i16>, ptr %arrayidx723.us.us.us.11462, align 2
  %618 = zext <4 x i16> %617 to <4 x i32>
  %619 = load <4 x i16>, ptr %arrayidx733.us.us.us.11464, align 2
  %620 = zext <4 x i16> %619 to <4 x i32>
  %621 = sub nsw <4 x i32> %618, %620
  store <4 x i32> %621, ptr getelementptr inbounds ([16 x i32], ptr @diff, i64 0, i64 4), align 16
  %622 = load i32, ptr %pos_y715.us.us.us.2, align 4
  %idxprom716.us.us.us.2 = sext i32 %622 to i64
  %arrayidx717.us.us.us.2 = getelementptr inbounds ptr, ptr %600, i64 %idxprom716.us.us.us.2
  %623 = load ptr, ptr %arrayidx717.us.us.us.2, align 8
  %624 = load i32, ptr %pos_x720.us.us.us.2, align 16
  %625 = sext i32 %624 to i64
  %626 = add nsw i64 %indvars.iv1438, %625
  %arrayidx723.us.us.us.21470 = getelementptr inbounds i16, ptr %623, i64 %626
  %arrayidx733.us.us.us.21472 = getelementptr inbounds %struct.ImageParameters, ptr %601, i64 0, i32 50, i64 0, i64 %indvars.iv1491, i64 %indvars.iv.next1452.1, i64 %indvars.iv1438
  %627 = load <4 x i16>, ptr %arrayidx723.us.us.us.21470, align 2
  %628 = zext <4 x i16> %627 to <4 x i32>
  %629 = load <4 x i16>, ptr %arrayidx733.us.us.us.21472, align 2
  %630 = zext <4 x i16> %629 to <4 x i32>
  %631 = sub nsw <4 x i32> %628, %630
  store <4 x i32> %631, ptr getelementptr inbounds ([16 x i32], ptr @diff, i64 0, i64 8), align 16
  %632 = load i32, ptr %pos_y715.us.us.us.3, align 4
  %idxprom716.us.us.us.3 = sext i32 %632 to i64
  %arrayidx717.us.us.us.3 = getelementptr inbounds ptr, ptr %600, i64 %idxprom716.us.us.us.3
  %633 = load ptr, ptr %arrayidx717.us.us.us.3, align 8
  %634 = load i32, ptr %pos_x720.us.us.us.3, align 8
  %635 = sext i32 %634 to i64
  %636 = add nsw i64 %indvars.iv1438, %635
  %arrayidx723.us.us.us.31478 = getelementptr inbounds i16, ptr %633, i64 %636
  %arrayidx733.us.us.us.31480 = getelementptr inbounds %struct.ImageParameters, ptr %601, i64 0, i32 50, i64 0, i64 %indvars.iv1491, i64 %indvars.iv.next1452.2, i64 %indvars.iv1438
  %637 = load <4 x i16>, ptr %arrayidx723.us.us.us.31478, align 2
  %638 = zext <4 x i16> %637 to <4 x i32>
  %639 = load <4 x i16>, ptr %arrayidx733.us.us.us.31480, align 2
  %640 = zext <4 x i16> %639 to <4 x i32>
  %641 = sub nsw <4 x i32> %638, %640
  store <4 x i32> %641, ptr getelementptr inbounds ([16 x i32], ptr @diff, i64 0, i64 12), align 16
  %call745.us.us.us = call i32 @distortion4x4(ptr noundef nonnull @diff) #17
  %add746.us.us.us = add nsw i32 %call745.us.us.us, %cost.21127.us.us.us
  %indvars.iv.next1439 = add nuw nsw i64 %indvars.iv1438, 4
  %indvars = trunc i64 %indvars.iv.next1439 to i32
  %cmp700.us.us.us = icmp sgt i32 %3, %indvars
  br i1 %cmp700.us.us.us, label %for.cond703.preheader.us.us.us, label %for.cond699.for.inc750_crit_edge.us.us.us

for.cond699.for.inc750_crit_edge.us.us.us:        ; preds = %for.cond703.preheader.us.us.us
  %indvars.iv.next1450 = add nuw i64 %indvars.iv1449, 4
  %indvars1485 = trunc i64 %indvars.iv.next1450 to i32
  %cmp696.us.us.us = icmp sgt i32 %4, %indvars1485
  br i1 %cmp696.us.us.us, label %for.cond699.preheader.us.us.us, label %for.cond695.for.inc753_crit_edge.split.us.us.us

for.cond695.for.inc753_crit_edge.split.us.us.us:  ; preds = %for.cond699.for.inc750_crit_edge.us.us.us
  %642 = load ptr, ptr @imgUV_org, align 8
  %arrayidx694.us.us.1 = getelementptr inbounds ptr, ptr %642, i64 1
  %643 = load ptr, ptr %arrayidx694.us.us.1, align 8
  br label %for.cond699.preheader.us.us.us.1

for.cond699.preheader.us.us.us.1:                 ; preds = %for.cond699.for.inc750_crit_edge.us.us.us.1, %for.cond695.for.inc753_crit_edge.split.us.us.us
  %indvars.iv1449.1 = phi i64 [ %indvars.iv.next1450.1, %for.cond699.for.inc750_crit_edge.us.us.us.1 ], [ 0, %for.cond695.for.inc753_crit_edge.split.us.us.us ]
  %cost.11131.us.us.us.1 = phi i32 [ %add746.us.us.us.1, %for.cond699.for.inc750_crit_edge.us.us.us.1 ], [ %add746.us.us.us, %for.cond695.for.inc753_crit_edge.split.us.us.us ]
  %pos_y715.us.us.us.11600 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv1449.1, i32 5
  %pos_x720.us.us.us.11601 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv1449.1, i32 4
  %indvars.iv.next1452.11602 = or i64 %indvars.iv1449.1, 1
  %pos_y715.us.us.us.1.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1452.11602, i32 5
  %pos_x720.us.us.us.1.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1452.11602, i32 4
  %indvars.iv.next1452.1.1 = or i64 %indvars.iv1449.1, 2
  %pos_y715.us.us.us.2.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1452.1.1, i32 5
  %pos_x720.us.us.us.2.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1452.1.1, i32 4
  %indvars.iv.next1452.2.1 = or i64 %indvars.iv1449.1, 3
  %pos_y715.us.us.us.3.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1452.2.1, i32 5
  %pos_x720.us.us.us.3.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next1452.2.1, i32 4
  br label %for.cond703.preheader.us.us.us.1

for.cond703.preheader.us.us.us.1:                 ; preds = %for.cond703.preheader.us.us.us.1, %for.cond699.preheader.us.us.us.1
  %indvars.iv1438.1 = phi i64 [ %indvars.iv.next1439.1, %for.cond703.preheader.us.us.us.1 ], [ 0, %for.cond699.preheader.us.us.us.1 ]
  %cost.21127.us.us.us.1 = phi i32 [ %add746.us.us.us.1, %for.cond703.preheader.us.us.us.1 ], [ %cost.11131.us.us.us.1, %for.cond699.preheader.us.us.us.1 ]
  %644 = load ptr, ptr @img, align 8
  %645 = load i32, ptr %pos_y715.us.us.us.11600, align 4
  %idxprom716.us.us.us.11603 = sext i32 %645 to i64
  %arrayidx717.us.us.us.11604 = getelementptr inbounds ptr, ptr %643, i64 %idxprom716.us.us.us.11603
  %646 = load ptr, ptr %arrayidx717.us.us.us.11604, align 8
  %647 = load i32, ptr %pos_x720.us.us.us.11601, align 16
  %648 = sext i32 %647 to i64
  %649 = add nsw i64 %indvars.iv1438.1, %648
  %arrayidx723.us.us.us.1 = getelementptr inbounds i16, ptr %646, i64 %649
  %arrayidx733.us.us.us.1 = getelementptr inbounds %struct.ImageParameters, ptr %644, i64 0, i32 50, i64 1, i64 %indvars.iv1491, i64 %indvars.iv1449.1, i64 %indvars.iv1438.1
  %650 = load <4 x i16>, ptr %arrayidx723.us.us.us.1, align 2
  %651 = zext <4 x i16> %650 to <4 x i32>
  %652 = load <4 x i16>, ptr %arrayidx733.us.us.us.1, align 2
  %653 = zext <4 x i16> %652 to <4 x i32>
  %654 = sub nsw <4 x i32> %651, %653
  store <4 x i32> %654, ptr @diff, align 16
  %655 = load i32, ptr %pos_y715.us.us.us.1.1, align 4
  %idxprom716.us.us.us.1.1 = sext i32 %655 to i64
  %arrayidx717.us.us.us.1.1 = getelementptr inbounds ptr, ptr %643, i64 %idxprom716.us.us.us.1.1
  %656 = load ptr, ptr %arrayidx717.us.us.us.1.1, align 8
  %657 = load i32, ptr %pos_x720.us.us.us.1.1, align 8
  %658 = sext i32 %657 to i64
  %659 = add nsw i64 %indvars.iv1438.1, %658
  %arrayidx723.us.us.us.11462.1 = getelementptr inbounds i16, ptr %656, i64 %659
  %arrayidx733.us.us.us.11464.1 = getelementptr inbounds %struct.ImageParameters, ptr %644, i64 0, i32 50, i64 1, i64 %indvars.iv1491, i64 %indvars.iv.next1452.11602, i64 %indvars.iv1438.1
  %660 = load <4 x i16>, ptr %arrayidx723.us.us.us.11462.1, align 2
  %661 = zext <4 x i16> %660 to <4 x i32>
  %662 = load <4 x i16>, ptr %arrayidx733.us.us.us.11464.1, align 2
  %663 = zext <4 x i16> %662 to <4 x i32>
  %664 = sub nsw <4 x i32> %661, %663
  store <4 x i32> %664, ptr getelementptr inbounds ([16 x i32], ptr @diff, i64 0, i64 4), align 16
  %665 = load i32, ptr %pos_y715.us.us.us.2.1, align 4
  %idxprom716.us.us.us.2.1 = sext i32 %665 to i64
  %arrayidx717.us.us.us.2.1 = getelementptr inbounds ptr, ptr %643, i64 %idxprom716.us.us.us.2.1
  %666 = load ptr, ptr %arrayidx717.us.us.us.2.1, align 8
  %667 = load i32, ptr %pos_x720.us.us.us.2.1, align 16
  %668 = sext i32 %667 to i64
  %669 = add nsw i64 %indvars.iv1438.1, %668
  %arrayidx723.us.us.us.21470.1 = getelementptr inbounds i16, ptr %666, i64 %669
  %arrayidx733.us.us.us.21472.1 = getelementptr inbounds %struct.ImageParameters, ptr %644, i64 0, i32 50, i64 1, i64 %indvars.iv1491, i64 %indvars.iv.next1452.1.1, i64 %indvars.iv1438.1
  %670 = load <4 x i16>, ptr %arrayidx723.us.us.us.21470.1, align 2
  %671 = zext <4 x i16> %670 to <4 x i32>
  %672 = load <4 x i16>, ptr %arrayidx733.us.us.us.21472.1, align 2
  %673 = zext <4 x i16> %672 to <4 x i32>
  %674 = sub nsw <4 x i32> %671, %673
  store <4 x i32> %674, ptr getelementptr inbounds ([16 x i32], ptr @diff, i64 0, i64 8), align 16
  %675 = load i32, ptr %pos_y715.us.us.us.3.1, align 4
  %idxprom716.us.us.us.3.1 = sext i32 %675 to i64
  %arrayidx717.us.us.us.3.1 = getelementptr inbounds ptr, ptr %643, i64 %idxprom716.us.us.us.3.1
  %676 = load ptr, ptr %arrayidx717.us.us.us.3.1, align 8
  %677 = load i32, ptr %pos_x720.us.us.us.3.1, align 8
  %678 = sext i32 %677 to i64
  %679 = add nsw i64 %indvars.iv1438.1, %678
  %arrayidx723.us.us.us.31478.1 = getelementptr inbounds i16, ptr %676, i64 %679
  %arrayidx733.us.us.us.31480.1 = getelementptr inbounds %struct.ImageParameters, ptr %644, i64 0, i32 50, i64 1, i64 %indvars.iv1491, i64 %indvars.iv.next1452.2.1, i64 %indvars.iv1438.1
  %680 = load <4 x i16>, ptr %arrayidx723.us.us.us.31478.1, align 2
  %681 = zext <4 x i16> %680 to <4 x i32>
  %682 = load <4 x i16>, ptr %arrayidx733.us.us.us.31480.1, align 2
  %683 = zext <4 x i16> %682 to <4 x i32>
  %684 = sub nsw <4 x i32> %681, %683
  store <4 x i32> %684, ptr getelementptr inbounds ([16 x i32], ptr @diff, i64 0, i64 12), align 16
  %call745.us.us.us.1 = call i32 @distortion4x4(ptr noundef nonnull @diff) #17
  %add746.us.us.us.1 = add nsw i32 %call745.us.us.us.1, %cost.21127.us.us.us.1
  %indvars.iv.next1439.1 = add nuw nsw i64 %indvars.iv1438.1, 4
  %indvars.1 = trunc i64 %indvars.iv.next1439.1 to i32
  %cmp700.us.us.us.1 = icmp sgt i32 %3, %indvars.1
  br i1 %cmp700.us.us.us.1, label %for.cond703.preheader.us.us.us.1, label %for.cond699.for.inc750_crit_edge.us.us.us.1

for.cond699.for.inc750_crit_edge.us.us.us.1:      ; preds = %for.cond703.preheader.us.us.us.1
  %indvars.iv.next1450.1 = add nuw i64 %indvars.iv1449.1, 4
  %indvars1485.1 = trunc i64 %indvars.iv.next1450.1 to i32
  %cmp696.us.us.us.1 = icmp sgt i32 %4, %indvars1485.1
  br i1 %cmp696.us.us.us.1, label %for.cond699.preheader.us.us.us.1, label %for.end755

for.end755:                                       ; preds = %for.cond699.for.inc750_crit_edge.us.us.us.1, %if.end688
  %.us-phi1141 = phi i32 [ 0, %if.end688 ], [ %add746.us.us.us.1, %for.cond699.for.inc750_crit_edge.us.us.us.1 ]
  %cmp756 = icmp slt i32 %.us-phi1141, %min_cost.01144
  %spec.select = select i1 %cmp756, i32 %598, i32 %best_mode.01143
  %spec.select1025 = call i32 @llvm.smin.i32(i32 %.us-phi1141, i32 %min_cost.01144)
  br label %for.inc760

for.inc760:                                       ; preds = %for.end755, %land.lhs.true668, %land.lhs.true677, %if.end660, %land.lhs.true653
  %best_mode.1 = phi i32 [ %best_mode.01143, %land.lhs.true653 ], [ %best_mode.01143, %land.lhs.true677 ], [ %best_mode.01143, %land.lhs.true668 ], [ %best_mode.01143, %if.end660 ], [ %spec.select, %for.end755 ]
  %min_cost.1 = phi i32 [ %min_cost.01144, %land.lhs.true653 ], [ %min_cost.01144, %land.lhs.true677 ], [ %min_cost.01144, %land.lhs.true668 ], [ %min_cost.01144, %if.end660 ], [ %spec.select1025, %for.end755 ]
  %indvars.iv.next1492 = add nuw nsw i64 %indvars.iv1491, 1
  %exitcond1495.not = icmp eq i64 %indvars.iv.next1492, 4
  br i1 %exitcond1495.not, label %for.end762, label %for.body649

for.end762:                                       ; preds = %for.inc760
  %c_ipred_mode = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 17
  store i32 %best_mode.1, ptr %c_ipred_mode, align 8
  br label %if.end763

if.end763:                                        ; preds = %for.end762, %for.end634
  call void @llvm.lifetime.end.p0(i64 408, ptr nonnull %left) #17
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %up) #17
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %vline) #17
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %hline) #17
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @IntraChromaRDDecision(ptr nocapture noundef readonly byval(%struct.RD_PARAMS) align 8 %enc_mb) local_unnamed_addr #0 {
entry:
  %up = alloca %struct.pix_pos, align 4
  %left = alloca [17 x %struct.pix_pos], align 16
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %up) #17
  call void @llvm.lifetime.start.p0(i64 408, ptr nonnull %left) #17
  %mb_cr_size_x = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 162
  %3 = load i32, ptr %mb_cr_size_x, align 8
  %mb_cr_size_y = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 163
  %4 = load i32, ptr %mb_cr_size_y, align 4
  %cmp.not275 = icmp slt i32 %4, 0
  br i1 %cmp.not275, label %for.end, label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  %5 = add nuw i32 %4, 1
  %wide.trip.count = zext i32 %5 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %6 = load ptr, ptr @getNeighbour, align 8
  %arrayidx3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv
  %7 = trunc i64 %indvars.iv to i32
  %8 = add i32 %7, -1
  call void %6(i32 noundef %2, i32 noundef -1, i32 noundef %8, i32 noundef 1, ptr noundef nonnull %arrayidx3) #17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %9 = load ptr, ptr @getNeighbour, align 8
  call void %9(i32 noundef %2, i32 noundef 0, i32 noundef -1, i32 noundef 1, ptr noundef nonnull %up) #17
  %10 = load i32, ptr %up, align 4
  %11 = load i32, ptr %left, align 16
  %arrayidx6 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 1
  %12 = load i32, ptr %arrayidx6, align 8
  %13 = load ptr, ptr @input, align 8
  %UseConstrainedIntraPred = getelementptr inbounds %struct.InputParameters, ptr %13, i64 0, i32 23
  %14 = load i32, ptr %UseConstrainedIntraPred, align 8
  %tobool.not = icmp eq i32 %14, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %for.end
  %tobool11.not = icmp eq i32 %10, 0
  br i1 %tobool11.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then
  %15 = load ptr, ptr @img, align 8
  %intra_block = getelementptr inbounds %struct.ImageParameters, ptr %15, i64 0, i32 63
  %16 = load ptr, ptr %intra_block, align 8
  %mb_addr = getelementptr inbounds %struct.pix_pos, ptr %up, i64 0, i32 1
  %17 = load i32, ptr %mb_addr, align 4
  %idxprom12 = sext i32 %17 to i64
  %arrayidx13 = getelementptr inbounds i32, ptr %16, i64 %idxprom12
  %18 = load i32, ptr %arrayidx13, align 4
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ 0, %if.then ]
  %shr = ashr i32 %4, 1
  %cmp16277 = icmp sgt i32 %4, 1
  br i1 %cmp16277, label %for.body17.lr.ph, label %for.cond40.preheader

for.body17.lr.ph:                                 ; preds = %cond.end
  %19 = load ptr, ptr @img, align 8
  %intra_block24 = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 63
  %smax = call i32 @llvm.smax.i32(i32 %shr, i32 1)
  %wide.trip.count343 = zext i32 %smax to i64
  %xtraiter = and i64 %wide.trip.count343, 1
  %20 = icmp slt i32 %4, 4
  br i1 %20, label %for.cond40.preheader.loopexit.unr-lcssa, label %for.body17.lr.ph.new

for.body17.lr.ph.new:                             ; preds = %for.body17.lr.ph
  %unroll_iter = and i64 %wide.trip.count343, 2147483646
  br label %for.body17

for.cond40.preheader.loopexit.unr-lcssa:          ; preds = %cond.end32.1, %for.body17.lr.ph
  %and.lcssa.ph = phi i32 [ undef, %for.body17.lr.ph ], [ %and.1, %cond.end32.1 ]
  %indvars.iv340.unr = phi i64 [ 0, %for.body17.lr.ph ], [ %indvars.iv.next341.1, %cond.end32.1 ]
  %mb_available_left.sroa.0.0278.unr = phi i32 [ 1, %for.body17.lr.ph ], [ %and.1, %cond.end32.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond40.preheader, label %for.body17.epil

for.body17.epil:                                  ; preds = %for.cond40.preheader.loopexit.unr-lcssa
  %indvars.iv.next341.epil = add nuw nsw i64 %indvars.iv340.unr, 1
  %arrayidx20.epil = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next341.epil
  %21 = load i32, ptr %arrayidx20.epil, align 8
  %tobool22.not.epil = icmp eq i32 %21, 0
  br i1 %tobool22.not.epil, label %cond.end32.epil, label %cond.true23.epil

cond.true23.epil:                                 ; preds = %for.body17.epil
  %22 = load ptr, ptr %intra_block24, align 8
  %mb_addr28.epil = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next341.epil, i32 1
  %23 = load i32, ptr %mb_addr28.epil, align 4
  %idxprom29.epil = sext i32 %23 to i64
  %arrayidx30.epil = getelementptr inbounds i32, ptr %22, i64 %idxprom29.epil
  %24 = load i32, ptr %arrayidx30.epil, align 4
  br label %cond.end32.epil

cond.end32.epil:                                  ; preds = %cond.true23.epil, %for.body17.epil
  %cond33.epil = phi i32 [ %24, %cond.true23.epil ], [ 0, %for.body17.epil ]
  %and.epil = and i32 %cond33.epil, %mb_available_left.sroa.0.0278.unr
  br label %for.cond40.preheader

for.cond40.preheader:                             ; preds = %cond.end32.epil, %for.cond40.preheader.loopexit.unr-lcssa, %cond.end
  %mb_available_left.sroa.0.0.lcssa = phi i32 [ 1, %cond.end ], [ %and.lcssa.ph, %for.cond40.preheader.loopexit.unr-lcssa ], [ %and.epil, %cond.end32.epil ]
  %cmp41281 = icmp slt i32 %shr, %4
  br i1 %cmp41281, label %for.body42.lr.ph, label %for.end63

for.body42.lr.ph:                                 ; preds = %for.cond40.preheader
  %25 = load ptr, ptr @img, align 8
  %intra_block49 = getelementptr inbounds %struct.ImageParameters, ptr %25, i64 0, i32 63
  %26 = sext i32 %shr to i64
  %wide.trip.count348 = sext i32 %4 to i64
  %27 = sub nsw i64 %wide.trip.count348, %26
  %28 = xor i64 %26, -1
  %xtraiter419 = and i64 %27, 1
  %29 = sub nsw i64 0, %wide.trip.count348
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %for.end63.loopexit.unr-lcssa, label %for.body42.lr.ph.new

for.body42.lr.ph.new:                             ; preds = %for.body42.lr.ph
  %unroll_iter422 = and i64 %27, -2
  br label %for.body42

for.body17:                                       ; preds = %cond.end32.1, %for.body17.lr.ph.new
  %indvars.iv340 = phi i64 [ 0, %for.body17.lr.ph.new ], [ %indvars.iv.next341.1, %cond.end32.1 ]
  %mb_available_left.sroa.0.0278 = phi i32 [ 1, %for.body17.lr.ph.new ], [ %and.1, %cond.end32.1 ]
  %niter = phi i64 [ 0, %for.body17.lr.ph.new ], [ %niter.next.1, %cond.end32.1 ]
  %indvars.iv.next341 = or i64 %indvars.iv340, 1
  %arrayidx20 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next341
  %31 = load i32, ptr %arrayidx20, align 8
  %tobool22.not = icmp eq i32 %31, 0
  br i1 %tobool22.not, label %cond.end32, label %cond.true23

cond.true23:                                      ; preds = %for.body17
  %32 = load ptr, ptr %intra_block24, align 8
  %mb_addr28 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next341, i32 1
  %33 = load i32, ptr %mb_addr28, align 4
  %idxprom29 = sext i32 %33 to i64
  %arrayidx30 = getelementptr inbounds i32, ptr %32, i64 %idxprom29
  %34 = load i32, ptr %arrayidx30, align 4
  br label %cond.end32

cond.end32:                                       ; preds = %for.body17, %cond.true23
  %cond33 = phi i32 [ %34, %cond.true23 ], [ 0, %for.body17 ]
  %and = and i32 %cond33, %mb_available_left.sroa.0.0278
  %indvars.iv.next341.1 = add nuw nsw i64 %indvars.iv340, 2
  %arrayidx20.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next341.1
  %35 = load i32, ptr %arrayidx20.1, align 16
  %tobool22.not.1 = icmp eq i32 %35, 0
  br i1 %tobool22.not.1, label %cond.end32.1, label %cond.true23.1

cond.true23.1:                                    ; preds = %cond.end32
  %36 = load ptr, ptr %intra_block24, align 8
  %mb_addr28.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next341.1, i32 1
  %37 = load i32, ptr %mb_addr28.1, align 4
  %idxprom29.1 = sext i32 %37 to i64
  %arrayidx30.1 = getelementptr inbounds i32, ptr %36, i64 %idxprom29.1
  %38 = load i32, ptr %arrayidx30.1, align 4
  br label %cond.end32.1

cond.end32.1:                                     ; preds = %cond.true23.1, %cond.end32
  %cond33.1 = phi i32 [ %38, %cond.true23.1 ], [ 0, %cond.end32 ]
  %and.1 = and i32 %cond33.1, %and
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond40.preheader.loopexit.unr-lcssa, label %for.body17

for.body42:                                       ; preds = %cond.end57.1, %for.body42.lr.ph.new
  %indvars.iv345 = phi i64 [ %26, %for.body42.lr.ph.new ], [ %indvars.iv.next346.1, %cond.end57.1 ]
  %mb_available_left.sroa.8.0282 = phi i32 [ 1, %for.body42.lr.ph.new ], [ %and60.1, %cond.end57.1 ]
  %niter423 = phi i64 [ 0, %for.body42.lr.ph.new ], [ %niter423.next.1, %cond.end57.1 ]
  %indvars.iv.next346 = add nsw i64 %indvars.iv345, 1
  %arrayidx45 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next346
  %39 = load i32, ptr %arrayidx45, align 8
  %tobool47.not = icmp eq i32 %39, 0
  br i1 %tobool47.not, label %cond.end57, label %cond.true48

cond.true48:                                      ; preds = %for.body42
  %40 = load ptr, ptr %intra_block49, align 8
  %mb_addr53 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next346, i32 1
  %41 = load i32, ptr %mb_addr53, align 4
  %idxprom54 = sext i32 %41 to i64
  %arrayidx55 = getelementptr inbounds i32, ptr %40, i64 %idxprom54
  %42 = load i32, ptr %arrayidx55, align 4
  br label %cond.end57

cond.end57:                                       ; preds = %for.body42, %cond.true48
  %cond58 = phi i32 [ %42, %cond.true48 ], [ 0, %for.body42 ]
  %and60 = and i32 %cond58, %mb_available_left.sroa.8.0282
  %indvars.iv.next346.1 = add nsw i64 %indvars.iv345, 2
  %arrayidx45.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next346.1
  %43 = load i32, ptr %arrayidx45.1, align 8
  %tobool47.not.1 = icmp eq i32 %43, 0
  br i1 %tobool47.not.1, label %cond.end57.1, label %cond.true48.1

cond.true48.1:                                    ; preds = %cond.end57
  %44 = load ptr, ptr %intra_block49, align 8
  %mb_addr53.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next346.1, i32 1
  %45 = load i32, ptr %mb_addr53.1, align 4
  %idxprom54.1 = sext i32 %45 to i64
  %arrayidx55.1 = getelementptr inbounds i32, ptr %44, i64 %idxprom54.1
  %46 = load i32, ptr %arrayidx55.1, align 4
  br label %cond.end57.1

cond.end57.1:                                     ; preds = %cond.true48.1, %cond.end57
  %cond58.1 = phi i32 [ %46, %cond.true48.1 ], [ 0, %cond.end57 ]
  %and60.1 = and i32 %cond58.1, %and60
  %niter423.next.1 = add i64 %niter423, 2
  %niter423.ncmp.1 = icmp eq i64 %niter423.next.1, %unroll_iter422
  br i1 %niter423.ncmp.1, label %for.end63.loopexit.unr-lcssa, label %for.body42

for.end63.loopexit.unr-lcssa:                     ; preds = %cond.end57.1, %for.body42.lr.ph
  %and60.lcssa.ph = phi i32 [ undef, %for.body42.lr.ph ], [ %and60.1, %cond.end57.1 ]
  %indvars.iv345.unr = phi i64 [ %26, %for.body42.lr.ph ], [ %indvars.iv.next346.1, %cond.end57.1 ]
  %mb_available_left.sroa.8.0282.unr = phi i32 [ 1, %for.body42.lr.ph ], [ %and60.1, %cond.end57.1 ]
  %lcmp.mod420.not = icmp eq i64 %xtraiter419, 0
  br i1 %lcmp.mod420.not, label %for.end63, label %for.body42.epil

for.body42.epil:                                  ; preds = %for.end63.loopexit.unr-lcssa
  %indvars.iv.next346.epil = add nsw i64 %indvars.iv345.unr, 1
  %arrayidx45.epil = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next346.epil
  %47 = load i32, ptr %arrayidx45.epil, align 8
  %tobool47.not.epil = icmp eq i32 %47, 0
  br i1 %tobool47.not.epil, label %cond.end57.epil, label %cond.true48.epil

cond.true48.epil:                                 ; preds = %for.body42.epil
  %48 = load ptr, ptr %intra_block49, align 8
  %mb_addr53.epil = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next346.epil, i32 1
  %49 = load i32, ptr %mb_addr53.epil, align 4
  %idxprom54.epil = sext i32 %49 to i64
  %arrayidx55.epil = getelementptr inbounds i32, ptr %48, i64 %idxprom54.epil
  %50 = load i32, ptr %arrayidx55.epil, align 4
  br label %cond.end57.epil

cond.end57.epil:                                  ; preds = %cond.true48.epil, %for.body42.epil
  %cond58.epil = phi i32 [ %50, %cond.true48.epil ], [ 0, %for.body42.epil ]
  %and60.epil = and i32 %cond58.epil, %mb_available_left.sroa.8.0282.unr
  br label %for.end63

for.end63:                                        ; preds = %cond.end57.epil, %for.end63.loopexit.unr-lcssa, %for.cond40.preheader
  %mb_available_left.sroa.8.0.lcssa = phi i32 [ 1, %for.cond40.preheader ], [ %and60.lcssa.ph, %for.end63.loopexit.unr-lcssa ], [ %and60.epil, %cond.end57.epil ]
  %tobool66.not = icmp eq i32 %11, 0
  br i1 %tobool66.not, label %if.end, label %cond.true67

cond.true67:                                      ; preds = %for.end63
  %51 = load ptr, ptr @img, align 8
  %intra_block68 = getelementptr inbounds %struct.ImageParameters, ptr %51, i64 0, i32 63
  %52 = load ptr, ptr %intra_block68, align 8
  %mb_addr70 = getelementptr inbounds %struct.pix_pos, ptr %left, i64 0, i32 1
  %53 = load i32, ptr %mb_addr70, align 4
  %idxprom71 = sext i32 %53 to i64
  %arrayidx72 = getelementptr inbounds i32, ptr %52, i64 %idxprom71
  %54 = load i32, ptr %arrayidx72, align 4
  br label %if.end

if.end:                                           ; preds = %cond.true67, %for.end63, %for.end
  %mb_available_up.0 = phi i32 [ %10, %for.end ], [ %cond, %for.end63 ], [ %cond, %cond.true67 ]
  %mb_available_left.sroa.8.1 = phi i32 [ %12, %for.end ], [ %mb_available_left.sroa.8.0.lcssa, %for.end63 ], [ %mb_available_left.sroa.8.0.lcssa, %cond.true67 ]
  %mb_available_left.sroa.0.1 = phi i32 [ %12, %for.end ], [ %mb_available_left.sroa.0.0.lcssa, %for.end63 ], [ %mb_available_left.sroa.0.0.lcssa, %cond.true67 ]
  %mb_available_up_left.0 = phi i32 [ %11, %for.end ], [ 0, %for.end63 ], [ %54, %cond.true67 ]
  %cmp77285 = icmp sgt i32 %4, 0
  br i1 %cmp77285, label %for.body78.preheader, label %for.end83

for.body78.preheader:                             ; preds = %if.end
  %wide.trip.count353 = zext i32 %4 to i64
  br label %for.body78

for.body78:                                       ; preds = %for.body78.preheader, %for.body78
  %indvars.iv350 = phi i64 [ 0, %for.body78.preheader ], [ %indvars.iv.next351, %for.body78 ]
  %55 = load ptr, ptr @getNeighbour, align 8
  %arrayidx80 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv350
  %56 = trunc i64 %indvars.iv350 to i32
  call void %55(i32 noundef %2, i32 noundef 0, i32 noundef %56, i32 noundef 1, ptr noundef nonnull %arrayidx80) #17
  %indvars.iv.next351 = add nuw nsw i64 %indvars.iv350, 1
  %exitcond354.not = icmp eq i64 %indvars.iv.next351, %wide.trip.count353
  br i1 %exitcond354.not, label %for.end83, label %for.body78

for.end83:                                        ; preds = %for.body78, %if.end
  %57 = load ptr, ptr @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, ptr %57, i64 0, i32 100
  %58 = load i32, ptr %MbaffFrameFlag, align 4
  %tobool84.not = icmp eq i32 %58, 0
  br i1 %tobool84.not, label %if.end99, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.end83
  %field_mode = getelementptr inbounds %struct.ImageParameters, ptr %57, i64 0, i32 90
  %59 = load i32, ptr %field_mode, align 8
  %tobool85.not = icmp ne i32 %59, 0
  %or.cond334 = and i1 %tobool85.not, %cmp77285
  br i1 %or.cond334, label %for.body89.preheader, label %if.end99

for.body89.preheader:                             ; preds = %land.lhs.true
  %wide.trip.count358 = zext i32 %4 to i64
  %xtraiter424 = and i64 %wide.trip.count358, 3
  %60 = icmp ult i32 %4, 4
  br i1 %60, label %if.end99.loopexit.unr-lcssa, label %for.body89.preheader.new

for.body89.preheader.new:                         ; preds = %for.body89.preheader
  %unroll_iter426 = and i64 %wide.trip.count358, 4294967292
  br label %for.body89

for.body89:                                       ; preds = %for.body89, %for.body89.preheader.new
  %indvars.iv355 = phi i64 [ 0, %for.body89.preheader.new ], [ %indvars.iv.next356.3, %for.body89 ]
  %niter427 = phi i64 [ 0, %for.body89.preheader.new ], [ %niter427.next.3, %for.body89 ]
  %pos_y = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv355, i32 5
  %61 = load i32, ptr %pos_y, align 4
  %shr92 = ashr i32 %61, 1
  store i32 %shr92, ptr %pos_y, align 4
  %indvars.iv.next356 = or i64 %indvars.iv355, 1
  %pos_y.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next356, i32 5
  %62 = load i32, ptr %pos_y.1, align 4
  %shr92.1 = ashr i32 %62, 1
  store i32 %shr92.1, ptr %pos_y.1, align 4
  %indvars.iv.next356.1 = or i64 %indvars.iv355, 2
  %pos_y.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next356.1, i32 5
  %63 = load i32, ptr %pos_y.2, align 4
  %shr92.2 = ashr i32 %63, 1
  store i32 %shr92.2, ptr %pos_y.2, align 4
  %indvars.iv.next356.2 = or i64 %indvars.iv355, 3
  %pos_y.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next356.2, i32 5
  %64 = load i32, ptr %pos_y.3, align 4
  %shr92.3 = ashr i32 %64, 1
  store i32 %shr92.3, ptr %pos_y.3, align 4
  %indvars.iv.next356.3 = add nuw nsw i64 %indvars.iv355, 4
  %niter427.next.3 = add i64 %niter427, 4
  %niter427.ncmp.3 = icmp eq i64 %niter427.next.3, %unroll_iter426
  br i1 %niter427.ncmp.3, label %if.end99.loopexit.unr-lcssa, label %for.body89

if.end99.loopexit.unr-lcssa:                      ; preds = %for.body89, %for.body89.preheader
  %indvars.iv355.unr = phi i64 [ 0, %for.body89.preheader ], [ %indvars.iv.next356.3, %for.body89 ]
  %lcmp.mod425.not = icmp eq i64 %xtraiter424, 0
  br i1 %lcmp.mod425.not, label %if.end99, label %for.body89.epil

for.body89.epil:                                  ; preds = %if.end99.loopexit.unr-lcssa, %for.body89.epil
  %indvars.iv355.epil = phi i64 [ %indvars.iv.next356.epil, %for.body89.epil ], [ %indvars.iv355.unr, %if.end99.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body89.epil ], [ 0, %if.end99.loopexit.unr-lcssa ]
  %pos_y.epil = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv355.epil, i32 5
  %65 = load i32, ptr %pos_y.epil, align 4
  %shr92.epil = ashr i32 %65, 1
  store i32 %shr92.epil, ptr %pos_y.epil, align 4
  %indvars.iv.next356.epil = add nuw nsw i64 %indvars.iv355.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter424
  br i1 %epil.iter.cmp.not, label %if.end99, label %for.body89.epil

if.end99:                                         ; preds = %if.end99.loopexit.unr-lcssa, %for.body89.epil, %land.lhs.true, %for.end83
  %tobool105 = icmp ne i32 %mb_available_up.0, 0
  %tobool117 = icmp ne i32 %mb_available_left.sroa.0.1, 0
  %tobool120 = icmp ne i32 %mb_available_left.sroa.8.1, 0
  %or.cond207 = select i1 %tobool117, i1 %tobool120, i1 false
  %or.cond208 = select i1 %or.cond207, i1 %tobool105, i1 false
  %tobool124 = icmp ne i32 %mb_available_up_left.0, 0
  %or.cond209 = select i1 %or.cond208, i1 %tobool124, i1 false
  %cmp136293 = icmp sgt i32 %3, 0
  %arrayidx193 = getelementptr inbounds %struct.RD_PARAMS, ptr %enc_mb, i64 0, i32 1, i64 2
  %66 = load double, ptr %arrayidx193, align 8
  %brmerge.not = select i1 %cmp77285, i1 %cmp136293, i1 false
  br label %for.body102

for.body102:                                      ; preds = %if.end99, %for.inc203
  %indvars.iv413 = phi i64 [ 0, %if.end99 ], [ %indvars.iv.next414, %for.inc203 ]
  %min_cost.0330 = phi i32 [ 2147483647, %if.end99 ], [ %min_cost.1, %for.inc203 ]
  %best_mode.0329 = phi i32 [ 0, %if.end99 ], [ %best_mode.1, %for.inc203 ]
  %cmp103 = icmp ne i64 %indvars.iv413, 2
  %or.cond = select i1 %cmp103, i1 true, i1 %tobool105
  br i1 %or.cond, label %lor.lhs.false, label %for.inc203

lor.lhs.false:                                    ; preds = %for.body102
  %67 = trunc i64 %indvars.iv413 to i32
  switch i32 %67, label %if.end126 [
    i32 1, label %land.lhs.true107
    i32 3, label %land.lhs.true115
  ]

land.lhs.true107:                                 ; preds = %lor.lhs.false
  br i1 %or.cond207, label %if.end126, label %for.inc203

land.lhs.true115:                                 ; preds = %lor.lhs.false
  br i1 %or.cond209, label %if.end126, label %for.inc203

if.end126:                                        ; preds = %land.lhs.true107, %lor.lhs.false, %land.lhs.true115
  br i1 %brmerge.not, label %for.body129.us.us, label %for.end192

for.body129.us.us:                                ; preds = %if.end126, %for.end185.us.us
  %cmp128.us.us = phi i1 [ false, %for.end185.us.us ], [ true, %if.end126 ]
  %indvars.iv409 = phi i64 [ 1, %for.end185.us.us ], [ 0, %if.end126 ]
  %cost.0304.us.us = phi i32 [ %add175.us.us.us, %for.end185.us.us ], [ 0, %if.end126 ]
  %68 = load ptr, ptr @imgUV_org, align 8
  %arrayidx131.us.us = getelementptr inbounds ptr, ptr %68, i64 %indvars.iv409
  %69 = load ptr, ptr %arrayidx131.us.us, align 8
  br label %for.cond135.preheader.us.us.us

for.end185.us.us:                                 ; preds = %for.cond135.for.end178_crit_edge.us.us.us
  %or.cond333 = and i1 %cmp179.us.us.us, %cmp128.us.us
  br i1 %or.cond333, label %for.body129.us.us, label %for.end192

for.cond135.preheader.us.us.us:                   ; preds = %for.cond135.for.end178_crit_edge.us.us.us, %for.body129.us.us
  %indvars.iv371 = phi i64 [ %indvars.iv.next372, %for.cond135.for.end178_crit_edge.us.us.us ], [ 0, %for.body129.us.us ]
  %cost.1299.us.us.us = phi i32 [ %add175.us.us.us, %for.cond135.for.end178_crit_edge.us.us.us ], [ %cost.0304.us.us, %for.body129.us.us ]
  %pos_y148.us.us.us = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv371, i32 5
  %pos_x.us.us.us = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv371, i32 4
  %indvars.iv.next374 = or i64 %indvars.iv371, 1
  %pos_y148.us.us.us.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next374, i32 5
  %pos_x.us.us.us.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next374, i32 4
  %indvars.iv.next374.1 = or i64 %indvars.iv371, 2
  %pos_y148.us.us.us.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next374.1, i32 5
  %pos_x.us.us.us.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next374.1, i32 4
  %indvars.iv.next374.2 = or i64 %indvars.iv371, 3
  %pos_y148.us.us.us.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next374.2, i32 5
  %pos_x.us.us.us.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 %indvars.iv.next374.2, i32 4
  br label %for.cond138.preheader.us.us.us

for.cond138.preheader.us.us.us:                   ; preds = %for.cond138.preheader.us.us.us, %for.cond135.preheader.us.us.us
  %indvars.iv360 = phi i64 [ %indvars.iv.next361, %for.cond138.preheader.us.us.us ], [ 0, %for.cond135.preheader.us.us.us ]
  %cost.2295.us.us.us = phi i32 [ %add175.us.us.us, %for.cond138.preheader.us.us.us ], [ %cost.1299.us.us.us, %for.cond135.preheader.us.us.us ]
  %70 = load ptr, ptr @img, align 8
  %71 = load i32, ptr %pos_y148.us.us.us, align 4
  %idxprom149.us.us.us = sext i32 %71 to i64
  %arrayidx150.us.us.us = getelementptr inbounds ptr, ptr %69, i64 %idxprom149.us.us.us
  %72 = load ptr, ptr %arrayidx150.us.us.us, align 8
  %73 = load i32, ptr %pos_x.us.us.us, align 16
  %74 = sext i32 %73 to i64
  %75 = add nsw i64 %indvars.iv360, %74
  %arrayidx155.us.us.us = getelementptr inbounds i16, ptr %72, i64 %75
  %arrayidx163.us.us.us = getelementptr inbounds %struct.ImageParameters, ptr %70, i64 0, i32 50, i64 %indvars.iv409, i64 %indvars.iv413, i64 %indvars.iv371, i64 %indvars.iv360
  %76 = load <4 x i16>, ptr %arrayidx155.us.us.us, align 2
  %77 = zext <4 x i16> %76 to <4 x i32>
  %78 = load <4 x i16>, ptr %arrayidx163.us.us.us, align 2
  %79 = zext <4 x i16> %78 to <4 x i32>
  %80 = sub nsw <4 x i32> %77, %79
  store <4 x i32> %80, ptr @diff, align 16
  %81 = load i32, ptr %pos_y148.us.us.us.1, align 4
  %idxprom149.us.us.us.1 = sext i32 %81 to i64
  %arrayidx150.us.us.us.1 = getelementptr inbounds ptr, ptr %69, i64 %idxprom149.us.us.us.1
  %82 = load ptr, ptr %arrayidx150.us.us.us.1, align 8
  %83 = load i32, ptr %pos_x.us.us.us.1, align 8
  %84 = sext i32 %83 to i64
  %85 = add nsw i64 %indvars.iv360, %84
  %arrayidx155.us.us.us.1384 = getelementptr inbounds i16, ptr %82, i64 %85
  %arrayidx163.us.us.us.1386 = getelementptr inbounds %struct.ImageParameters, ptr %70, i64 0, i32 50, i64 %indvars.iv409, i64 %indvars.iv413, i64 %indvars.iv.next374, i64 %indvars.iv360
  %86 = load <4 x i16>, ptr %arrayidx155.us.us.us.1384, align 2
  %87 = zext <4 x i16> %86 to <4 x i32>
  %88 = load <4 x i16>, ptr %arrayidx163.us.us.us.1386, align 2
  %89 = zext <4 x i16> %88 to <4 x i32>
  %90 = sub nsw <4 x i32> %87, %89
  store <4 x i32> %90, ptr getelementptr inbounds ([16 x i32], ptr @diff, i64 0, i64 4), align 16
  %91 = load i32, ptr %pos_y148.us.us.us.2, align 4
  %idxprom149.us.us.us.2 = sext i32 %91 to i64
  %arrayidx150.us.us.us.2 = getelementptr inbounds ptr, ptr %69, i64 %idxprom149.us.us.us.2
  %92 = load ptr, ptr %arrayidx150.us.us.us.2, align 8
  %93 = load i32, ptr %pos_x.us.us.us.2, align 16
  %94 = sext i32 %93 to i64
  %95 = add nsw i64 %indvars.iv360, %94
  %arrayidx155.us.us.us.2392 = getelementptr inbounds i16, ptr %92, i64 %95
  %arrayidx163.us.us.us.2394 = getelementptr inbounds %struct.ImageParameters, ptr %70, i64 0, i32 50, i64 %indvars.iv409, i64 %indvars.iv413, i64 %indvars.iv.next374.1, i64 %indvars.iv360
  %96 = load <4 x i16>, ptr %arrayidx155.us.us.us.2392, align 2
  %97 = zext <4 x i16> %96 to <4 x i32>
  %98 = load <4 x i16>, ptr %arrayidx163.us.us.us.2394, align 2
  %99 = zext <4 x i16> %98 to <4 x i32>
  %100 = sub nsw <4 x i32> %97, %99
  store <4 x i32> %100, ptr getelementptr inbounds ([16 x i32], ptr @diff, i64 0, i64 8), align 16
  %101 = load i32, ptr %pos_y148.us.us.us.3, align 4
  %idxprom149.us.us.us.3 = sext i32 %101 to i64
  %arrayidx150.us.us.us.3 = getelementptr inbounds ptr, ptr %69, i64 %idxprom149.us.us.us.3
  %102 = load ptr, ptr %arrayidx150.us.us.us.3, align 8
  %103 = load i32, ptr %pos_x.us.us.us.3, align 8
  %104 = sext i32 %103 to i64
  %105 = add nsw i64 %indvars.iv360, %104
  %arrayidx155.us.us.us.3400 = getelementptr inbounds i16, ptr %102, i64 %105
  %arrayidx163.us.us.us.3402 = getelementptr inbounds %struct.ImageParameters, ptr %70, i64 0, i32 50, i64 %indvars.iv409, i64 %indvars.iv413, i64 %indvars.iv.next374.2, i64 %indvars.iv360
  %106 = load <4 x i16>, ptr %arrayidx155.us.us.us.3400, align 2
  %107 = zext <4 x i16> %106 to <4 x i32>
  %108 = load <4 x i16>, ptr %arrayidx163.us.us.us.3402, align 2
  %109 = zext <4 x i16> %108 to <4 x i32>
  %110 = sub nsw <4 x i32> %107, %109
  store <4 x i32> %110, ptr getelementptr inbounds ([16 x i32], ptr @diff, i64 0, i64 12), align 16
  %call.us.us.us = call i32 @distortion4x4(ptr noundef nonnull @diff) #17
  %add175.us.us.us = add nsw i32 %call.us.us.us, %cost.2295.us.us.us
  %indvars.iv.next361 = add nuw nsw i64 %indvars.iv360, 4
  %indvars = trunc i64 %indvars.iv.next361 to i32
  %cmp136.us.us.us = icmp sgt i32 %3, %indvars
  br i1 %cmp136.us.us.us, label %for.cond138.preheader.us.us.us, label %for.cond135.for.end178_crit_edge.us.us.us

for.cond135.for.end178_crit_edge.us.us.us:        ; preds = %for.cond138.preheader.us.us.us
  %cmp179.us.us.us = icmp sle i32 %add175.us.us.us, %min_cost.0330
  %indvars.iv.next372 = add nuw i64 %indvars.iv371, 4
  %indvars407 = trunc i64 %indvars.iv.next372 to i32
  %cmp133.us.us.us = icmp sgt i32 %4, %indvars407
  %or.cond335 = select i1 %cmp179.us.us.us, i1 %cmp133.us.us.us, i1 false
  br i1 %or.cond335, label %for.cond135.preheader.us.us.us, label %for.end185.us.us

for.end192:                                       ; preds = %for.end185.us.us, %if.end126
  %.us-phi313 = phi i32 [ 0, %if.end126 ], [ %add175.us.us.us, %for.end185.us.us ]
  %111 = load ptr, ptr @mvbits, align 8
  %arrayidx195 = getelementptr inbounds i32, ptr %111, i64 %indvars.iv413
  %112 = load i32, ptr %arrayidx195, align 4
  %conv196 = sitofp i32 %112 to double
  %mul = fmul double %66, %conv196
  %conv197 = fptosi double %mul to i32
  %add198 = add nsw i32 %.us-phi313, %conv197
  %cmp199 = icmp slt i32 %add198, %min_cost.0330
  %spec.select = select i1 %cmp199, i32 %67, i32 %best_mode.0329
  %spec.select274 = call i32 @llvm.smin.i32(i32 %add198, i32 %min_cost.0330)
  br label %for.inc203

for.inc203:                                       ; preds = %for.end192, %land.lhs.true107, %land.lhs.true115, %for.body102
  %best_mode.1 = phi i32 [ %best_mode.0329, %land.lhs.true115 ], [ %best_mode.0329, %land.lhs.true107 ], [ %best_mode.0329, %for.body102 ], [ %spec.select, %for.end192 ]
  %min_cost.1 = phi i32 [ %min_cost.0330, %land.lhs.true115 ], [ %min_cost.0330, %land.lhs.true107 ], [ %min_cost.0330, %for.body102 ], [ %spec.select274, %for.end192 ]
  %indvars.iv.next414 = add nuw nsw i64 %indvars.iv413, 1
  %exitcond417.not = icmp eq i64 %indvars.iv.next414, 4
  br i1 %exitcond417.not, label %for.end205, label %for.body102

for.end205:                                       ; preds = %for.inc203
  %idxprom = sext i32 %2 to i64
  %c_ipred_mode = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 17
  store i32 %best_mode.1, ptr %c_ipred_mode, align 8
  call void @llvm.lifetime.end.p0(i64 408, ptr nonnull %left) #17
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %up) #17
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @ZeroRef(ptr nocapture noundef readnone %currMB) local_unnamed_addr #11 {
entry:
  %0 = load ptr, ptr @img, align 8
  %block_y = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 38
  %1 = load i32, ptr %block_y, align 4
  %block_x = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 37
  %2 = load i32, ptr %block_x, align 8
  %3 = load ptr, ptr @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, ptr %3, i64 0, i32 35
  %4 = load ptr, ptr %ref_idx, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = sext i32 %2 to i64
  %7 = sext i32 %1 to i64
  %8 = add nsw i32 %2, 3
  %9 = sext i32 %8 to i64
  %10 = add nsw i32 %1, 3
  %11 = sext i32 %10 to i64
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc12
  %indvars.iv25 = phi i64 [ %7, %entry ], [ %indvars.iv.next26, %for.inc12 ]
  %arrayidx7 = getelementptr inbounds ptr, ptr %5, i64 %indvars.iv25
  %12 = load ptr, ptr %arrayidx7, align 8
  br label %for.body6

for.cond2:                                        ; preds = %for.body6
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %cmp5 = icmp slt i64 %indvars.iv, %9
  br i1 %cmp5, label %for.body6, label %for.inc12

for.body6:                                        ; preds = %for.body, %for.cond2
  %indvars.iv = phi i64 [ %6, %for.body ], [ %indvars.iv.next, %for.cond2 ]
  %arrayidx9 = getelementptr inbounds i8, ptr %12, i64 %indvars.iv
  %13 = load i8, ptr %arrayidx9, align 1
  %cmp10.not = icmp eq i8 %13, 0
  br i1 %cmp10.not, label %for.cond2, label %cleanup

for.inc12:                                        ; preds = %for.cond2
  %indvars.iv.next26 = add nsw i64 %indvars.iv25, 1
  %cmp = icmp slt i64 %indvars.iv25, %11
  br i1 %cmp, label %for.body, label %cleanup

cleanup:                                          ; preds = %for.inc12, %for.body6
  %retval.0 = phi i32 [ 0, %for.body6 ], [ 1, %for.inc12 ]
  ret i32 %retval.0
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @MBType2Value(ptr nocapture noundef readonly %currMB) local_unnamed_addr #11 {
entry:
  %0 = load ptr, ptr @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %1 = load i32, ptr %type, align 4
  %cmp.not = icmp eq i32 %1, 1
  %mb_type30 = getelementptr inbounds %struct.macroblock, ptr %currMB, i64 0, i32 8
  %2 = load i32, ptr %mb_type30, align 8
  br i1 %cmp.not, label %if.else29, label %if.then

if.then:                                          ; preds = %entry
  switch i32 %2, label %cleanup [
    i32 13, label %if.then4
    i32 9, label %if.then4
    i32 10, label %if.then9
    i32 14, label %if.then16
    i32 8, label %if.then23
  ]

if.then4:                                         ; preds = %if.then, %if.then
  %cmp6 = icmp eq i32 %1, 2
  %cond = select i1 %cmp6, i32 0, i32 6
  br label %cleanup

if.then9:                                         ; preds = %if.then
  %cmp11 = icmp eq i32 %1, 2
  %cond12 = select i1 %cmp11, i32 0, i32 6
  %i16offset = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 94
  %3 = load i32, ptr %i16offset, align 4
  %add = add nsw i32 %3, %cond12
  br label %cleanup

if.then16:                                        ; preds = %if.then
  %cmp18 = icmp eq i32 %1, 2
  %cond19 = select i1 %cmp18, i32 25, i32 31
  br label %cleanup

if.then23:                                        ; preds = %if.then
  %4 = load ptr, ptr @input, align 8
  %symbol_mode = getelementptr inbounds %struct.InputParameters, ptr %4, i64 0, i32 74
  %5 = load i32, ptr %symbol_mode, align 8
  %cmp24 = icmp eq i32 %5, 0
  br i1 %cmp24, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %if.then23
  %block_y.i = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 38
  %6 = load i32, ptr %block_y.i, align 4
  %block_x.i = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 37
  %7 = load i32, ptr %block_x.i, align 8
  %8 = load ptr, ptr @enc_picture, align 8
  %ref_idx.i = getelementptr inbounds %struct.storable_picture, ptr %8, i64 0, i32 35
  %9 = load ptr, ptr %ref_idx.i, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = sext i32 %7 to i64
  %12 = sext i32 %6 to i64
  %13 = add nsw i32 %7, 3
  %14 = sext i32 %13 to i64
  %15 = add nsw i32 %6, 3
  %16 = sext i32 %15 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc12.i, %land.lhs.true
  %indvars.iv25.i = phi i64 [ %12, %land.lhs.true ], [ %indvars.iv.next26.i, %for.inc12.i ]
  %arrayidx7.i = getelementptr inbounds ptr, ptr %10, i64 %indvars.iv25.i
  %17 = load ptr, ptr %arrayidx7.i, align 8
  br label %for.body6.i

for.cond2.i:                                      ; preds = %for.body6.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %cmp5.i = icmp slt i64 %indvars.iv.i, %14
  br i1 %cmp5.i, label %for.body6.i, label %for.inc12.i

for.body6.i:                                      ; preds = %for.cond2.i, %for.body.i
  %indvars.iv.i = phi i64 [ %11, %for.body.i ], [ %indvars.iv.next.i, %for.cond2.i ]
  %arrayidx9.i = getelementptr inbounds i8, ptr %17, i64 %indvars.iv.i
  %18 = load i8, ptr %arrayidx9.i, align 1
  %cmp10.not.i = icmp eq i8 %18, 0
  br i1 %cmp10.not.i, label %for.cond2.i, label %cleanup

for.inc12.i:                                      ; preds = %for.cond2.i
  %indvars.iv.next26.i = add nsw i64 %indvars.iv25.i, 1
  %cmp.i = icmp slt i64 %indvars.iv25.i, %16
  br i1 %cmp.i, label %for.body.i, label %cleanup

if.else29:                                        ; preds = %entry
  %b8pdir = getelementptr inbounds %struct.macroblock, ptr %currMB, i64 0, i32 15
  %19 = load i32, ptr %b8pdir, align 8
  %arrayidx32 = getelementptr inbounds %struct.macroblock, ptr %currMB, i64 0, i32 15, i64 3
  %20 = load i32, ptr %arrayidx32, align 4
  %cmp33 = icmp eq i32 %2, 0
  br i1 %cmp33, label %cleanup, label %if.else35

if.else35:                                        ; preds = %if.else29
  %21 = and i32 %2, -5
  %or.cond = icmp eq i32 %21, 9
  br i1 %or.cond, label %cleanup, label %if.else40

if.else40:                                        ; preds = %if.else35
  switch i32 %2, label %if.else63 [
    i32 10, label %if.then42
    i32 14, label %cleanup
    i32 8, label %if.then50
    i32 1, label %if.then53
    i32 2, label %if.then57
  ]

if.then42:                                        ; preds = %if.else40
  %i16offset43 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 94
  %22 = load i32, ptr %i16offset43, align 4
  %add44 = add nsw i32 %22, 23
  br label %cleanup

if.then50:                                        ; preds = %if.else40
  br label %cleanup

if.then53:                                        ; preds = %if.else40
  %idxprom = sext i32 %19 to i64
  %arrayidx54 = getelementptr inbounds [3 x i32], ptr @MBType2Value.dir1offset, i64 0, i64 %idxprom
  %23 = load i32, ptr %arrayidx54, align 4
  br label %cleanup

if.then57:                                        ; preds = %if.else40
  %idxprom58 = sext i32 %19 to i64
  %idxprom60 = sext i32 %20 to i64
  %arrayidx61 = getelementptr inbounds [3 x [3 x i32]], ptr @MBType2Value.dir2offset, i64 0, i64 %idxprom58, i64 %idxprom60
  %24 = load i32, ptr %arrayidx61, align 4
  %add62 = add nsw i32 %24, 4
  br label %cleanup

if.else63:                                        ; preds = %if.else40
  %idxprom64 = sext i32 %19 to i64
  %idxprom66 = sext i32 %20 to i64
  %arrayidx67 = getelementptr inbounds [3 x [3 x i32]], ptr @MBType2Value.dir2offset, i64 0, i64 %idxprom64, i64 %idxprom66
  %25 = load i32, ptr %arrayidx67, align 4
  %add68 = add nsw i32 %25, 5
  br label %cleanup

cleanup:                                          ; preds = %for.inc12.i, %for.body6.i, %if.then23, %if.else40, %if.else35, %if.else29, %if.then, %if.else63, %if.then57, %if.then53, %if.then50, %if.then42, %if.then16, %if.then9, %if.then4
  %retval.0 = phi i32 [ %cond, %if.then4 ], [ %add, %if.then9 ], [ %cond19, %if.then16 ], [ %add44, %if.then42 ], [ 22, %if.then50 ], [ %23, %if.then53 ], [ %add62, %if.then57 ], [ %add68, %if.else63 ], [ %2, %if.then ], [ 0, %if.else29 ], [ 23, %if.else35 ], [ 48, %if.else40 ], [ 4, %if.then23 ], [ 4, %for.body6.i ], [ 5, %for.inc12.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @writeIntra4x4Modes() local_unnamed_addr #0 {
entry:
  %se = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se) #17
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 60
  %3 = load ptr, ptr %currentSlice, align 8
  %4 = load ptr, ptr @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, ptr %4, i64 0, i32 76
  %5 = load i32, ptr %partition_mode, align 8
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom1
  %6 = load ptr, ptr %arrayidx2, align 8
  %partArr = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 6
  %7 = load ptr, ptr %partArr, align 8
  %arrayidx3 = getelementptr inbounds i32, ptr %6, i64 4
  %8 = load i32, ptr %arrayidx3, align 4
  %idxprom4 = sext i32 %8 to i64
  %arrayidx5 = getelementptr inbounds %struct.datapartition, ptr %7, i64 %idxprom4
  %IntraChromaPredModeFlag = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 18
  store i32 1, ptr %IntraChromaPredModeFlag, align 4
  %context = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 6
  %value1 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  %value2 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  %len = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %arrayidx8 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 5, i64 5
  store i32 0, ptr %context, align 8
  %arrayidx7 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 0
  %9 = load i8, ptr %arrayidx7, align 1
  %conv = sext i8 %9 to i32
  store i32 %conv, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %10 = load ptr, ptr @writeIntraPredMode, align 8
  call void %10(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %11 = load i32, ptr %len, align 4
  %12 = load i32, ptr %arrayidx8, align 4
  %add = add nsw i32 %12, %11
  store i32 %add, ptr %arrayidx8, align 4
  %13 = load i32, ptr %len, align 4
  store i32 1, ptr %context, align 8
  %arrayidx7.1 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 1
  %14 = load i8, ptr %arrayidx7.1, align 1
  %conv.1 = sext i8 %14 to i32
  store i32 %conv.1, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %15 = load ptr, ptr @writeIntraPredMode, align 8
  call void %15(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %16 = load i32, ptr %len, align 4
  %17 = load i32, ptr %arrayidx8, align 4
  %add.1 = add nsw i32 %17, %16
  store i32 %add.1, ptr %arrayidx8, align 4
  %18 = load i32, ptr %len, align 4
  %add10.1 = add nsw i32 %18, %13
  store i32 2, ptr %context, align 8
  %arrayidx7.2 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 2
  %19 = load i8, ptr %arrayidx7.2, align 1
  %conv.2 = sext i8 %19 to i32
  store i32 %conv.2, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %20 = load ptr, ptr @writeIntraPredMode, align 8
  call void %20(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %21 = load i32, ptr %len, align 4
  %22 = load i32, ptr %arrayidx8, align 4
  %add.2 = add nsw i32 %22, %21
  store i32 %add.2, ptr %arrayidx8, align 4
  %23 = load i32, ptr %len, align 4
  %add10.2 = add nsw i32 %23, %add10.1
  store i32 3, ptr %context, align 8
  %arrayidx7.3 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 3
  %24 = load i8, ptr %arrayidx7.3, align 1
  %conv.3 = sext i8 %24 to i32
  store i32 %conv.3, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %25 = load ptr, ptr @writeIntraPredMode, align 8
  call void %25(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %26 = load i32, ptr %len, align 4
  %27 = load i32, ptr %arrayidx8, align 4
  %add.3 = add nsw i32 %27, %26
  store i32 %add.3, ptr %arrayidx8, align 4
  %28 = load i32, ptr %len, align 4
  %add10.3 = add nsw i32 %28, %add10.2
  store i32 4, ptr %context, align 8
  %arrayidx7.4 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 4
  %29 = load i8, ptr %arrayidx7.4, align 1
  %conv.4 = sext i8 %29 to i32
  store i32 %conv.4, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %30 = load ptr, ptr @writeIntraPredMode, align 8
  call void %30(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %31 = load i32, ptr %len, align 4
  %32 = load i32, ptr %arrayidx8, align 4
  %add.4 = add nsw i32 %32, %31
  store i32 %add.4, ptr %arrayidx8, align 4
  %33 = load i32, ptr %len, align 4
  %add10.4 = add nsw i32 %33, %add10.3
  store i32 5, ptr %context, align 8
  %arrayidx7.5 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 5
  %34 = load i8, ptr %arrayidx7.5, align 1
  %conv.5 = sext i8 %34 to i32
  store i32 %conv.5, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %35 = load ptr, ptr @writeIntraPredMode, align 8
  call void %35(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %36 = load i32, ptr %len, align 4
  %37 = load i32, ptr %arrayidx8, align 4
  %add.5 = add nsw i32 %37, %36
  store i32 %add.5, ptr %arrayidx8, align 4
  %38 = load i32, ptr %len, align 4
  %add10.5 = add nsw i32 %38, %add10.4
  store i32 6, ptr %context, align 8
  %arrayidx7.6 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 6
  %39 = load i8, ptr %arrayidx7.6, align 1
  %conv.6 = sext i8 %39 to i32
  store i32 %conv.6, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %40 = load ptr, ptr @writeIntraPredMode, align 8
  call void %40(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %41 = load i32, ptr %len, align 4
  %42 = load i32, ptr %arrayidx8, align 4
  %add.6 = add nsw i32 %42, %41
  store i32 %add.6, ptr %arrayidx8, align 4
  %43 = load i32, ptr %len, align 4
  %add10.6 = add nsw i32 %43, %add10.5
  store i32 7, ptr %context, align 8
  %arrayidx7.7 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 7
  %44 = load i8, ptr %arrayidx7.7, align 1
  %conv.7 = sext i8 %44 to i32
  store i32 %conv.7, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %45 = load ptr, ptr @writeIntraPredMode, align 8
  call void %45(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %46 = load i32, ptr %len, align 4
  %47 = load i32, ptr %arrayidx8, align 4
  %add.7 = add nsw i32 %47, %46
  store i32 %add.7, ptr %arrayidx8, align 4
  %48 = load i32, ptr %len, align 4
  %add10.7 = add nsw i32 %48, %add10.6
  store i32 8, ptr %context, align 8
  %arrayidx7.8 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 8
  %49 = load i8, ptr %arrayidx7.8, align 1
  %conv.8 = sext i8 %49 to i32
  store i32 %conv.8, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %50 = load ptr, ptr @writeIntraPredMode, align 8
  call void %50(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %51 = load i32, ptr %len, align 4
  %52 = load i32, ptr %arrayidx8, align 4
  %add.8 = add nsw i32 %52, %51
  store i32 %add.8, ptr %arrayidx8, align 4
  %53 = load i32, ptr %len, align 4
  %add10.8 = add nsw i32 %53, %add10.7
  store i32 9, ptr %context, align 8
  %arrayidx7.9 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 9
  %54 = load i8, ptr %arrayidx7.9, align 1
  %conv.9 = sext i8 %54 to i32
  store i32 %conv.9, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %55 = load ptr, ptr @writeIntraPredMode, align 8
  call void %55(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %56 = load i32, ptr %len, align 4
  %57 = load i32, ptr %arrayidx8, align 4
  %add.9 = add nsw i32 %57, %56
  store i32 %add.9, ptr %arrayidx8, align 4
  %58 = load i32, ptr %len, align 4
  %add10.9 = add nsw i32 %58, %add10.8
  store i32 10, ptr %context, align 8
  %arrayidx7.10 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 10
  %59 = load i8, ptr %arrayidx7.10, align 1
  %conv.10 = sext i8 %59 to i32
  store i32 %conv.10, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %60 = load ptr, ptr @writeIntraPredMode, align 8
  call void %60(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %61 = load i32, ptr %len, align 4
  %62 = load i32, ptr %arrayidx8, align 4
  %add.10 = add nsw i32 %62, %61
  store i32 %add.10, ptr %arrayidx8, align 4
  %63 = load i32, ptr %len, align 4
  %add10.10 = add nsw i32 %63, %add10.9
  store i32 11, ptr %context, align 8
  %arrayidx7.11 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 11
  %64 = load i8, ptr %arrayidx7.11, align 1
  %conv.11 = sext i8 %64 to i32
  store i32 %conv.11, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %65 = load ptr, ptr @writeIntraPredMode, align 8
  call void %65(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %66 = load i32, ptr %len, align 4
  %67 = load i32, ptr %arrayidx8, align 4
  %add.11 = add nsw i32 %67, %66
  store i32 %add.11, ptr %arrayidx8, align 4
  %68 = load i32, ptr %len, align 4
  %add10.11 = add nsw i32 %68, %add10.10
  store i32 12, ptr %context, align 8
  %arrayidx7.12 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 12
  %69 = load i8, ptr %arrayidx7.12, align 1
  %conv.12 = sext i8 %69 to i32
  store i32 %conv.12, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %70 = load ptr, ptr @writeIntraPredMode, align 8
  call void %70(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %71 = load i32, ptr %len, align 4
  %72 = load i32, ptr %arrayidx8, align 4
  %add.12 = add nsw i32 %72, %71
  store i32 %add.12, ptr %arrayidx8, align 4
  %73 = load i32, ptr %len, align 4
  %add10.12 = add nsw i32 %73, %add10.11
  store i32 13, ptr %context, align 8
  %arrayidx7.13 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 13
  %74 = load i8, ptr %arrayidx7.13, align 1
  %conv.13 = sext i8 %74 to i32
  store i32 %conv.13, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %75 = load ptr, ptr @writeIntraPredMode, align 8
  call void %75(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %76 = load i32, ptr %len, align 4
  %77 = load i32, ptr %arrayidx8, align 4
  %add.13 = add nsw i32 %77, %76
  store i32 %add.13, ptr %arrayidx8, align 4
  %78 = load i32, ptr %len, align 4
  %add10.13 = add nsw i32 %78, %add10.12
  store i32 14, ptr %context, align 8
  %arrayidx7.14 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 14
  %79 = load i8, ptr %arrayidx7.14, align 1
  %conv.14 = sext i8 %79 to i32
  store i32 %conv.14, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %80 = load ptr, ptr @writeIntraPredMode, align 8
  call void %80(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %81 = load i32, ptr %len, align 4
  %82 = load i32, ptr %arrayidx8, align 4
  %add.14 = add nsw i32 %82, %81
  store i32 %add.14, ptr %arrayidx8, align 4
  %83 = load i32, ptr %len, align 4
  %add10.14 = add nsw i32 %83, %add10.13
  store i32 15, ptr %context, align 8
  %arrayidx7.15 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 10, i64 15
  %84 = load i8, ptr %arrayidx7.15, align 1
  %conv.15 = sext i8 %84 to i32
  store i32 %conv.15, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %85 = load ptr, ptr @writeIntraPredMode, align 8
  call void %85(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %86 = load i32, ptr %len, align 4
  %87 = load i32, ptr %arrayidx8, align 4
  %add.15 = add nsw i32 %87, %86
  store i32 %add.15, ptr %arrayidx8, align 4
  %88 = load i32, ptr %len, align 4
  %add10.15 = add nsw i32 %88, %add10.14
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se) #17
  ret i32 %add10.15
}

; Function Attrs: nounwind uwtable
define dso_local i32 @writeIntra8x8Modes() local_unnamed_addr #0 {
entry:
  %se = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se) #17
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 60
  %3 = load ptr, ptr %currentSlice, align 8
  %4 = load ptr, ptr @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, ptr %4, i64 0, i32 76
  %5 = load i32, ptr %partition_mode, align 8
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom1
  %6 = load ptr, ptr %arrayidx2, align 8
  %partArr = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 6
  %7 = load ptr, ptr %partArr, align 8
  %arrayidx3 = getelementptr inbounds i32, ptr %6, i64 4
  %8 = load i32, ptr %arrayidx3, align 4
  %idxprom4 = sext i32 %8 to i64
  %arrayidx5 = getelementptr inbounds %struct.datapartition, ptr %7, i64 %idxprom4
  %IntraChromaPredModeFlag = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 18
  store i32 1, ptr %IntraChromaPredModeFlag, align 4
  %context = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 6
  %value1 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  %value2 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  %len = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %arrayidx9 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 5, i64 5
  store i32 0, ptr %context, align 8
  %arrayidx8 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 11, i64 0
  %9 = load i8, ptr %arrayidx8, align 1
  %conv = sext i8 %9 to i32
  store i32 %conv, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %10 = load ptr, ptr @writeIntraPredMode, align 8
  call void %10(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %11 = load i32, ptr %len, align 4
  %12 = load i32, ptr %arrayidx9, align 4
  %add = add nsw i32 %12, %11
  store i32 %add, ptr %arrayidx9, align 4
  %13 = load i32, ptr %len, align 4
  store i32 4, ptr %context, align 8
  %arrayidx8.1 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 11, i64 4
  %14 = load i8, ptr %arrayidx8.1, align 1
  %conv.1 = sext i8 %14 to i32
  store i32 %conv.1, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %15 = load ptr, ptr @writeIntraPredMode, align 8
  call void %15(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %16 = load i32, ptr %len, align 4
  %17 = load i32, ptr %arrayidx9, align 4
  %add.1 = add nsw i32 %17, %16
  store i32 %add.1, ptr %arrayidx9, align 4
  %18 = load i32, ptr %len, align 4
  %add11.1 = add nsw i32 %18, %13
  store i32 8, ptr %context, align 8
  %arrayidx8.2 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 11, i64 8
  %19 = load i8, ptr %arrayidx8.2, align 1
  %conv.2 = sext i8 %19 to i32
  store i32 %conv.2, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %20 = load ptr, ptr @writeIntraPredMode, align 8
  call void %20(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %21 = load i32, ptr %len, align 4
  %22 = load i32, ptr %arrayidx9, align 4
  %add.2 = add nsw i32 %22, %21
  store i32 %add.2, ptr %arrayidx9, align 4
  %23 = load i32, ptr %len, align 4
  %add11.2 = add nsw i32 %23, %add11.1
  store i32 12, ptr %context, align 8
  %arrayidx8.3 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 11, i64 12
  %24 = load i8, ptr %arrayidx8.3, align 1
  %conv.3 = sext i8 %24 to i32
  store i32 %conv.3, ptr %value1, align 4
  store i32 0, ptr %value2, align 8
  store i32 4, ptr %se, align 8
  %25 = load ptr, ptr @writeIntraPredMode, align 8
  call void %25(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %26 = load i32, ptr %len, align 4
  %27 = load i32, ptr %arrayidx9, align 4
  %add.3 = add nsw i32 %27, %26
  store i32 %add.3, ptr %arrayidx9, align 4
  %28 = load i32, ptr %len, align 4
  %add11.3 = add nsw i32 %28, %add11.2
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se) #17
  ret i32 %add11.3
}

; Function Attrs: nounwind uwtable
define dso_local i32 @writeIntraModes() local_unnamed_addr #0 {
entry:
  %se.i = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  %mb_type = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 8
  %3 = load i32, ptr %mb_type, align 8
  switch i32 %3, label %return [
    i32 9, label %sw.bb
    i32 13, label %sw.bb1
  ]

sw.bb:                                            ; preds = %entry
  %call = tail call i32 @writeIntra4x4Modes()
  br label %return

sw.bb1:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se.i) #17
  %currentSlice.i = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 60
  %4 = load ptr, ptr %currentSlice.i, align 8
  %5 = load ptr, ptr @input, align 8
  %partition_mode.i = getelementptr inbounds %struct.InputParameters, ptr %5, i64 0, i32 76
  %6 = load i32, ptr %partition_mode.i, align 8
  %idxprom1.i = sext i32 %6 to i64
  %arrayidx2.i = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom1.i
  %7 = load ptr, ptr %arrayidx2.i, align 8
  %partArr.i = getelementptr inbounds %struct.Slice, ptr %4, i64 0, i32 6
  %8 = load ptr, ptr %partArr.i, align 8
  %arrayidx3.i = getelementptr inbounds i32, ptr %7, i64 4
  %9 = load i32, ptr %arrayidx3.i, align 4
  %idxprom4.i = sext i32 %9 to i64
  %arrayidx5.i = getelementptr inbounds %struct.datapartition, ptr %8, i64 %idxprom4.i
  %IntraChromaPredModeFlag.i = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 18
  store i32 1, ptr %IntraChromaPredModeFlag.i, align 4
  %context.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i, i64 0, i32 6
  %value1.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i, i64 0, i32 1
  %value2.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i, i64 0, i32 2
  %len.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i, i64 0, i32 3
  %arrayidx9.i = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 5, i64 5
  store i32 0, ptr %context.i, align 8
  %arrayidx8.i = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 11, i64 0
  %10 = load i8, ptr %arrayidx8.i, align 1
  %conv.i = sext i8 %10 to i32
  store i32 %conv.i, ptr %value1.i, align 4
  store i32 0, ptr %value2.i, align 8
  store i32 4, ptr %se.i, align 8
  %11 = load ptr, ptr @writeIntraPredMode, align 8
  call void %11(ptr noundef nonnull %se.i, ptr noundef %arrayidx5.i) #17
  %12 = load i32, ptr %len.i, align 4
  %13 = load i32, ptr %arrayidx9.i, align 4
  %add.i = add nsw i32 %13, %12
  store i32 %add.i, ptr %arrayidx9.i, align 4
  %14 = load i32, ptr %len.i, align 4
  store i32 4, ptr %context.i, align 8
  %arrayidx8.1.i = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 11, i64 4
  %15 = load i8, ptr %arrayidx8.1.i, align 1
  %conv.1.i = sext i8 %15 to i32
  store i32 %conv.1.i, ptr %value1.i, align 4
  store i32 0, ptr %value2.i, align 8
  store i32 4, ptr %se.i, align 8
  %16 = load ptr, ptr @writeIntraPredMode, align 8
  call void %16(ptr noundef nonnull %se.i, ptr noundef %arrayidx5.i) #17
  %17 = load i32, ptr %len.i, align 4
  %18 = load i32, ptr %arrayidx9.i, align 4
  %add.1.i = add nsw i32 %18, %17
  store i32 %add.1.i, ptr %arrayidx9.i, align 4
  %19 = load i32, ptr %len.i, align 4
  %add11.1.i = add nsw i32 %19, %14
  store i32 8, ptr %context.i, align 8
  %arrayidx8.2.i = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 11, i64 8
  %20 = load i8, ptr %arrayidx8.2.i, align 1
  %conv.2.i = sext i8 %20 to i32
  store i32 %conv.2.i, ptr %value1.i, align 4
  store i32 0, ptr %value2.i, align 8
  store i32 4, ptr %se.i, align 8
  %21 = load ptr, ptr @writeIntraPredMode, align 8
  call void %21(ptr noundef nonnull %se.i, ptr noundef %arrayidx5.i) #17
  %22 = load i32, ptr %len.i, align 4
  %23 = load i32, ptr %arrayidx9.i, align 4
  %add.2.i = add nsw i32 %23, %22
  store i32 %add.2.i, ptr %arrayidx9.i, align 4
  %24 = load i32, ptr %len.i, align 4
  %add11.2.i = add nsw i32 %add11.1.i, %24
  store i32 12, ptr %context.i, align 8
  %arrayidx8.3.i = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 11, i64 12
  %25 = load i8, ptr %arrayidx8.3.i, align 1
  %conv.3.i = sext i8 %25 to i32
  store i32 %conv.3.i, ptr %value1.i, align 4
  store i32 0, ptr %value2.i, align 8
  store i32 4, ptr %se.i, align 8
  %26 = load ptr, ptr @writeIntraPredMode, align 8
  call void %26(ptr noundef nonnull %se.i, ptr noundef %arrayidx5.i) #17
  %27 = load i32, ptr %len.i, align 4
  %28 = load i32, ptr %arrayidx9.i, align 4
  %add.3.i = add nsw i32 %28, %27
  store i32 %add.3.i, ptr %arrayidx9.i, align 4
  %29 = load i32, ptr %len.i, align 4
  %add11.3.i = add nsw i32 %add11.2.i, %29
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se.i) #17
  br label %return

return:                                           ; preds = %entry, %sw.bb1, %sw.bb
  %retval.0 = phi i32 [ %add11.3.i, %sw.bb1 ], [ %call, %sw.bb ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @B8Mode2Value(i32 noundef %b8mode, i32 noundef %b8pdir) local_unnamed_addr #12 {
entry:
  %0 = load ptr, ptr @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %1 = load i32, ptr %type, align 4
  %cmp.not = icmp eq i32 %1, 1
  br i1 %cmp.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %sub = add nsw i32 %b8mode, -4
  br label %return

if.else:                                          ; preds = %entry
  %idxprom = sext i32 %b8mode to i64
  %arrayidx = getelementptr inbounds [8 x i32], ptr @B8Mode2Value.b8start, i64 0, i64 %idxprom
  %2 = load i32, ptr %arrayidx, align 4
  %arrayidx2 = getelementptr inbounds [8 x i32], ptr @B8Mode2Value.b8inc, i64 0, i64 %idxprom
  %3 = load i32, ptr %arrayidx2, align 4
  %mul = mul nsw i32 %3, %b8pdir
  %add = add nsw i32 %mul, %2
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ %add, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @writeMBLayer(i32 noundef %rdopt, ptr nocapture noundef %coeff_rate) local_unnamed_addr #0 {
entry:
  %se.i621 = alloca %struct.syntaxelement, align 8
  %se.i605 = alloca %struct.syntaxelement, align 8
  %se.i = alloca %struct.syntaxelement, align 8
  %se = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %1 = load i32, ptr %current_mb_nr, align 4
  %call = tail call i32 @FmoGetPreviousMBNr(i32 noundef %1) #17
  %2 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 61
  %3 = load ptr, ptr %mb_data, align 8
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom
  %tobool.not = icmp eq i32 %1, 0
  %idxprom3 = sext i32 %call to i64
  %arrayidx4 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom3
  %cond = select i1 %tobool.not, ptr null, ptr %arrayidx4
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se) #17
  %bitcounter = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 5
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 60
  %4 = load ptr, ptr %currentSlice, align 8
  %5 = load ptr, ptr @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, ptr %5, i64 0, i32 76
  %6 = load i32, ptr %partition_mode, align 8
  %idxprom5 = sext i32 %6 to i64
  %arrayidx6 = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom5
  %7 = load ptr, ptr %arrayidx6, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 8
  %8 = load i32, ptr %mb_type, align 8
  %tobool7.not = icmp eq i32 %8, 0
  br i1 %tobool7.not, label %cond.false9, label %cond.end15

cond.false9:                                      ; preds = %entry
  %type = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 5
  %9 = load i32, ptr %type, align 4
  %cmp = icmp eq i32 %9, 1
  br i1 %cmp, label %cond.true10, label %cond.end15

cond.true10:                                      ; preds = %cond.false9
  %cbp = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 12
  %10 = load i32, ptr %cbp, align 4
  %tobool11.not = icmp eq i32 %10, 0
  br label %cond.end15

cond.end15:                                       ; preds = %cond.true10, %cond.false9, %entry
  %cond16 = phi i1 [ false, %entry ], [ %tobool11.not, %cond.true10 ], [ true, %cond.false9 ]
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 100
  %11 = load i32, ptr %MbaffFrameFlag, align 4
  %tobool18.not = icmp eq i32 %11, 0
  br i1 %tobool18.not, label %if.end36, label %if.then

if.then:                                          ; preds = %cond.end15
  %and = and i32 %1, 1
  %cmp19 = icmp eq i32 %and, 0
  br i1 %cmp19, label %if.end36, label %if.else

if.else:                                          ; preds = %if.then
  %mb_type21 = getelementptr inbounds %struct.macroblock, ptr %cond, i64 0, i32 8
  %12 = load i32, ptr %mb_type21, align 8
  %tobool22.not = icmp eq i32 %12, 0
  br i1 %tobool22.not, label %cond.false24, label %if.end

cond.false24:                                     ; preds = %if.else
  %type25 = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 5
  %13 = load i32, ptr %type25, align 4
  %cmp26 = icmp eq i32 %13, 1
  br i1 %cmp26, label %cond.true27, label %if.then31

cond.true27:                                      ; preds = %cond.false24
  %cbp28 = getelementptr inbounds %struct.macroblock, ptr %cond, i64 0, i32 12
  %14 = load i32, ptr %cbp28, align 4
  %tobool29.not = icmp eq i32 %14, 0
  br i1 %tobool29.not, label %if.then31, label %if.end

if.then31:                                        ; preds = %cond.false24, %cond.true27
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then31, %cond.true27
  %WriteFrameFieldMBInHeader.0 = phi i32 [ 0, %if.else ], [ 0, %cond.true27 ], [ 1, %if.then31 ]
  %skip_flag = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom3, i32 43
  %15 = load i32, ptr %skip_flag, align 8
  br label %if.end36

if.end36:                                         ; preds = %if.then, %if.end, %cond.end15
  %prevMbSkipped.0 = phi i32 [ %15, %if.end ], [ 0, %cond.end15 ], [ 0, %if.then ]
  %WriteFrameFieldMBInHeader.1 = phi i32 [ %WriteFrameFieldMBInHeader.0, %if.end ], [ 0, %cond.end15 ], [ 1, %if.then ]
  %16 = add i32 %8, -9
  %switch.and = and i32 %16, -6
  %switch.selectcmp = icmp eq i32 %switch.and, 0
  %lor.ext = zext i1 %switch.selectcmp to i32
  %IntraChromaPredModeFlag = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 18
  store i32 %lor.ext, ptr %IntraChromaPredModeFlag, align 4
  %partArr = getelementptr inbounds %struct.Slice, ptr %4, i64 0, i32 6
  %17 = load ptr, ptr %partArr, align 8
  %arrayidx46 = getelementptr inbounds i32, ptr %7, i64 2
  %18 = load i32, ptr %arrayidx46, align 4
  %idxprom47 = sext i32 %18 to i64
  %arrayidx48 = getelementptr inbounds %struct.datapartition, ptr %17, i64 %idxprom47
  %type49 = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 5
  %19 = load i32, ptr %type49, align 4
  %cmp50 = icmp eq i32 %19, 2
  br i1 %cmp50, label %if.then51, label %if.else68

if.then51:                                        ; preds = %if.end36
  %tobool52.not = icmp eq i32 %WriteFrameFieldMBInHeader.1, 0
  br i1 %tobool52.not, label %if.end58, label %if.then53

if.then53:                                        ; preds = %if.then51
  %mb_field = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 19
  %20 = load i32, ptr %mb_field, align 8
  %value1 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  store i32 %20, ptr %value1, align 4
  %value2 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  store i32 0, ptr %value2, align 8
  store i32 2, ptr %se, align 8
  %21 = load ptr, ptr @writeFieldModeInfo, align 8
  call void %21(ptr noundef nonnull %se, ptr noundef %arrayidx48) #17
  %len = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %22 = load i32, ptr %len, align 4
  %arrayidx55 = getelementptr inbounds i32, ptr %bitcounter, i64 2
  %23 = load i32, ptr %arrayidx55, align 4
  %add = add nsw i32 %23, %22
  store i32 %add, ptr %arrayidx55, align 4
  %24 = load i32, ptr %len, align 4
  br label %if.end58

if.end58:                                         ; preds = %if.then53, %if.then51
  %no_bits.0 = phi i32 [ %24, %if.then53 ], [ 0, %if.then51 ]
  %call59 = call i32 @MBType2Value(ptr noundef nonnull %arrayidx)
  %value160 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  store i32 %call59, ptr %value160, align 4
  %value261 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  store i32 0, ptr %value261, align 8
  store i32 2, ptr %se, align 8
  %25 = load ptr, ptr @writeMB_typeInfo, align 8
  call void %25(ptr noundef nonnull %se, ptr noundef %arrayidx48) #17
  %len63 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %26 = load i32, ptr %len63, align 4
  %arrayidx64 = getelementptr inbounds i32, ptr %bitcounter, i64 2
  %27 = load i32, ptr %arrayidx64, align 4
  %add65 = add nsw i32 %27, %26
  store i32 %add65, ptr %arrayidx64, align 4
  %28 = load i32, ptr %len63, align 4
  %add67 = add nsw i32 %28, %no_bits.0
  br label %if.end219

if.else68:                                        ; preds = %if.end36
  %symbol_mode = getelementptr inbounds %struct.InputParameters, ptr %5, i64 0, i32 74
  %29 = load i32, ptr %symbol_mode, align 8
  %cmp69 = icmp eq i32 %29, 1
  br i1 %cmp69, label %if.then70, label %if.else130

if.then70:                                        ; preds = %if.else68
  br i1 %tobool18.not, label %if.end83, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then70
  %current_mb_nr73 = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 3
  %30 = load i32, ptr %current_mb_nr73, align 4
  %and74 = and i32 %30, 1
  %cmp75 = icmp eq i32 %and74, 0
  %tobool77 = icmp ne i32 %prevMbSkipped.0, 0
  %or.cond = select i1 %cmp75, i1 true, i1 %tobool77
  br i1 %or.cond, label %if.then78, label %if.end83

if.then78:                                        ; preds = %land.lhs.true
  %mb_field79 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 19
  %31 = load i32, ptr %mb_field79, align 8
  %call80 = tail call i32 @field_flag_inference() #17
  store i32 %call80, ptr %mb_field79, align 8
  tail call void @CheckAvailabilityOfNeighborsCABAC() #17
  store i32 %31, ptr %mb_field79, align 8
  br label %if.end83

if.end83:                                         ; preds = %land.lhs.true, %if.then78, %if.then70
  %call84 = tail call i32 @MBType2Value(ptr noundef nonnull %arrayidx)
  %value185 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  store i32 %call84, ptr %value185, align 4
  %cbp86 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 12
  %32 = load i32, ptr %cbp86, align 4
  %value287 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  store i32 %32, ptr %value287, align 8
  store i32 2, ptr %se, align 8
  call void @writeMB_skip_flagInfo_CABAC(ptr noundef nonnull %se, ptr noundef %arrayidx48) #17
  %len89 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %33 = load i32, ptr %len89, align 4
  %arrayidx90 = getelementptr inbounds i32, ptr %bitcounter, i64 2
  %34 = load i32, ptr %arrayidx90, align 4
  %add91 = add nsw i32 %34, %33
  store i32 %add91, ptr %arrayidx90, align 4
  %35 = load i32, ptr %len89, align 4
  call void @CheckAvailabilityOfNeighborsCABAC() #17
  %36 = load ptr, ptr @img, align 8
  %MbaffFrameFlag94 = getelementptr inbounds %struct.ImageParameters, ptr %36, i64 0, i32 100
  %37 = load i32, ptr %MbaffFrameFlag94, align 4
  %tobool95 = icmp eq i32 %37, 0
  %or.cond460 = select i1 %tobool95, i1 true, i1 %cond16
  %tobool99 = icmp eq i32 %WriteFrameFieldMBInHeader.1, 0
  %or.cond462.not = or i1 %tobool99, %or.cond460
  br i1 %or.cond462.not, label %if.end111, label %if.then100

if.then100:                                       ; preds = %if.end83
  %mb_field101 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 19
  %38 = load i32, ptr %mb_field101, align 8
  store i32 %38, ptr %value185, align 4
  store i32 0, ptr %value287, align 8
  store i32 2, ptr %se, align 8
  %39 = load ptr, ptr @writeFieldModeInfo, align 8
  call void %39(ptr noundef nonnull %se, ptr noundef %arrayidx48) #17
  %40 = load i32, ptr %len89, align 4
  %41 = load i32, ptr %arrayidx90, align 4
  %add107 = add nsw i32 %41, %40
  store i32 %add107, ptr %arrayidx90, align 4
  %42 = load i32, ptr %len89, align 4
  %add109 = add nsw i32 %42, %35
  br label %if.end111

if.end111:                                        ; preds = %if.then100, %if.end83
  %no_bits.1 = phi i32 [ %add109, %if.then100 ], [ %35, %if.end83 ]
  %43 = load i32, ptr %mb_type, align 8
  %cmp113.not = icmp eq i32 %43, 0
  br i1 %cmp113.not, label %lor.lhs.false114, label %if.then120

lor.lhs.false114:                                 ; preds = %if.end111
  %44 = load ptr, ptr @img, align 8
  %type115 = getelementptr inbounds %struct.ImageParameters, ptr %44, i64 0, i32 5
  %45 = load i32, ptr %type115, align 4
  %cmp116 = icmp eq i32 %45, 1
  br i1 %cmp116, label %land.lhs.true117, label %if.end219

land.lhs.true117:                                 ; preds = %lor.lhs.false114
  %46 = load i32, ptr %cbp86, align 4
  %cmp119.not = icmp eq i32 %46, 0
  br i1 %cmp119.not, label %if.end219, label %if.then120

if.then120:                                       ; preds = %land.lhs.true117, %if.end111
  store i32 %call84, ptr %value185, align 4
  store i32 0, ptr %value287, align 8
  store i32 2, ptr %se, align 8
  %47 = load ptr, ptr @writeMB_typeInfo, align 8
  call void %47(ptr noundef nonnull %se, ptr noundef %arrayidx48) #17
  %48 = load i32, ptr %len89, align 4
  %49 = load i32, ptr %arrayidx90, align 4
  %add126 = add nsw i32 %49, %48
  store i32 %add126, ptr %arrayidx90, align 4
  %50 = load i32, ptr %len89, align 4
  %add128 = add nsw i32 %50, %no_bits.1
  br label %if.end219

if.else130:                                       ; preds = %if.else68
  br i1 %tobool7.not, label %lor.lhs.false133, label %if.then139

lor.lhs.false133:                                 ; preds = %if.else130
  %cmp135 = icmp eq i32 %19, 1
  br i1 %cmp135, label %land.lhs.true136, label %if.else180

land.lhs.true136:                                 ; preds = %lor.lhs.false133
  %cbp137 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 12
  %51 = load i32, ptr %cbp137, align 4
  %cmp138.not = icmp eq i32 %51, 0
  br i1 %cmp138.not, label %if.else180, label %if.then139

if.then139:                                       ; preds = %land.lhs.true136, %if.else130
  %cod_counter = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 33
  %52 = load i32, ptr %cod_counter, align 8
  %value1140 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  store i32 %52, ptr %value1140, align 4
  %value2141 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  store i32 0, ptr %value2141, align 8
  store i32 2, ptr %se, align 8
  call void @writeSE_UVLC(ptr noundef nonnull %se, ptr noundef %arrayidx48) #17
  %len143 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %53 = load i32, ptr %len143, align 4
  %arrayidx144 = getelementptr inbounds i32, ptr %bitcounter, i64 2
  %54 = load i32, ptr %arrayidx144, align 4
  %add145 = add nsw i32 %54, %53
  store i32 %add145, ptr %arrayidx144, align 4
  %55 = load i32, ptr %len143, align 4
  %56 = load ptr, ptr @img, align 8
  %cod_counter148 = getelementptr inbounds %struct.ImageParameters, ptr %56, i64 0, i32 33
  store i32 0, ptr %cod_counter148, align 8
  %MbaffFrameFlag149 = getelementptr inbounds %struct.ImageParameters, ptr %56, i64 0, i32 100
  %57 = load i32, ptr %MbaffFrameFlag149, align 4
  %tobool150 = icmp eq i32 %57, 0
  %or.cond461 = select i1 %tobool150, i1 true, i1 %cond16
  %tobool154 = icmp eq i32 %WriteFrameFieldMBInHeader.1, 0
  %or.cond463.not = or i1 %tobool154, %or.cond461
  br i1 %or.cond463.not, label %if.end165, label %if.then155

if.then155:                                       ; preds = %if.then139
  %mb_field156 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 19
  %58 = load i32, ptr %mb_field156, align 8
  store i32 %58, ptr %value1140, align 4
  store i32 2, ptr %se, align 8
  call void @writeSE_Flag(ptr noundef nonnull %se, ptr noundef %arrayidx48) #17
  %59 = load i32, ptr %len143, align 4
  %60 = load i32, ptr %arrayidx144, align 4
  %add161 = add nsw i32 %60, %59
  store i32 %add161, ptr %arrayidx144, align 4
  %61 = load i32, ptr %len143, align 4
  %add163 = add nsw i32 %61, %55
  %.pre = load ptr, ptr @img, align 8
  br label %if.end165

if.end165:                                        ; preds = %if.then155, %if.then139
  %62 = phi ptr [ %.pre, %if.then155 ], [ %56, %if.then139 ]
  %no_bits.2 = phi i32 [ %add163, %if.then155 ], [ %55, %if.then139 ]
  %call166 = call i32 @MBType2Value(ptr noundef nonnull %arrayidx)
  store i32 %call166, ptr %value1140, align 4
  %type168 = getelementptr inbounds %struct.ImageParameters, ptr %62, i64 0, i32 5
  %63 = load i32, ptr %type168, align 4
  %cmp169.not = icmp eq i32 %63, 1
  br i1 %cmp169.not, label %if.end172, label %if.then170

if.then170:                                       ; preds = %if.end165
  %dec = add nsw i32 %call166, -1
  store i32 %dec, ptr %value1140, align 4
  br label %if.end172

if.end172:                                        ; preds = %if.then170, %if.end165
  store i32 2, ptr %se, align 8
  store i32 0, ptr %value2141, align 8
  %64 = load ptr, ptr @writeMB_typeInfo, align 8
  call void %64(ptr noundef nonnull %se, ptr noundef %arrayidx48) #17
  %65 = load i32, ptr %len143, align 4
  %66 = load i32, ptr %arrayidx144, align 4
  %add177 = add nsw i32 %66, %65
  store i32 %add177, ptr %arrayidx144, align 4
  %67 = load i32, ptr %len143, align 4
  %add179 = add nsw i32 %67, %no_bits.2
  br label %if.end219

if.else180:                                       ; preds = %land.lhs.true136, %lor.lhs.false133
  %cod_counter181 = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 33
  %68 = load i32, ptr %cod_counter181, align 8
  %inc = add nsw i32 %68, 1
  store i32 %inc, ptr %cod_counter181, align 8
  %skip_flag182 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 43
  store i32 1, ptr %skip_flag182, align 8
  %num_blk8x8_uv = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 158
  %69 = load i32, ptr %num_blk8x8_uv, align 8
  %cmp184665 = icmp sgt i32 %69, -4
  br i1 %cmp184665, label %for.cond185.preheader.lr.ph, label %for.end198

for.cond185.preheader.lr.ph:                      ; preds = %if.else180
  %nz_coeff = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 34
  %70 = load ptr, ptr %nz_coeff, align 8
  %current_mb_nr188 = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 3
  br label %for.cond185.preheader

for.cond185.preheader:                            ; preds = %for.cond185.preheader.lr.ph, %for.cond185.preheader
  %indvars.iv = phi i64 [ 0, %for.cond185.preheader.lr.ph ], [ %indvars.iv.next, %for.cond185.preheader ]
  %71 = load i32, ptr %current_mb_nr188, align 4
  %idxprom189 = sext i32 %71 to i64
  %arrayidx190 = getelementptr inbounds ptr, ptr %70, i64 %idxprom189
  %72 = load ptr, ptr %arrayidx190, align 8
  %73 = load ptr, ptr %72, align 8
  %arrayidx194 = getelementptr inbounds i32, ptr %73, i64 %indvars.iv
  store i32 0, ptr %arrayidx194, align 4
  %74 = load i32, ptr %current_mb_nr188, align 4
  %idxprom189.1 = sext i32 %74 to i64
  %arrayidx190.1 = getelementptr inbounds ptr, ptr %70, i64 %idxprom189.1
  %75 = load ptr, ptr %arrayidx190.1, align 8
  %arrayidx192.1 = getelementptr inbounds ptr, ptr %75, i64 1
  %76 = load ptr, ptr %arrayidx192.1, align 8
  %arrayidx194.1 = getelementptr inbounds i32, ptr %76, i64 %indvars.iv
  store i32 0, ptr %arrayidx194.1, align 4
  %77 = load i32, ptr %current_mb_nr188, align 4
  %idxprom189.2 = sext i32 %77 to i64
  %arrayidx190.2 = getelementptr inbounds ptr, ptr %70, i64 %idxprom189.2
  %78 = load ptr, ptr %arrayidx190.2, align 8
  %arrayidx192.2 = getelementptr inbounds ptr, ptr %78, i64 2
  %79 = load ptr, ptr %arrayidx192.2, align 8
  %arrayidx194.2 = getelementptr inbounds i32, ptr %79, i64 %indvars.iv
  store i32 0, ptr %arrayidx194.2, align 4
  %80 = load i32, ptr %current_mb_nr188, align 4
  %idxprom189.3 = sext i32 %80 to i64
  %arrayidx190.3 = getelementptr inbounds ptr, ptr %70, i64 %idxprom189.3
  %81 = load ptr, ptr %arrayidx190.3, align 8
  %arrayidx192.3 = getelementptr inbounds ptr, ptr %81, i64 3
  %82 = load ptr, ptr %arrayidx192.3, align 8
  %arrayidx194.3 = getelementptr inbounds i32, ptr %82, i64 %indvars.iv
  store i32 0, ptr %arrayidx194.3, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %83 = load i32, ptr %num_blk8x8_uv, align 8
  %84 = add nsw i32 %83, 3
  %85 = sext i32 %84 to i64
  %cmp184 = icmp slt i64 %indvars.iv, %85
  br i1 %cmp184, label %for.cond185.preheader, label %for.end198

for.end198:                                       ; preds = %for.cond185.preheader, %if.else180
  %current_mb_nr199 = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 3
  %86 = load i32, ptr %current_mb_nr199, align 4
  %call200 = tail call i32 @FmoGetNextMBNr(i32 noundef %86) #17
  %cmp201 = icmp eq i32 %call200, -1
  br i1 %cmp201, label %land.lhs.true202, label %if.end219

land.lhs.true202:                                 ; preds = %for.end198
  %87 = load ptr, ptr @img, align 8
  %cod_counter203 = getelementptr inbounds %struct.ImageParameters, ptr %87, i64 0, i32 33
  %88 = load i32, ptr %cod_counter203, align 8
  %cmp204 = icmp sgt i32 %88, 0
  br i1 %cmp204, label %if.then205, label %if.end219

if.then205:                                       ; preds = %land.lhs.true202
  %value1207 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  store i32 %88, ptr %value1207, align 4
  %value2208 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  store i32 0, ptr %value2208, align 8
  store i32 2, ptr %se, align 8
  call void @writeSE_UVLC(ptr noundef nonnull %se, ptr noundef %arrayidx48) #17
  %len210 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %89 = load i32, ptr %len210, align 4
  %arrayidx211 = getelementptr inbounds i32, ptr %bitcounter, i64 2
  %90 = load i32, ptr %arrayidx211, align 4
  %add212 = add nsw i32 %90, %89
  store i32 %add212, ptr %arrayidx211, align 4
  %91 = load i32, ptr %len210, align 4
  %92 = load ptr, ptr @img, align 8
  %cod_counter215 = getelementptr inbounds %struct.ImageParameters, ptr %92, i64 0, i32 33
  store i32 0, ptr %cod_counter215, align 8
  br label %if.end219

if.end219:                                        ; preds = %if.then120, %land.lhs.true117, %lor.lhs.false114, %for.end198, %land.lhs.true202, %if.then205, %if.end172, %if.end58
  %no_bits.3 = phi i32 [ %add67, %if.end58 ], [ %add128, %if.then120 ], [ %no_bits.1, %land.lhs.true117 ], [ %no_bits.1, %lor.lhs.false114 ], [ %add179, %if.end172 ], [ %91, %if.then205 ], [ 0, %land.lhs.true202 ], [ 0, %for.end198 ]
  %93 = load i32, ptr %mb_type, align 8
  %cmp221 = icmp eq i32 %93, 0
  br i1 %cmp221, label %land.lhs.true222, label %land.end

land.lhs.true222:                                 ; preds = %if.end219
  %94 = load ptr, ptr @img, align 8
  %type223 = getelementptr inbounds %struct.ImageParameters, ptr %94, i64 0, i32 5
  %95 = load i32, ptr %type223, align 4
  %cmp224 = icmp eq i32 %95, 1
  br i1 %cmp224, label %land.rhs, label %if.end375.thread

land.rhs:                                         ; preds = %land.lhs.true222
  %96 = load ptr, ptr @active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %96, i64 0, i32 27
  %97 = load i32, ptr %direct_8x8_inference_flag, align 4
  %tobool225.not = icmp eq i32 %97, 0
  br label %if.end375.thread

if.end375.thread:                                 ; preds = %land.lhs.true222, %land.rhs
  %.ph = phi i1 [ %tobool225.not, %land.rhs ], [ false, %land.lhs.true222 ]
  %not.660 = xor i1 %.ph, true
  %cond228661 = zext i1 %not.660 to i32
  %NoMbPartLessThan8x8Flag662 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 32
  store i32 %cond228661, ptr %NoMbPartLessThan8x8Flag662, align 4
  br label %if.end393

land.end:                                         ; preds = %if.end219
  %NoMbPartLessThan8x8Flag = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 32
  store i32 1, ptr %NoMbPartLessThan8x8Flag, align 4
  switch i32 %93, label %if.end375 [
    i32 14, label %if.then231
    i32 8, label %if.then330
  ]

if.then231:                                       ; preds = %land.end
  %98 = load ptr, ptr @input, align 8
  %symbol_mode232 = getelementptr inbounds %struct.InputParameters, ptr %98, i64 0, i32 74
  %99 = load i32, ptr %symbol_mode232, align 8
  %cmp233 = icmp eq i32 %99, 1
  br i1 %cmp233, label %if.then234, label %if.end240

if.then234:                                       ; preds = %if.then231
  %ee_cabac = getelementptr inbounds %struct.datapartition, ptr %17, i64 %idxprom47, i32 1
  %call236 = call i32 @arienco_bits_written(ptr noundef nonnull %ee_cabac) #17
  call void @arienco_done_encoding(ptr noundef nonnull %ee_cabac) #17
  %call237 = call i32 @arienco_bits_written(ptr noundef nonnull %ee_cabac) #17
  %sub = sub i32 %no_bits.3, %call236
  %add238 = add i32 %sub, %call237
  %100 = load ptr, ptr %arrayidx48, align 8
  %streamBuffer = getelementptr inbounds %struct.Bitstream, ptr %100, i64 0, i32 9
  %101 = load ptr, ptr %streamBuffer, align 8
  call void @arienco_start_encoding(ptr noundef nonnull %ee_cabac, ptr noundef %101, ptr noundef %100) #17
  call void @reset_pic_bin_count() #17
  br label %if.end240

if.end240:                                        ; preds = %if.then234, %if.then231
  %no_bits.4 = phi i32 [ %add238, %if.then234 ], [ %no_bits.3, %if.then231 ]
  %102 = load ptr, ptr %arrayidx48, align 8
  %bits_to_go = getelementptr inbounds %struct.Bitstream, ptr %102, i64 0, i32 1
  %103 = load i32, ptr %bits_to_go, align 4
  %cmp242 = icmp slt i32 %103, 8
  br i1 %cmp242, label %if.then243, label %if.end253

if.then243:                                       ; preds = %if.end240
  store i32 2, ptr %se, align 8
  %len247 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  store i32 %103, ptr %len247, align 4
  %add249 = add nsw i32 %103, %no_bits.4
  %arrayidx251 = getelementptr inbounds i32, ptr %bitcounter, i64 5
  %104 = load i32, ptr %arrayidx251, align 4
  %add252 = add nsw i32 %104, %103
  store i32 %add252, ptr %arrayidx251, align 4
  %bitpattern = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 5
  store i32 0, ptr %bitpattern, align 4
  call void @writeSE_Fix(ptr noundef nonnull %se, ptr noundef nonnull %arrayidx48) #17
  br label %if.end253

if.end253:                                        ; preds = %if.then243, %if.end240
  %no_bits.5 = phi i32 [ %add249, %if.then243 ], [ %no_bits.4, %if.end240 ]
  %len261 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %bitpattern270 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 5
  %value1272 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  %arrayidx274 = getelementptr inbounds i32, ptr %bitcounter, i64 5
  br label %for.body256

for.body256:                                      ; preds = %if.end253, %for.inc279
  %j.1672 = phi i32 [ 0, %if.end253 ], [ %inc280, %for.inc279 ]
  %no_bits.6671 = phi i32 [ %no_bits.5, %if.end253 ], [ %add264, %for.inc279 ]
  %105 = load ptr, ptr @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, ptr %105, i64 0, i32 40
  %106 = load i32, ptr %pix_y, align 4
  %add257 = add nsw i32 %106, %j.1672
  %idxprom265 = sext i32 %add257 to i64
  br label %for.body260

for.body260:                                      ; preds = %for.body256, %for.body260
  %i.1670 = phi i32 [ 0, %for.body256 ], [ %inc277, %for.body260 ]
  %no_bits.7669 = phi i32 [ %no_bits.6671, %for.body256 ], [ %add264, %for.body260 ]
  %107 = load ptr, ptr @img, align 8
  %bitdepth_luma = getelementptr inbounds %struct.ImageParameters, ptr %107, i64 0, i32 142
  %108 = load i32, ptr %bitdepth_luma, align 4
  store i32 %108, ptr %len261, align 4
  store i32 2, ptr %se, align 8
  %add264 = add nsw i32 %108, %no_bits.7669
  %109 = load ptr, ptr @enc_picture, align 8
  %imgY = getelementptr inbounds %struct.storable_picture, ptr %109, i64 0, i32 29
  %110 = load ptr, ptr %imgY, align 8
  %arrayidx266 = getelementptr inbounds ptr, ptr %110, i64 %idxprom265
  %111 = load ptr, ptr %arrayidx266, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, ptr %107, i64 0, i32 39
  %112 = load i32, ptr %pix_x, align 8
  %add267 = add nsw i32 %112, %i.1670
  %idxprom268 = sext i32 %add267 to i64
  %arrayidx269 = getelementptr inbounds i16, ptr %111, i64 %idxprom268
  %113 = load i16, ptr %arrayidx269, align 2
  %conv = zext i16 %113 to i32
  store i32 %conv, ptr %bitpattern270, align 4
  store i32 %conv, ptr %value1272, align 4
  %114 = load i32, ptr %arrayidx274, align 4
  %add275 = add nsw i32 %114, %108
  store i32 %add275, ptr %arrayidx274, align 4
  call void @writeSE_Fix(ptr noundef nonnull %se, ptr noundef nonnull %arrayidx48) #17
  %inc277 = add nuw nsw i32 %i.1670, 1
  %exitcond.not = icmp eq i32 %inc277, 16
  br i1 %exitcond.not, label %for.inc279, label %for.body260

for.inc279:                                       ; preds = %for.body260
  %inc280 = add nuw nsw i32 %j.1672, 1
  %exitcond692.not = icmp eq i32 %inc280, 16
  br i1 %exitcond692.not, label %for.end281, label %for.body256

for.end281:                                       ; preds = %for.inc279
  %115 = load ptr, ptr @img, align 8
  %yuv_format = getelementptr inbounds %struct.ImageParameters, ptr %115, i64 0, i32 160
  %116 = load i32, ptr %yuv_format, align 8
  %cmp282.not = icmp eq i32 %116, 0
  br i1 %cmp282.not, label %cleanup, label %for.cond285.preheader

for.cond285.preheader:                            ; preds = %for.end281
  %arrayidx314 = getelementptr inbounds i32, ptr %bitcounter, i64 6
  %117 = getelementptr inbounds %struct.ImageParameters, ptr %115, i64 0, i32 163
  %118 = load i32, ptr %117, align 4
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %for.body292.lr.ph, label %cleanup

for.body292.lr.ph:                                ; preds = %for.cond285.preheader
  %120 = getelementptr inbounds %struct.ImageParameters, ptr %115, i64 0, i32 162
  %121 = load i32, ptr %120, align 8
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %for.body292, label %for.body292.lr.ph.1

for.body292:                                      ; preds = %for.body292.lr.ph, %for.inc319
  %123 = phi ptr [ %137, %for.inc319 ], [ %115, %for.body292.lr.ph ]
  %j.2680 = phi i32 [ %inc320, %for.inc319 ], [ 0, %for.body292.lr.ph ]
  %no_bits.9679 = phi i32 [ %no_bits.10.lcssa, %for.inc319 ], [ %add264, %for.body292.lr.ph ]
  %mb_cr_size_x673 = getelementptr inbounds %struct.ImageParameters, ptr %123, i64 0, i32 162
  %124 = load i32, ptr %mb_cr_size_x673, align 8
  %cmp295674 = icmp sgt i32 %124, 0
  br i1 %cmp295674, label %for.body297.lr.ph, label %for.inc319

for.body297.lr.ph:                                ; preds = %for.body292
  %pix_c_y = getelementptr inbounds %struct.ImageParameters, ptr %123, i64 0, i32 42
  %125 = load i32, ptr %pix_c_y, align 4
  %add293 = add nsw i32 %125, %j.2680
  %idxprom304 = sext i32 %add293 to i64
  br label %for.body297

for.body297:                                      ; preds = %for.body297.lr.ph, %for.body297
  %126 = phi ptr [ %123, %for.body297.lr.ph ], [ %135, %for.body297 ]
  %i.2676 = phi i32 [ 0, %for.body297.lr.ph ], [ %inc317, %for.body297 ]
  %no_bits.10675 = phi i32 [ %no_bits.9679, %for.body297.lr.ph ], [ %add301, %for.body297 ]
  %bitdepth_chroma = getelementptr inbounds %struct.ImageParameters, ptr %126, i64 0, i32 143
  %127 = load i32, ptr %bitdepth_chroma, align 8
  store i32 %127, ptr %len261, align 4
  store i32 2, ptr %se, align 8
  %add301 = add nsw i32 %127, %no_bits.10675
  %128 = load ptr, ptr @enc_picture, align 8
  %imgUV = getelementptr inbounds %struct.storable_picture, ptr %128, i64 0, i32 33
  %129 = load ptr, ptr %imgUV, align 8
  %130 = load ptr, ptr %129, align 8
  %arrayidx305 = getelementptr inbounds ptr, ptr %130, i64 %idxprom304
  %131 = load ptr, ptr %arrayidx305, align 8
  %pix_c_x = getelementptr inbounds %struct.ImageParameters, ptr %126, i64 0, i32 41
  %132 = load i32, ptr %pix_c_x, align 8
  %add306 = add nsw i32 %132, %i.2676
  %idxprom307 = sext i32 %add306 to i64
  %arrayidx308 = getelementptr inbounds i16, ptr %131, i64 %idxprom307
  %133 = load i16, ptr %arrayidx308, align 2
  %conv309 = zext i16 %133 to i32
  store i32 %conv309, ptr %bitpattern270, align 4
  store i32 %conv309, ptr %value1272, align 4
  %134 = load i32, ptr %arrayidx314, align 4
  %add315 = add nsw i32 %134, %127
  store i32 %add315, ptr %arrayidx314, align 4
  call void @writeSE_Fix(ptr noundef nonnull %se, ptr noundef nonnull %arrayidx48) #17
  %inc317 = add nuw nsw i32 %i.2676, 1
  %135 = load ptr, ptr @img, align 8
  %mb_cr_size_x = getelementptr inbounds %struct.ImageParameters, ptr %135, i64 0, i32 162
  %136 = load i32, ptr %mb_cr_size_x, align 8
  %cmp295 = icmp slt i32 %inc317, %136
  br i1 %cmp295, label %for.body297, label %for.inc319

for.inc319:                                       ; preds = %for.body297, %for.body292
  %137 = phi ptr [ %123, %for.body292 ], [ %135, %for.body297 ]
  %no_bits.10.lcssa = phi i32 [ %no_bits.9679, %for.body292 ], [ %add301, %for.body297 ]
  %inc320 = add nuw nsw i32 %j.2680, 1
  %mb_cr_size_y = getelementptr inbounds %struct.ImageParameters, ptr %137, i64 0, i32 163
  %138 = load i32, ptr %mb_cr_size_y, align 4
  %cmp290 = icmp slt i32 %inc320, %138
  br i1 %cmp290, label %for.body292, label %for.inc322

for.inc322:                                       ; preds = %for.inc319
  %cmp290678.1 = icmp sgt i32 %138, 0
  br i1 %cmp290678.1, label %for.body292.lr.ph.1, label %cleanup

for.body292.lr.ph.1:                              ; preds = %for.body292.lr.ph, %for.inc322
  %no_bits.9.lcssa709 = phi i32 [ %no_bits.10.lcssa, %for.inc322 ], [ %add264, %for.body292.lr.ph ]
  %139 = phi ptr [ %137, %for.inc322 ], [ %115, %for.body292.lr.ph ]
  %140 = getelementptr inbounds %struct.ImageParameters, ptr %139, i64 0, i32 162
  %141 = load i32, ptr %140, align 8
  %142 = icmp sgt i32 %141, 0
  br i1 %142, label %for.body292.1, label %cleanup

for.body292.1:                                    ; preds = %for.body292.lr.ph.1, %for.inc319.1
  %143 = phi ptr [ %157, %for.inc319.1 ], [ %139, %for.body292.lr.ph.1 ]
  %j.2680.1 = phi i32 [ %inc320.1, %for.inc319.1 ], [ 0, %for.body292.lr.ph.1 ]
  %no_bits.9679.1 = phi i32 [ %no_bits.10.lcssa.1, %for.inc319.1 ], [ %no_bits.9.lcssa709, %for.body292.lr.ph.1 ]
  %mb_cr_size_x673.1 = getelementptr inbounds %struct.ImageParameters, ptr %143, i64 0, i32 162
  %144 = load i32, ptr %mb_cr_size_x673.1, align 8
  %cmp295674.1 = icmp sgt i32 %144, 0
  br i1 %cmp295674.1, label %for.body297.lr.ph.1, label %for.inc319.1

for.body297.lr.ph.1:                              ; preds = %for.body292.1
  %pix_c_y.1 = getelementptr inbounds %struct.ImageParameters, ptr %143, i64 0, i32 42
  %145 = load i32, ptr %pix_c_y.1, align 4
  %add293.1 = add nsw i32 %145, %j.2680.1
  %idxprom304.1 = sext i32 %add293.1 to i64
  br label %for.body297.1

for.body297.1:                                    ; preds = %for.body297.1, %for.body297.lr.ph.1
  %146 = phi ptr [ %143, %for.body297.lr.ph.1 ], [ %155, %for.body297.1 ]
  %i.2676.1 = phi i32 [ 0, %for.body297.lr.ph.1 ], [ %inc317.1, %for.body297.1 ]
  %no_bits.10675.1 = phi i32 [ %no_bits.9679.1, %for.body297.lr.ph.1 ], [ %add301.1, %for.body297.1 ]
  %bitdepth_chroma.1 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 143
  %147 = load i32, ptr %bitdepth_chroma.1, align 8
  store i32 %147, ptr %len261, align 4
  store i32 2, ptr %se, align 8
  %add301.1 = add nsw i32 %147, %no_bits.10675.1
  %148 = load ptr, ptr @enc_picture, align 8
  %imgUV.1 = getelementptr inbounds %struct.storable_picture, ptr %148, i64 0, i32 33
  %149 = load ptr, ptr %imgUV.1, align 8
  %arrayidx303.1 = getelementptr inbounds ptr, ptr %149, i64 1
  %150 = load ptr, ptr %arrayidx303.1, align 8
  %arrayidx305.1 = getelementptr inbounds ptr, ptr %150, i64 %idxprom304.1
  %151 = load ptr, ptr %arrayidx305.1, align 8
  %pix_c_x.1 = getelementptr inbounds %struct.ImageParameters, ptr %146, i64 0, i32 41
  %152 = load i32, ptr %pix_c_x.1, align 8
  %add306.1 = add nsw i32 %152, %i.2676.1
  %idxprom307.1 = sext i32 %add306.1 to i64
  %arrayidx308.1 = getelementptr inbounds i16, ptr %151, i64 %idxprom307.1
  %153 = load i16, ptr %arrayidx308.1, align 2
  %conv309.1 = zext i16 %153 to i32
  store i32 %conv309.1, ptr %bitpattern270, align 4
  store i32 %conv309.1, ptr %value1272, align 4
  %154 = load i32, ptr %arrayidx314, align 4
  %add315.1 = add nsw i32 %154, %147
  store i32 %add315.1, ptr %arrayidx314, align 4
  call void @writeSE_Fix(ptr noundef nonnull %se, ptr noundef nonnull %arrayidx48) #17
  %inc317.1 = add nuw nsw i32 %i.2676.1, 1
  %155 = load ptr, ptr @img, align 8
  %mb_cr_size_x.1 = getelementptr inbounds %struct.ImageParameters, ptr %155, i64 0, i32 162
  %156 = load i32, ptr %mb_cr_size_x.1, align 8
  %cmp295.1 = icmp slt i32 %inc317.1, %156
  br i1 %cmp295.1, label %for.body297.1, label %for.inc319.1

for.inc319.1:                                     ; preds = %for.body297.1, %for.body292.1
  %157 = phi ptr [ %143, %for.body292.1 ], [ %155, %for.body297.1 ]
  %no_bits.10.lcssa.1 = phi i32 [ %no_bits.9679.1, %for.body292.1 ], [ %add301.1, %for.body297.1 ]
  %inc320.1 = add nuw nsw i32 %j.2680.1, 1
  %mb_cr_size_y.1 = getelementptr inbounds %struct.ImageParameters, ptr %157, i64 0, i32 163
  %158 = load i32, ptr %mb_cr_size_y.1, align 4
  %cmp290.1 = icmp slt i32 %inc320.1, %158
  br i1 %cmp290.1, label %for.body292.1, label %cleanup

if.then330:                                       ; preds = %land.end
  %159 = load ptr, ptr %partArr, align 8
  %160 = load i32, ptr %arrayidx46, align 4
  %idxprom333 = sext i32 %160 to i64
  %arrayidx334 = getelementptr inbounds %struct.datapartition, ptr %159, i64 %idxprom333
  %value1344 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  %value2345 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  %len347 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %arrayidx348 = getelementptr inbounds i32, ptr %bitcounter, i64 2
  %arrayidx340 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 14, i64 0
  %161 = load i32, ptr %arrayidx340, align 4
  %162 = load ptr, ptr @img, align 8
  %type.i = getelementptr inbounds %struct.ImageParameters, ptr %162, i64 0, i32 5
  %163 = load i32, ptr %type.i, align 4
  %cmp.not.i = icmp eq i32 %163, 1
  br i1 %cmp.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.then330
  %sub.i = add nsw i32 %161, -4
  br label %B8Mode2Value.exit

if.else.i:                                        ; preds = %if.then330
  %arrayidx342 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 15, i64 0
  %164 = load i32, ptr %arrayidx342, align 4
  %idxprom.i = sext i32 %161 to i64
  %arrayidx.i = getelementptr inbounds [8 x i32], ptr @B8Mode2Value.b8start, i64 0, i64 %idxprom.i
  %165 = load i32, ptr %arrayidx.i, align 4
  %arrayidx2.i = getelementptr inbounds [8 x i32], ptr @B8Mode2Value.b8inc, i64 0, i64 %idxprom.i
  %166 = load i32, ptr %arrayidx2.i, align 4
  %mul.i = mul nsw i32 %166, %164
  %add.i = add nsw i32 %mul.i, %165
  br label %B8Mode2Value.exit

B8Mode2Value.exit:                                ; preds = %if.then.i, %if.else.i
  %retval.0.i = phi i32 [ %sub.i, %if.then.i ], [ %add.i, %if.else.i ]
  store i32 %retval.0.i, ptr %value1344, align 4
  store i32 0, ptr %value2345, align 8
  store i32 2, ptr %se, align 8
  %167 = load ptr, ptr @writeB8_typeInfo, align 8
  call void %167(ptr noundef nonnull %se, ptr noundef %arrayidx334) #17
  %168 = load i32, ptr %len347, align 4
  %169 = load i32, ptr %arrayidx348, align 4
  %add349 = add nsw i32 %169, %168
  store i32 %add349, ptr %arrayidx348, align 4
  %170 = load i32, ptr %len347, align 4
  %add351 = add nsw i32 %170, %no_bits.3
  %171 = load i32, ptr %arrayidx340, align 4
  %cmp355 = icmp eq i32 %171, 0
  br i1 %cmp355, label %land.lhs.true357, label %lor.rhs360

land.lhs.true357:                                 ; preds = %B8Mode2Value.exit
  %172 = load ptr, ptr @active_sps, align 8
  %direct_8x8_inference_flag358 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %172, i64 0, i32 27
  %173 = load i32, ptr %direct_8x8_inference_flag358, align 4
  %tobool359.not = icmp eq i32 %173, 0
  br i1 %tobool359.not, label %lor.rhs360, label %lor.end366

lor.rhs360:                                       ; preds = %land.lhs.true357, %B8Mode2Value.exit
  %cmp364 = icmp eq i32 %171, 4
  br label %lor.end366

lor.end366:                                       ; preds = %lor.rhs360, %land.lhs.true357
  %174 = phi i1 [ true, %land.lhs.true357 ], [ %cmp364, %lor.rhs360 ]
  %lor.ext367 = zext i1 %174 to i32
  %175 = load i32, ptr %NoMbPartLessThan8x8Flag, align 4
  %and369 = and i32 %175, %lor.ext367
  store i32 %and369, ptr %NoMbPartLessThan8x8Flag, align 4
  %arrayidx340.1 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 14, i64 1
  %176 = load i32, ptr %arrayidx340.1, align 4
  %177 = load ptr, ptr @img, align 8
  %type.i.1 = getelementptr inbounds %struct.ImageParameters, ptr %177, i64 0, i32 5
  %178 = load i32, ptr %type.i.1, align 4
  %cmp.not.i.1 = icmp eq i32 %178, 1
  br i1 %cmp.not.i.1, label %if.else.i.1, label %if.then.i.1

if.then.i.1:                                      ; preds = %lor.end366
  %sub.i.1 = add nsw i32 %176, -4
  br label %B8Mode2Value.exit.1

if.else.i.1:                                      ; preds = %lor.end366
  %arrayidx342.1 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 15, i64 1
  %179 = load i32, ptr %arrayidx342.1, align 4
  %idxprom.i.1 = sext i32 %176 to i64
  %arrayidx.i.1 = getelementptr inbounds [8 x i32], ptr @B8Mode2Value.b8start, i64 0, i64 %idxprom.i.1
  %180 = load i32, ptr %arrayidx.i.1, align 4
  %arrayidx2.i.1 = getelementptr inbounds [8 x i32], ptr @B8Mode2Value.b8inc, i64 0, i64 %idxprom.i.1
  %181 = load i32, ptr %arrayidx2.i.1, align 4
  %mul.i.1 = mul nsw i32 %181, %179
  %add.i.1 = add nsw i32 %mul.i.1, %180
  br label %B8Mode2Value.exit.1

B8Mode2Value.exit.1:                              ; preds = %if.else.i.1, %if.then.i.1
  %retval.0.i.1 = phi i32 [ %sub.i.1, %if.then.i.1 ], [ %add.i.1, %if.else.i.1 ]
  store i32 %retval.0.i.1, ptr %value1344, align 4
  store i32 0, ptr %value2345, align 8
  store i32 2, ptr %se, align 8
  %182 = load ptr, ptr @writeB8_typeInfo, align 8
  call void %182(ptr noundef nonnull %se, ptr noundef %arrayidx334) #17
  %183 = load i32, ptr %len347, align 4
  %184 = load i32, ptr %arrayidx348, align 4
  %add349.1 = add nsw i32 %184, %183
  store i32 %add349.1, ptr %arrayidx348, align 4
  %185 = load i32, ptr %len347, align 4
  %add351.1 = add nsw i32 %185, %add351
  %186 = load i32, ptr %arrayidx340.1, align 4
  %cmp355.1 = icmp eq i32 %186, 0
  br i1 %cmp355.1, label %land.lhs.true357.1, label %lor.rhs360.1

land.lhs.true357.1:                               ; preds = %B8Mode2Value.exit.1
  %187 = load ptr, ptr @active_sps, align 8
  %direct_8x8_inference_flag358.1 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %187, i64 0, i32 27
  %188 = load i32, ptr %direct_8x8_inference_flag358.1, align 4
  %tobool359.not.1 = icmp eq i32 %188, 0
  br i1 %tobool359.not.1, label %lor.rhs360.1, label %lor.end366.1

lor.rhs360.1:                                     ; preds = %land.lhs.true357.1, %B8Mode2Value.exit.1
  %cmp364.1 = icmp eq i32 %186, 4
  br label %lor.end366.1

lor.end366.1:                                     ; preds = %lor.rhs360.1, %land.lhs.true357.1
  %189 = phi i1 [ true, %land.lhs.true357.1 ], [ %cmp364.1, %lor.rhs360.1 ]
  %lor.ext367.1 = zext i1 %189 to i32
  %190 = load i32, ptr %NoMbPartLessThan8x8Flag, align 4
  %and369.1 = and i32 %190, %lor.ext367.1
  store i32 %and369.1, ptr %NoMbPartLessThan8x8Flag, align 4
  %arrayidx340.2 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 14, i64 2
  %191 = load i32, ptr %arrayidx340.2, align 4
  %192 = load ptr, ptr @img, align 8
  %type.i.2 = getelementptr inbounds %struct.ImageParameters, ptr %192, i64 0, i32 5
  %193 = load i32, ptr %type.i.2, align 4
  %cmp.not.i.2 = icmp eq i32 %193, 1
  br i1 %cmp.not.i.2, label %if.else.i.2, label %if.then.i.2

if.then.i.2:                                      ; preds = %lor.end366.1
  %sub.i.2 = add nsw i32 %191, -4
  br label %B8Mode2Value.exit.2

if.else.i.2:                                      ; preds = %lor.end366.1
  %arrayidx342.2 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 15, i64 2
  %194 = load i32, ptr %arrayidx342.2, align 4
  %idxprom.i.2 = sext i32 %191 to i64
  %arrayidx.i.2 = getelementptr inbounds [8 x i32], ptr @B8Mode2Value.b8start, i64 0, i64 %idxprom.i.2
  %195 = load i32, ptr %arrayidx.i.2, align 4
  %arrayidx2.i.2 = getelementptr inbounds [8 x i32], ptr @B8Mode2Value.b8inc, i64 0, i64 %idxprom.i.2
  %196 = load i32, ptr %arrayidx2.i.2, align 4
  %mul.i.2 = mul nsw i32 %196, %194
  %add.i.2 = add nsw i32 %mul.i.2, %195
  br label %B8Mode2Value.exit.2

B8Mode2Value.exit.2:                              ; preds = %if.else.i.2, %if.then.i.2
  %retval.0.i.2 = phi i32 [ %sub.i.2, %if.then.i.2 ], [ %add.i.2, %if.else.i.2 ]
  store i32 %retval.0.i.2, ptr %value1344, align 4
  store i32 0, ptr %value2345, align 8
  store i32 2, ptr %se, align 8
  %197 = load ptr, ptr @writeB8_typeInfo, align 8
  call void %197(ptr noundef nonnull %se, ptr noundef %arrayidx334) #17
  %198 = load i32, ptr %len347, align 4
  %199 = load i32, ptr %arrayidx348, align 4
  %add349.2 = add nsw i32 %199, %198
  store i32 %add349.2, ptr %arrayidx348, align 4
  %200 = load i32, ptr %len347, align 4
  %add351.2 = add nsw i32 %200, %add351.1
  %201 = load i32, ptr %arrayidx340.2, align 4
  %cmp355.2 = icmp eq i32 %201, 0
  br i1 %cmp355.2, label %land.lhs.true357.2, label %lor.rhs360.2

land.lhs.true357.2:                               ; preds = %B8Mode2Value.exit.2
  %202 = load ptr, ptr @active_sps, align 8
  %direct_8x8_inference_flag358.2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %202, i64 0, i32 27
  %203 = load i32, ptr %direct_8x8_inference_flag358.2, align 4
  %tobool359.not.2 = icmp eq i32 %203, 0
  br i1 %tobool359.not.2, label %lor.rhs360.2, label %lor.end366.2

lor.rhs360.2:                                     ; preds = %land.lhs.true357.2, %B8Mode2Value.exit.2
  %cmp364.2 = icmp eq i32 %201, 4
  br label %lor.end366.2

lor.end366.2:                                     ; preds = %lor.rhs360.2, %land.lhs.true357.2
  %204 = phi i1 [ true, %land.lhs.true357.2 ], [ %cmp364.2, %lor.rhs360.2 ]
  %lor.ext367.2 = zext i1 %204 to i32
  %205 = load i32, ptr %NoMbPartLessThan8x8Flag, align 4
  %and369.2 = and i32 %205, %lor.ext367.2
  store i32 %and369.2, ptr %NoMbPartLessThan8x8Flag, align 4
  %arrayidx340.3 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 14, i64 3
  %206 = load i32, ptr %arrayidx340.3, align 4
  %207 = load ptr, ptr @img, align 8
  %type.i.3 = getelementptr inbounds %struct.ImageParameters, ptr %207, i64 0, i32 5
  %208 = load i32, ptr %type.i.3, align 4
  %cmp.not.i.3 = icmp eq i32 %208, 1
  br i1 %cmp.not.i.3, label %if.else.i.3, label %if.then.i.3

if.then.i.3:                                      ; preds = %lor.end366.2
  %sub.i.3 = add nsw i32 %206, -4
  br label %B8Mode2Value.exit.3

if.else.i.3:                                      ; preds = %lor.end366.2
  %arrayidx342.3 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 15, i64 3
  %209 = load i32, ptr %arrayidx342.3, align 4
  %idxprom.i.3 = sext i32 %206 to i64
  %arrayidx.i.3 = getelementptr inbounds [8 x i32], ptr @B8Mode2Value.b8start, i64 0, i64 %idxprom.i.3
  %210 = load i32, ptr %arrayidx.i.3, align 4
  %arrayidx2.i.3 = getelementptr inbounds [8 x i32], ptr @B8Mode2Value.b8inc, i64 0, i64 %idxprom.i.3
  %211 = load i32, ptr %arrayidx2.i.3, align 4
  %mul.i.3 = mul nsw i32 %211, %209
  %add.i.3 = add nsw i32 %mul.i.3, %210
  br label %B8Mode2Value.exit.3

B8Mode2Value.exit.3:                              ; preds = %if.else.i.3, %if.then.i.3
  %retval.0.i.3 = phi i32 [ %sub.i.3, %if.then.i.3 ], [ %add.i.3, %if.else.i.3 ]
  store i32 %retval.0.i.3, ptr %value1344, align 4
  store i32 0, ptr %value2345, align 8
  store i32 2, ptr %se, align 8
  %212 = load ptr, ptr @writeB8_typeInfo, align 8
  call void %212(ptr noundef nonnull %se, ptr noundef %arrayidx334) #17
  %213 = load i32, ptr %len347, align 4
  %214 = load i32, ptr %arrayidx348, align 4
  %add349.3 = add nsw i32 %214, %213
  store i32 %add349.3, ptr %arrayidx348, align 4
  %215 = load i32, ptr %len347, align 4
  %add351.3 = add nsw i32 %215, %add351.2
  %216 = load i32, ptr %arrayidx340.3, align 4
  %cmp355.3 = icmp eq i32 %216, 0
  br i1 %cmp355.3, label %land.lhs.true357.3, label %lor.rhs360.3

land.lhs.true357.3:                               ; preds = %B8Mode2Value.exit.3
  %217 = load ptr, ptr @active_sps, align 8
  %direct_8x8_inference_flag358.3 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %217, i64 0, i32 27
  %218 = load i32, ptr %direct_8x8_inference_flag358.3, align 4
  %tobool359.not.3 = icmp eq i32 %218, 0
  br i1 %tobool359.not.3, label %lor.rhs360.3, label %lor.end366.3

lor.rhs360.3:                                     ; preds = %land.lhs.true357.3, %B8Mode2Value.exit.3
  %cmp364.3 = icmp eq i32 %216, 4
  br label %lor.end366.3

lor.end366.3:                                     ; preds = %lor.rhs360.3, %land.lhs.true357.3
  %219 = phi i1 [ true, %land.lhs.true357.3 ], [ %cmp364.3, %lor.rhs360.3 ]
  %lor.ext367.3 = zext i1 %219 to i32
  %220 = load i32, ptr %NoMbPartLessThan8x8Flag, align 4
  %and369.3 = and i32 %220, %lor.ext367.3
  store i32 %and369.3, ptr %NoMbPartLessThan8x8Flag, align 4
  %call373 = call fastcc i32 @writeMotionInfo2NAL()
  %add374 = add nsw i32 %call373, %add351.3
  %.pre705 = load i32, ptr %mb_type, align 8
  br label %if.end375

if.end375:                                        ; preds = %land.end, %lor.end366.3
  %221 = phi i32 [ %.pre705, %lor.end366.3 ], [ %93, %land.end ]
  %no_bits.13 = phi i32 [ %add374, %lor.end366.3 ], [ %no_bits.3, %land.end ]
  %dataPart.0 = phi ptr [ %arrayidx334, %lor.end366.3 ], [ %arrayidx48, %land.end ]
  switch i32 %221, label %if.end393 [
    i32 13, label %land.lhs.true383
    i32 9, label %land.lhs.true383
  ]

land.lhs.true383:                                 ; preds = %if.end375, %if.end375
  %222 = load ptr, ptr @input, align 8
  %Transform8x8Mode = getelementptr inbounds %struct.InputParameters, ptr %222, i64 0, i32 153
  %223 = load i32, ptr %Transform8x8Mode, align 4
  %tobool384.not = icmp eq i32 %223, 0
  br i1 %tobool384.not, label %if.end393, label %if.then385

if.then385:                                       ; preds = %land.lhs.true383
  %luma_transform_size_8x8_flag = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 31
  %224 = load i32, ptr %luma_transform_size_8x8_flag, align 8
  %value1386 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  store i32 %224, ptr %value1386, align 4
  store i32 2, ptr %se, align 8
  %225 = load ptr, ptr @writeMB_transform_size, align 8
  call void %225(ptr noundef nonnull %se, ptr noundef %dataPart.0) #17
  %len388 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %226 = load i32, ptr %len388, align 4
  %arrayidx389 = getelementptr inbounds i32, ptr %bitcounter, i64 2
  %227 = load i32, ptr %arrayidx389, align 4
  %add390 = add nsw i32 %227, %226
  store i32 %add390, ptr %arrayidx389, align 4
  %228 = load i32, ptr %len388, align 4
  %add392 = add nsw i32 %228, %no_bits.13
  br label %if.end393

if.end393:                                        ; preds = %if.end375.thread, %if.end375, %if.then385, %land.lhs.true383
  %no_bits.14 = phi i32 [ %add392, %if.then385 ], [ %no_bits.13, %land.lhs.true383 ], [ %no_bits.13, %if.end375 ], [ %no_bits.3, %if.end375.thread ]
  %call394 = call i32 @writeIntraModes()
  %add395 = add nsw i32 %call394, %no_bits.14
  %229 = load i32, ptr %IntraChromaPredModeFlag, align 4
  %tobool397.not = icmp eq i32 %229, 0
  br i1 %tobool397.not, label %if.else405, label %land.lhs.true398

land.lhs.true398:                                 ; preds = %if.end393
  %230 = load ptr, ptr @img, align 8
  %yuv_format399 = getelementptr inbounds %struct.ImageParameters, ptr %230, i64 0, i32 160
  %231 = load i32, ptr %yuv_format399, align 8
  %cmp400.not = icmp eq i32 %231, 0
  br i1 %cmp400.not, label %if.else405, label %if.then402

if.then402:                                       ; preds = %land.lhs.true398
  %mb_data.i = getelementptr inbounds %struct.ImageParameters, ptr %230, i64 0, i32 61
  %232 = load ptr, ptr %mb_data.i, align 8
  %current_mb_nr.i = getelementptr inbounds %struct.ImageParameters, ptr %230, i64 0, i32 3
  %233 = load i32, ptr %current_mb_nr.i, align 4
  %idxprom.i602 = sext i32 %233 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se.i) #17
  %currentSlice.i = getelementptr inbounds %struct.ImageParameters, ptr %230, i64 0, i32 60
  %234 = load ptr, ptr %currentSlice.i, align 8
  %235 = load ptr, ptr @input, align 8
  %partition_mode.i = getelementptr inbounds %struct.InputParameters, ptr %235, i64 0, i32 76
  %236 = load i32, ptr %partition_mode.i, align 8
  %idxprom1.i = sext i32 %236 to i64
  %arrayidx2.i603 = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom1.i
  %237 = load ptr, ptr %arrayidx2.i603, align 8
  %c_ipred_mode.i = getelementptr inbounds %struct.macroblock, ptr %232, i64 %idxprom.i602, i32 17
  %238 = load i32, ptr %c_ipred_mode.i, align 8
  %value1.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i, i64 0, i32 1
  store i32 %238, ptr %value1.i, align 4
  %value2.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i, i64 0, i32 2
  store i32 0, ptr %value2.i, align 8
  store i32 4, ptr %se.i, align 8
  %partArr.i = getelementptr inbounds %struct.Slice, ptr %234, i64 0, i32 6
  %239 = load ptr, ptr %partArr.i, align 8
  %arrayidx3.i = getelementptr inbounds i32, ptr %237, i64 4
  %240 = load i32, ptr %arrayidx3.i, align 4
  %idxprom4.i = sext i32 %240 to i64
  %arrayidx5.i = getelementptr inbounds %struct.datapartition, ptr %239, i64 %idxprom4.i
  %241 = load ptr, ptr @writeCIPredMode, align 8
  call void %241(ptr noundef nonnull %se.i, ptr noundef %arrayidx5.i) #17
  %len.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i, i64 0, i32 3
  %242 = load i32, ptr %len.i, align 4
  %arrayidx6.i = getelementptr inbounds %struct.macroblock, ptr %232, i64 %idxprom.i602, i32 5, i64 6
  %243 = load i32, ptr %arrayidx6.i, align 4
  %add.i604 = add nsw i32 %243, %242
  store i32 %add.i604, ptr %arrayidx6.i, align 4
  %244 = load i32, ptr %len.i, align 4
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se.i) #17
  %add404 = add nsw i32 %244, %add395
  br label %if.end409

if.else405:                                       ; preds = %land.lhs.true398, %if.end393
  %tobool406.not = icmp eq i32 %rdopt, 0
  br i1 %tobool406.not, label %if.then407, label %if.end409

if.then407:                                       ; preds = %if.else405
  %c_ipred_mode = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 17
  store i32 0, ptr %c_ipred_mode, align 8
  br label %if.end409

if.end409:                                        ; preds = %if.else405, %if.then407, %if.then402
  %no_bits.15 = phi i32 [ %add404, %if.then402 ], [ %add395, %if.else405 ], [ %add395, %if.then407 ]
  %245 = load i32, ptr %mb_type, align 8
  switch i32 %245, label %if.then417 [
    i32 0, label %if.end420
    i32 8, label %if.end420
  ]

if.then417:                                       ; preds = %if.end409
  %call418 = call fastcc i32 @writeMotionInfo2NAL()
  %add419 = add nsw i32 %call418, %no_bits.15
  %.pr = load i32, ptr %mb_type, align 8
  br label %if.end420

if.end420:                                        ; preds = %if.end409, %if.end409, %if.then417
  %246 = phi i32 [ %245, %if.end409 ], [ %245, %if.end409 ], [ %.pr, %if.then417 ]
  %no_bits.16 = phi i32 [ %no_bits.15, %if.end409 ], [ %no_bits.15, %if.end409 ], [ %add419, %if.then417 ]
  %cmp422.not = icmp eq i32 %246, 0
  %.pre706 = load ptr, ptr @img, align 8
  br i1 %cmp422.not, label %lor.lhs.false424, label %if.then432

lor.lhs.false424:                                 ; preds = %if.end420
  %type425 = getelementptr inbounds %struct.ImageParameters, ptr %.pre706, i64 0, i32 5
  %247 = load i32, ptr %type425, align 4
  %cmp426 = icmp eq i32 %247, 1
  br i1 %cmp426, label %land.lhs.true428, label %cleanup

land.lhs.true428:                                 ; preds = %lor.lhs.false424
  %cbp429 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom, i32 12
  %248 = load i32, ptr %cbp429, align 4
  %cmp430.not = icmp eq i32 %248, 0
  br i1 %cmp430.not, label %cleanup, label %if.then432

if.then432:                                       ; preds = %land.lhs.true428, %if.end420
  %mb_data.i606 = getelementptr inbounds %struct.ImageParameters, ptr %.pre706, i64 0, i32 61
  %249 = load ptr, ptr %mb_data.i606, align 8
  %current_mb_nr.i607 = getelementptr inbounds %struct.ImageParameters, ptr %.pre706, i64 0, i32 3
  %250 = load i32, ptr %current_mb_nr.i607, align 4
  %idxprom.i608 = sext i32 %250 to i64
  %bitcounter.i = getelementptr inbounds %struct.macroblock, ptr %249, i64 %idxprom.i608, i32 5
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se.i605) #17
  %currentSlice.i609 = getelementptr inbounds %struct.ImageParameters, ptr %.pre706, i64 0, i32 60
  %251 = load ptr, ptr %currentSlice.i609, align 8
  %252 = load ptr, ptr @input, align 8
  %partition_mode.i610 = getelementptr inbounds %struct.InputParameters, ptr %252, i64 0, i32 76
  %253 = load i32, ptr %partition_mode.i610, align 8
  %idxprom1.i611 = sext i32 %253 to i64
  %arrayidx2.i612 = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom1.i611
  %254 = load ptr, ptr %arrayidx2.i612, align 8
  %cbp3.i = getelementptr inbounds %struct.macroblock, ptr %249, i64 %idxprom.i608, i32 12
  %255 = load i32, ptr %cbp3.i, align 4
  %cofDC.i = getelementptr inbounds %struct.ImageParameters, ptr %.pre706, i64 0, i32 54
  %256 = load ptr, ptr %cofDC.i, align 8
  %257 = load ptr, ptr %256, align 8
  %258 = load ptr, ptr %257, align 8
  %arrayidx8.i = getelementptr inbounds ptr, ptr %257, i64 1
  %259 = load ptr, ptr %arrayidx8.i, align 8
  %mb_type.i = getelementptr inbounds %struct.macroblock, ptr %249, i64 %idxprom.i608, i32 8
  %260 = load i32, ptr %mb_type.i, align 8
  %cmp.i = icmp eq i32 %260, 10
  br i1 %cmp.i, label %if.end48.i, label %if.then.i613

if.then.i613:                                     ; preds = %if.then432
  %value1.i614 = getelementptr inbounds %struct.syntaxelement, ptr %se.i605, i64 0, i32 1
  store i32 %255, ptr %value1.i614, align 4
  store i32 6, ptr %se.i605, align 8
  %partArr.i615 = getelementptr inbounds %struct.Slice, ptr %251, i64 0, i32 6
  %261 = load ptr, ptr %partArr.i615, align 8
  %arrayidx11.i = getelementptr inbounds i32, ptr %254, i64 6
  %262 = load i32, ptr %arrayidx11.i, align 4
  %idxprom12.i = sext i32 %262 to i64
  %arrayidx13.i = getelementptr inbounds %struct.datapartition, ptr %261, i64 %idxprom12.i
  %263 = load ptr, ptr @writeCBP, align 8
  call void %263(ptr noundef nonnull %se.i605, ptr noundef %arrayidx13.i) #17
  %len.i616 = getelementptr inbounds %struct.syntaxelement, ptr %se.i605, i64 0, i32 3
  %264 = load i32, ptr %len.i616, align 4
  %arrayidx14.i = getelementptr inbounds i32, ptr %bitcounter.i, i64 4
  %265 = load i32, ptr %arrayidx14.i, align 4
  %add.i617 = add nsw i32 %265, %264
  store i32 %add.i617, ptr %arrayidx14.i, align 4
  %266 = load i32, ptr %len.i616, align 4
  %267 = load i32, ptr %mb_type.i, align 8
  %268 = add i32 %267, -1
  %or.cond.i = icmp ult i32 %268, 3
  br i1 %or.cond.i, label %land.lhs.true29.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.then.i613
  %cmp22.i = icmp eq i32 %267, 0
  br i1 %cmp22.i, label %land.lhs.true23.i, label %lor.lhs.false27.i

land.lhs.true23.i:                                ; preds = %lor.lhs.false.i
  %269 = load ptr, ptr @img, align 8
  %type24.i = getelementptr inbounds %struct.ImageParameters, ptr %269, i64 0, i32 5
  %270 = load i32, ptr %type24.i, align 4
  %cmp25.i = icmp eq i32 %270, 1
  br i1 %cmp25.i, label %land.lhs.true26.i, label %lor.lhs.false27.i

land.lhs.true26.i:                                ; preds = %land.lhs.true23.i
  %271 = load ptr, ptr @active_sps, align 8
  %direct_8x8_inference_flag.i = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %271, i64 0, i32 27
  %272 = load i32, ptr %direct_8x8_inference_flag.i, align 4
  %tobool.not.i = icmp eq i32 %272, 0
  br i1 %tobool.not.i, label %lor.lhs.false27.i, label %land.lhs.true35.i

lor.lhs.false27.i:                                ; preds = %land.lhs.true26.i, %land.lhs.true23.i, %lor.lhs.false.i
  %NoMbPartLessThan8x8Flag.i = getelementptr inbounds %struct.macroblock, ptr %249, i64 %idxprom.i608, i32 32
  %273 = load i32, ptr %NoMbPartLessThan8x8Flag.i, align 4
  %tobool28.not.i = icmp eq i32 %273, 0
  br i1 %tobool28.not.i, label %if.end48.i, label %land.lhs.true29.i

land.lhs.true29.i:                                ; preds = %lor.lhs.false27.i, %if.then.i613
  switch i32 %267, label %land.lhs.true35.i [
    i32 13, label %if.end48.i
    i32 9, label %if.end48.i
  ]

land.lhs.true35.i:                                ; preds = %land.lhs.true29.i, %land.lhs.true26.i
  %274 = load i32, ptr %cbp3.i, align 4
  %and.i = and i32 %274, 15
  %tobool37.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool37.not.i, label %if.end48.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %land.lhs.true35.i
  %275 = load ptr, ptr @input, align 8
  %Transform8x8Mode.i = getelementptr inbounds %struct.InputParameters, ptr %275, i64 0, i32 153
  %276 = load i32, ptr %Transform8x8Mode.i, align 4
  %tobool38.not.i = icmp eq i32 %276, 0
  br i1 %tobool38.not.i, label %if.end48.i, label %if.then40.i

if.then40.i:                                      ; preds = %land.rhs.i
  %luma_transform_size_8x8_flag.i = getelementptr inbounds %struct.macroblock, ptr %249, i64 %idxprom.i608, i32 31
  %277 = load i32, ptr %luma_transform_size_8x8_flag.i, align 8
  store i32 %277, ptr %value1.i614, align 4
  store i32 2, ptr %se.i605, align 8
  %278 = load ptr, ptr @writeMB_transform_size, align 8
  call void %278(ptr noundef nonnull %se.i605, ptr noundef %arrayidx13.i) #17
  %279 = load i32, ptr %len.i616, align 4
  %arrayidx44.i = getelementptr inbounds i32, ptr %bitcounter.i, i64 2
  %280 = load i32, ptr %arrayidx44.i, align 4
  %add45.i = add nsw i32 %280, %279
  store i32 %add45.i, ptr %arrayidx44.i, align 4
  %281 = load i32, ptr %len.i616, align 4
  %add47.i = add nsw i32 %281, %266
  br label %if.end48.i

if.end48.i:                                       ; preds = %if.then40.i, %land.rhs.i, %land.lhs.true35.i, %land.lhs.true29.i, %land.lhs.true29.i, %lor.lhs.false27.i, %if.then432
  %rate.0.i = phi i32 [ 0, %if.then432 ], [ %add47.i, %if.then40.i ], [ %266, %land.rhs.i ], [ %266, %lor.lhs.false27.i ], [ %266, %land.lhs.true29.i ], [ %266, %land.lhs.true29.i ], [ %266, %land.lhs.true35.i ]
  %cmp49.not.i = icmp eq i32 %255, 0
  br i1 %cmp49.not.i, label %lor.lhs.false50.i, label %if.then53.i

lor.lhs.false50.i:                                ; preds = %if.end48.i
  %282 = load i32, ptr %mb_type.i, align 8
  %cmp52.i = icmp eq i32 %282, 10
  br i1 %cmp52.i, label %if.then53.i, label %if.end68.i

if.then53.i:                                      ; preds = %lor.lhs.false50.i, %if.end48.i
  %delta_qp.i = getelementptr inbounds %struct.macroblock, ptr %249, i64 %idxprom.i608, i32 1
  %283 = load i32, ptr %delta_qp.i, align 4
  %value154.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i605, i64 0, i32 1
  store i32 %283, ptr %value154.i, align 4
  store i32 15, ptr %se.i605, align 8
  %284 = load ptr, ptr @img, align 8
  %currentSlice56.i = getelementptr inbounds %struct.ImageParameters, ptr %284, i64 0, i32 60
  %285 = load ptr, ptr %currentSlice56.i, align 8
  %partArr57.i = getelementptr inbounds %struct.Slice, ptr %285, i64 0, i32 6
  %286 = load ptr, ptr %partArr57.i, align 8
  %arrayidx60.i = getelementptr inbounds i32, ptr %254, i64 15
  %287 = load i32, ptr %arrayidx60.i, align 4
  %idxprom61.i = sext i32 %287 to i64
  %arrayidx62.i = getelementptr inbounds %struct.datapartition, ptr %286, i64 %idxprom61.i
  %288 = load ptr, ptr @writeDquant, align 8
  call void %288(ptr noundef nonnull %se.i605, ptr noundef %arrayidx62.i) #17
  %len63.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i605, i64 0, i32 3
  %289 = load i32, ptr %len63.i, align 4
  %arrayidx64.i = getelementptr inbounds i32, ptr %bitcounter.i, i64 7
  %290 = load i32, ptr %arrayidx64.i, align 4
  %add65.i = add nsw i32 %290, %289
  store i32 %add65.i, ptr %arrayidx64.i, align 4
  %291 = load i32, ptr %len63.i, align 4
  %add67.i = add nsw i32 %291, %rate.0.i
  br label %if.end68.i

if.end68.i:                                       ; preds = %if.then53.i, %lor.lhs.false50.i
  %rate.1.i = phi i32 [ %add67.i, %if.then53.i ], [ %rate.0.i, %lor.lhs.false50.i ]
  %292 = load ptr, ptr @img, align 8
  %nz_coeff.i = getelementptr inbounds %struct.ImageParameters, ptr %292, i64 0, i32 34
  %293 = load ptr, ptr %nz_coeff.i, align 8
  %current_mb_nr70.i = getelementptr inbounds %struct.ImageParameters, ptr %292, i64 0, i32 3
  %294 = load i32, ptr %current_mb_nr70.i, align 4
  %idxprom71.i = sext i32 %294 to i64
  %arrayidx72.i = getelementptr inbounds ptr, ptr %293, i64 %idxprom71.i
  %295 = load ptr, ptr %arrayidx72.i, align 8
  %296 = load ptr, ptr %295, align 8
  %num_blk8x8_uv.i = getelementptr inbounds %struct.ImageParameters, ptr %292, i64 0, i32 158
  %297 = load i32, ptr %num_blk8x8_uv.i, align 8
  %add75.i = add nsw i32 %297, 4
  %conv.i = sext i32 %add75.i to i64
  %mul.i618 = shl nsw i64 %conv.i, 2
  call void @llvm.memset.p0.i64(ptr align 4 %296, i8 0, i64 %mul.i618, i1 false)
  %298 = load ptr, ptr @img, align 8
  %nz_coeff.1.i = getelementptr inbounds %struct.ImageParameters, ptr %298, i64 0, i32 34
  %299 = load ptr, ptr %nz_coeff.1.i, align 8
  %current_mb_nr70.1.i = getelementptr inbounds %struct.ImageParameters, ptr %298, i64 0, i32 3
  %300 = load i32, ptr %current_mb_nr70.1.i, align 4
  %idxprom71.1.i = sext i32 %300 to i64
  %arrayidx72.1.i = getelementptr inbounds ptr, ptr %299, i64 %idxprom71.1.i
  %301 = load ptr, ptr %arrayidx72.1.i, align 8
  %arrayidx74.1.i = getelementptr inbounds ptr, ptr %301, i64 1
  %302 = load ptr, ptr %arrayidx74.1.i, align 8
  %num_blk8x8_uv.1.i = getelementptr inbounds %struct.ImageParameters, ptr %298, i64 0, i32 158
  %303 = load i32, ptr %num_blk8x8_uv.1.i, align 8
  %add75.1.i = add nsw i32 %303, 4
  %conv.1.i = sext i32 %add75.1.i to i64
  %mul.1.i = shl nsw i64 %conv.1.i, 2
  call void @llvm.memset.p0.i64(ptr align 4 %302, i8 0, i64 %mul.1.i, i1 false)
  %304 = load ptr, ptr @img, align 8
  %nz_coeff.2.i = getelementptr inbounds %struct.ImageParameters, ptr %304, i64 0, i32 34
  %305 = load ptr, ptr %nz_coeff.2.i, align 8
  %current_mb_nr70.2.i = getelementptr inbounds %struct.ImageParameters, ptr %304, i64 0, i32 3
  %306 = load i32, ptr %current_mb_nr70.2.i, align 4
  %idxprom71.2.i = sext i32 %306 to i64
  %arrayidx72.2.i = getelementptr inbounds ptr, ptr %305, i64 %idxprom71.2.i
  %307 = load ptr, ptr %arrayidx72.2.i, align 8
  %arrayidx74.2.i = getelementptr inbounds ptr, ptr %307, i64 2
  %308 = load ptr, ptr %arrayidx74.2.i, align 8
  %num_blk8x8_uv.2.i = getelementptr inbounds %struct.ImageParameters, ptr %304, i64 0, i32 158
  %309 = load i32, ptr %num_blk8x8_uv.2.i, align 8
  %add75.2.i = add nsw i32 %309, 4
  %conv.2.i = sext i32 %add75.2.i to i64
  %mul.2.i = shl nsw i64 %conv.2.i, 2
  call void @llvm.memset.p0.i64(ptr align 4 %308, i8 0, i64 %mul.2.i, i1 false)
  %310 = load ptr, ptr @img, align 8
  %nz_coeff.3.i = getelementptr inbounds %struct.ImageParameters, ptr %310, i64 0, i32 34
  %311 = load ptr, ptr %nz_coeff.3.i, align 8
  %current_mb_nr70.3.i = getelementptr inbounds %struct.ImageParameters, ptr %310, i64 0, i32 3
  %312 = load i32, ptr %current_mb_nr70.3.i, align 4
  %idxprom71.3.i = sext i32 %312 to i64
  %arrayidx72.3.i = getelementptr inbounds ptr, ptr %311, i64 %idxprom71.3.i
  %313 = load ptr, ptr %arrayidx72.3.i, align 8
  %arrayidx74.3.i = getelementptr inbounds ptr, ptr %313, i64 3
  %314 = load ptr, ptr %arrayidx74.3.i, align 8
  %num_blk8x8_uv.3.i = getelementptr inbounds %struct.ImageParameters, ptr %310, i64 0, i32 158
  %315 = load i32, ptr %num_blk8x8_uv.3.i, align 8
  %add75.3.i = add nsw i32 %315, 4
  %conv.3.i = sext i32 %add75.3.i to i64
  %mul.3.i = shl nsw i64 %conv.3.i, 2
  call void @llvm.memset.p0.i64(ptr align 4 %314, i8 0, i64 %mul.3.i, i1 false)
  %316 = load i32, ptr %mb_type.i, align 8
  %cmp77.i = icmp eq i32 %316, 10
  br i1 %cmp77.i, label %if.else.i619, label %for.cond80.preheader.i

for.cond80.preheader.i:                           ; preds = %if.end68.i
  %luma_transform_size_8x8_flag89.i = getelementptr inbounds %struct.macroblock, ptr %249, i64 %idxprom.i608, i32 31
  %and84.i = and i32 %255, 1
  %tobool85.not.i = icmp eq i32 %and84.i, 0
  br i1 %tobool85.not.i, label %for.inc92.i, label %if.then86.i

if.then86.i:                                      ; preds = %for.cond80.preheader.i
  %arrayidx88.i = getelementptr inbounds %struct.macroblock, ptr %249, i64 %idxprom.i608, i32 14, i64 0
  %317 = load i32, ptr %arrayidx88.i, align 4
  %318 = load i32, ptr %luma_transform_size_8x8_flag89.i, align 8
  %call.i = call i32 @writeLumaCoeff8x8(i32 noundef 0, i32 noundef %317, i32 noundef %318)
  %add90.i = add nsw i32 %call.i, %rate.1.i
  br label %for.inc92.i

for.inc92.i:                                      ; preds = %if.then86.i, %for.cond80.preheader.i
  %rate.3.i = phi i32 [ %add90.i, %if.then86.i ], [ %rate.1.i, %for.cond80.preheader.i ]
  %and84.1.i = and i32 %255, 2
  %tobool85.not.1.i = icmp eq i32 %and84.1.i, 0
  br i1 %tobool85.not.1.i, label %for.inc92.1.i, label %if.then86.1.i

if.then86.1.i:                                    ; preds = %for.inc92.i
  %arrayidx88.1.i = getelementptr inbounds %struct.macroblock, ptr %249, i64 %idxprom.i608, i32 14, i64 1
  %319 = load i32, ptr %arrayidx88.1.i, align 4
  %320 = load i32, ptr %luma_transform_size_8x8_flag89.i, align 8
  %call.1.i = call i32 @writeLumaCoeff8x8(i32 noundef 1, i32 noundef %319, i32 noundef %320)
  %add90.1.i = add nsw i32 %call.1.i, %rate.3.i
  br label %for.inc92.1.i

for.inc92.1.i:                                    ; preds = %if.then86.1.i, %for.inc92.i
  %rate.3.1.i = phi i32 [ %add90.1.i, %if.then86.1.i ], [ %rate.3.i, %for.inc92.i ]
  %and84.2.i = and i32 %255, 4
  %tobool85.not.2.i = icmp eq i32 %and84.2.i, 0
  br i1 %tobool85.not.2.i, label %for.inc92.2.i, label %if.then86.2.i

if.then86.2.i:                                    ; preds = %for.inc92.1.i
  %arrayidx88.2.i = getelementptr inbounds %struct.macroblock, ptr %249, i64 %idxprom.i608, i32 14, i64 2
  %321 = load i32, ptr %arrayidx88.2.i, align 4
  %322 = load i32, ptr %luma_transform_size_8x8_flag89.i, align 8
  %call.2.i = call i32 @writeLumaCoeff8x8(i32 noundef 2, i32 noundef %321, i32 noundef %322)
  %add90.2.i = add nsw i32 %call.2.i, %rate.3.1.i
  br label %for.inc92.2.i

for.inc92.2.i:                                    ; preds = %if.then86.2.i, %for.inc92.1.i
  %rate.3.2.i = phi i32 [ %add90.2.i, %if.then86.2.i ], [ %rate.3.1.i, %for.inc92.1.i ]
  %and84.3.i = and i32 %255, 8
  %tobool85.not.3.i = icmp eq i32 %and84.3.i, 0
  br i1 %tobool85.not.3.i, label %writeCBPandLumaCoeff.exit, label %if.then86.3.i

if.then86.3.i:                                    ; preds = %for.inc92.2.i
  %arrayidx88.3.i = getelementptr inbounds %struct.macroblock, ptr %249, i64 %idxprom.i608, i32 14, i64 3
  %323 = load i32, ptr %arrayidx88.3.i, align 4
  %324 = load i32, ptr %luma_transform_size_8x8_flag89.i, align 8
  %call.3.i = call i32 @writeLumaCoeff8x8(i32 noundef 3, i32 noundef %323, i32 noundef %324)
  %add90.3.i = add nsw i32 %call.3.i, %rate.3.2.i
  br label %writeCBPandLumaCoeff.exit

if.else.i619:                                     ; preds = %if.end68.i
  %325 = load ptr, ptr @input, align 8
  %symbol_mode.i = getelementptr inbounds %struct.InputParameters, ptr %325, i64 0, i32 74
  %326 = load i32, ptr %symbol_mode.i, align 8
  %cmp95.i = icmp eq i32 %326, 0
  br i1 %cmp95.i, label %if.then97.i, label %if.else100.i

if.then97.i:                                      ; preds = %if.else.i619
  %call98.i = call i32 @writeCoeff4x4_CAVLC(i32 noundef 1, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  %add99.i = add nsw i32 %call98.i, %rate.1.i
  br label %if.end130.i

if.else100.i:                                     ; preds = %if.else.i619
  %327 = load ptr, ptr @img, align 8
  %is_intra_block.i = getelementptr inbounds %struct.ImageParameters, ptr %327, i64 0, i32 26
  store i32 1, ptr %is_intra_block.i, align 8
  %value1112.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i605, i64 0, i32 1
  %value2.i620 = getelementptr inbounds %struct.syntaxelement, ptr %se.i605, i64 0, i32 2
  %context.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i605, i64 0, i32 6
  %partArr116.i = getelementptr inbounds %struct.Slice, ptr %251, i64 0, i32 6
  %arrayidx119.i = getelementptr inbounds i32, ptr %254, i64 7
  %len122.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i605, i64 0, i32 3
  %arrayidx123.i = getelementptr inbounds i32, ptr %bitcounter.i, i64 5
  br label %for.body109.i

for.body109.i:                                    ; preds = %for.body109.i, %if.else100.i
  %indvars.iv.i = phi i64 [ 0, %if.else100.i ], [ %indvars.iv.next.i, %for.body109.i ]
  %rate.4302.i = phi i32 [ %rate.1.i, %if.else100.i ], [ %add126.i, %for.body109.i ]
  %arrayidx111.i = getelementptr inbounds i32, ptr %258, i64 %indvars.iv.i
  %328 = load i32, ptr %arrayidx111.i, align 4
  store i32 %328, ptr %value1112.i, align 4
  %arrayidx114.i = getelementptr inbounds i32, ptr %259, i64 %indvars.iv.i
  %329 = load i32, ptr %arrayidx114.i, align 4
  store i32 %329, ptr %value2.i620, align 8
  store i32 0, ptr %context.i, align 8
  store i32 7, ptr %se.i605, align 8
  %330 = load ptr, ptr %partArr116.i, align 8
  %331 = load i32, ptr %arrayidx119.i, align 4
  %idxprom120.i = sext i32 %331 to i64
  %arrayidx121.i = getelementptr inbounds %struct.datapartition, ptr %330, i64 %idxprom120.i
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se.i605, ptr noundef %arrayidx121.i) #17
  %332 = load i32, ptr %len122.i, align 4
  %333 = load i32, ptr %arrayidx123.i, align 4
  %add124.i = add nsw i32 %333, %332
  store i32 %add124.i, ptr %arrayidx123.i, align 4
  %334 = load i32, ptr %len122.i, align 4
  %add126.i = add nsw i32 %334, %rate.4302.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp102.i = icmp ult i64 %indvars.iv.i, 16
  %cmp105.i = icmp ne i32 %328, 0
  %335 = select i1 %cmp102.i, i1 %cmp105.i, i1 false
  br i1 %335, label %for.body109.i, label %if.end130.i

if.end130.i:                                      ; preds = %for.body109.i, %if.then97.i
  %rate.5.i = phi i32 [ %add99.i, %if.then97.i ], [ %add126.i, %for.body109.i ]
  %and131.i = and i32 %255, 15
  %tobool132.not.i = icmp eq i32 %and131.i, 0
  br i1 %tobool132.not.i, label %writeCBPandLumaCoeff.exit, label %for.cond134.preheader.i

for.cond134.preheader.i:                          ; preds = %if.end130.i
  %value1189.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i605, i64 0, i32 1
  %value2192.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i605, i64 0, i32 2
  %context193.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i605, i64 0, i32 6
  %partArr195.i = getelementptr inbounds %struct.Slice, ptr %251, i64 0, i32 6
  %arrayidx198.i = getelementptr inbounds i32, ptr %254, i64 9
  %len201.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i605, i64 0, i32 3
  %arrayidx202.i = getelementptr inbounds i32, ptr %bitcounter.i, i64 5
  br label %for.cond138.preheader.i

for.cond138.preheader.i:                          ; preds = %for.inc219.i, %for.cond134.preheader.i
  %cmp135.i = phi i1 [ false, %for.inc219.i ], [ true, %for.cond134.preheader.i ]
  %indvars.iv701 = phi i64 [ 2, %for.inc219.i ], [ 0, %for.cond134.preheader.i ]
  %rate.6312.i = phi i32 [ %rate.11.1.1.i, %for.inc219.i ], [ %rate.5.i, %for.cond134.preheader.i ]
  %336 = or i64 %indvars.iv701, 1
  %337 = trunc i64 %indvars.iv701 to i32
  %338 = trunc i64 %indvars.iv701 to i32
  %339 = trunc i64 %336 to i32
  %340 = trunc i64 %336 to i32
  br label %for.cond142.preheader.i

for.cond142.preheader.i:                          ; preds = %for.inc210.1.1.i, %for.cond138.preheader.i
  %cmp139.i = phi i1 [ false, %for.inc210.1.1.i ], [ true, %for.cond138.preheader.i ]
  %indvars.iv696 = phi i64 [ 2, %for.inc210.1.1.i ], [ 0, %for.cond138.preheader.i ]
  %rate.7310.i = phi i32 [ %rate.11.1.1.i, %for.inc210.1.1.i ], [ %rate.6312.i, %for.cond138.preheader.i ]
  %341 = lshr exact i64 %indvars.iv696, 1
  %342 = or i64 %341, %indvars.iv701
  %343 = load ptr, ptr @input, align 8
  %symbol_mode159.i = getelementptr inbounds %struct.InputParameters, ptr %343, i64 0, i32 74
  %344 = load i32, ptr %symbol_mode159.i, align 8
  %cmp160.i = icmp eq i32 %344, 0
  br i1 %cmp160.i, label %if.then162.i, label %if.else165.i

if.then162.i:                                     ; preds = %for.cond142.preheader.i
  %345 = trunc i64 %342 to i32
  %call163.i = call i32 @writeCoeff4x4_CAVLC(i32 noundef 2, i32 noundef %345, i32 noundef 0, i32 noundef 0)
  %add164.i = add nsw i32 %call163.i, %rate.7310.i
  br label %for.inc210.i

if.else165.i:                                     ; preds = %for.cond142.preheader.i
  %346 = load ptr, ptr @img, align 8
  %cofAC.i = getelementptr inbounds %struct.ImageParameters, ptr %346, i64 0, i32 53
  %347 = load ptr, ptr %cofAC.i, align 8
  %arrayidx167.i = getelementptr inbounds ptr, ptr %347, i64 %342
  %348 = load ptr, ptr %arrayidx167.i, align 8
  %349 = load ptr, ptr %348, align 8
  %350 = load ptr, ptr %349, align 8
  %arrayidx176.i = getelementptr inbounds ptr, ptr %349, i64 1
  %351 = load ptr, ptr %arrayidx176.i, align 8
  %subblock_y.i = getelementptr inbounds %struct.ImageParameters, ptr %346, i64 0, i32 25
  store i32 %337, ptr %subblock_y.i, align 4
  %subblock_x.i = getelementptr inbounds %struct.ImageParameters, ptr %346, i64 0, i32 24
  %352 = trunc i64 %indvars.iv696 to i32
  store i32 %352, ptr %subblock_x.i, align 8
  %is_intra_block177.i = getelementptr inbounds %struct.ImageParameters, ptr %346, i64 0, i32 26
  store i32 1, ptr %is_intra_block177.i, align 8
  br label %for.body186.i

for.body186.i:                                    ; preds = %for.body186.i, %if.else165.i
  %indvars.iv318.i = phi i64 [ 0, %if.else165.i ], [ %indvars.iv.next319.i, %for.body186.i ]
  %rate.10304.i = phi i32 [ %rate.7310.i, %if.else165.i ], [ %add205.i, %for.body186.i ]
  %arrayidx188.i = getelementptr inbounds i32, ptr %350, i64 %indvars.iv318.i
  %353 = load i32, ptr %arrayidx188.i, align 4
  store i32 %353, ptr %value1189.i, align 4
  %arrayidx191.i = getelementptr inbounds i32, ptr %351, i64 %indvars.iv318.i
  %354 = load i32, ptr %arrayidx191.i, align 4
  store i32 %354, ptr %value2192.i, align 8
  store i32 1, ptr %context193.i, align 8
  store i32 9, ptr %se.i605, align 8
  %355 = load ptr, ptr %partArr195.i, align 8
  %356 = load i32, ptr %arrayidx198.i, align 4
  %idxprom199.i = sext i32 %356 to i64
  %arrayidx200.i = getelementptr inbounds %struct.datapartition, ptr %355, i64 %idxprom199.i
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se.i605, ptr noundef %arrayidx200.i) #17
  %357 = load i32, ptr %len201.i, align 4
  %358 = load i32, ptr %arrayidx202.i, align 4
  %add203.i = add nsw i32 %358, %357
  store i32 %add203.i, ptr %arrayidx202.i, align 4
  %359 = load i32, ptr %len201.i, align 4
  %add205.i = add nsw i32 %359, %rate.10304.i
  %indvars.iv.next319.i = add nuw nsw i64 %indvars.iv318.i, 1
  %cmp179.i = icmp ult i64 %indvars.iv318.i, 15
  %cmp182.i = icmp ne i32 %353, 0
  %360 = select i1 %cmp179.i, i1 %cmp182.i, i1 false
  br i1 %360, label %for.body186.i, label %for.inc210.i

for.inc210.i:                                     ; preds = %for.body186.i, %if.then162.i
  %rate.11.i = phi i32 [ %add164.i, %if.then162.i ], [ %add205.i, %for.body186.i ]
  %361 = or i64 %indvars.iv696, 1
  %362 = load ptr, ptr @input, align 8
  %symbol_mode159.1.i = getelementptr inbounds %struct.InputParameters, ptr %362, i64 0, i32 74
  %363 = load i32, ptr %symbol_mode159.1.i, align 8
  %cmp160.1.i = icmp eq i32 %363, 0
  br i1 %cmp160.1.i, label %if.then162.1.i, label %if.else165.1.i

if.else165.1.i:                                   ; preds = %for.inc210.i
  %364 = load ptr, ptr @img, align 8
  %cofAC.1.i = getelementptr inbounds %struct.ImageParameters, ptr %364, i64 0, i32 53
  %365 = load ptr, ptr %cofAC.1.i, align 8
  %arrayidx167.1.i = getelementptr inbounds ptr, ptr %365, i64 %342
  %366 = load ptr, ptr %arrayidx167.1.i, align 8
  %arrayidx169.1.i = getelementptr inbounds ptr, ptr %366, i64 1
  %367 = load ptr, ptr %arrayidx169.1.i, align 8
  %368 = load ptr, ptr %367, align 8
  %arrayidx176.1.i = getelementptr inbounds ptr, ptr %367, i64 1
  %369 = load ptr, ptr %arrayidx176.1.i, align 8
  %subblock_y.1.i = getelementptr inbounds %struct.ImageParameters, ptr %364, i64 0, i32 25
  store i32 %338, ptr %subblock_y.1.i, align 4
  %subblock_x.1.i = getelementptr inbounds %struct.ImageParameters, ptr %364, i64 0, i32 24
  %370 = trunc i64 %361 to i32
  store i32 %370, ptr %subblock_x.1.i, align 8
  %is_intra_block177.1.i = getelementptr inbounds %struct.ImageParameters, ptr %364, i64 0, i32 26
  store i32 1, ptr %is_intra_block177.1.i, align 8
  br label %for.body186.1.i

for.body186.1.i:                                  ; preds = %for.body186.1.i, %if.else165.1.i
  %indvars.iv318.1.i = phi i64 [ 0, %if.else165.1.i ], [ %indvars.iv.next319.1.i, %for.body186.1.i ]
  %rate.10304.1.i = phi i32 [ %rate.11.i, %if.else165.1.i ], [ %add205.1.i, %for.body186.1.i ]
  %arrayidx188.1.i = getelementptr inbounds i32, ptr %368, i64 %indvars.iv318.1.i
  %371 = load i32, ptr %arrayidx188.1.i, align 4
  store i32 %371, ptr %value1189.i, align 4
  %arrayidx191.1.i = getelementptr inbounds i32, ptr %369, i64 %indvars.iv318.1.i
  %372 = load i32, ptr %arrayidx191.1.i, align 4
  store i32 %372, ptr %value2192.i, align 8
  store i32 1, ptr %context193.i, align 8
  store i32 9, ptr %se.i605, align 8
  %373 = load ptr, ptr %partArr195.i, align 8
  %374 = load i32, ptr %arrayidx198.i, align 4
  %idxprom199.1.i = sext i32 %374 to i64
  %arrayidx200.1.i = getelementptr inbounds %struct.datapartition, ptr %373, i64 %idxprom199.1.i
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se.i605, ptr noundef %arrayidx200.1.i) #17
  %375 = load i32, ptr %len201.i, align 4
  %376 = load i32, ptr %arrayidx202.i, align 4
  %add203.1.i = add nsw i32 %376, %375
  store i32 %add203.1.i, ptr %arrayidx202.i, align 4
  %377 = load i32, ptr %len201.i, align 4
  %add205.1.i = add nsw i32 %377, %rate.10304.1.i
  %indvars.iv.next319.1.i = add nuw nsw i64 %indvars.iv318.1.i, 1
  %cmp179.1.i = icmp ult i64 %indvars.iv318.1.i, 15
  %cmp182.1.i = icmp ne i32 %371, 0
  %378 = select i1 %cmp179.1.i, i1 %cmp182.1.i, i1 false
  br i1 %378, label %for.body186.1.i, label %for.inc210.1.i

if.then162.1.i:                                   ; preds = %for.inc210.i
  %379 = trunc i64 %342 to i32
  %call163.1.i = call i32 @writeCoeff4x4_CAVLC(i32 noundef 2, i32 noundef %379, i32 noundef 1, i32 noundef 0)
  %add164.1.i = add nsw i32 %call163.1.i, %rate.11.i
  br label %for.inc210.1.i

for.inc210.1.i:                                   ; preds = %for.body186.1.i, %if.then162.1.i
  %rate.11.1.i = phi i32 [ %add164.1.i, %if.then162.1.i ], [ %add205.1.i, %for.body186.1.i ]
  %380 = load ptr, ptr @input, align 8
  %symbol_mode159.1341.i = getelementptr inbounds %struct.InputParameters, ptr %380, i64 0, i32 74
  %381 = load i32, ptr %symbol_mode159.1341.i, align 8
  %cmp160.1342.i = icmp eq i32 %381, 0
  br i1 %cmp160.1342.i, label %if.then162.1368.i, label %if.else165.1351.i

if.else165.1351.i:                                ; preds = %for.inc210.1.i
  %382 = load ptr, ptr @img, align 8
  %cofAC.1343.i = getelementptr inbounds %struct.ImageParameters, ptr %382, i64 0, i32 53
  %383 = load ptr, ptr %cofAC.1343.i, align 8
  %arrayidx167.1345.i = getelementptr inbounds ptr, ptr %383, i64 %342
  %384 = load ptr, ptr %arrayidx167.1345.i, align 8
  %arrayidx169.1346.i = getelementptr inbounds ptr, ptr %384, i64 2
  %385 = load ptr, ptr %arrayidx169.1346.i, align 8
  %386 = load ptr, ptr %385, align 8
  %arrayidx176.1347.i = getelementptr inbounds ptr, ptr %385, i64 1
  %387 = load ptr, ptr %arrayidx176.1347.i, align 8
  %subblock_y.1348.i = getelementptr inbounds %struct.ImageParameters, ptr %382, i64 0, i32 25
  store i32 %339, ptr %subblock_y.1348.i, align 4
  %subblock_x.1349.i = getelementptr inbounds %struct.ImageParameters, ptr %382, i64 0, i32 24
  %388 = trunc i64 %indvars.iv696 to i32
  store i32 %388, ptr %subblock_x.1349.i, align 8
  %is_intra_block177.1350.i = getelementptr inbounds %struct.ImageParameters, ptr %382, i64 0, i32 26
  store i32 1, ptr %is_intra_block177.1350.i, align 8
  br label %for.body186.1363.i

for.body186.1363.i:                               ; preds = %for.body186.1363.i, %if.else165.1351.i
  %indvars.iv318.1352.i = phi i64 [ 0, %if.else165.1351.i ], [ %indvars.iv.next319.1360.i, %for.body186.1363.i ]
  %rate.10304.1353.i = phi i32 [ %rate.11.1.i, %if.else165.1351.i ], [ %add205.1359.i, %for.body186.1363.i ]
  %arrayidx188.1354.i = getelementptr inbounds i32, ptr %386, i64 %indvars.iv318.1352.i
  %389 = load i32, ptr %arrayidx188.1354.i, align 4
  store i32 %389, ptr %value1189.i, align 4
  %arrayidx191.1355.i = getelementptr inbounds i32, ptr %387, i64 %indvars.iv318.1352.i
  %390 = load i32, ptr %arrayidx191.1355.i, align 4
  store i32 %390, ptr %value2192.i, align 8
  store i32 1, ptr %context193.i, align 8
  store i32 9, ptr %se.i605, align 8
  %391 = load ptr, ptr %partArr195.i, align 8
  %392 = load i32, ptr %arrayidx198.i, align 4
  %idxprom199.1356.i = sext i32 %392 to i64
  %arrayidx200.1357.i = getelementptr inbounds %struct.datapartition, ptr %391, i64 %idxprom199.1356.i
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se.i605, ptr noundef %arrayidx200.1357.i) #17
  %393 = load i32, ptr %len201.i, align 4
  %394 = load i32, ptr %arrayidx202.i, align 4
  %add203.1358.i = add nsw i32 %394, %393
  store i32 %add203.1358.i, ptr %arrayidx202.i, align 4
  %395 = load i32, ptr %len201.i, align 4
  %add205.1359.i = add nsw i32 %395, %rate.10304.1353.i
  %indvars.iv.next319.1360.i = add nuw nsw i64 %indvars.iv318.1352.i, 1
  %cmp179.1361.i = icmp ult i64 %indvars.iv318.1352.i, 15
  %cmp182.1362.i = icmp ne i32 %389, 0
  %396 = select i1 %cmp179.1361.i, i1 %cmp182.1362.i, i1 false
  br i1 %396, label %for.body186.1363.i, label %for.inc210.1370.i

if.then162.1368.i:                                ; preds = %for.inc210.1.i
  %397 = trunc i64 %342 to i32
  %call163.1366.i = call i32 @writeCoeff4x4_CAVLC(i32 noundef 2, i32 noundef %397, i32 noundef 2, i32 noundef 0)
  %add164.1367.i = add nsw i32 %call163.1366.i, %rate.11.1.i
  br label %for.inc210.1370.i

for.inc210.1370.i:                                ; preds = %for.body186.1363.i, %if.then162.1368.i
  %rate.11.1369.i = phi i32 [ %add164.1367.i, %if.then162.1368.i ], [ %add205.1359.i, %for.body186.1363.i ]
  %398 = load ptr, ptr @input, align 8
  %symbol_mode159.1.1.i = getelementptr inbounds %struct.InputParameters, ptr %398, i64 0, i32 74
  %399 = load i32, ptr %symbol_mode159.1.1.i, align 8
  %cmp160.1.1.i = icmp eq i32 %399, 0
  br i1 %cmp160.1.1.i, label %if.then162.1.1.i, label %if.else165.1.1.i

if.else165.1.1.i:                                 ; preds = %for.inc210.1370.i
  %400 = load ptr, ptr @img, align 8
  %cofAC.1.1.i = getelementptr inbounds %struct.ImageParameters, ptr %400, i64 0, i32 53
  %401 = load ptr, ptr %cofAC.1.1.i, align 8
  %arrayidx167.1.1.i = getelementptr inbounds ptr, ptr %401, i64 %342
  %402 = load ptr, ptr %arrayidx167.1.1.i, align 8
  %arrayidx169.1.1.i = getelementptr inbounds ptr, ptr %402, i64 3
  %403 = load ptr, ptr %arrayidx169.1.1.i, align 8
  %404 = load ptr, ptr %403, align 8
  %arrayidx176.1.1.i = getelementptr inbounds ptr, ptr %403, i64 1
  %405 = load ptr, ptr %arrayidx176.1.1.i, align 8
  %subblock_y.1.1.i = getelementptr inbounds %struct.ImageParameters, ptr %400, i64 0, i32 25
  store i32 %340, ptr %subblock_y.1.1.i, align 4
  %subblock_x.1.1.i = getelementptr inbounds %struct.ImageParameters, ptr %400, i64 0, i32 24
  %406 = trunc i64 %361 to i32
  store i32 %406, ptr %subblock_x.1.1.i, align 8
  %is_intra_block177.1.1.i = getelementptr inbounds %struct.ImageParameters, ptr %400, i64 0, i32 26
  store i32 1, ptr %is_intra_block177.1.1.i, align 8
  br label %for.body186.1.1.i

for.body186.1.1.i:                                ; preds = %for.body186.1.1.i, %if.else165.1.1.i
  %indvars.iv318.1.1.i = phi i64 [ 0, %if.else165.1.1.i ], [ %indvars.iv.next319.1.1.i, %for.body186.1.1.i ]
  %rate.10304.1.1.i = phi i32 [ %rate.11.1369.i, %if.else165.1.1.i ], [ %add205.1.1.i, %for.body186.1.1.i ]
  %arrayidx188.1.1.i = getelementptr inbounds i32, ptr %404, i64 %indvars.iv318.1.1.i
  %407 = load i32, ptr %arrayidx188.1.1.i, align 4
  store i32 %407, ptr %value1189.i, align 4
  %arrayidx191.1.1.i = getelementptr inbounds i32, ptr %405, i64 %indvars.iv318.1.1.i
  %408 = load i32, ptr %arrayidx191.1.1.i, align 4
  store i32 %408, ptr %value2192.i, align 8
  store i32 1, ptr %context193.i, align 8
  store i32 9, ptr %se.i605, align 8
  %409 = load ptr, ptr %partArr195.i, align 8
  %410 = load i32, ptr %arrayidx198.i, align 4
  %idxprom199.1.1.i = sext i32 %410 to i64
  %arrayidx200.1.1.i = getelementptr inbounds %struct.datapartition, ptr %409, i64 %idxprom199.1.1.i
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se.i605, ptr noundef %arrayidx200.1.1.i) #17
  %411 = load i32, ptr %len201.i, align 4
  %412 = load i32, ptr %arrayidx202.i, align 4
  %add203.1.1.i = add nsw i32 %412, %411
  store i32 %add203.1.1.i, ptr %arrayidx202.i, align 4
  %413 = load i32, ptr %len201.i, align 4
  %add205.1.1.i = add nsw i32 %413, %rate.10304.1.1.i
  %indvars.iv.next319.1.1.i = add nuw nsw i64 %indvars.iv318.1.1.i, 1
  %cmp179.1.1.i = icmp ult i64 %indvars.iv318.1.1.i, 15
  %cmp182.1.1.i = icmp ne i32 %407, 0
  %414 = select i1 %cmp179.1.1.i, i1 %cmp182.1.1.i, i1 false
  br i1 %414, label %for.body186.1.1.i, label %for.inc210.1.1.i

if.then162.1.1.i:                                 ; preds = %for.inc210.1370.i
  %415 = trunc i64 %342 to i32
  %call163.1.1.i = call i32 @writeCoeff4x4_CAVLC(i32 noundef 2, i32 noundef %415, i32 noundef 3, i32 noundef 0)
  %add164.1.1.i = add nsw i32 %call163.1.1.i, %rate.11.1369.i
  br label %for.inc210.1.1.i

for.inc210.1.1.i:                                 ; preds = %for.body186.1.1.i, %if.then162.1.1.i
  %rate.11.1.1.i = phi i32 [ %add164.1.1.i, %if.then162.1.1.i ], [ %add205.1.1.i, %for.body186.1.1.i ]
  br i1 %cmp139.i, label %for.cond142.preheader.i, label %for.inc219.i

for.inc219.i:                                     ; preds = %for.inc210.1.1.i
  br i1 %cmp135.i, label %for.cond138.preheader.i, label %writeCBPandLumaCoeff.exit

writeCBPandLumaCoeff.exit:                        ; preds = %for.inc219.i, %for.inc92.2.i, %if.then86.3.i, %if.end130.i
  %rate.12.i = phi i32 [ %rate.5.i, %if.end130.i ], [ %add90.3.i, %if.then86.3.i ], [ %rate.3.2.i, %for.inc92.2.i ], [ %rate.11.1.1.i, %for.inc219.i ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se.i605) #17
  store i32 %rate.12.i, ptr %coeff_rate, align 4
  %416 = load ptr, ptr @img, align 8
  %yuv_format434 = getelementptr inbounds %struct.ImageParameters, ptr %416, i64 0, i32 160
  %417 = load i32, ptr %yuv_format434, align 8
  %cmp435.not = icmp eq i32 %417, 0
  br i1 %cmp435.not, label %if.end440, label %if.then437

if.then437:                                       ; preds = %writeCBPandLumaCoeff.exit
  %mb_data.i622 = getelementptr inbounds %struct.ImageParameters, ptr %416, i64 0, i32 61
  %418 = load ptr, ptr %mb_data.i622, align 8
  %current_mb_nr.i623 = getelementptr inbounds %struct.ImageParameters, ptr %416, i64 0, i32 3
  %419 = load i32, ptr %current_mb_nr.i623, align 4
  %idxprom.i624 = sext i32 %419 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se.i621) #17
  %bitcounter.i625 = getelementptr inbounds %struct.macroblock, ptr %418, i64 %idxprom.i624, i32 5
  %currentSlice.i626 = getelementptr inbounds %struct.ImageParameters, ptr %416, i64 0, i32 60
  %420 = load ptr, ptr %currentSlice.i626, align 8
  %421 = load ptr, ptr @input, align 8
  %partition_mode.i627 = getelementptr inbounds %struct.InputParameters, ptr %421, i64 0, i32 76
  %422 = load i32, ptr %partition_mode.i627, align 8
  %idxprom1.i628 = sext i32 %422 to i64
  %arrayidx2.i629 = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom1.i628
  %423 = load ptr, ptr %arrayidx2.i629, align 8
  %cbp3.i630 = getelementptr inbounds %struct.macroblock, ptr %418, i64 %idxprom.i624, i32 12
  %424 = load i32, ptr %cbp3.i630, align 4
  %sub.i631 = add nsw i32 %417, -1
  %cmp.i632 = icmp sgt i32 %424, 15
  br i1 %cmp.i632, label %for.cond.preheader.i, label %if.end58.i

for.cond.preheader.i:                             ; preds = %if.then437
  %value1.i646 = getelementptr inbounds %struct.syntaxelement, ptr %se.i621, i64 0, i32 1
  %value2.i647 = getelementptr inbounds %struct.syntaxelement, ptr %se.i621, i64 0, i32 2
  %idxprom24.i = sext i32 %sub.i631 to i64
  %arrayidx25.i = getelementptr inbounds [3 x i32], ptr @writeChromaCoeff.chroma_dc_context, i64 0, i64 %idxprom24.i
  %context.i648 = getelementptr inbounds %struct.syntaxelement, ptr %se.i621, i64 0, i32 6
  %mb_type.i649 = getelementptr inbounds %struct.macroblock, ptr %418, i64 %idxprom.i624, i32 8
  %partArr.i650 = getelementptr inbounds %struct.Slice, ptr %420, i64 0, i32 6
  %len.i651 = getelementptr inbounds %struct.syntaxelement, ptr %se.i621, i64 0, i32 3
  %arrayidx51.i = getelementptr inbounds i32, ptr %bitcounter.i625, i64 6
  %symbol_mode.i652 = getelementptr inbounds %struct.InputParameters, ptr %421, i64 0, i32 74
  %425 = load i32, ptr %symbol_mode.i652, align 8
  %cmp5.i = icmp eq i32 %425, 0
  br i1 %cmp5.i, label %if.then6.i, label %if.else.i653

if.then6.i:                                       ; preds = %for.cond.preheader.i
  %call.i659 = call i32 @writeCoeff4x4_CAVLC(i32 noundef 6, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  br label %for.inc55.i

if.else.i653:                                     ; preds = %for.cond.preheader.i
  %cofDC.i654 = getelementptr inbounds %struct.ImageParameters, ptr %416, i64 0, i32 54
  %426 = load ptr, ptr %cofDC.i654, align 8
  %arrayidx9.i = getelementptr inbounds ptr, ptr %426, i64 1
  %427 = load ptr, ptr %arrayidx9.i, align 8
  %428 = load ptr, ptr %427, align 8
  %arrayidx15.i = getelementptr inbounds ptr, ptr %427, i64 1
  %429 = load ptr, ptr %arrayidx15.i, align 8
  %num_cdc_coeff260.i = getelementptr inbounds %struct.ImageParameters, ptr %416, i64 0, i32 159
  %430 = load i32, ptr %num_cdc_coeff260.i, align 4
  %cmp17261.i = icmp sgt i32 %430, -1
  br i1 %cmp17261.i, label %for.body19.lr.ph.i, label %for.inc55.i

for.body19.lr.ph.i:                               ; preds = %if.else.i653
  %431 = load i32, ptr %arrayidx25.i, align 4
  br label %for.body19.i

for.body19.i:                                     ; preds = %for.body19.i, %for.body19.lr.ph.i
  %indvars.iv.i656 = phi i64 [ 0, %for.body19.lr.ph.i ], [ %indvars.iv.next.i658, %for.body19.i ]
  %432 = phi ptr [ %416, %for.body19.lr.ph.i ], [ %442, %for.body19.i ]
  %rate.1263.i = phi i32 [ 0, %for.body19.lr.ph.i ], [ %add54.i, %for.body19.i ]
  %arrayidx21.i = getelementptr inbounds i32, ptr %428, i64 %indvars.iv.i656
  %433 = load i32, ptr %arrayidx21.i, align 4
  store i32 %433, ptr %value1.i646, align 4
  %arrayidx23.i = getelementptr inbounds i32, ptr %429, i64 %indvars.iv.i656
  %434 = load i32, ptr %arrayidx23.i, align 4
  store i32 %434, ptr %value2.i647, align 8
  store i32 %431, ptr %context.i648, align 8
  %435 = load i32, ptr %mb_type.i649, align 8
  %436 = add i32 %435, -9
  %switch.and.i = and i32 %436, -6
  %switch.selectcmp.i = icmp eq i32 %switch.and.i, 0
  %cond.i = select i1 %switch.selectcmp.i, i32 8, i32 12
  store i32 %cond.i, ptr %se.i621, align 8
  %lor.ext.i = zext i1 %switch.selectcmp.i to i32
  %is_intra_block.i657 = getelementptr inbounds %struct.ImageParameters, ptr %432, i64 0, i32 26
  store i32 %lor.ext.i, ptr %is_intra_block.i657, align 8
  %is_v_block.i = getelementptr inbounds %struct.ImageParameters, ptr %432, i64 0, i32 27
  store i32 0, ptr %is_v_block.i, align 4
  %437 = load ptr, ptr %partArr.i650, align 8
  %idxprom47.i = zext i32 %cond.i to i64
  %arrayidx48.i = getelementptr inbounds i32, ptr %423, i64 %idxprom47.i
  %438 = load i32, ptr %arrayidx48.i, align 4
  %idxprom49.i = sext i32 %438 to i64
  %arrayidx50.i = getelementptr inbounds %struct.datapartition, ptr %437, i64 %idxprom49.i
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se.i621, ptr noundef %arrayidx50.i) #17
  %439 = load i32, ptr %len.i651, align 4
  %440 = load i32, ptr %arrayidx51.i, align 4
  %add52.i = add nsw i32 %440, %439
  store i32 %add52.i, ptr %arrayidx51.i, align 4
  %441 = load i32, ptr %len.i651, align 4
  %add54.i = add nsw i32 %441, %rate.1263.i
  %indvars.iv.next.i658 = add nuw nsw i64 %indvars.iv.i656, 1
  %442 = load ptr, ptr @img, align 8
  %num_cdc_coeff.i = getelementptr inbounds %struct.ImageParameters, ptr %442, i64 0, i32 159
  %443 = load i32, ptr %num_cdc_coeff.i, align 4
  %444 = sext i32 %443 to i64
  %cmp17.i = icmp slt i64 %indvars.iv.i656, %444
  %cmp18.i = icmp ne i32 %433, 0
  %445 = select i1 %cmp17.i, i1 %cmp18.i, i1 false
  br i1 %445, label %for.body19.i, label %for.inc55.i

for.inc55.i:                                      ; preds = %for.body19.i, %if.else.i653, %if.then6.i
  %rate.2.i = phi i32 [ %call.i659, %if.then6.i ], [ 0, %if.else.i653 ], [ %add54.i, %for.body19.i ]
  %446 = load ptr, ptr @input, align 8
  %symbol_mode.1.i = getelementptr inbounds %struct.InputParameters, ptr %446, i64 0, i32 74
  %447 = load i32, ptr %symbol_mode.1.i, align 8
  %cmp5.1.i = icmp eq i32 %447, 0
  br i1 %cmp5.1.i, label %if.then6.1.i, label %if.else.1.i

if.else.1.i:                                      ; preds = %for.inc55.i
  %448 = load ptr, ptr @img, align 8
  %cofDC.1.i = getelementptr inbounds %struct.ImageParameters, ptr %448, i64 0, i32 54
  %449 = load ptr, ptr %cofDC.1.i, align 8
  %arrayidx9.1.i = getelementptr inbounds ptr, ptr %449, i64 2
  %450 = load ptr, ptr %arrayidx9.1.i, align 8
  %451 = load ptr, ptr %450, align 8
  %arrayidx15.1.i = getelementptr inbounds ptr, ptr %450, i64 1
  %452 = load ptr, ptr %arrayidx15.1.i, align 8
  %num_cdc_coeff260.1.i = getelementptr inbounds %struct.ImageParameters, ptr %448, i64 0, i32 159
  %453 = load i32, ptr %num_cdc_coeff260.1.i, align 4
  %cmp17261.1.i = icmp sgt i32 %453, -1
  br i1 %cmp17261.1.i, label %for.body19.lr.ph.1.i, label %if.end58.i

for.body19.lr.ph.1.i:                             ; preds = %if.else.1.i
  %454 = load i32, ptr %arrayidx25.i, align 4
  br label %for.body19.1.i

for.body19.1.i:                                   ; preds = %for.body19.1.i, %for.body19.lr.ph.1.i
  %indvars.iv.1.i = phi i64 [ 0, %for.body19.lr.ph.1.i ], [ %indvars.iv.next.1.i, %for.body19.1.i ]
  %455 = phi ptr [ %448, %for.body19.lr.ph.1.i ], [ %465, %for.body19.1.i ]
  %rate.1263.1.i = phi i32 [ %rate.2.i, %for.body19.lr.ph.1.i ], [ %add54.1.i, %for.body19.1.i ]
  %arrayidx21.1.i = getelementptr inbounds i32, ptr %451, i64 %indvars.iv.1.i
  %456 = load i32, ptr %arrayidx21.1.i, align 4
  store i32 %456, ptr %value1.i646, align 4
  %arrayidx23.1.i = getelementptr inbounds i32, ptr %452, i64 %indvars.iv.1.i
  %457 = load i32, ptr %arrayidx23.1.i, align 4
  store i32 %457, ptr %value2.i647, align 8
  store i32 %454, ptr %context.i648, align 8
  %458 = load i32, ptr %mb_type.i649, align 8
  %459 = add i32 %458, -9
  %switch.and.1.i = and i32 %459, -6
  %switch.selectcmp.1.i = icmp eq i32 %switch.and.1.i, 0
  %cond.1.i = select i1 %switch.selectcmp.1.i, i32 8, i32 12
  store i32 %cond.1.i, ptr %se.i621, align 8
  %lor.ext.1.i = zext i1 %switch.selectcmp.1.i to i32
  %is_intra_block.1.i = getelementptr inbounds %struct.ImageParameters, ptr %455, i64 0, i32 26
  store i32 %lor.ext.1.i, ptr %is_intra_block.1.i, align 8
  %is_v_block.1.i = getelementptr inbounds %struct.ImageParameters, ptr %455, i64 0, i32 27
  store i32 1, ptr %is_v_block.1.i, align 4
  %460 = load ptr, ptr %partArr.i650, align 8
  %idxprom47.1.i = zext i32 %cond.1.i to i64
  %arrayidx48.1.i = getelementptr inbounds i32, ptr %423, i64 %idxprom47.1.i
  %461 = load i32, ptr %arrayidx48.1.i, align 4
  %idxprom49.1.i = sext i32 %461 to i64
  %arrayidx50.1.i = getelementptr inbounds %struct.datapartition, ptr %460, i64 %idxprom49.1.i
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se.i621, ptr noundef %arrayidx50.1.i) #17
  %462 = load i32, ptr %len.i651, align 4
  %463 = load i32, ptr %arrayidx51.i, align 4
  %add52.1.i = add nsw i32 %463, %462
  store i32 %add52.1.i, ptr %arrayidx51.i, align 4
  %464 = load i32, ptr %len.i651, align 4
  %add54.1.i = add nsw i32 %464, %rate.1263.1.i
  %indvars.iv.next.1.i = add nuw nsw i64 %indvars.iv.1.i, 1
  %465 = load ptr, ptr @img, align 8
  %num_cdc_coeff.1.i = getelementptr inbounds %struct.ImageParameters, ptr %465, i64 0, i32 159
  %466 = load i32, ptr %num_cdc_coeff.1.i, align 4
  %467 = sext i32 %466 to i64
  %cmp17.1.i = icmp slt i64 %indvars.iv.1.i, %467
  %cmp18.1.i = icmp ne i32 %456, 0
  %468 = select i1 %cmp17.1.i, i1 %cmp18.1.i, i1 false
  br i1 %468, label %for.body19.1.i, label %if.end58.i

if.then6.1.i:                                     ; preds = %for.inc55.i
  %call.1.i655 = call i32 @writeCoeff4x4_CAVLC(i32 noundef 6, i32 noundef 0, i32 noundef 0, i32 noundef 1)
  %add.1.i = add nsw i32 %call.1.i655, %rate.2.i
  br label %if.end58.i

if.end58.i:                                       ; preds = %for.body19.1.i, %if.then6.1.i, %if.else.1.i, %if.then437
  %rate.3.i633 = phi i32 [ 0, %if.then437 ], [ %add.1.i, %if.then6.1.i ], [ %rate.2.i, %if.else.1.i ], [ %add54.1.i, %for.body19.1.i ]
  %shr.mask.i = and i32 %424, -16
  %cmp59.i = icmp eq i32 %shr.mask.i, 32
  br i1 %cmp59.i, label %for.cond61.preheader.i, label %writeChromaCoeff.exit

for.cond61.preheader.i:                           ; preds = %if.end58.i
  %469 = load ptr, ptr @img, align 8
  %num_blk8x8_uv271.i = getelementptr inbounds %struct.ImageParameters, ptr %469, i64 0, i32 158
  %470 = load i32, ptr %num_blk8x8_uv271.i, align 8
  %cmp63273.i = icmp sgt i32 %470, 0
  br i1 %cmp63273.i, label %for.cond65.preheader.lr.ph.i, label %writeChromaCoeff.exit

for.cond65.preheader.lr.ph.i:                     ; preds = %for.cond61.preheader.i
  %idxprom93.i = sext i32 %sub.i631 to i64
  %value1121.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i621, i64 0, i32 1
  %value2124.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i621, i64 0, i32 2
  %context125.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i621, i64 0, i32 6
  %mb_type126.i = getelementptr inbounds %struct.macroblock, ptr %418, i64 %idxprom.i624, i32 8
  %partArr167.i = getelementptr inbounds %struct.Slice, ptr %420, i64 0, i32 6
  %len173.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i621, i64 0, i32 3
  %arrayidx174.i = getelementptr inbounds i32, ptr %bitcounter.i625, i64 6
  br label %for.cond65.preheader.i

for.cond65.preheader.i:                           ; preds = %for.inc182.3.i, %for.cond65.preheader.lr.ph.i
  %471 = phi ptr [ %469, %for.cond65.preheader.lr.ph.i ], [ %576, %for.inc182.3.i ]
  %indvars.iv289.i = phi i64 [ 4, %for.cond65.preheader.lr.ph.i ], [ %indvars.iv.next290.i, %for.inc182.3.i ]
  %rate.4276.i = phi i32 [ %rate.3.i633, %for.cond65.preheader.lr.ph.i ], [ %rate.7.3.i, %for.inc182.3.i ]
  %uv.1274.i = phi i32 [ -1, %for.cond65.preheader.lr.ph.i ], [ %uv.3.3.i, %for.inc182.3.i ]
  %472 = add nsw i64 %indvars.iv289.i, -4
  %473 = load ptr, ptr @input, align 8
  %symbol_mode68.i = getelementptr inbounds %struct.InputParameters, ptr %473, i64 0, i32 74
  %474 = load i32, ptr %symbol_mode68.i, align 8
  %cmp69.i = icmp eq i32 %474, 0
  br i1 %cmp69.i, label %if.then70.i, label %if.else80.i

if.then70.i:                                      ; preds = %for.cond65.preheader.i
  %arrayidx77.i = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @writeChromaCoeff.chroma_ac_param, i64 0, i64 %idxprom93.i, i64 %472, i64 0
  %475 = load i8, ptr %arrayidx77.i, align 4
  %conv.i645 = zext i8 %475 to i32
  %476 = trunc i64 %indvars.iv289.i to i32
  %call78.i = call i32 @writeCoeff4x4_CAVLC(i32 noundef 7, i32 noundef %476, i32 noundef 0, i32 noundef %conv.i645)
  %add79.i = add nsw i32 %call78.i, %rate.4276.i
  br label %for.inc182.i

if.else80.i:                                      ; preds = %for.cond65.preheader.i
  %cofAC.i634 = getelementptr inbounds %struct.ImageParameters, ptr %471, i64 0, i32 53
  %477 = load ptr, ptr %cofAC.i634, align 8
  %arrayidx82.i = getelementptr inbounds ptr, ptr %477, i64 %indvars.iv289.i
  %478 = load ptr, ptr %arrayidx82.i, align 8
  %479 = load ptr, ptr %478, align 8
  %480 = load ptr, ptr %479, align 8
  %arrayidx91.i = getelementptr inbounds ptr, ptr %479, i64 1
  %481 = load ptr, ptr %arrayidx91.i, align 8
  %inc92.i = add nsw i32 %uv.1274.i, 1
  %arrayidx99.i = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom93.i, i64 %472, i64 0
  %482 = load i8, ptr %arrayidx99.i, align 4
  %483 = lshr i8 %482, 2
  %shr101.i = zext i8 %483 to i32
  %subblock_y.i635 = getelementptr inbounds %struct.ImageParameters, ptr %471, i64 0, i32 25
  store i32 %shr101.i, ptr %subblock_y.i635, align 4
  %arrayidx108.i = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom93.i, i64 %472, i64 0
  %484 = load i8, ptr %arrayidx108.i, align 4
  %485 = lshr i8 %484, 2
  %shr110.i = zext i8 %485 to i32
  %subblock_x.i636 = getelementptr inbounds %struct.ImageParameters, ptr %471, i64 0, i32 24
  store i32 %shr110.i, ptr %subblock_x.i636, align 8
  br label %for.body118.i

for.body118.i:                                    ; preds = %for.body118.i, %if.else80.i
  %indvars.iv283.i = phi i64 [ 0, %if.else80.i ], [ %indvars.iv.next284.i, %for.body118.i ]
  %rate.6267.i = phi i32 [ %rate.4276.i, %if.else80.i ], [ %add177.i, %for.body118.i ]
  %arrayidx120.i = getelementptr inbounds i32, ptr %480, i64 %indvars.iv283.i
  %486 = load i32, ptr %arrayidx120.i, align 4
  store i32 %486, ptr %value1121.i, align 4
  %arrayidx123.i637 = getelementptr inbounds i32, ptr %481, i64 %indvars.iv283.i
  %487 = load i32, ptr %arrayidx123.i637, align 4
  store i32 %487, ptr %value2124.i, align 8
  store i32 7, ptr %context125.i, align 8
  %488 = load i32, ptr %mb_type126.i, align 8
  %489 = add i32 %488, -9
  %switch.and254.i = and i32 %489, -6
  %switch.selectcmp255.i = icmp eq i32 %switch.and254.i, 0
  %cond143.i = select i1 %switch.selectcmp255.i, i32 10, i32 14
  store i32 %cond143.i, ptr %se.i621, align 8
  %lor.ext161.i = zext i1 %switch.selectcmp255.i to i32
  %490 = load ptr, ptr @img, align 8
  %is_intra_block162.i = getelementptr inbounds %struct.ImageParameters, ptr %490, i64 0, i32 26
  store i32 %lor.ext161.i, ptr %is_intra_block162.i, align 8
  %num_blk8x8_uv163.i = getelementptr inbounds %struct.ImageParameters, ptr %490, i64 0, i32 158
  %491 = load i32, ptr %num_blk8x8_uv163.i, align 8
  %shl.i = shl i32 %491, 1
  %cmp164.i = icmp sge i32 %inc92.i, %shl.i
  %conv165.i = zext i1 %cmp164.i to i32
  %is_v_block166.i = getelementptr inbounds %struct.ImageParameters, ptr %490, i64 0, i32 27
  store i32 %conv165.i, ptr %is_v_block166.i, align 4
  %492 = load ptr, ptr %partArr167.i, align 8
  %idxprom169.i = zext i32 %cond143.i to i64
  %arrayidx170.i = getelementptr inbounds i32, ptr %423, i64 %idxprom169.i
  %493 = load i32, ptr %arrayidx170.i, align 4
  %idxprom171.i = sext i32 %493 to i64
  %arrayidx172.i = getelementptr inbounds %struct.datapartition, ptr %492, i64 %idxprom171.i
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se.i621, ptr noundef %arrayidx172.i) #17
  %494 = load i32, ptr %len173.i, align 4
  %495 = load i32, ptr %arrayidx174.i, align 4
  %add175.i = add nsw i32 %495, %494
  store i32 %add175.i, ptr %arrayidx174.i, align 4
  %496 = load i32, ptr %len173.i, align 4
  %add177.i = add nsw i32 %496, %rate.6267.i
  %indvars.iv.next284.i = add nuw nsw i64 %indvars.iv283.i, 1
  %cmp112.i = icmp ult i64 %indvars.iv283.i, 15
  %cmp115.i = icmp ne i32 %486, 0
  %497 = select i1 %cmp112.i, i1 %cmp115.i, i1 false
  br i1 %497, label %for.body118.i, label %for.inc182.i

for.inc182.i:                                     ; preds = %for.body118.i, %if.then70.i
  %uv.3.i = phi i32 [ %uv.1274.i, %if.then70.i ], [ %inc92.i, %for.body118.i ]
  %rate.7.i = phi i32 [ %add79.i, %if.then70.i ], [ %add177.i, %for.body118.i ]
  %498 = load ptr, ptr @input, align 8
  %symbol_mode68.1.i = getelementptr inbounds %struct.InputParameters, ptr %498, i64 0, i32 74
  %499 = load i32, ptr %symbol_mode68.1.i, align 8
  %cmp69.1.i = icmp eq i32 %499, 0
  br i1 %cmp69.1.i, label %if.then70.1.i, label %if.else80.1.i

if.else80.1.i:                                    ; preds = %for.inc182.i
  %500 = load ptr, ptr @img, align 8
  %cofAC.1.i638 = getelementptr inbounds %struct.ImageParameters, ptr %500, i64 0, i32 53
  %501 = load ptr, ptr %cofAC.1.i638, align 8
  %arrayidx82.1.i = getelementptr inbounds ptr, ptr %501, i64 %indvars.iv289.i
  %502 = load ptr, ptr %arrayidx82.1.i, align 8
  %arrayidx84.1.i = getelementptr inbounds ptr, ptr %502, i64 1
  %503 = load ptr, ptr %arrayidx84.1.i, align 8
  %504 = load ptr, ptr %503, align 8
  %arrayidx91.1.i = getelementptr inbounds ptr, ptr %503, i64 1
  %505 = load ptr, ptr %arrayidx91.1.i, align 8
  %inc92.1.i = add nsw i32 %uv.3.i, 1
  %arrayidx99.1.i = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom93.i, i64 %472, i64 1
  %506 = load i8, ptr %arrayidx99.1.i, align 1
  %507 = lshr i8 %506, 2
  %shr101.1.i = zext i8 %507 to i32
  %subblock_y.1.i639 = getelementptr inbounds %struct.ImageParameters, ptr %500, i64 0, i32 25
  store i32 %shr101.1.i, ptr %subblock_y.1.i639, align 4
  %arrayidx108.1.i = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom93.i, i64 %472, i64 1
  %508 = load i8, ptr %arrayidx108.1.i, align 1
  %509 = lshr i8 %508, 2
  %shr110.1.i = zext i8 %509 to i32
  %subblock_x.1.i640 = getelementptr inbounds %struct.ImageParameters, ptr %500, i64 0, i32 24
  store i32 %shr110.1.i, ptr %subblock_x.1.i640, align 8
  br label %for.body118.1.i

for.body118.1.i:                                  ; preds = %for.body118.1.i, %if.else80.1.i
  %indvars.iv283.1.i = phi i64 [ 0, %if.else80.1.i ], [ %indvars.iv.next284.1.i, %for.body118.1.i ]
  %rate.6267.1.i = phi i32 [ %rate.7.i, %if.else80.1.i ], [ %add177.1.i, %for.body118.1.i ]
  %arrayidx120.1.i = getelementptr inbounds i32, ptr %504, i64 %indvars.iv283.1.i
  %510 = load i32, ptr %arrayidx120.1.i, align 4
  store i32 %510, ptr %value1121.i, align 4
  %arrayidx123.1.i = getelementptr inbounds i32, ptr %505, i64 %indvars.iv283.1.i
  %511 = load i32, ptr %arrayidx123.1.i, align 4
  store i32 %511, ptr %value2124.i, align 8
  store i32 7, ptr %context125.i, align 8
  %512 = load i32, ptr %mb_type126.i, align 8
  %513 = add i32 %512, -9
  %switch.and254.1.i = and i32 %513, -6
  %switch.selectcmp255.1.i = icmp eq i32 %switch.and254.1.i, 0
  %cond143.1.i = select i1 %switch.selectcmp255.1.i, i32 10, i32 14
  store i32 %cond143.1.i, ptr %se.i621, align 8
  %lor.ext161.1.i = zext i1 %switch.selectcmp255.1.i to i32
  %514 = load ptr, ptr @img, align 8
  %is_intra_block162.1.i = getelementptr inbounds %struct.ImageParameters, ptr %514, i64 0, i32 26
  store i32 %lor.ext161.1.i, ptr %is_intra_block162.1.i, align 8
  %num_blk8x8_uv163.1.i = getelementptr inbounds %struct.ImageParameters, ptr %514, i64 0, i32 158
  %515 = load i32, ptr %num_blk8x8_uv163.1.i, align 8
  %shl.1.i = shl i32 %515, 1
  %cmp164.1.i = icmp sge i32 %inc92.1.i, %shl.1.i
  %conv165.1.i = zext i1 %cmp164.1.i to i32
  %is_v_block166.1.i = getelementptr inbounds %struct.ImageParameters, ptr %514, i64 0, i32 27
  store i32 %conv165.1.i, ptr %is_v_block166.1.i, align 4
  %516 = load ptr, ptr %partArr167.i, align 8
  %idxprom169.1.i = zext i32 %cond143.1.i to i64
  %arrayidx170.1.i = getelementptr inbounds i32, ptr %423, i64 %idxprom169.1.i
  %517 = load i32, ptr %arrayidx170.1.i, align 4
  %idxprom171.1.i = sext i32 %517 to i64
  %arrayidx172.1.i = getelementptr inbounds %struct.datapartition, ptr %516, i64 %idxprom171.1.i
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se.i621, ptr noundef %arrayidx172.1.i) #17
  %518 = load i32, ptr %len173.i, align 4
  %519 = load i32, ptr %arrayidx174.i, align 4
  %add175.1.i = add nsw i32 %519, %518
  store i32 %add175.1.i, ptr %arrayidx174.i, align 4
  %520 = load i32, ptr %len173.i, align 4
  %add177.1.i = add nsw i32 %520, %rate.6267.1.i
  %indvars.iv.next284.1.i = add nuw nsw i64 %indvars.iv283.1.i, 1
  %cmp112.1.i = icmp ult i64 %indvars.iv283.1.i, 15
  %cmp115.1.i = icmp ne i32 %510, 0
  %521 = select i1 %cmp112.1.i, i1 %cmp115.1.i, i1 false
  br i1 %521, label %for.body118.1.i, label %for.inc182.1.i

if.then70.1.i:                                    ; preds = %for.inc182.i
  %arrayidx77.1.i = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @writeChromaCoeff.chroma_ac_param, i64 0, i64 %idxprom93.i, i64 %472, i64 1
  %522 = load i8, ptr %arrayidx77.1.i, align 1
  %conv.1.i644 = zext i8 %522 to i32
  %523 = trunc i64 %indvars.iv289.i to i32
  %call78.1.i = call i32 @writeCoeff4x4_CAVLC(i32 noundef 7, i32 noundef %523, i32 noundef 1, i32 noundef %conv.1.i644)
  %add79.1.i = add nsw i32 %call78.1.i, %rate.7.i
  br label %for.inc182.1.i

for.inc182.1.i:                                   ; preds = %for.body118.1.i, %if.then70.1.i
  %uv.3.1.i = phi i32 [ %uv.3.i, %if.then70.1.i ], [ %inc92.1.i, %for.body118.1.i ]
  %rate.7.1.i = phi i32 [ %add79.1.i, %if.then70.1.i ], [ %add177.1.i, %for.body118.1.i ]
  %524 = load ptr, ptr @input, align 8
  %symbol_mode68.2.i = getelementptr inbounds %struct.InputParameters, ptr %524, i64 0, i32 74
  %525 = load i32, ptr %symbol_mode68.2.i, align 8
  %cmp69.2.i = icmp eq i32 %525, 0
  br i1 %cmp69.2.i, label %if.then70.2.i, label %if.else80.2.i

if.else80.2.i:                                    ; preds = %for.inc182.1.i
  %526 = load ptr, ptr @img, align 8
  %cofAC.2.i = getelementptr inbounds %struct.ImageParameters, ptr %526, i64 0, i32 53
  %527 = load ptr, ptr %cofAC.2.i, align 8
  %arrayidx82.2.i = getelementptr inbounds ptr, ptr %527, i64 %indvars.iv289.i
  %528 = load ptr, ptr %arrayidx82.2.i, align 8
  %arrayidx84.2.i = getelementptr inbounds ptr, ptr %528, i64 2
  %529 = load ptr, ptr %arrayidx84.2.i, align 8
  %530 = load ptr, ptr %529, align 8
  %arrayidx91.2.i = getelementptr inbounds ptr, ptr %529, i64 1
  %531 = load ptr, ptr %arrayidx91.2.i, align 8
  %inc92.2.i = add nsw i32 %uv.3.1.i, 1
  %arrayidx99.2.i = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom93.i, i64 %472, i64 2
  %532 = load i8, ptr %arrayidx99.2.i, align 2
  %533 = lshr i8 %532, 2
  %shr101.2.i = zext i8 %533 to i32
  %subblock_y.2.i = getelementptr inbounds %struct.ImageParameters, ptr %526, i64 0, i32 25
  store i32 %shr101.2.i, ptr %subblock_y.2.i, align 4
  %arrayidx108.2.i = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom93.i, i64 %472, i64 2
  %534 = load i8, ptr %arrayidx108.2.i, align 2
  %535 = lshr i8 %534, 2
  %shr110.2.i = zext i8 %535 to i32
  %subblock_x.2.i = getelementptr inbounds %struct.ImageParameters, ptr %526, i64 0, i32 24
  store i32 %shr110.2.i, ptr %subblock_x.2.i, align 8
  br label %for.body118.2.i

for.body118.2.i:                                  ; preds = %for.body118.2.i, %if.else80.2.i
  %indvars.iv283.2.i = phi i64 [ 0, %if.else80.2.i ], [ %indvars.iv.next284.2.i, %for.body118.2.i ]
  %rate.6267.2.i = phi i32 [ %rate.7.1.i, %if.else80.2.i ], [ %add177.2.i, %for.body118.2.i ]
  %arrayidx120.2.i = getelementptr inbounds i32, ptr %530, i64 %indvars.iv283.2.i
  %536 = load i32, ptr %arrayidx120.2.i, align 4
  store i32 %536, ptr %value1121.i, align 4
  %arrayidx123.2.i = getelementptr inbounds i32, ptr %531, i64 %indvars.iv283.2.i
  %537 = load i32, ptr %arrayidx123.2.i, align 4
  store i32 %537, ptr %value2124.i, align 8
  store i32 7, ptr %context125.i, align 8
  %538 = load i32, ptr %mb_type126.i, align 8
  %539 = add i32 %538, -9
  %switch.and254.2.i = and i32 %539, -6
  %switch.selectcmp255.2.i = icmp eq i32 %switch.and254.2.i, 0
  %cond143.2.i = select i1 %switch.selectcmp255.2.i, i32 10, i32 14
  store i32 %cond143.2.i, ptr %se.i621, align 8
  %lor.ext161.2.i = zext i1 %switch.selectcmp255.2.i to i32
  %540 = load ptr, ptr @img, align 8
  %is_intra_block162.2.i = getelementptr inbounds %struct.ImageParameters, ptr %540, i64 0, i32 26
  store i32 %lor.ext161.2.i, ptr %is_intra_block162.2.i, align 8
  %num_blk8x8_uv163.2.i = getelementptr inbounds %struct.ImageParameters, ptr %540, i64 0, i32 158
  %541 = load i32, ptr %num_blk8x8_uv163.2.i, align 8
  %shl.2.i = shl i32 %541, 1
  %cmp164.2.i = icmp sge i32 %inc92.2.i, %shl.2.i
  %conv165.2.i = zext i1 %cmp164.2.i to i32
  %is_v_block166.2.i = getelementptr inbounds %struct.ImageParameters, ptr %540, i64 0, i32 27
  store i32 %conv165.2.i, ptr %is_v_block166.2.i, align 4
  %542 = load ptr, ptr %partArr167.i, align 8
  %idxprom169.2.i = zext i32 %cond143.2.i to i64
  %arrayidx170.2.i = getelementptr inbounds i32, ptr %423, i64 %idxprom169.2.i
  %543 = load i32, ptr %arrayidx170.2.i, align 4
  %idxprom171.2.i = sext i32 %543 to i64
  %arrayidx172.2.i = getelementptr inbounds %struct.datapartition, ptr %542, i64 %idxprom171.2.i
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se.i621, ptr noundef %arrayidx172.2.i) #17
  %544 = load i32, ptr %len173.i, align 4
  %545 = load i32, ptr %arrayidx174.i, align 4
  %add175.2.i = add nsw i32 %545, %544
  store i32 %add175.2.i, ptr %arrayidx174.i, align 4
  %546 = load i32, ptr %len173.i, align 4
  %add177.2.i = add nsw i32 %546, %rate.6267.2.i
  %indvars.iv.next284.2.i = add nuw nsw i64 %indvars.iv283.2.i, 1
  %cmp112.2.i = icmp ult i64 %indvars.iv283.2.i, 15
  %cmp115.2.i = icmp ne i32 %536, 0
  %547 = select i1 %cmp112.2.i, i1 %cmp115.2.i, i1 false
  br i1 %547, label %for.body118.2.i, label %for.inc182.2.i

if.then70.2.i:                                    ; preds = %for.inc182.1.i
  %arrayidx77.2.i = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @writeChromaCoeff.chroma_ac_param, i64 0, i64 %idxprom93.i, i64 %472, i64 2
  %548 = load i8, ptr %arrayidx77.2.i, align 2
  %conv.2.i643 = zext i8 %548 to i32
  %549 = trunc i64 %indvars.iv289.i to i32
  %call78.2.i = call i32 @writeCoeff4x4_CAVLC(i32 noundef 7, i32 noundef %549, i32 noundef 2, i32 noundef %conv.2.i643)
  %add79.2.i = add nsw i32 %call78.2.i, %rate.7.1.i
  br label %for.inc182.2.i

for.inc182.2.i:                                   ; preds = %for.body118.2.i, %if.then70.2.i
  %uv.3.2.i = phi i32 [ %uv.3.1.i, %if.then70.2.i ], [ %inc92.2.i, %for.body118.2.i ]
  %rate.7.2.i = phi i32 [ %add79.2.i, %if.then70.2.i ], [ %add177.2.i, %for.body118.2.i ]
  %550 = load ptr, ptr @input, align 8
  %symbol_mode68.3.i = getelementptr inbounds %struct.InputParameters, ptr %550, i64 0, i32 74
  %551 = load i32, ptr %symbol_mode68.3.i, align 8
  %cmp69.3.i = icmp eq i32 %551, 0
  br i1 %cmp69.3.i, label %if.then70.3.i, label %if.else80.3.i

if.else80.3.i:                                    ; preds = %for.inc182.2.i
  %552 = load ptr, ptr @img, align 8
  %cofAC.3.i = getelementptr inbounds %struct.ImageParameters, ptr %552, i64 0, i32 53
  %553 = load ptr, ptr %cofAC.3.i, align 8
  %arrayidx82.3.i = getelementptr inbounds ptr, ptr %553, i64 %indvars.iv289.i
  %554 = load ptr, ptr %arrayidx82.3.i, align 8
  %arrayidx84.3.i = getelementptr inbounds ptr, ptr %554, i64 3
  %555 = load ptr, ptr %arrayidx84.3.i, align 8
  %556 = load ptr, ptr %555, align 8
  %arrayidx91.3.i = getelementptr inbounds ptr, ptr %555, i64 1
  %557 = load ptr, ptr %arrayidx91.3.i, align 8
  %inc92.3.i = add nsw i32 %uv.3.2.i, 1
  %arrayidx99.3.i = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom93.i, i64 %472, i64 3
  %558 = load i8, ptr %arrayidx99.3.i, align 1
  %559 = lshr i8 %558, 2
  %shr101.3.i = zext i8 %559 to i32
  %subblock_y.3.i = getelementptr inbounds %struct.ImageParameters, ptr %552, i64 0, i32 25
  store i32 %shr101.3.i, ptr %subblock_y.3.i, align 4
  %arrayidx108.3.i = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom93.i, i64 %472, i64 3
  %560 = load i8, ptr %arrayidx108.3.i, align 1
  %561 = lshr i8 %560, 2
  %shr110.3.i = zext i8 %561 to i32
  %subblock_x.3.i = getelementptr inbounds %struct.ImageParameters, ptr %552, i64 0, i32 24
  store i32 %shr110.3.i, ptr %subblock_x.3.i, align 8
  br label %for.body118.3.i

for.body118.3.i:                                  ; preds = %for.body118.3.i, %if.else80.3.i
  %indvars.iv283.3.i = phi i64 [ 0, %if.else80.3.i ], [ %indvars.iv.next284.3.i, %for.body118.3.i ]
  %rate.6267.3.i = phi i32 [ %rate.7.2.i, %if.else80.3.i ], [ %add177.3.i, %for.body118.3.i ]
  %arrayidx120.3.i = getelementptr inbounds i32, ptr %556, i64 %indvars.iv283.3.i
  %562 = load i32, ptr %arrayidx120.3.i, align 4
  store i32 %562, ptr %value1121.i, align 4
  %arrayidx123.3.i = getelementptr inbounds i32, ptr %557, i64 %indvars.iv283.3.i
  %563 = load i32, ptr %arrayidx123.3.i, align 4
  store i32 %563, ptr %value2124.i, align 8
  store i32 7, ptr %context125.i, align 8
  %564 = load i32, ptr %mb_type126.i, align 8
  %565 = add i32 %564, -9
  %switch.and254.3.i = and i32 %565, -6
  %switch.selectcmp255.3.i = icmp eq i32 %switch.and254.3.i, 0
  %cond143.3.i = select i1 %switch.selectcmp255.3.i, i32 10, i32 14
  store i32 %cond143.3.i, ptr %se.i621, align 8
  %lor.ext161.3.i = zext i1 %switch.selectcmp255.3.i to i32
  %566 = load ptr, ptr @img, align 8
  %is_intra_block162.3.i = getelementptr inbounds %struct.ImageParameters, ptr %566, i64 0, i32 26
  store i32 %lor.ext161.3.i, ptr %is_intra_block162.3.i, align 8
  %num_blk8x8_uv163.3.i = getelementptr inbounds %struct.ImageParameters, ptr %566, i64 0, i32 158
  %567 = load i32, ptr %num_blk8x8_uv163.3.i, align 8
  %shl.3.i = shl i32 %567, 1
  %cmp164.3.i = icmp sge i32 %inc92.3.i, %shl.3.i
  %conv165.3.i = zext i1 %cmp164.3.i to i32
  %is_v_block166.3.i = getelementptr inbounds %struct.ImageParameters, ptr %566, i64 0, i32 27
  store i32 %conv165.3.i, ptr %is_v_block166.3.i, align 4
  %568 = load ptr, ptr %partArr167.i, align 8
  %idxprom169.3.i = zext i32 %cond143.3.i to i64
  %arrayidx170.3.i = getelementptr inbounds i32, ptr %423, i64 %idxprom169.3.i
  %569 = load i32, ptr %arrayidx170.3.i, align 4
  %idxprom171.3.i = sext i32 %569 to i64
  %arrayidx172.3.i = getelementptr inbounds %struct.datapartition, ptr %568, i64 %idxprom171.3.i
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se.i621, ptr noundef %arrayidx172.3.i) #17
  %570 = load i32, ptr %len173.i, align 4
  %571 = load i32, ptr %arrayidx174.i, align 4
  %add175.3.i = add nsw i32 %571, %570
  store i32 %add175.3.i, ptr %arrayidx174.i, align 4
  %572 = load i32, ptr %len173.i, align 4
  %add177.3.i = add nsw i32 %572, %rate.6267.3.i
  %indvars.iv.next284.3.i = add nuw nsw i64 %indvars.iv283.3.i, 1
  %cmp112.3.i = icmp ult i64 %indvars.iv283.3.i, 15
  %cmp115.3.i = icmp ne i32 %562, 0
  %573 = select i1 %cmp112.3.i, i1 %cmp115.3.i, i1 false
  br i1 %573, label %for.body118.3.i, label %for.inc182.3.i

if.then70.3.i:                                    ; preds = %for.inc182.2.i
  %arrayidx77.3.i = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @writeChromaCoeff.chroma_ac_param, i64 0, i64 %idxprom93.i, i64 %472, i64 3
  %574 = load i8, ptr %arrayidx77.3.i, align 1
  %conv.3.i642 = zext i8 %574 to i32
  %575 = trunc i64 %indvars.iv289.i to i32
  %call78.3.i = call i32 @writeCoeff4x4_CAVLC(i32 noundef 7, i32 noundef %575, i32 noundef 3, i32 noundef %conv.3.i642)
  %add79.3.i = add nsw i32 %call78.3.i, %rate.7.2.i
  br label %for.inc182.3.i

for.inc182.3.i:                                   ; preds = %for.body118.3.i, %if.then70.3.i
  %uv.3.3.i = phi i32 [ %uv.3.2.i, %if.then70.3.i ], [ %inc92.3.i, %for.body118.3.i ]
  %rate.7.3.i = phi i32 [ %add79.3.i, %if.then70.3.i ], [ %add177.3.i, %for.body118.3.i ]
  %indvars.iv.next290.i = add nuw nsw i64 %indvars.iv289.i, 1
  %576 = load ptr, ptr @img, align 8
  %num_blk8x8_uv.i641 = getelementptr inbounds %struct.ImageParameters, ptr %576, i64 0, i32 158
  %577 = load i32, ptr %num_blk8x8_uv.i641, align 8
  %578 = add nsw i32 %577, 3
  %579 = sext i32 %578 to i64
  %cmp63.i = icmp slt i64 %indvars.iv289.i, %579
  br i1 %cmp63.i, label %for.cond65.preheader.i, label %writeChromaCoeff.exit

writeChromaCoeff.exit:                            ; preds = %for.inc182.3.i, %if.end58.i, %for.cond61.preheader.i
  %rate.8.i = phi i32 [ %rate.3.i633, %if.end58.i ], [ %rate.3.i633, %for.cond61.preheader.i ], [ %rate.7.3.i, %for.inc182.3.i ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se.i621) #17
  %580 = load i32, ptr %coeff_rate, align 4
  %add439 = add nsw i32 %580, %rate.8.i
  store i32 %add439, ptr %coeff_rate, align 4
  br label %if.end440

if.end440:                                        ; preds = %writeChromaCoeff.exit, %writeCBPandLumaCoeff.exit
  %581 = phi i32 [ %add439, %writeChromaCoeff.exit ], [ %rate.12.i, %writeCBPandLumaCoeff.exit ]
  %add441 = add nsw i32 %581, %no_bits.16
  br label %cleanup

cleanup:                                          ; preds = %for.inc319.1, %for.inc322, %for.body292.lr.ph.1, %for.cond285.preheader, %lor.lhs.false424, %land.lhs.true428, %if.end440, %for.end281
  %retval.0 = phi i32 [ %add264, %for.end281 ], [ %add441, %if.end440 ], [ %no_bits.16, %land.lhs.true428 ], [ %no_bits.16, %lor.lhs.false424 ], [ %add264, %for.cond285.preheader ], [ %no_bits.10.lcssa, %for.inc322 ], [ %no_bits.9.lcssa709, %for.body292.lr.ph.1 ], [ %no_bits.10.lcssa.1, %for.inc319.1 ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se) #17
  ret i32 %retval.0
}

declare i32 @field_flag_inference() local_unnamed_addr #5

declare void @writeMB_skip_flagInfo_CABAC(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @writeSE_Flag(ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @FmoGetNextMBNr(i32 noundef) local_unnamed_addr #5

declare i32 @arienco_bits_written(ptr noundef) local_unnamed_addr #5

declare void @arienco_done_encoding(ptr noundef) local_unnamed_addr #5

declare void @arienco_start_encoding(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @reset_pic_bin_count() local_unnamed_addr #5

declare void @writeSE_Fix(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc i32 @writeMotionInfo2NAL() unnamed_addr #0 {
entry:
  %se.i402 = alloca %struct.syntaxelement, align 8
  %se.i = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  %type = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %3 = load i32, ptr %type, align 4
  %cmp = icmp eq i32 %3, 1
  %4 = load ptr, ptr @input, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 8
  %5 = load i32, ptr %mb_type, align 8
  %cmp1 = icmp eq i32 %5, 8
  %spec.select = select i1 %cmp1, i32 4, i32 %5
  %idxprom4 = sext i32 %spec.select to i64
  %arrayidx5 = getelementptr inbounds %struct.InputParameters, ptr %4, i64 0, i32 18, i64 %idxprom4
  %6 = load i32, ptr %arrayidx5, align 8
  %shr = ashr i32 %6, 2
  %arrayidx18 = getelementptr inbounds %struct.InputParameters, ptr %4, i64 0, i32 18, i64 %idxprom4, i64 1
  %7 = load i32, ptr %arrayidx18, align 4
  %shr19 = ashr i32 %7, 2
  switch i32 %5, label %if.then42 [
    i32 9, label %if.end135
    i32 10, label %if.end135
    i32 13, label %if.end135
    i32 0, label %if.end135
    i32 8, label %lor.lhs.false
  ]

lor.lhs.false:                                    ; preds = %entry
  %block_y.i = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 38
  %8 = load i32, ptr %block_y.i, align 4
  %block_x.i = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 37
  %9 = load i32, ptr %block_x.i, align 8
  %10 = load ptr, ptr @enc_picture, align 8
  %ref_idx.i = getelementptr inbounds %struct.storable_picture, ptr %10, i64 0, i32 35
  %11 = load ptr, ptr %ref_idx.i, align 8
  %12 = load ptr, ptr %11, align 8
  %13 = sext i32 %9 to i64
  %14 = sext i32 %8 to i64
  %15 = add nsw i32 %9, 3
  %16 = sext i32 %15 to i64
  %17 = add nsw i32 %8, 3
  %18 = sext i32 %17 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc12.i, %lor.lhs.false
  %indvars.iv25.i = phi i64 [ %14, %lor.lhs.false ], [ %indvars.iv.next26.i, %for.inc12.i ]
  %arrayidx7.i = getelementptr inbounds ptr, ptr %12, i64 %indvars.iv25.i
  %19 = load ptr, ptr %arrayidx7.i, align 8
  br label %for.body6.i

for.cond2.i:                                      ; preds = %for.body6.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %cmp5.i = icmp slt i64 %indvars.iv.i, %16
  br i1 %cmp5.i, label %for.body6.i, label %for.inc12.i

for.body6.i:                                      ; preds = %for.cond2.i, %for.body.i
  %indvars.iv.i = phi i64 [ %13, %for.body.i ], [ %indvars.iv.next.i, %for.cond2.i ]
  %arrayidx9.i = getelementptr inbounds i8, ptr %19, i64 %indvars.iv.i
  %20 = load i8, ptr %arrayidx9.i, align 1
  %cmp10.not.i = icmp eq i8 %20, 0
  br i1 %cmp10.not.i, label %for.cond2.i, label %if.then42

for.inc12.i:                                      ; preds = %for.cond2.i
  %indvars.iv.next26.i = add nsw i64 %indvars.iv25.i, 1
  %cmp.i = icmp slt i64 %indvars.iv25.i, %18
  br i1 %cmp.i, label %for.body.i, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %for.inc12.i
  %symbol_mode = getelementptr inbounds %struct.InputParameters, ptr %4, i64 0, i32 74
  %21 = load i32, ptr %symbol_mode, align 8
  %cmp38 = icmp eq i32 %21, 1
  %or.cond = select i1 %cmp38, i1 true, i1 %cmp
  br i1 %or.cond, label %if.then42, label %for.body155.preheader

if.then42:                                        ; preds = %for.body6.i, %entry, %lor.lhs.false37
  %value1.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i, i64 0, i32 1
  %value2.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i, i64 0, i32 2
  %len.i = getelementptr inbounds %struct.syntaxelement, ptr %se.i, i64 0, i32 3
  br label %for.body

for.cond83.preheader:                             ; preds = %for.inc80
  %value1.i415 = getelementptr inbounds %struct.syntaxelement, ptr %se.i402, i64 0, i32 1
  %value2.i416 = getelementptr inbounds %struct.syntaxelement, ptr %se.i402, i64 0, i32 2
  %len.i421 = getelementptr inbounds %struct.syntaxelement, ptr %se.i402, i64 0, i32 3
  br label %for.body86

for.body:                                         ; preds = %if.then42, %for.inc80
  %j0.0429 = phi i32 [ 0, %if.then42 ], [ %add81, %for.inc80 ]
  %no_bits.0428 = phi i32 [ 0, %if.then42 ], [ %no_bits.2, %for.inc80 ]
  %22 = load ptr, ptr @img, align 8
  %block_y = getelementptr inbounds %struct.ImageParameters, ptr %22, i64 0, i32 38
  %23 = load i32, ptr %block_y, align 4
  %add = add nsw i32 %23, %j0.0429
  %idxprom71 = sext i32 %add to i64
  br label %for.body48

for.body48:                                       ; preds = %for.body, %for.inc
  %i0.0427 = phi i32 [ 0, %for.body ], [ %add79, %for.inc ]
  %no_bits.1426 = phi i32 [ %no_bits.0428, %for.body ], [ %no_bits.2, %for.inc ]
  %shr49 = ashr i32 %i0.0427, 1
  %add50 = add nsw i32 %shr49, %j0.0429
  %idxprom51 = sext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 15, i64 %idxprom51
  %24 = load i32, ptr %arrayidx52, align 4
  switch i32 %24, label %for.inc [
    i32 0, label %land.lhs.true61
    i32 2, label %land.lhs.true61
  ]

land.lhs.true61:                                  ; preds = %for.body48, %for.body48
  %arrayidx63 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 14, i64 %idxprom51
  %25 = load i32, ptr %arrayidx63, align 4
  %cmp64.not = icmp eq i32 %25, 0
  br i1 %cmp64.not, label %for.inc, label %if.then66

if.then66:                                        ; preds = %land.lhs.true61
  %26 = load ptr, ptr @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, ptr %26, i64 0, i32 35
  %27 = load ptr, ptr %ref_idx, align 8
  %28 = load ptr, ptr %27, align 8
  %arrayidx72 = getelementptr inbounds ptr, ptr %28, i64 %idxprom71
  %29 = load ptr, ptr %arrayidx72, align 8
  %30 = load ptr, ptr @img, align 8
  %block_x = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 37
  %31 = load i32, ptr %block_x, align 8
  %add73 = add nsw i32 %31, %i0.0427
  %idxprom74 = sext i32 %add73 to i64
  %arrayidx75 = getelementptr inbounds i8, ptr %29, i64 %idxprom74
  %32 = load i8, ptr %arrayidx75, align 1
  %conv76 = sext i8 %32 to i32
  %mb_data.i = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 61
  %33 = load ptr, ptr %mb_data.i, align 8
  %current_mb_nr.i = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 3
  %34 = load i32, ptr %current_mb_nr.i, align 4
  %idxprom.i = sext i32 %34 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se.i) #17
  %currentSlice.i = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 60
  %35 = load ptr, ptr %currentSlice.i, align 8
  %36 = load ptr, ptr @input, align 8
  %partition_mode.i = getelementptr inbounds %struct.InputParameters, ptr %36, i64 0, i32 76
  %37 = load i32, ptr %partition_mode.i, align 8
  %idxprom1.i = sext i32 %37 to i64
  %arrayidx2.i = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom1.i
  %38 = load ptr, ptr %arrayidx2.i, align 8
  %partArr.i = getelementptr inbounds %struct.Slice, ptr %35, i64 0, i32 6
  %39 = load ptr, ptr %partArr.i, align 8
  %arrayidx3.i = getelementptr inbounds i32, ptr %38, i64 3
  %40 = load i32, ptr %arrayidx3.i, align 4
  %list_offset6.i = getelementptr inbounds %struct.macroblock, ptr %33, i64 %idxprom.i, i32 21
  %41 = load i32, ptr %list_offset6.i, align 8
  %idxprom4.i = sext i32 %40 to i64
  %arrayidx5.i = getelementptr inbounds %struct.datapartition, ptr %39, i64 %idxprom4.i
  store i32 %conv76, ptr %value1.i, align 4
  store i32 3, ptr %se.i, align 8
  store i32 0, ptr %value2.i, align 8
  %subblock_x.i = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 24
  store i32 %i0.0427, ptr %subblock_x.i, align 8
  %subblock_y.i = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 25
  store i32 %j0.0429, ptr %subblock_y.i, align 4
  %idxprom10.i = sext i32 %41 to i64
  %arrayidx11.i = getelementptr inbounds [6 x ptr], ptr @writeRefFrame, i64 0, i64 %idxprom10.i
  %42 = load ptr, ptr %arrayidx11.i, align 8
  call void %42(ptr noundef nonnull %se.i, ptr noundef %arrayidx5.i) #17
  %43 = load i32, ptr %len.i, align 4
  %arrayidx12.i = getelementptr inbounds %struct.macroblock, ptr %33, i64 %idxprom.i, i32 5, i64 3
  %44 = load i32, ptr %arrayidx12.i, align 4
  %add13.i = add nsw i32 %44, %43
  store i32 %add13.i, ptr %arrayidx12.i, align 4
  %45 = load i32, ptr %len.i, align 4
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se.i) #17
  %add78 = add nsw i32 %45, %no_bits.1426
  br label %for.inc

for.inc:                                          ; preds = %for.body48, %land.lhs.true61, %if.then66
  %no_bits.2 = phi i32 [ %add78, %if.then66 ], [ %no_bits.1426, %land.lhs.true61 ], [ %no_bits.1426, %for.body48 ]
  %add79 = add nsw i32 %i0.0427, %shr
  %cmp46 = icmp slt i32 %add79, 4
  br i1 %cmp46, label %for.body48, label %for.inc80

for.inc80:                                        ; preds = %for.inc
  %add81 = add nsw i32 %j0.0429, %shr19
  %cmp43 = icmp slt i32 %add81, 4
  br i1 %cmp43, label %for.body, label %for.cond83.preheader

for.body86:                                       ; preds = %for.cond83.preheader, %for.inc131
  %j0.1433 = phi i32 [ 0, %for.cond83.preheader ], [ %add132, %for.inc131 ]
  %no_bits.3432 = phi i32 [ %no_bits.2, %for.cond83.preheader ], [ %no_bits.5, %for.inc131 ]
  %46 = load ptr, ptr @img, align 8
  %block_y87 = getelementptr inbounds %struct.ImageParameters, ptr %46, i64 0, i32 38
  %47 = load i32, ptr %block_y87, align 4
  %add88 = add nsw i32 %47, %j0.1433
  %idxprom118 = sext i32 %add88 to i64
  br label %for.body92

for.body92:                                       ; preds = %for.body86, %for.inc128
  %i0.1431 = phi i32 [ 0, %for.body86 ], [ %add129, %for.inc128 ]
  %no_bits.4430 = phi i32 [ %no_bits.3432, %for.body86 ], [ %no_bits.5, %for.inc128 ]
  %shr93 = ashr i32 %i0.1431, 1
  %add94 = add nsw i32 %shr93, %j0.1433
  %idxprom96 = sext i32 %add94 to i64
  %arrayidx97 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 15, i64 %idxprom96
  %48 = load i32, ptr %arrayidx97, align 4
  %.off = add i32 %48, -1
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %land.lhs.true106, label %for.inc128

land.lhs.true106:                                 ; preds = %for.body92
  %arrayidx109 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 14, i64 %idxprom96
  %49 = load i32, ptr %arrayidx109, align 4
  %cmp110.not = icmp eq i32 %49, 0
  br i1 %cmp110.not, label %for.inc128, label %if.then112

if.then112:                                       ; preds = %land.lhs.true106
  %50 = load ptr, ptr @enc_picture, align 8
  %ref_idx116 = getelementptr inbounds %struct.storable_picture, ptr %50, i64 0, i32 35
  %51 = load ptr, ptr %ref_idx116, align 8
  %arrayidx117 = getelementptr inbounds ptr, ptr %51, i64 1
  %52 = load ptr, ptr %arrayidx117, align 8
  %arrayidx119 = getelementptr inbounds ptr, ptr %52, i64 %idxprom118
  %53 = load ptr, ptr %arrayidx119, align 8
  %54 = load ptr, ptr @img, align 8
  %block_x120 = getelementptr inbounds %struct.ImageParameters, ptr %54, i64 0, i32 37
  %55 = load i32, ptr %block_x120, align 8
  %add121 = add nsw i32 %55, %i0.1431
  %idxprom122 = sext i32 %add121 to i64
  %arrayidx123 = getelementptr inbounds i8, ptr %53, i64 %idxprom122
  %56 = load i8, ptr %arrayidx123, align 1
  %conv124 = sext i8 %56 to i32
  %mb_data.i403 = getelementptr inbounds %struct.ImageParameters, ptr %54, i64 0, i32 61
  %57 = load ptr, ptr %mb_data.i403, align 8
  %current_mb_nr.i404 = getelementptr inbounds %struct.ImageParameters, ptr %54, i64 0, i32 3
  %58 = load i32, ptr %current_mb_nr.i404, align 4
  %idxprom.i405 = sext i32 %58 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se.i402) #17
  %currentSlice.i406 = getelementptr inbounds %struct.ImageParameters, ptr %54, i64 0, i32 60
  %59 = load ptr, ptr %currentSlice.i406, align 8
  %60 = load ptr, ptr @input, align 8
  %partition_mode.i407 = getelementptr inbounds %struct.InputParameters, ptr %60, i64 0, i32 76
  %61 = load i32, ptr %partition_mode.i407, align 8
  %idxprom1.i408 = sext i32 %61 to i64
  %arrayidx2.i409 = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom1.i408
  %62 = load ptr, ptr %arrayidx2.i409, align 8
  %partArr.i410 = getelementptr inbounds %struct.Slice, ptr %59, i64 0, i32 6
  %63 = load ptr, ptr %partArr.i410, align 8
  %arrayidx3.i411 = getelementptr inbounds i32, ptr %62, i64 3
  %64 = load i32, ptr %arrayidx3.i411, align 4
  %list_offset6.i412 = getelementptr inbounds %struct.macroblock, ptr %57, i64 %idxprom.i405, i32 21
  %65 = load i32, ptr %list_offset6.i412, align 8
  %cond.i = add nsw i32 %65, 1
  %idxprom4.i413 = sext i32 %64 to i64
  %arrayidx5.i414 = getelementptr inbounds %struct.datapartition, ptr %63, i64 %idxprom4.i413
  store i32 %conv124, ptr %value1.i415, align 4
  store i32 3, ptr %se.i402, align 8
  store i32 1, ptr %value2.i416, align 8
  %subblock_x.i417 = getelementptr inbounds %struct.ImageParameters, ptr %54, i64 0, i32 24
  store i32 %i0.1431, ptr %subblock_x.i417, align 8
  %subblock_y.i418 = getelementptr inbounds %struct.ImageParameters, ptr %54, i64 0, i32 25
  store i32 %j0.1433, ptr %subblock_y.i418, align 4
  %idxprom10.i419 = sext i32 %cond.i to i64
  %arrayidx11.i420 = getelementptr inbounds [6 x ptr], ptr @writeRefFrame, i64 0, i64 %idxprom10.i419
  %66 = load ptr, ptr %arrayidx11.i420, align 8
  call void %66(ptr noundef nonnull %se.i402, ptr noundef %arrayidx5.i414) #17
  %67 = load i32, ptr %len.i421, align 4
  %arrayidx12.i422 = getelementptr inbounds %struct.macroblock, ptr %57, i64 %idxprom.i405, i32 5, i64 3
  %68 = load i32, ptr %arrayidx12.i422, align 4
  %add13.i423 = add nsw i32 %68, %67
  store i32 %add13.i423, ptr %arrayidx12.i422, align 4
  %69 = load i32, ptr %len.i421, align 4
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se.i402) #17
  %add126 = add nsw i32 %69, %no_bits.4430
  br label %for.inc128

for.inc128:                                       ; preds = %for.body92, %land.lhs.true106, %if.then112
  %no_bits.5 = phi i32 [ %add126, %if.then112 ], [ %no_bits.4430, %land.lhs.true106 ], [ %no_bits.4430, %for.body92 ]
  %add129 = add nsw i32 %i0.1431, %shr
  %cmp90 = icmp slt i32 %add129, 4
  br i1 %cmp90, label %for.body92, label %for.inc131

for.inc131:                                       ; preds = %for.inc128
  %add132 = add nsw i32 %j0.1433, %shr19
  %cmp84 = icmp slt i32 %add132, 4
  br i1 %cmp84, label %for.body86, label %if.end135.loopexit

if.end135.loopexit:                               ; preds = %for.inc131
  %.pre = load i32, ptr %mb_type, align 8
  br label %if.end135

if.end135:                                        ; preds = %if.end135.loopexit, %entry, %entry, %entry, %entry
  %70 = phi i32 [ %5, %entry ], [ %5, %entry ], [ %5, %entry ], [ %5, %entry ], [ %.pre, %if.end135.loopexit ]
  %no_bits.6 = phi i32 [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ %no_bits.5, %if.end135.loopexit ]
  switch i32 %70, label %for.body155.preheader [
    i32 9, label %if.end205
    i32 10, label %if.end205
    i32 13, label %if.end205
    i32 0, label %if.end205
  ]

for.body155.preheader:                            ; preds = %lor.lhs.false37, %if.end135
  %no_bits.7436.ph = phi i32 [ %no_bits.6, %if.end135 ], [ 0, %lor.lhs.false37 ]
  br label %for.body155

for.body155:                                      ; preds = %for.body155.preheader, %for.inc202
  %j0.2437 = phi i32 [ %add192, %for.inc202 ], [ 0, %for.body155.preheader ]
  %no_bits.7436 = phi i32 [ %no_bits.9, %for.inc202 ], [ %no_bits.7436.ph, %for.body155.preheader ]
  %71 = load ptr, ptr @img, align 8
  %block_y156 = getelementptr inbounds %struct.ImageParameters, ptr %71, i64 0, i32 38
  %72 = load i32, ptr %block_y156, align 4
  %add157 = add nsw i32 %72, %j0.2437
  %idxprom184 = sext i32 %add157 to i64
  %add192 = add nsw i32 %j0.2437, %shr19
  br label %for.body161

for.body161:                                      ; preds = %for.body155, %for.inc199
  %i0.2435 = phi i32 [ 0, %for.body155 ], [ %add200, %for.inc199 ]
  %no_bits.8434 = phi i32 [ %no_bits.7436, %for.body155 ], [ %no_bits.9, %for.inc199 ]
  %shr162 = ashr i32 %i0.2435, 1
  %add163 = add nsw i32 %shr162, %j0.2437
  %idxprom165 = sext i32 %add163 to i64
  %arrayidx166 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 15, i64 %idxprom165
  %73 = load i32, ptr %arrayidx166, align 4
  switch i32 %73, label %for.inc199 [
    i32 0, label %land.lhs.true175
    i32 2, label %land.lhs.true175
  ]

land.lhs.true175:                                 ; preds = %for.body161, %for.body161
  %arrayidx178 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 14, i64 %idxprom165
  %74 = load i32, ptr %arrayidx178, align 4
  %cmp179.not = icmp eq i32 %74, 0
  br i1 %cmp179.not, label %for.inc199, label %if.then181

if.then181:                                       ; preds = %land.lhs.true175
  %75 = load ptr, ptr @enc_picture, align 8
  %ref_idx182 = getelementptr inbounds %struct.storable_picture, ptr %75, i64 0, i32 35
  %76 = load ptr, ptr %ref_idx182, align 8
  %77 = load ptr, ptr %76, align 8
  %arrayidx185 = getelementptr inbounds ptr, ptr %77, i64 %idxprom184
  %78 = load ptr, ptr %arrayidx185, align 8
  %79 = load ptr, ptr @img, align 8
  %block_x186 = getelementptr inbounds %struct.ImageParameters, ptr %79, i64 0, i32 37
  %80 = load i32, ptr %block_x186, align 8
  %add187 = add nsw i32 %80, %i0.2435
  %idxprom188 = sext i32 %add187 to i64
  %arrayidx189 = getelementptr inbounds i8, ptr %78, i64 %idxprom188
  %81 = load i8, ptr %arrayidx189, align 1
  %conv190 = sext i8 %81 to i32
  %add191 = add nsw i32 %i0.2435, %shr
  %call196 = call i32 @writeMotionVector8x8(i32 noundef %i0.2435, i32 noundef %j0.2437, i32 noundef %add191, i32 noundef %add192, i32 noundef %conv190, i32 noundef 0, i32 noundef %74)
  %add197 = add nsw i32 %call196, %no_bits.8434
  br label %for.inc199

for.inc199:                                       ; preds = %for.body161, %land.lhs.true175, %if.then181
  %no_bits.9 = phi i32 [ %add197, %if.then181 ], [ %no_bits.8434, %land.lhs.true175 ], [ %no_bits.8434, %for.body161 ]
  %add200 = add nsw i32 %i0.2435, %shr
  %cmp159 = icmp slt i32 %add200, 4
  br i1 %cmp159, label %for.body161, label %for.inc202

for.inc202:                                       ; preds = %for.inc199
  %cmp153 = icmp slt i32 %add192, 4
  br i1 %cmp153, label %for.body155, label %if.end205thread-pre-split

if.end205thread-pre-split:                        ; preds = %for.inc202
  %.pr = load i32, ptr %mb_type, align 8
  br label %if.end205

if.end205:                                        ; preds = %if.end205thread-pre-split, %if.end135, %if.end135, %if.end135, %if.end135
  %82 = phi i32 [ %.pr, %if.end205thread-pre-split ], [ %70, %if.end135 ], [ %70, %if.end135 ], [ %70, %if.end135 ], [ %70, %if.end135 ]
  %no_bits.10 = phi i32 [ %no_bits.9, %if.end205thread-pre-split ], [ %no_bits.6, %if.end135 ], [ %no_bits.6, %if.end135 ], [ %no_bits.6, %if.end135 ], [ %no_bits.6, %if.end135 ]
  switch i32 %82, label %land.lhs.true217 [
    i32 9, label %if.end277
    i32 10, label %if.end277
    i32 13, label %if.end277
  ]

land.lhs.true217:                                 ; preds = %if.end205
  %cmp219 = icmp ne i32 %82, 0
  %or.cond278 = select i1 %cmp219, i1 %cmp, i1 false
  br i1 %or.cond278, label %for.body227, label %if.end277

for.body227:                                      ; preds = %land.lhs.true217, %for.inc274
  %j0.3441 = phi i32 [ %add264, %for.inc274 ], [ 0, %land.lhs.true217 ]
  %no_bits.11440 = phi i32 [ %no_bits.13, %for.inc274 ], [ %no_bits.10, %land.lhs.true217 ]
  %83 = load ptr, ptr @img, align 8
  %block_y228 = getelementptr inbounds %struct.ImageParameters, ptr %83, i64 0, i32 38
  %84 = load i32, ptr %block_y228, align 4
  %add229 = add nsw i32 %84, %j0.3441
  %idxprom256 = sext i32 %add229 to i64
  %add264 = add nsw i32 %j0.3441, %shr19
  br label %for.body233

for.body233:                                      ; preds = %for.body227, %for.inc271
  %i0.3439 = phi i32 [ 0, %for.body227 ], [ %add272, %for.inc271 ]
  %no_bits.12438 = phi i32 [ %no_bits.11440, %for.body227 ], [ %no_bits.13, %for.inc271 ]
  %shr234 = ashr i32 %i0.3439, 1
  %add235 = add nsw i32 %shr234, %j0.3441
  %idxprom237 = sext i32 %add235 to i64
  %arrayidx238 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 15, i64 %idxprom237
  %85 = load i32, ptr %arrayidx238, align 4
  %.off400 = add i32 %85, -1
  %switch401 = icmp ult i32 %.off400, 2
  br i1 %switch401, label %land.lhs.true247, label %for.inc271

land.lhs.true247:                                 ; preds = %for.body233
  %arrayidx250 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 14, i64 %idxprom237
  %86 = load i32, ptr %arrayidx250, align 4
  %cmp251.not = icmp eq i32 %86, 0
  br i1 %cmp251.not, label %for.inc271, label %if.then253

if.then253:                                       ; preds = %land.lhs.true247
  %87 = load ptr, ptr @enc_picture, align 8
  %ref_idx254 = getelementptr inbounds %struct.storable_picture, ptr %87, i64 0, i32 35
  %88 = load ptr, ptr %ref_idx254, align 8
  %arrayidx255 = getelementptr inbounds ptr, ptr %88, i64 1
  %89 = load ptr, ptr %arrayidx255, align 8
  %arrayidx257 = getelementptr inbounds ptr, ptr %89, i64 %idxprom256
  %90 = load ptr, ptr %arrayidx257, align 8
  %91 = load ptr, ptr @img, align 8
  %block_x258 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 37
  %92 = load i32, ptr %block_x258, align 8
  %add259 = add nsw i32 %92, %i0.3439
  %idxprom260 = sext i32 %add259 to i64
  %arrayidx261 = getelementptr inbounds i8, ptr %90, i64 %idxprom260
  %93 = load i8, ptr %arrayidx261, align 1
  %conv262 = sext i8 %93 to i32
  %add263 = add nsw i32 %i0.3439, %shr
  %call268 = call i32 @writeMotionVector8x8(i32 noundef %i0.3439, i32 noundef %j0.3441, i32 noundef %add263, i32 noundef %add264, i32 noundef %conv262, i32 noundef 1, i32 noundef %86)
  %add269 = add nsw i32 %call268, %no_bits.12438
  br label %for.inc271

for.inc271:                                       ; preds = %for.body233, %land.lhs.true247, %if.then253
  %no_bits.13 = phi i32 [ %add269, %if.then253 ], [ %no_bits.12438, %land.lhs.true247 ], [ %no_bits.12438, %for.body233 ]
  %add272 = add nsw i32 %i0.3439, %shr
  %cmp231 = icmp slt i32 %add272, 4
  br i1 %cmp231, label %for.body233, label %for.inc274

for.inc274:                                       ; preds = %for.inc271
  %cmp225 = icmp slt i32 %add264, 4
  br i1 %cmp225, label %for.body227, label %if.end277

if.end277:                                        ; preds = %for.inc274, %if.end205, %if.end205, %if.end205, %land.lhs.true217
  %no_bits.14 = phi i32 [ %no_bits.10, %land.lhs.true217 ], [ %no_bits.10, %if.end205 ], [ %no_bits.10, %if.end205 ], [ %no_bits.10, %if.end205 ], [ %no_bits.13, %for.inc274 ]
  ret i32 %no_bits.14
}

; Function Attrs: nounwind uwtable
define dso_local void @write_terminating_bit(i16 noundef signext %bit) local_unnamed_addr #0 {
entry:
  %0 = load ptr, ptr @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, ptr %0, i64 0, i32 76
  %1 = load i32, ptr %partition_mode, align 8
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom
  %2 = load ptr, ptr %arrayidx, align 8
  %3 = load ptr, ptr @img, align 8
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %3, i64 0, i32 60
  %4 = load ptr, ptr %currentSlice, align 8
  %partArr = getelementptr inbounds %struct.Slice, ptr %4, i64 0, i32 6
  %5 = load ptr, ptr %partArr, align 8
  %arrayidx1 = getelementptr inbounds i32, ptr %2, i64 2
  %6 = load i32, ptr %arrayidx1, align 4
  %idxprom2 = sext i32 %6 to i64
  %arrayidx3 = getelementptr inbounds %struct.datapartition, ptr %5, i64 %idxprom2
  %7 = load ptr, ptr %arrayidx3, align 8
  %write_flag = getelementptr inbounds %struct.Bitstream, ptr %7, i64 0, i32 10
  store i32 1, ptr %write_flag, align 8
  %ee_cabac = getelementptr inbounds %struct.datapartition, ptr %5, i64 %idxprom2, i32 1
  tail call void @biari_encode_symbol_final(ptr noundef nonnull %ee_cabac, i16 noundef signext %bit) #17
  ret void
}

declare void @biari_encode_symbol_final(ptr noundef, i16 noundef signext) local_unnamed_addr #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define dso_local void @set_last_dquant() local_unnamed_addr #13 {
entry:
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  %mb_type = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 8
  %3 = load i32, ptr %mb_type, align 8
  %cond = icmp eq i32 %3, 0
  br i1 %cond, label %lor.lhs.false20, label %if.then

lor.lhs.false20:                                  ; preds = %entry
  %type = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %4 = load i32, ptr %type, align 4
  %cmp21 = icmp eq i32 %4, 1
  br i1 %cmp21, label %land.lhs.true22, label %if.end

land.lhs.true22:                                  ; preds = %lor.lhs.false20
  %cbp = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 12
  %5 = load i32, ptr %cbp, align 4
  %cmp23.not = icmp eq i32 %5, 0
  br i1 %cmp23.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry, %land.lhs.true22
  %delta_qp = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 1
  %6 = load i32, ptr %delta_qp, align 4
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false20, %land.lhs.true22, %if.then
  %storemerge = phi i32 [ %6, %if.then ], [ 0, %land.lhs.true22 ], [ 0, %lor.lhs.false20 ]
  store i32 %storemerge, ptr @last_dquant, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @write_one_macroblock(i32 noundef %eos_bit) local_unnamed_addr #0 {
entry:
  %i = alloca i32, align 4
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  %bitcounter = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i) #17
  %qp = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 2
  %3 = load i32, ptr %qp, align 8
  %SumFrameQP = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 172
  %4 = load i32, ptr %SumFrameQP, align 8
  %add = add nsw i32 %4, %3
  store i32 %add, ptr %SumFrameQP, align 8
  %5 = load ptr, ptr @input, align 8
  %UseConstrainedIntraPred = getelementptr inbounds %struct.InputParameters, ptr %5, i64 0, i32 23
  %6 = load i32, ptr %UseConstrainedIntraPred, align 8
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %7 = load i32, ptr %type, align 4
  %switch = icmp ult i32 %7, 2
  br i1 %switch, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %mb_type = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 8
  %8 = load i32, ptr %mb_type, align 8
  switch i32 %8, label %lor.rhs [
    i32 9, label %lor.end
    i32 10, label %lor.end
    i32 13, label %lor.end
  ]

lor.rhs:                                          ; preds = %if.then
  %cmp11 = icmp eq i32 %8, 14
  %9 = zext i1 %cmp11 to i32
  br label %lor.end

lor.end:                                          ; preds = %if.then, %if.then, %if.then, %lor.rhs
  %lor.ext = phi i32 [ 1, %if.then ], [ %9, %lor.rhs ], [ 1, %if.then ], [ 1, %if.then ]
  %intra_block = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 63
  %10 = load ptr, ptr %intra_block, align 8
  %arrayidx14 = getelementptr inbounds i32, ptr %10, i64 %idxprom
  store i32 %lor.ext, ptr %arrayidx14, align 4
  %.pre = load i32, ptr %current_mb_nr, align 4
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %lor.end, %entry
  %11 = phi i32 [ %2, %land.lhs.true ], [ %.pre, %lor.end ], [ %2, %entry ]
  %cmp16 = icmp eq i32 %11, 0
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end
  store i32 0, ptr @intras, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end
  %mb_type19 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 8
  %12 = load i32, ptr %mb_type19, align 8
  switch i32 %12, label %if.end31 [
    i32 9, label %if.then30
    i32 10, label %if.then30
    i32 13, label %if.then30
    i32 14, label %if.then30
  ]

if.then30:                                        ; preds = %if.end18, %if.end18, %if.end18, %if.end18
  %13 = load i32, ptr @intras, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, ptr @intras, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.end18, %if.then30
  %symbol_mode = getelementptr inbounds %struct.InputParameters, ptr %5, i64 0, i32 74
  %14 = load i32, ptr %symbol_mode, align 8
  %cmp32 = icmp eq i32 %14, 1
  br i1 %cmp32, label %land.lhs.true33, label %if.end39

land.lhs.true33:                                  ; preds = %if.end31
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 60
  %15 = load ptr, ptr %currentSlice, align 8
  %start_mb_nr = getelementptr inbounds %struct.Slice, ptr %15, i64 0, i32 3
  %16 = load i32, ptr %start_mb_nr, align 4
  %cmp35 = icmp ne i32 %11, %16
  %tobool37 = icmp ne i32 %eos_bit, 0
  %or.cond = and i1 %tobool37, %cmp35
  br i1 %or.cond, label %if.then38, label %if.end39

if.then38:                                        ; preds = %land.lhs.true33
  %partition_mode.i = getelementptr inbounds %struct.InputParameters, ptr %5, i64 0, i32 76
  %17 = load i32, ptr %partition_mode.i, align 8
  %idxprom.i = sext i32 %17 to i64
  %arrayidx.i = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom.i
  %18 = load ptr, ptr %arrayidx.i, align 8
  %partArr.i = getelementptr inbounds %struct.Slice, ptr %15, i64 0, i32 6
  %19 = load ptr, ptr %partArr.i, align 8
  %arrayidx1.i = getelementptr inbounds i32, ptr %18, i64 2
  %20 = load i32, ptr %arrayidx1.i, align 4
  %idxprom2.i = sext i32 %20 to i64
  %arrayidx3.i = getelementptr inbounds %struct.datapartition, ptr %19, i64 %idxprom2.i
  %21 = load ptr, ptr %arrayidx3.i, align 8
  %write_flag.i = getelementptr inbounds %struct.Bitstream, ptr %21, i64 0, i32 10
  store i32 1, ptr %write_flag.i, align 8
  %ee_cabac.i = getelementptr inbounds %struct.datapartition, ptr %19, i64 %idxprom2.i, i32 1
  tail call void @biari_encode_symbol_final(ptr noundef nonnull %ee_cabac.i, i16 noundef signext 0) #17
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %land.lhs.true33, %if.end31
  store i32 1, ptr @cabac_encoding, align 4
  %call = call i32 @writeMBLayer(i32 noundef 0, ptr noundef nonnull %i)
  %22 = load i32, ptr %mb_type19, align 8
  %cmp41.not = icmp eq i32 %22, 0
  %.pre128 = load ptr, ptr @img, align 8
  br i1 %cmp41.not, label %lor.lhs.false42, label %if.end56

lor.lhs.false42:                                  ; preds = %if.end39
  %type43 = getelementptr inbounds %struct.ImageParameters, ptr %.pre128, i64 0, i32 5
  %23 = load i32, ptr %type43, align 4
  %cmp44 = icmp eq i32 %23, 1
  br i1 %cmp44, label %land.lhs.true45, label %if.then47

land.lhs.true45:                                  ; preds = %lor.lhs.false42
  %cbp = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 12
  %24 = load i32, ptr %cbp, align 4
  %cmp46.not = icmp eq i32 %24, 0
  br i1 %cmp46.not, label %if.then47, label %if.end56

if.then47:                                        ; preds = %land.lhs.true45, %lor.lhs.false42
  %nz_coeff = getelementptr inbounds %struct.ImageParameters, ptr %.pre128, i64 0, i32 34
  %25 = load ptr, ptr %nz_coeff, align 8
  %current_mb_nr49 = getelementptr inbounds %struct.ImageParameters, ptr %.pre128, i64 0, i32 3
  %26 = load i32, ptr %current_mb_nr49, align 4
  %idxprom50 = sext i32 %26 to i64
  %arrayidx51 = getelementptr inbounds ptr, ptr %25, i64 %idxprom50
  %27 = load ptr, ptr %arrayidx51, align 8
  %28 = load ptr, ptr %27, align 8
  %num_blk8x8_uv = getelementptr inbounds %struct.ImageParameters, ptr %.pre128, i64 0, i32 158
  %29 = load i32, ptr %num_blk8x8_uv, align 8
  %add54 = add nsw i32 %29, 4
  %conv = sext i32 %add54 to i64
  %mul = shl nsw i64 %conv, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %28, i8 0, i64 %mul, i1 false)
  %30 = load ptr, ptr @img, align 8
  %nz_coeff.1 = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 34
  %31 = load ptr, ptr %nz_coeff.1, align 8
  %current_mb_nr49.1 = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 3
  %32 = load i32, ptr %current_mb_nr49.1, align 4
  %idxprom50.1 = sext i32 %32 to i64
  %arrayidx51.1 = getelementptr inbounds ptr, ptr %31, i64 %idxprom50.1
  %33 = load ptr, ptr %arrayidx51.1, align 8
  %arrayidx53.1 = getelementptr inbounds ptr, ptr %33, i64 1
  %34 = load ptr, ptr %arrayidx53.1, align 8
  %num_blk8x8_uv.1 = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 158
  %35 = load i32, ptr %num_blk8x8_uv.1, align 8
  %add54.1 = add nsw i32 %35, 4
  %conv.1 = sext i32 %add54.1 to i64
  %mul.1 = shl nsw i64 %conv.1, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %34, i8 0, i64 %mul.1, i1 false)
  %36 = load ptr, ptr @img, align 8
  %nz_coeff.2 = getelementptr inbounds %struct.ImageParameters, ptr %36, i64 0, i32 34
  %37 = load ptr, ptr %nz_coeff.2, align 8
  %current_mb_nr49.2 = getelementptr inbounds %struct.ImageParameters, ptr %36, i64 0, i32 3
  %38 = load i32, ptr %current_mb_nr49.2, align 4
  %idxprom50.2 = sext i32 %38 to i64
  %arrayidx51.2 = getelementptr inbounds ptr, ptr %37, i64 %idxprom50.2
  %39 = load ptr, ptr %arrayidx51.2, align 8
  %arrayidx53.2 = getelementptr inbounds ptr, ptr %39, i64 2
  %40 = load ptr, ptr %arrayidx53.2, align 8
  %num_blk8x8_uv.2 = getelementptr inbounds %struct.ImageParameters, ptr %36, i64 0, i32 158
  %41 = load i32, ptr %num_blk8x8_uv.2, align 8
  %add54.2 = add nsw i32 %41, 4
  %conv.2 = sext i32 %add54.2 to i64
  %mul.2 = shl nsw i64 %conv.2, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %40, i8 0, i64 %mul.2, i1 false)
  %42 = load ptr, ptr @img, align 8
  %nz_coeff.3 = getelementptr inbounds %struct.ImageParameters, ptr %42, i64 0, i32 34
  %43 = load ptr, ptr %nz_coeff.3, align 8
  %current_mb_nr49.3 = getelementptr inbounds %struct.ImageParameters, ptr %42, i64 0, i32 3
  %44 = load i32, ptr %current_mb_nr49.3, align 4
  %idxprom50.3 = sext i32 %44 to i64
  %arrayidx51.3 = getelementptr inbounds ptr, ptr %43, i64 %idxprom50.3
  %45 = load ptr, ptr %arrayidx51.3, align 8
  %arrayidx53.3 = getelementptr inbounds ptr, ptr %45, i64 3
  %46 = load ptr, ptr %arrayidx53.3, align 8
  %num_blk8x8_uv.3 = getelementptr inbounds %struct.ImageParameters, ptr %42, i64 0, i32 158
  %47 = load i32, ptr %num_blk8x8_uv.3, align 8
  %add54.3 = add nsw i32 %47, 4
  %conv.3 = sext i32 %add54.3 to i64
  %mul.3 = shl nsw i64 %conv.3, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %46, i8 0, i64 %mul.3, i1 false)
  %.pre127 = load ptr, ptr @img, align 8
  br label %if.end56

if.end56:                                         ; preds = %if.then47, %land.lhs.true45, %if.end39
  %48 = phi ptr [ %.pre127, %if.then47 ], [ %.pre128, %land.lhs.true45 ], [ %.pre128, %if.end39 ]
  %mb_data.i = getelementptr inbounds %struct.ImageParameters, ptr %48, i64 0, i32 61
  %49 = load ptr, ptr %mb_data.i, align 8
  %current_mb_nr.i = getelementptr inbounds %struct.ImageParameters, ptr %48, i64 0, i32 3
  %50 = load i32, ptr %current_mb_nr.i, align 4
  %idxprom.i124 = sext i32 %50 to i64
  %mb_type.i = getelementptr inbounds %struct.macroblock, ptr %49, i64 %idxprom.i124, i32 8
  %51 = load i32, ptr %mb_type.i, align 8
  %cond.i = icmp eq i32 %51, 0
  br i1 %cond.i, label %lor.lhs.false20.i, label %if.then.i

lor.lhs.false20.i:                                ; preds = %if.end56
  %type.i = getelementptr inbounds %struct.ImageParameters, ptr %48, i64 0, i32 5
  %52 = load i32, ptr %type.i, align 4
  %cmp21.i = icmp eq i32 %52, 1
  br i1 %cmp21.i, label %land.lhs.true22.i, label %set_last_dquant.exit

land.lhs.true22.i:                                ; preds = %lor.lhs.false20.i
  %cbp.i = getelementptr inbounds %struct.macroblock, ptr %49, i64 %idxprom.i124, i32 12
  %53 = load i32, ptr %cbp.i, align 4
  %cmp23.not.i = icmp eq i32 %53, 0
  br i1 %cmp23.not.i, label %set_last_dquant.exit, label %if.then.i

if.then.i:                                        ; preds = %land.lhs.true22.i, %if.end56
  %delta_qp.i = getelementptr inbounds %struct.macroblock, ptr %49, i64 %idxprom.i124, i32 1
  %54 = load i32, ptr %delta_qp.i, align 4
  br label %set_last_dquant.exit

set_last_dquant.exit:                             ; preds = %lor.lhs.false20.i, %land.lhs.true22.i, %if.then.i
  %storemerge.i = phi i32 [ %54, %if.then.i ], [ 0, %land.lhs.true22.i ], [ 0, %lor.lhs.false20.i ]
  store i32 %storemerge.i, ptr @last_dquant, align 4
  %arrayidx57 = getelementptr inbounds i32, ptr %bitcounter, i64 2
  %55 = load i32, ptr %arrayidx57, align 4
  %arrayidx58 = getelementptr inbounds i32, ptr %bitcounter, i64 5
  %56 = load i32, ptr %arrayidx58, align 4
  %arrayidx60 = getelementptr inbounds i32, ptr %bitcounter, i64 3
  %57 = load i32, ptr %arrayidx60, align 4
  %arrayidx62 = getelementptr inbounds i32, ptr %bitcounter, i64 4
  %58 = load i32, ptr %arrayidx62, align 4
  %arrayidx64 = getelementptr inbounds i32, ptr %bitcounter, i64 7
  %59 = load i32, ptr %arrayidx64, align 4
  %arrayidx66 = getelementptr inbounds i32, ptr %bitcounter, i64 6
  %60 = load i32, ptr %arrayidx66, align 4
  %add59 = add i32 %57, %55
  %add61 = add i32 %add59, %56
  %add63 = add nsw i32 %add61, %58
  %add65 = add nsw i32 %add63, %59
  %add67 = add nsw i32 %add65, %60
  %arrayidx68 = getelementptr inbounds i32, ptr %bitcounter, i64 1
  store i32 %add67, ptr %arrayidx68, align 4
  %61 = load ptr, ptr @input, align 8
  %RCEnable = getelementptr inbounds %struct.InputParameters, ptr %61, i64 0, i32 157
  %62 = load i32, ptr %RCEnable, align 4
  %tobool69.not = icmp eq i32 %62, 0
  br i1 %tobool69.not, label %if.end93, label %if.then70

if.then70:                                        ; preds = %set_last_dquant.exit
  %add75 = add nsw i32 %add59, %58
  %add77 = add nsw i32 %add75, %59
  %NumberofMBHeaderBits = getelementptr inbounds %struct.ImageParameters, ptr %48, i64 0, i32 131
  store i32 %add77, ptr %NumberofMBHeaderBits, align 8
  %63 = load i32, ptr %arrayidx58, align 4
  %64 = load i32, ptr %arrayidx66, align 4
  %add80 = add nsw i32 %64, %63
  %NumberofMBTextureBits = getelementptr inbounds %struct.ImageParameters, ptr %48, i64 0, i32 130
  store i32 %add80, ptr %NumberofMBTextureBits, align 4
  %65 = load ptr, ptr @generic_RC, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.rc_generic, ptr %65, i64 0, i32 5
  %66 = load i32, ptr %NumberofTextureBits, align 4
  %add82 = add nsw i32 %66, %add80
  store i32 %add82, ptr %NumberofTextureBits, align 4
  %NumberofHeaderBits = getelementptr inbounds %struct.rc_generic, ptr %65, i64 0, i32 4
  %67 = load i32, ptr %NumberofHeaderBits, align 8
  %add84 = add nsw i32 %67, %add77
  store i32 %add84, ptr %NumberofHeaderBits, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, ptr %48, i64 0, i32 132
  %68 = load i32, ptr %BasicUnit, align 4
  %FrameSizeInMbs = getelementptr inbounds %struct.ImageParameters, ptr %48, i64 0, i32 120
  %69 = load i32, ptr %FrameSizeInMbs, align 8
  %cmp85 = icmp ult i32 %68, %69
  br i1 %cmp85, label %if.then87, label %if.end93

if.then87:                                        ; preds = %if.then70
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.rc_generic, ptr %65, i64 0, i32 6
  %70 = load i32, ptr %NumberofBasicUnitHeaderBits, align 8
  %add89 = add nsw i32 %70, %add77
  store i32 %add89, ptr %NumberofBasicUnitHeaderBits, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.rc_generic, ptr %65, i64 0, i32 7
  %71 = load i32, ptr %NumberofBasicUnitTextureBits, align 4
  %add91 = add nsw i32 %71, %add80
  store i32 %add91, ptr %NumberofBasicUnitTextureBits, align 4
  br label %if.end93

if.end93:                                         ; preds = %if.then70, %if.then87, %set_last_dquant.exit
  %NumberofCodedMacroBlocks = getelementptr inbounds %struct.ImageParameters, ptr %48, i64 0, i32 128
  %72 = load i32, ptr %NumberofCodedMacroBlocks, align 4
  %inc94 = add nsw i32 %72, 1
  store i32 %inc94, ptr %NumberofCodedMacroBlocks, align 4
  %73 = load i32, ptr %arrayidx68, align 4
  %74 = load ptr, ptr @stats, align 8
  %bit_slice = getelementptr inbounds %struct.StatParameters, ptr %74, i64 0, i32 6
  %75 = load i32, ptr %bit_slice, align 8
  %add96 = add nsw i32 %75, %73
  store i32 %add96, ptr %bit_slice, align 8
  store i32 0, ptr @cabac_encoding, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i) #17
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @writeReferenceFrame(i32 noundef %mode, i32 noundef %i, i32 noundef %j, i32 noundef %fwd_flag, i32 noundef %ref) local_unnamed_addr #0 {
entry:
  %se = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se) #17
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 60
  %3 = load ptr, ptr %currentSlice, align 8
  %4 = load ptr, ptr @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, ptr %4, i64 0, i32 76
  %5 = load i32, ptr %partition_mode, align 8
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom1
  %6 = load ptr, ptr %arrayidx2, align 8
  %partArr = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 6
  %7 = load ptr, ptr %partArr, align 8
  %arrayidx3 = getelementptr inbounds i32, ptr %6, i64 3
  %8 = load i32, ptr %arrayidx3, align 4
  %tobool.not = icmp eq i32 %fwd_flag, 0
  %list_offset6 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 21
  %9 = load i32, ptr %list_offset6, align 8
  %add7 = zext i1 %tobool.not to i32
  %cond = add nsw i32 %9, %add7
  %idxprom4 = sext i32 %8 to i64
  %arrayidx5 = getelementptr inbounds %struct.datapartition, ptr %7, i64 %idxprom4
  %value1 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  store i32 %ref, ptr %value1, align 4
  store i32 3, ptr %se, align 8
  %cond9 = zext i1 %tobool.not to i32
  %value2 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  store i32 %cond9, ptr %value2, align 8
  %subblock_x = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 24
  store i32 %i, ptr %subblock_x, align 8
  %subblock_y = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 25
  store i32 %j, ptr %subblock_y, align 4
  %idxprom10 = sext i32 %cond to i64
  %arrayidx11 = getelementptr inbounds [6 x ptr], ptr @writeRefFrame, i64 0, i64 %idxprom10
  %10 = load ptr, ptr %arrayidx11, align 8
  call void %10(ptr noundef nonnull %se, ptr noundef %arrayidx5) #17
  %len = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %11 = load i32, ptr %len, align 4
  %arrayidx12 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 5, i64 3
  %12 = load i32, ptr %arrayidx12, align 4
  %add13 = add nsw i32 %12, %11
  store i32 %add13, ptr %arrayidx12, align 4
  %13 = load i32, ptr %len, align 4
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se) #17
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define dso_local i32 @writeMotionVector8x8(i32 noundef %i0, i32 noundef %j0, i32 noundef %i1, i32 noundef %j1, i32 noundef %refframe, i32 noundef %list_idx, i32 noundef %mv_mode) local_unnamed_addr #0 {
entry:
  %se = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr @input, align 8
  %idxprom = sext i32 %mv_mode to i64
  %arrayidx = getelementptr inbounds %struct.InputParameters, ptr %0, i64 0, i32 19, i64 %idxprom
  %1 = load i32, ptr %arrayidx, align 8
  %arrayidx5 = getelementptr inbounds %struct.InputParameters, ptr %0, i64 0, i32 19, i64 %idxprom, i64 1
  %2 = load i32, ptr %arrayidx5, align 4
  %3 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %3, i64 0, i32 61
  %4 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %3, i64 0, i32 3
  %5 = load i32, ptr %current_mb_nr, align 4
  %idxprom6 = sext i32 %5 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se) #17
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %3, i64 0, i32 60
  %6 = load ptr, ptr %currentSlice, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, ptr %0, i64 0, i32 76
  %7 = load i32, ptr %partition_mode, align 8
  %idxprom8 = sext i32 %7 to i64
  %arrayidx9 = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom8
  %8 = load ptr, ptr %arrayidx9, align 8
  %all_mv10 = getelementptr inbounds %struct.ImageParameters, ptr %3, i64 0, i32 80
  %9 = load ptr, ptr %all_mv10, align 8
  %pred_mv11 = getelementptr inbounds %struct.ImageParameters, ptr %3, i64 0, i32 79
  %10 = load ptr, ptr %pred_mv11, align 8
  %bi_pred_me = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom6, i32 33
  %11 = load i16, ptr %bi_pred_me, align 8
  %tobool.not = icmp eq i16 %11, 0
  br i1 %tobool.not, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %b8pdir = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom6, i32 15
  %12 = load i32, ptr %b8pdir, align 8
  %cmp = icmp eq i32 %12, 2
  %cmp15 = icmp eq i32 %mv_mode, 1
  %or.cond = and i1 %cmp15, %cmp
  %cmp18 = icmp eq i32 %refframe, 0
  %or.cond97 = and i1 %cmp18, %or.cond
  br i1 %or.cond97, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %cmp22 = icmp eq i16 %11, 1
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, ptr %3, i64 0, i32 81
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, ptr %3, i64 0, i32 82
  %cond.in = select i1 %cmp22, ptr %bipred_mv1, ptr %bipred_mv2
  %cond = load ptr, ptr %cond.in, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %all_mv.0 = phi ptr [ %cond, %if.then ], [ %9, %land.lhs.true ], [ %9, %entry ]
  %cmp24151 = icmp slt i32 %j0, %j1
  br i1 %cmp24151, label %for.cond26.preheader.lr.ph, label %for.end96

for.cond26.preheader.lr.ph:                       ; preds = %if.end
  %cmp27146 = icmp slt i32 %i0, %i1
  %idxprom38 = sext i32 %list_idx to i64
  %idxprom40 = sext i32 %refframe to i64
  %partArr = getelementptr inbounds %struct.Slice, ptr %6, i64 0, i32 6
  %arrayidx80 = getelementptr inbounds i32, ptr %8, i64 5
  %value1 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  %value2 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  %cmp65134 = icmp sgt i32 %1, 0
  %len = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %arrayidx84 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom6, i32 5, i64 3
  br i1 %cmp27146, label %for.cond26.preheader.lr.ph.split.us, label %for.end96

for.cond26.preheader.lr.ph.split.us:              ; preds = %for.cond26.preheader.lr.ph
  %cmp61136 = icmp sgt i32 %2, 0
  %13 = sext i32 %i0 to i64
  br i1 %cmp61136, label %for.cond26.preheader.lr.ph.split.us.split.us, label %for.cond26.preheader.us.preheader

for.cond26.preheader.us.preheader:                ; preds = %for.cond26.preheader.lr.ph.split.us
  %14 = sext i32 %1 to i64
  %15 = sext i32 %i1 to i64
  %16 = sext i32 %j0 to i64
  %17 = sext i32 %2 to i64
  %18 = sext i32 %j1 to i64
  %19 = add i32 %list_idx, 2
  br label %for.cond26.preheader.us

for.cond26.preheader.lr.ph.split.us.split.us:     ; preds = %for.cond26.preheader.lr.ph.split.us
  %20 = sext i32 %i1 to i64
  %21 = sext i32 %j0 to i64
  %22 = zext i32 %2 to i64
  %23 = sext i32 %j1 to i64
  br i1 %cmp65134, label %for.cond26.preheader.us.us.us.preheader, label %for.cond26.preheader.us.us.preheader

for.cond26.preheader.us.us.preheader:             ; preds = %for.cond26.preheader.lr.ph.split.us.split.us
  %24 = sext i32 %1 to i64
  %25 = add i32 %list_idx, 2
  br label %for.cond26.preheader.us.us

for.cond26.preheader.us.us.us.preheader:          ; preds = %for.cond26.preheader.lr.ph.split.us.split.us
  %26 = zext i32 %1 to i64
  %wide.trip.count206 = zext i32 %2 to i64
  %wide.trip.count = zext i32 %1 to i64
  %27 = add i32 %list_idx, 2
  %xtraiter = and i64 %wide.trip.count, 3
  %28 = icmp ult i32 %1, 4
  %unroll_iter = and i64 %wide.trip.count, 4294967292
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  %xtraiter229 = and i64 %wide.trip.count, 3
  %29 = icmp ult i32 %1, 4
  %unroll_iter232 = and i64 %wide.trip.count, 4294967292
  %lcmp.mod231.not = icmp eq i64 %xtraiter229, 0
  br label %for.cond26.preheader.us.us.us

for.cond26.preheader.us.us.us:                    ; preds = %for.cond26.preheader.us.us.us.preheader, %for.cond26.for.inc94_crit_edge.split.us.split.us.us.us.us
  %indvars.iv216 = phi i64 [ %21, %for.cond26.preheader.us.us.us.preheader ], [ %indvars.iv.next217, %for.cond26.for.inc94_crit_edge.split.us.split.us.us.us.us ]
  %rate.0152.us.us.us = phi i32 [ 0, %for.cond26.preheader.us.us.us.preheader ], [ %add87.us.us.us.us.us.us.us.1, %for.cond26.for.inc94_crit_edge.split.us.split.us.us.us.us ]
  %arrayidx35.us.us.us = getelementptr inbounds ptr, ptr %all_mv.0, i64 %indvars.iv216
  %arrayidx48.us.us.us = getelementptr inbounds ptr, ptr %10, i64 %indvars.iv216
  %30 = trunc i64 %indvars.iv216 to i32
  br label %for.cond30.preheader.us.us.us.us.us

for.cond30.preheader.us.us.us.us.us:              ; preds = %for.cond60.for.end79_crit_edge.split.us.us.us.us.us.us.us.us.1, %for.cond26.preheader.us.us.us
  %indvars.iv213 = phi i64 [ %indvars.iv.next214, %for.cond60.for.end79_crit_edge.split.us.us.us.us.us.us.us.us.1 ], [ %13, %for.cond26.preheader.us.us.us ]
  %rate.1147.us.us.us.us.us = phi i32 [ %add87.us.us.us.us.us.us.us.1, %for.cond60.for.end79_crit_edge.split.us.us.us.us.us.us.us.us.1 ], [ %rate.0152.us.us.us, %for.cond26.preheader.us.us.us ]
  %31 = load ptr, ptr %arrayidx35.us.us.us, align 8
  %arrayidx37.us.us.us.us.us.us.us = getelementptr inbounds ptr, ptr %31, i64 %indvars.iv213
  %32 = load ptr, ptr %arrayidx37.us.us.us.us.us.us.us, align 8
  %arrayidx39.us.us.us.us.us.us.us = getelementptr inbounds ptr, ptr %32, i64 %idxprom38
  %33 = load ptr, ptr %arrayidx39.us.us.us.us.us.us.us, align 8
  %arrayidx41.us.us.us.us.us.us.us = getelementptr inbounds ptr, ptr %33, i64 %idxprom40
  %34 = load ptr, ptr %arrayidx41.us.us.us.us.us.us.us, align 8
  %arrayidx43.us.us.us.us.us.us.us = getelementptr inbounds ptr, ptr %34, i64 %idxprom
  %35 = load ptr, ptr %arrayidx43.us.us.us.us.us.us.us, align 8
  %36 = load i16, ptr %35, align 2
  %conv46.us.us.us.us.us.us.us = sext i16 %36 to i32
  %37 = load ptr, ptr %arrayidx48.us.us.us, align 8
  %arrayidx50.us.us.us.us.us.us.us = getelementptr inbounds ptr, ptr %37, i64 %indvars.iv213
  %38 = load ptr, ptr %arrayidx50.us.us.us.us.us.us.us, align 8
  %arrayidx52.us.us.us.us.us.us.us = getelementptr inbounds ptr, ptr %38, i64 %idxprom38
  %39 = load ptr, ptr %arrayidx52.us.us.us.us.us.us.us, align 8
  %arrayidx54.us.us.us.us.us.us.us = getelementptr inbounds ptr, ptr %39, i64 %idxprom40
  %40 = load ptr, ptr %arrayidx54.us.us.us.us.us.us.us, align 8
  %arrayidx56.us.us.us.us.us.us.us = getelementptr inbounds ptr, ptr %40, i64 %idxprom
  %41 = load ptr, ptr %arrayidx56.us.us.us.us.us.us.us, align 8
  %42 = load i16, ptr %41, align 2
  %conv59.us.us.us.us.us.us.us = sext i16 %42 to i32
  %sub.us.us.us.us.us.us.us = sub nsw i32 %conv46.us.us.us.us.us.us.us, %conv59.us.us.us.us.us.us.us
  br label %for.cond64.preheader.us.us.us.us.us.us.us.us

for.cond64.preheader.us.us.us.us.us.us.us.us:     ; preds = %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us, %for.cond30.preheader.us.us.us.us.us
  %indvars.iv202 = phi i64 [ %indvars.iv.next203, %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us ], [ 0, %for.cond30.preheader.us.us.us.us.us ]
  %43 = add nsw i64 %indvars.iv202, %indvars.iv216
  br i1 %28, label %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.unr-lcssa, label %for.body67.us.us.us.us.us.us.us.us

for.body67.us.us.us.us.us.us.us.us:               ; preds = %for.cond64.preheader.us.us.us.us.us.us.us.us, %for.body67.us.us.us.us.us.us.us.us
  %indvars.iv198 = phi i64 [ %indvars.iv.next199.3, %for.body67.us.us.us.us.us.us.us.us ], [ 0, %for.cond64.preheader.us.us.us.us.us.us.us.us ]
  %niter = phi i64 [ %niter.next.3, %for.body67.us.us.us.us.us.us.us.us ], [ 0, %for.cond64.preheader.us.us.us.us.us.us.us.us ]
  %44 = add nsw i64 %indvars.iv198, %indvars.iv213
  %arrayidx76.us.us.us.us.us.us.us.us = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom6, i32 9, i64 %idxprom38, i64 %43, i64 %44, i64 0
  store i32 %sub.us.us.us.us.us.us.us, ptr %arrayidx76.us.us.us.us.us.us.us.us, align 4
  %indvars.iv.next199 = or i64 %indvars.iv198, 1
  %45 = add nsw i64 %indvars.iv.next199, %indvars.iv213
  %arrayidx76.us.us.us.us.us.us.us.us.1226 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom6, i32 9, i64 %idxprom38, i64 %43, i64 %45, i64 0
  store i32 %sub.us.us.us.us.us.us.us, ptr %arrayidx76.us.us.us.us.us.us.us.us.1226, align 4
  %indvars.iv.next199.1227 = or i64 %indvars.iv198, 2
  %46 = add nsw i64 %indvars.iv.next199.1227, %indvars.iv213
  %arrayidx76.us.us.us.us.us.us.us.us.2 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom6, i32 9, i64 %idxprom38, i64 %43, i64 %46, i64 0
  store i32 %sub.us.us.us.us.us.us.us, ptr %arrayidx76.us.us.us.us.us.us.us.us.2, align 4
  %indvars.iv.next199.2 = or i64 %indvars.iv198, 3
  %47 = add nsw i64 %indvars.iv.next199.2, %indvars.iv213
  %arrayidx76.us.us.us.us.us.us.us.us.3 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom6, i32 9, i64 %idxprom38, i64 %43, i64 %47, i64 0
  store i32 %sub.us.us.us.us.us.us.us, ptr %arrayidx76.us.us.us.us.us.us.us.us.3, align 4
  %indvars.iv.next199.3 = add nuw nsw i64 %indvars.iv198, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.unr-lcssa, label %for.body67.us.us.us.us.us.us.us.us

for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.unr-lcssa: ; preds = %for.body67.us.us.us.us.us.us.us.us, %for.cond64.preheader.us.us.us.us.us.us.us.us
  %indvars.iv198.unr = phi i64 [ 0, %for.cond64.preheader.us.us.us.us.us.us.us.us ], [ %indvars.iv.next199.3, %for.body67.us.us.us.us.us.us.us.us ]
  br i1 %lcmp.mod.not, label %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us, label %for.body67.us.us.us.us.us.us.us.us.epil

for.body67.us.us.us.us.us.us.us.us.epil:          ; preds = %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.unr-lcssa, %for.body67.us.us.us.us.us.us.us.us.epil
  %indvars.iv198.epil = phi i64 [ %indvars.iv.next199.epil, %for.body67.us.us.us.us.us.us.us.us.epil ], [ %indvars.iv198.unr, %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body67.us.us.us.us.us.us.us.us.epil ], [ 0, %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.unr-lcssa ]
  %48 = add nsw i64 %indvars.iv198.epil, %indvars.iv213
  %arrayidx76.us.us.us.us.us.us.us.us.epil = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom6, i32 9, i64 %idxprom38, i64 %43, i64 %48, i64 0
  store i32 %sub.us.us.us.us.us.us.us, ptr %arrayidx76.us.us.us.us.us.us.us.us.epil, align 4
  %indvars.iv.next199.epil = add nuw nsw i64 %indvars.iv198.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us, label %for.body67.us.us.us.us.us.us.us.us.epil

for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us: ; preds = %for.body67.us.us.us.us.us.us.us.us.epil, %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.unr-lcssa
  %indvars.iv.next203 = add nuw nsw i64 %indvars.iv202, 1
  %exitcond207.not = icmp eq i64 %indvars.iv.next203, %wide.trip.count206
  br i1 %exitcond207.not, label %for.cond60.for.end79_crit_edge.split.us.us.us.us.us.us.us.us, label %for.cond64.preheader.us.us.us.us.us.us.us.us

for.cond60.for.end79_crit_edge.split.us.us.us.us.us.us.us.us: ; preds = %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us
  %49 = load ptr, ptr %partArr, align 8
  %50 = load i32, ptr %arrayidx80, align 4
  %idxprom81.us.us.us.us.us.us.us = sext i32 %50 to i64
  %arrayidx82.us.us.us.us.us.us.us = getelementptr inbounds %struct.datapartition, ptr %49, i64 %idxprom81.us.us.us.us.us.us.us
  %51 = load ptr, ptr @img, align 8
  %subblock_x.us.us.us.us.us.us.us = getelementptr inbounds %struct.ImageParameters, ptr %51, i64 0, i32 24
  %52 = trunc i64 %indvars.iv213 to i32
  store i32 %52, ptr %subblock_x.us.us.us.us.us.us.us, align 8
  %subblock_y.us.us.us.us.us.us.us = getelementptr inbounds %struct.ImageParameters, ptr %51, i64 0, i32 25
  store i32 %30, ptr %subblock_y.us.us.us.us.us.us.us, align 4
  store i32 %sub.us.us.us.us.us.us.us, ptr %value1, align 4
  store i32 %list_idx, ptr %value2, align 8
  store i32 5, ptr %se, align 8
  %53 = load ptr, ptr @writeMVD, align 8
  call void %53(ptr noundef nonnull %se, ptr noundef %arrayidx82.us.us.us.us.us.us.us) #17
  %54 = load i32, ptr %len, align 4
  %55 = load i32, ptr %arrayidx84, align 4
  %add85.us.us.us.us.us.us.us = add nsw i32 %55, %54
  store i32 %add85.us.us.us.us.us.us.us, ptr %arrayidx84, align 4
  %56 = load i32, ptr %len, align 4
  %57 = load ptr, ptr %arrayidx35.us.us.us, align 8
  %arrayidx37.us.us.us.us.us.us.us.1 = getelementptr inbounds ptr, ptr %57, i64 %indvars.iv213
  %58 = load ptr, ptr %arrayidx37.us.us.us.us.us.us.us.1, align 8
  %arrayidx39.us.us.us.us.us.us.us.1 = getelementptr inbounds ptr, ptr %58, i64 %idxprom38
  %59 = load ptr, ptr %arrayidx39.us.us.us.us.us.us.us.1, align 8
  %arrayidx41.us.us.us.us.us.us.us.1 = getelementptr inbounds ptr, ptr %59, i64 %idxprom40
  %60 = load ptr, ptr %arrayidx41.us.us.us.us.us.us.us.1, align 8
  %arrayidx43.us.us.us.us.us.us.us.1 = getelementptr inbounds ptr, ptr %60, i64 %idxprom
  %61 = load ptr, ptr %arrayidx43.us.us.us.us.us.us.us.1, align 8
  %arrayidx45.us.us.us.us.us.us.us.1 = getelementptr inbounds i16, ptr %61, i64 1
  %62 = load i16, ptr %arrayidx45.us.us.us.us.us.us.us.1, align 2
  %conv46.us.us.us.us.us.us.us.1 = sext i16 %62 to i32
  %63 = load ptr, ptr %arrayidx48.us.us.us, align 8
  %arrayidx50.us.us.us.us.us.us.us.1 = getelementptr inbounds ptr, ptr %63, i64 %indvars.iv213
  %64 = load ptr, ptr %arrayidx50.us.us.us.us.us.us.us.1, align 8
  %arrayidx52.us.us.us.us.us.us.us.1 = getelementptr inbounds ptr, ptr %64, i64 %idxprom38
  %65 = load ptr, ptr %arrayidx52.us.us.us.us.us.us.us.1, align 8
  %arrayidx54.us.us.us.us.us.us.us.1 = getelementptr inbounds ptr, ptr %65, i64 %idxprom40
  %66 = load ptr, ptr %arrayidx54.us.us.us.us.us.us.us.1, align 8
  %arrayidx56.us.us.us.us.us.us.us.1 = getelementptr inbounds ptr, ptr %66, i64 %idxprom
  %67 = load ptr, ptr %arrayidx56.us.us.us.us.us.us.us.1, align 8
  %arrayidx58.us.us.us.us.us.us.us.1 = getelementptr inbounds i16, ptr %67, i64 1
  %68 = load i16, ptr %arrayidx58.us.us.us.us.us.us.us.1, align 2
  %conv59.us.us.us.us.us.us.us.1 = sext i16 %68 to i32
  %sub.us.us.us.us.us.us.us.1 = sub nsw i32 %conv46.us.us.us.us.us.us.us.1, %conv59.us.us.us.us.us.us.us.1
  br label %for.cond64.preheader.us.us.us.us.us.us.us.us.1

for.cond64.preheader.us.us.us.us.us.us.us.us.1:   ; preds = %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.1, %for.cond60.for.end79_crit_edge.split.us.us.us.us.us.us.us.us
  %indvars.iv202.1 = phi i64 [ %indvars.iv.next203.1, %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.1 ], [ 0, %for.cond60.for.end79_crit_edge.split.us.us.us.us.us.us.us.us ]
  %69 = add nsw i64 %indvars.iv202.1, %indvars.iv216
  br i1 %29, label %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.1.unr-lcssa, label %for.body67.us.us.us.us.us.us.us.us.1

for.body67.us.us.us.us.us.us.us.us.1:             ; preds = %for.cond64.preheader.us.us.us.us.us.us.us.us.1, %for.body67.us.us.us.us.us.us.us.us.1
  %indvars.iv198.1 = phi i64 [ %indvars.iv.next199.1.3, %for.body67.us.us.us.us.us.us.us.us.1 ], [ 0, %for.cond64.preheader.us.us.us.us.us.us.us.us.1 ]
  %niter233 = phi i64 [ %niter233.next.3, %for.body67.us.us.us.us.us.us.us.us.1 ], [ 0, %for.cond64.preheader.us.us.us.us.us.us.us.us.1 ]
  %70 = add nsw i64 %indvars.iv198.1, %indvars.iv213
  %arrayidx76.us.us.us.us.us.us.us.us.1 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom6, i32 9, i64 %idxprom38, i64 %69, i64 %70, i64 1
  store i32 %sub.us.us.us.us.us.us.us.1, ptr %arrayidx76.us.us.us.us.us.us.us.us.1, align 4
  %indvars.iv.next199.1 = or i64 %indvars.iv198.1, 1
  %71 = add nsw i64 %indvars.iv.next199.1, %indvars.iv213
  %arrayidx76.us.us.us.us.us.us.us.us.1.1 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom6, i32 9, i64 %idxprom38, i64 %69, i64 %71, i64 1
  store i32 %sub.us.us.us.us.us.us.us.1, ptr %arrayidx76.us.us.us.us.us.us.us.us.1.1, align 4
  %indvars.iv.next199.1.1 = or i64 %indvars.iv198.1, 2
  %72 = add nsw i64 %indvars.iv.next199.1.1, %indvars.iv213
  %arrayidx76.us.us.us.us.us.us.us.us.1.2 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom6, i32 9, i64 %idxprom38, i64 %69, i64 %72, i64 1
  store i32 %sub.us.us.us.us.us.us.us.1, ptr %arrayidx76.us.us.us.us.us.us.us.us.1.2, align 4
  %indvars.iv.next199.1.2 = or i64 %indvars.iv198.1, 3
  %73 = add nsw i64 %indvars.iv.next199.1.2, %indvars.iv213
  %arrayidx76.us.us.us.us.us.us.us.us.1.3 = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom6, i32 9, i64 %idxprom38, i64 %69, i64 %73, i64 1
  store i32 %sub.us.us.us.us.us.us.us.1, ptr %arrayidx76.us.us.us.us.us.us.us.us.1.3, align 4
  %indvars.iv.next199.1.3 = add nuw nsw i64 %indvars.iv198.1, 4
  %niter233.next.3 = add i64 %niter233, 4
  %niter233.ncmp.3 = icmp eq i64 %niter233.next.3, %unroll_iter232
  br i1 %niter233.ncmp.3, label %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.1.unr-lcssa, label %for.body67.us.us.us.us.us.us.us.us.1

for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.1.unr-lcssa: ; preds = %for.body67.us.us.us.us.us.us.us.us.1, %for.cond64.preheader.us.us.us.us.us.us.us.us.1
  %indvars.iv198.1.unr = phi i64 [ 0, %for.cond64.preheader.us.us.us.us.us.us.us.us.1 ], [ %indvars.iv.next199.1.3, %for.body67.us.us.us.us.us.us.us.us.1 ]
  br i1 %lcmp.mod231.not, label %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.1, label %for.body67.us.us.us.us.us.us.us.us.1.epil

for.body67.us.us.us.us.us.us.us.us.1.epil:        ; preds = %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.1.unr-lcssa, %for.body67.us.us.us.us.us.us.us.us.1.epil
  %indvars.iv198.1.epil = phi i64 [ %indvars.iv.next199.1.epil, %for.body67.us.us.us.us.us.us.us.us.1.epil ], [ %indvars.iv198.1.unr, %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.1.unr-lcssa ]
  %epil.iter230 = phi i64 [ %epil.iter230.next, %for.body67.us.us.us.us.us.us.us.us.1.epil ], [ 0, %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.1.unr-lcssa ]
  %74 = add nsw i64 %indvars.iv198.1.epil, %indvars.iv213
  %arrayidx76.us.us.us.us.us.us.us.us.1.epil = getelementptr inbounds %struct.macroblock, ptr %4, i64 %idxprom6, i32 9, i64 %idxprom38, i64 %69, i64 %74, i64 1
  store i32 %sub.us.us.us.us.us.us.us.1, ptr %arrayidx76.us.us.us.us.us.us.us.us.1.epil, align 4
  %indvars.iv.next199.1.epil = add nuw nsw i64 %indvars.iv198.1.epil, 1
  %epil.iter230.next = add i64 %epil.iter230, 1
  %epil.iter230.cmp.not = icmp eq i64 %epil.iter230.next, %xtraiter229
  br i1 %epil.iter230.cmp.not, label %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.1, label %for.body67.us.us.us.us.us.us.us.us.1.epil

for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.1: ; preds = %for.body67.us.us.us.us.us.us.us.us.1.epil, %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.1.unr-lcssa
  %indvars.iv.next203.1 = add nuw nsw i64 %indvars.iv202.1, 1
  %exitcond207.1.not = icmp eq i64 %indvars.iv.next203.1, %wide.trip.count206
  br i1 %exitcond207.1.not, label %for.cond60.for.end79_crit_edge.split.us.us.us.us.us.us.us.us.1, label %for.cond64.preheader.us.us.us.us.us.us.us.us.1

for.cond60.for.end79_crit_edge.split.us.us.us.us.us.us.us.us.1: ; preds = %for.cond64.for.inc77_crit_edge.us.us.us.us.us.us.us.us.1
  %add87.us.us.us.us.us.us.us = add nsw i32 %56, %rate.1147.us.us.us.us.us
  %75 = load ptr, ptr %partArr, align 8
  %76 = load i32, ptr %arrayidx80, align 4
  %idxprom81.us.us.us.us.us.us.us.1 = sext i32 %76 to i64
  %arrayidx82.us.us.us.us.us.us.us.1 = getelementptr inbounds %struct.datapartition, ptr %75, i64 %idxprom81.us.us.us.us.us.us.us.1
  %77 = load ptr, ptr @img, align 8
  %subblock_x.us.us.us.us.us.us.us.1 = getelementptr inbounds %struct.ImageParameters, ptr %77, i64 0, i32 24
  store i32 %52, ptr %subblock_x.us.us.us.us.us.us.us.1, align 8
  %subblock_y.us.us.us.us.us.us.us.1 = getelementptr inbounds %struct.ImageParameters, ptr %77, i64 0, i32 25
  store i32 %30, ptr %subblock_y.us.us.us.us.us.us.us.1, align 4
  store i32 %sub.us.us.us.us.us.us.us.1, ptr %value1, align 4
  store i32 %27, ptr %value2, align 8
  store i32 5, ptr %se, align 8
  %78 = load ptr, ptr @writeMVD, align 8
  call void %78(ptr noundef nonnull %se, ptr noundef %arrayidx82.us.us.us.us.us.us.us.1) #17
  %79 = load i32, ptr %len, align 4
  %80 = load i32, ptr %arrayidx84, align 4
  %add85.us.us.us.us.us.us.us.1 = add nsw i32 %80, %79
  store i32 %add85.us.us.us.us.us.us.us.1, ptr %arrayidx84, align 4
  %81 = load i32, ptr %len, align 4
  %add87.us.us.us.us.us.us.us.1 = add nsw i32 %81, %add87.us.us.us.us.us.us.us
  %indvars.iv.next214 = add i64 %indvars.iv213, %26
  %cmp27.us.us.us.us.us = icmp slt i64 %indvars.iv.next214, %20
  br i1 %cmp27.us.us.us.us.us, label %for.cond30.preheader.us.us.us.us.us, label %for.cond26.for.inc94_crit_edge.split.us.split.us.us.us.us

for.cond26.for.inc94_crit_edge.split.us.split.us.us.us.us: ; preds = %for.cond60.for.end79_crit_edge.split.us.us.us.us.us.us.us.us.1
  %indvars.iv.next217 = add i64 %indvars.iv216, %22
  %cmp24.us.us.us = icmp slt i64 %indvars.iv.next217, %23
  br i1 %cmp24.us.us.us, label %for.cond26.preheader.us.us.us, label %for.end96

for.cond26.preheader.us.us:                       ; preds = %for.cond26.preheader.us.us.preheader, %for.cond26.for.inc94_crit_edge.split.us.split.us172.us
  %indvars.iv195 = phi i64 [ %21, %for.cond26.preheader.us.us.preheader ], [ %indvars.iv.next196, %for.cond26.for.inc94_crit_edge.split.us.split.us172.us ]
  %rate.0152.us.us = phi i32 [ 0, %for.cond26.preheader.us.us.preheader ], [ %add87.us.us.us.us.1, %for.cond26.for.inc94_crit_edge.split.us.split.us172.us ]
  %arrayidx35.us.us = getelementptr inbounds ptr, ptr %all_mv.0, i64 %indvars.iv195
  %arrayidx48.us.us = getelementptr inbounds ptr, ptr %10, i64 %indvars.iv195
  %82 = trunc i64 %indvars.iv195 to i32
  br label %for.cond30.preheader.us.us166.us

for.cond30.preheader.us.us166.us:                 ; preds = %for.cond26.preheader.us.us, %for.cond30.preheader.us.us166.us
  %indvars.iv192 = phi i64 [ %13, %for.cond26.preheader.us.us ], [ %indvars.iv.next193, %for.cond30.preheader.us.us166.us ]
  %rate.1147.us.us168.us = phi i32 [ %rate.0152.us.us, %for.cond26.preheader.us.us ], [ %add87.us.us.us.us.1, %for.cond30.preheader.us.us166.us ]
  %83 = load ptr, ptr %arrayidx35.us.us, align 8
  %arrayidx37.us.us.us.us = getelementptr inbounds ptr, ptr %83, i64 %indvars.iv192
  %84 = load ptr, ptr %arrayidx37.us.us.us.us, align 8
  %arrayidx39.us.us.us.us = getelementptr inbounds ptr, ptr %84, i64 %idxprom38
  %85 = load ptr, ptr %arrayidx39.us.us.us.us, align 8
  %arrayidx41.us.us.us.us = getelementptr inbounds ptr, ptr %85, i64 %idxprom40
  %86 = load ptr, ptr %arrayidx41.us.us.us.us, align 8
  %arrayidx43.us.us.us.us = getelementptr inbounds ptr, ptr %86, i64 %idxprom
  %87 = load ptr, ptr %arrayidx43.us.us.us.us, align 8
  %88 = load i16, ptr %87, align 2
  %89 = load ptr, ptr %arrayidx48.us.us, align 8
  %arrayidx50.us.us.us.us = getelementptr inbounds ptr, ptr %89, i64 %indvars.iv192
  %90 = load ptr, ptr %arrayidx50.us.us.us.us, align 8
  %arrayidx52.us.us.us.us = getelementptr inbounds ptr, ptr %90, i64 %idxprom38
  %91 = load ptr, ptr %arrayidx52.us.us.us.us, align 8
  %arrayidx54.us.us.us.us = getelementptr inbounds ptr, ptr %91, i64 %idxprom40
  %92 = load ptr, ptr %arrayidx54.us.us.us.us, align 8
  %arrayidx56.us.us.us.us = getelementptr inbounds ptr, ptr %92, i64 %idxprom
  %93 = load ptr, ptr %arrayidx56.us.us.us.us, align 8
  %94 = load i16, ptr %93, align 2
  %conv59.us.us.us.us = sext i16 %94 to i32
  %conv46.us.us.us.us = sext i16 %88 to i32
  %sub.us.us.us.us = sub nsw i32 %conv46.us.us.us.us, %conv59.us.us.us.us
  %95 = load ptr, ptr %partArr, align 8
  %96 = load i32, ptr %arrayidx80, align 4
  %idxprom81.us.us.us.us = sext i32 %96 to i64
  %arrayidx82.us.us.us.us = getelementptr inbounds %struct.datapartition, ptr %95, i64 %idxprom81.us.us.us.us
  %97 = load ptr, ptr @img, align 8
  %subblock_x.us.us.us.us = getelementptr inbounds %struct.ImageParameters, ptr %97, i64 0, i32 24
  %98 = trunc i64 %indvars.iv192 to i32
  store i32 %98, ptr %subblock_x.us.us.us.us, align 8
  %subblock_y.us.us.us.us = getelementptr inbounds %struct.ImageParameters, ptr %97, i64 0, i32 25
  store i32 %82, ptr %subblock_y.us.us.us.us, align 4
  store i32 %sub.us.us.us.us, ptr %value1, align 4
  store i32 %list_idx, ptr %value2, align 8
  store i32 5, ptr %se, align 8
  %99 = load ptr, ptr @writeMVD, align 8
  call void %99(ptr noundef nonnull %se, ptr noundef %arrayidx82.us.us.us.us) #17
  %100 = load i32, ptr %len, align 4
  %101 = load i32, ptr %arrayidx84, align 4
  %add85.us.us.us.us = add nsw i32 %101, %100
  store i32 %add85.us.us.us.us, ptr %arrayidx84, align 4
  %102 = load i32, ptr %len, align 4
  %add87.us.us.us.us = add nsw i32 %102, %rate.1147.us.us168.us
  %103 = load ptr, ptr %arrayidx35.us.us, align 8
  %arrayidx37.us.us.us.us.1 = getelementptr inbounds ptr, ptr %103, i64 %indvars.iv192
  %104 = load ptr, ptr %arrayidx37.us.us.us.us.1, align 8
  %arrayidx39.us.us.us.us.1 = getelementptr inbounds ptr, ptr %104, i64 %idxprom38
  %105 = load ptr, ptr %arrayidx39.us.us.us.us.1, align 8
  %arrayidx41.us.us.us.us.1 = getelementptr inbounds ptr, ptr %105, i64 %idxprom40
  %106 = load ptr, ptr %arrayidx41.us.us.us.us.1, align 8
  %arrayidx43.us.us.us.us.1 = getelementptr inbounds ptr, ptr %106, i64 %idxprom
  %107 = load ptr, ptr %arrayidx43.us.us.us.us.1, align 8
  %arrayidx45.us.us.us.us.1 = getelementptr inbounds i16, ptr %107, i64 1
  %108 = load i16, ptr %arrayidx45.us.us.us.us.1, align 2
  %109 = load ptr, ptr %arrayidx48.us.us, align 8
  %arrayidx50.us.us.us.us.1 = getelementptr inbounds ptr, ptr %109, i64 %indvars.iv192
  %110 = load ptr, ptr %arrayidx50.us.us.us.us.1, align 8
  %arrayidx52.us.us.us.us.1 = getelementptr inbounds ptr, ptr %110, i64 %idxprom38
  %111 = load ptr, ptr %arrayidx52.us.us.us.us.1, align 8
  %arrayidx54.us.us.us.us.1 = getelementptr inbounds ptr, ptr %111, i64 %idxprom40
  %112 = load ptr, ptr %arrayidx54.us.us.us.us.1, align 8
  %arrayidx56.us.us.us.us.1 = getelementptr inbounds ptr, ptr %112, i64 %idxprom
  %113 = load ptr, ptr %arrayidx56.us.us.us.us.1, align 8
  %arrayidx58.us.us.us.us.1 = getelementptr inbounds i16, ptr %113, i64 1
  %114 = load i16, ptr %arrayidx58.us.us.us.us.1, align 2
  %conv59.us.us.us.us.1 = sext i16 %114 to i32
  %conv46.us.us.us.us.1 = sext i16 %108 to i32
  %sub.us.us.us.us.1 = sub nsw i32 %conv46.us.us.us.us.1, %conv59.us.us.us.us.1
  %115 = load ptr, ptr %partArr, align 8
  %116 = load i32, ptr %arrayidx80, align 4
  %idxprom81.us.us.us.us.1 = sext i32 %116 to i64
  %arrayidx82.us.us.us.us.1 = getelementptr inbounds %struct.datapartition, ptr %115, i64 %idxprom81.us.us.us.us.1
  %117 = load ptr, ptr @img, align 8
  %subblock_x.us.us.us.us.1 = getelementptr inbounds %struct.ImageParameters, ptr %117, i64 0, i32 24
  store i32 %98, ptr %subblock_x.us.us.us.us.1, align 8
  %subblock_y.us.us.us.us.1 = getelementptr inbounds %struct.ImageParameters, ptr %117, i64 0, i32 25
  store i32 %82, ptr %subblock_y.us.us.us.us.1, align 4
  store i32 %sub.us.us.us.us.1, ptr %value1, align 4
  store i32 %25, ptr %value2, align 8
  store i32 5, ptr %se, align 8
  %118 = load ptr, ptr @writeMVD, align 8
  call void %118(ptr noundef nonnull %se, ptr noundef %arrayidx82.us.us.us.us.1) #17
  %119 = load i32, ptr %len, align 4
  %120 = load i32, ptr %arrayidx84, align 4
  %add85.us.us.us.us.1 = add nsw i32 %120, %119
  store i32 %add85.us.us.us.us.1, ptr %arrayidx84, align 4
  %121 = load i32, ptr %len, align 4
  %add87.us.us.us.us.1 = add nsw i32 %121, %add87.us.us.us.us
  %indvars.iv.next193 = add i64 %indvars.iv192, %24
  %cmp27.us.us171.us = icmp slt i64 %indvars.iv.next193, %20
  br i1 %cmp27.us.us171.us, label %for.cond30.preheader.us.us166.us, label %for.cond26.for.inc94_crit_edge.split.us.split.us172.us

for.cond26.for.inc94_crit_edge.split.us.split.us172.us: ; preds = %for.cond30.preheader.us.us166.us
  %indvars.iv.next196 = add i64 %indvars.iv195, %22
  %cmp24.us.us = icmp slt i64 %indvars.iv.next196, %23
  br i1 %cmp24.us.us, label %for.cond26.preheader.us.us, label %for.end96

for.cond26.preheader.us:                          ; preds = %for.cond26.preheader.us.preheader, %for.cond26.for.inc94_crit_edge.split.us163
  %indvars.iv184 = phi i64 [ %16, %for.cond26.preheader.us.preheader ], [ %indvars.iv.next185, %for.cond26.for.inc94_crit_edge.split.us163 ]
  %rate.0152.us = phi i32 [ 0, %for.cond26.preheader.us.preheader ], [ %add87.us.1, %for.cond26.for.inc94_crit_edge.split.us163 ]
  %arrayidx35.us = getelementptr inbounds ptr, ptr %all_mv.0, i64 %indvars.iv184
  %arrayidx48.us = getelementptr inbounds ptr, ptr %10, i64 %indvars.iv184
  %122 = trunc i64 %indvars.iv184 to i32
  br label %for.cond30.preheader.us159

for.cond30.preheader.us159:                       ; preds = %for.cond26.preheader.us, %for.cond30.preheader.us159
  %indvars.iv = phi i64 [ %13, %for.cond26.preheader.us ], [ %indvars.iv.next, %for.cond30.preheader.us159 ]
  %rate.1147.us161 = phi i32 [ %rate.0152.us, %for.cond26.preheader.us ], [ %add87.us.1, %for.cond30.preheader.us159 ]
  %123 = load ptr, ptr %arrayidx35.us, align 8
  %arrayidx37.us = getelementptr inbounds ptr, ptr %123, i64 %indvars.iv
  %124 = load ptr, ptr %arrayidx37.us, align 8
  %arrayidx39.us = getelementptr inbounds ptr, ptr %124, i64 %idxprom38
  %125 = load ptr, ptr %arrayidx39.us, align 8
  %arrayidx41.us = getelementptr inbounds ptr, ptr %125, i64 %idxprom40
  %126 = load ptr, ptr %arrayidx41.us, align 8
  %arrayidx43.us = getelementptr inbounds ptr, ptr %126, i64 %idxprom
  %127 = load ptr, ptr %arrayidx43.us, align 8
  %128 = load i16, ptr %127, align 2
  %conv46.us = sext i16 %128 to i32
  %129 = load ptr, ptr %arrayidx48.us, align 8
  %arrayidx50.us = getelementptr inbounds ptr, ptr %129, i64 %indvars.iv
  %130 = load ptr, ptr %arrayidx50.us, align 8
  %arrayidx52.us = getelementptr inbounds ptr, ptr %130, i64 %idxprom38
  %131 = load ptr, ptr %arrayidx52.us, align 8
  %arrayidx54.us = getelementptr inbounds ptr, ptr %131, i64 %idxprom40
  %132 = load ptr, ptr %arrayidx54.us, align 8
  %arrayidx56.us = getelementptr inbounds ptr, ptr %132, i64 %idxprom
  %133 = load ptr, ptr %arrayidx56.us, align 8
  %134 = load i16, ptr %133, align 2
  %conv59.us = sext i16 %134 to i32
  %sub.us = sub nsw i32 %conv46.us, %conv59.us
  %135 = load ptr, ptr %partArr, align 8
  %136 = load i32, ptr %arrayidx80, align 4
  %idxprom81.us = sext i32 %136 to i64
  %arrayidx82.us = getelementptr inbounds %struct.datapartition, ptr %135, i64 %idxprom81.us
  %137 = load ptr, ptr @img, align 8
  %subblock_x.us = getelementptr inbounds %struct.ImageParameters, ptr %137, i64 0, i32 24
  %138 = trunc i64 %indvars.iv to i32
  store i32 %138, ptr %subblock_x.us, align 8
  %subblock_y.us = getelementptr inbounds %struct.ImageParameters, ptr %137, i64 0, i32 25
  store i32 %122, ptr %subblock_y.us, align 4
  store i32 %sub.us, ptr %value1, align 4
  store i32 %list_idx, ptr %value2, align 8
  store i32 5, ptr %se, align 8
  %139 = load ptr, ptr @writeMVD, align 8
  call void %139(ptr noundef nonnull %se, ptr noundef %arrayidx82.us) #17
  %140 = load i32, ptr %len, align 4
  %141 = load i32, ptr %arrayidx84, align 4
  %add85.us = add nsw i32 %141, %140
  store i32 %add85.us, ptr %arrayidx84, align 4
  %142 = load i32, ptr %len, align 4
  %add87.us = add nsw i32 %142, %rate.1147.us161
  %143 = load ptr, ptr %arrayidx35.us, align 8
  %arrayidx37.us.1 = getelementptr inbounds ptr, ptr %143, i64 %indvars.iv
  %144 = load ptr, ptr %arrayidx37.us.1, align 8
  %arrayidx39.us.1 = getelementptr inbounds ptr, ptr %144, i64 %idxprom38
  %145 = load ptr, ptr %arrayidx39.us.1, align 8
  %arrayidx41.us.1 = getelementptr inbounds ptr, ptr %145, i64 %idxprom40
  %146 = load ptr, ptr %arrayidx41.us.1, align 8
  %arrayidx43.us.1 = getelementptr inbounds ptr, ptr %146, i64 %idxprom
  %147 = load ptr, ptr %arrayidx43.us.1, align 8
  %arrayidx45.us.1 = getelementptr inbounds i16, ptr %147, i64 1
  %148 = load i16, ptr %arrayidx45.us.1, align 2
  %conv46.us.1 = sext i16 %148 to i32
  %149 = load ptr, ptr %arrayidx48.us, align 8
  %arrayidx50.us.1 = getelementptr inbounds ptr, ptr %149, i64 %indvars.iv
  %150 = load ptr, ptr %arrayidx50.us.1, align 8
  %arrayidx52.us.1 = getelementptr inbounds ptr, ptr %150, i64 %idxprom38
  %151 = load ptr, ptr %arrayidx52.us.1, align 8
  %arrayidx54.us.1 = getelementptr inbounds ptr, ptr %151, i64 %idxprom40
  %152 = load ptr, ptr %arrayidx54.us.1, align 8
  %arrayidx56.us.1 = getelementptr inbounds ptr, ptr %152, i64 %idxprom
  %153 = load ptr, ptr %arrayidx56.us.1, align 8
  %arrayidx58.us.1 = getelementptr inbounds i16, ptr %153, i64 1
  %154 = load i16, ptr %arrayidx58.us.1, align 2
  %conv59.us.1 = sext i16 %154 to i32
  %sub.us.1 = sub nsw i32 %conv46.us.1, %conv59.us.1
  %155 = load ptr, ptr %partArr, align 8
  %156 = load i32, ptr %arrayidx80, align 4
  %idxprom81.us.1 = sext i32 %156 to i64
  %arrayidx82.us.1 = getelementptr inbounds %struct.datapartition, ptr %155, i64 %idxprom81.us.1
  %157 = load ptr, ptr @img, align 8
  %subblock_x.us.1 = getelementptr inbounds %struct.ImageParameters, ptr %157, i64 0, i32 24
  store i32 %138, ptr %subblock_x.us.1, align 8
  %subblock_y.us.1 = getelementptr inbounds %struct.ImageParameters, ptr %157, i64 0, i32 25
  store i32 %122, ptr %subblock_y.us.1, align 4
  store i32 %sub.us.1, ptr %value1, align 4
  store i32 %19, ptr %value2, align 8
  store i32 5, ptr %se, align 8
  %158 = load ptr, ptr @writeMVD, align 8
  call void %158(ptr noundef nonnull %se, ptr noundef %arrayidx82.us.1) #17
  %159 = load i32, ptr %len, align 4
  %160 = load i32, ptr %arrayidx84, align 4
  %add85.us.1 = add nsw i32 %160, %159
  store i32 %add85.us.1, ptr %arrayidx84, align 4
  %161 = load i32, ptr %len, align 4
  %add87.us.1 = add nsw i32 %161, %add87.us
  %indvars.iv.next = add i64 %indvars.iv, %14
  %cmp27.us158 = icmp slt i64 %indvars.iv.next, %15
  br i1 %cmp27.us158, label %for.cond30.preheader.us159, label %for.cond26.for.inc94_crit_edge.split.us163

for.cond26.for.inc94_crit_edge.split.us163:       ; preds = %for.cond30.preheader.us159
  %indvars.iv.next185 = add i64 %indvars.iv184, %17
  %cmp24.us = icmp slt i64 %indvars.iv.next185, %18
  br i1 %cmp24.us, label %for.cond26.preheader.us, label %for.end96

for.end96:                                        ; preds = %for.cond26.for.inc94_crit_edge.split.us163, %for.cond26.for.inc94_crit_edge.split.us.split.us172.us, %for.cond26.for.inc94_crit_edge.split.us.split.us.us.us.us, %for.cond26.preheader.lr.ph, %if.end
  %rate.0.lcssa = phi i32 [ 0, %if.end ], [ 0, %for.cond26.preheader.lr.ph ], [ %add87.us.us.us.us.us.us.us.1, %for.cond26.for.inc94_crit_edge.split.us.split.us.us.us.us ], [ %add87.us.us.us.us.1, %for.cond26.for.inc94_crit_edge.split.us.split.us172.us ], [ %add87.us.1, %for.cond26.for.inc94_crit_edge.split.us163 ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se) #17
  ret i32 %rate.0.lcssa
}

; Function Attrs: nounwind uwtable
define dso_local i32 @writeLumaCoeff4x4_CABAC(i32 noundef %b8, i32 noundef %b4, i32 noundef %intra4x4mode) local_unnamed_addr #0 {
entry:
  %se = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se) #17
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 60
  %3 = load ptr, ptr %currentSlice, align 8
  %4 = load ptr, ptr @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, ptr %4, i64 0, i32 76
  %5 = load i32, ptr %partition_mode, align 8
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom1
  %6 = load ptr, ptr %arrayidx2, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 53
  %7 = load ptr, ptr %cofAC, align 8
  %idxprom3 = sext i32 %b8 to i64
  %arrayidx4 = getelementptr inbounds ptr, ptr %7, i64 %idxprom3
  %8 = load ptr, ptr %arrayidx4, align 8
  %idxprom5 = sext i32 %b4 to i64
  %arrayidx6 = getelementptr inbounds ptr, ptr %8, i64 %idxprom5
  %9 = load ptr, ptr %arrayidx6, align 8
  %10 = load ptr, ptr %9, align 8
  %arrayidx13 = getelementptr inbounds ptr, ptr %9, i64 1
  %11 = load ptr, ptr %arrayidx13, align 8
  %and14 = and i32 %b4, 1
  %and = shl i32 %b8, 1
  %12 = and i32 %and, 2
  %cond19 = or i32 %and14, %12
  %subblock_x = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 24
  store i32 %cond19, ptr %subblock_x, align 8
  %cmp20 = icmp slt i32 %b8, 2
  %cmp22 = icmp sgt i32 %b4, 1
  %cond23 = zext i1 %cmp22 to i32
  %cmp25 = icmp slt i32 %b4, 2
  %cond26 = select i1 %cmp25, i32 2, i32 3
  %cond28 = select i1 %cmp20, i32 %cond23, i32 %cond26
  %subblock_y = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 25
  store i32 %cond28, ptr %subblock_y, align 4
  %value1 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  %value2 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  %context = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 6
  %tobool.not = icmp eq i32 %intra4x4mode, 0
  %cond37 = select i1 %tobool.not, i32 11, i32 7
  %cond40 = select i1 %tobool.not, i32 13, i32 9
  %partArr = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 6
  %len = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %arrayidx48 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 5, i64 5
  %13 = load i32, ptr %10, align 4
  store i32 %13, ptr %value1, align 4
  %14 = load i32, ptr %11, align 4
  store i32 %14, ptr %value2, align 8
  store i32 5, ptr %context, align 8
  store i32 %cond37, ptr %se, align 8
  %is_intra_block.peel = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 26
  store i32 %intra4x4mode, ptr %is_intra_block.peel, align 8
  %15 = load ptr, ptr %partArr, align 8
  %idxprom44.peel = zext i32 %cond37 to i64
  %arrayidx45.peel = getelementptr inbounds i32, ptr %6, i64 %idxprom44.peel
  %16 = load i32, ptr %arrayidx45.peel, align 4
  %idxprom46.peel = sext i32 %16 to i64
  %arrayidx47.peel = getelementptr inbounds %struct.datapartition, ptr %15, i64 %idxprom46.peel
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se, ptr noundef %arrayidx47.peel) #17
  %17 = load i32, ptr %len, align 4
  %18 = load i32, ptr %arrayidx48, align 4
  %add.peel = add nsw i32 %18, %17
  store i32 %add.peel, ptr %arrayidx48, align 4
  %19 = load i32, ptr %len, align 4
  %cmp30.peel.not = icmp eq i32 %13, 0
  br i1 %cmp30.peel.not, label %for.end, label %for.body.peel.next

for.body.peel.next:                               ; preds = %entry
  %idxprom44 = zext i32 %cond40 to i64
  %arrayidx45 = getelementptr inbounds i32, ptr %6, i64 %idxprom44
  br label %for.body

for.body:                                         ; preds = %for.body.peel.next, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.peel.next ], [ %indvars.iv.next, %for.body ]
  %rate.067 = phi i32 [ %19, %for.body.peel.next ], [ %add50, %for.body ]
  %arrayidx32 = getelementptr inbounds i32, ptr %10, i64 %indvars.iv
  %20 = load i32, ptr %arrayidx32, align 4
  store i32 %20, ptr %value1, align 4
  %arrayidx34 = getelementptr inbounds i32, ptr %11, i64 %indvars.iv
  %21 = load i32, ptr %arrayidx34, align 4
  store i32 %21, ptr %value2, align 8
  store i32 5, ptr %context, align 8
  store i32 %cond40, ptr %se, align 8
  %22 = load ptr, ptr @img, align 8
  %is_intra_block = getelementptr inbounds %struct.ImageParameters, ptr %22, i64 0, i32 26
  store i32 %intra4x4mode, ptr %is_intra_block, align 8
  %23 = load ptr, ptr %partArr, align 8
  %24 = load i32, ptr %arrayidx45, align 4
  %idxprom46 = sext i32 %24 to i64
  %arrayidx47 = getelementptr inbounds %struct.datapartition, ptr %23, i64 %idxprom46
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se, ptr noundef %arrayidx47) #17
  %25 = load i32, ptr %len, align 4
  %26 = load i32, ptr %arrayidx48, align 4
  %add = add nsw i32 %26, %25
  store i32 %add, ptr %arrayidx48, align 4
  %27 = load i32, ptr %len, align 4
  %add50 = add nsw i32 %27, %rate.067
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp29 = icmp ult i64 %indvars.iv, 16
  %cmp30 = icmp ne i32 %20, 0
  %28 = select i1 %cmp29, i1 %cmp30, i1 false
  br i1 %28, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %add50.lcssa = phi i32 [ %19, %entry ], [ %add50, %for.body ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se) #17
  ret i32 %add50.lcssa
}

declare void @writeRunLevel_CABAC(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i32 @writeLumaCoeff8x8_CABAC(i32 noundef %b8, i32 noundef %intra_mode) local_unnamed_addr #0 {
entry:
  %se = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se) #17
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 60
  %3 = load ptr, ptr %currentSlice, align 8
  %4 = load ptr, ptr @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, ptr %4, i64 0, i32 76
  %5 = load i32, ptr %partition_mode, align 8
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom1
  %6 = load ptr, ptr %arrayidx2, align 8
  %cofAC = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 53
  %7 = load ptr, ptr %cofAC, align 8
  %idxprom3 = sext i32 %b8 to i64
  %arrayidx4 = getelementptr inbounds ptr, ptr %7, i64 %idxprom3
  %8 = load ptr, ptr %arrayidx4, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %arrayidx11 = getelementptr inbounds ptr, ptr %9, i64 1
  %11 = load ptr, ptr %arrayidx11, align 8
  %and = shl i32 %b8, 1
  %cond = and i32 %and, 2
  %subblock_x = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 24
  store i32 %cond, ptr %subblock_x, align 8
  %cmp12 = icmp slt i32 %b8, 2
  %cond13 = select i1 %cmp12, i32 0, i32 2
  %subblock_y = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 25
  store i32 %cond13, ptr %subblock_y, align 4
  %value1 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  %value2 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  %context = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 6
  %tobool.not = icmp eq i32 %intra_mode, 0
  %cond21 = select i1 %tobool.not, i32 11, i32 7
  %cond23 = select i1 %tobool.not, i32 13, i32 9
  %partArr = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 6
  %len = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  %arrayidx36 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 5, i64 5
  %12 = load i32, ptr %10, align 4
  store i32 %12, ptr %value1, align 4
  %13 = load i32, ptr %11, align 4
  store i32 %13, ptr %value2, align 8
  store i32 2, ptr %context, align 8
  store i32 %cond21, ptr %se, align 8
  %is_intra_block.peel = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 26
  store i32 %intra_mode, ptr %is_intra_block.peel, align 8
  %14 = load ptr, ptr %partArr, align 8
  %type25.peel = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %15 = load i32, ptr %type25.peel, align 4
  %cmp26.not.peel = icmp eq i32 %15, 1
  %cond31.peel = select i1 %cmp26.not.peel, i32 16, i32 %cond21
  %idxprom32.peel = zext i32 %cond31.peel to i64
  %arrayidx33.peel = getelementptr inbounds i32, ptr %6, i64 %idxprom32.peel
  %16 = load i32, ptr %arrayidx33.peel, align 4
  %idxprom34.peel = sext i32 %16 to i64
  %arrayidx35.peel = getelementptr inbounds %struct.datapartition, ptr %14, i64 %idxprom34.peel
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se, ptr noundef %arrayidx35.peel) #17
  %17 = load i32, ptr %len, align 4
  %18 = load i32, ptr %arrayidx36, align 4
  %add.peel = add nsw i32 %18, %17
  store i32 %add.peel, ptr %arrayidx36, align 4
  %19 = load i32, ptr %len, align 4
  %cmp15.peel.not = icmp eq i32 %12, 0
  br i1 %cmp15.peel.not, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %entry ]
  %rate.050 = phi i32 [ %add38, %for.body ], [ %19, %entry ]
  %arrayidx17 = getelementptr inbounds i32, ptr %10, i64 %indvars.iv
  %20 = load i32, ptr %arrayidx17, align 4
  store i32 %20, ptr %value1, align 4
  %arrayidx19 = getelementptr inbounds i32, ptr %11, i64 %indvars.iv
  %21 = load i32, ptr %arrayidx19, align 4
  store i32 %21, ptr %value2, align 8
  store i32 2, ptr %context, align 8
  store i32 %cond23, ptr %se, align 8
  %22 = load ptr, ptr @img, align 8
  %is_intra_block = getelementptr inbounds %struct.ImageParameters, ptr %22, i64 0, i32 26
  store i32 %intra_mode, ptr %is_intra_block, align 8
  %23 = load ptr, ptr %partArr, align 8
  %type25 = getelementptr inbounds %struct.ImageParameters, ptr %22, i64 0, i32 5
  %24 = load i32, ptr %type25, align 4
  %cmp26.not = icmp eq i32 %24, 1
  %cond31 = select i1 %cmp26.not, i32 16, i32 %cond23
  %idxprom32 = zext i32 %cond31 to i64
  %arrayidx33 = getelementptr inbounds i32, ptr %6, i64 %idxprom32
  %25 = load i32, ptr %arrayidx33, align 4
  %idxprom34 = sext i32 %25 to i64
  %arrayidx35 = getelementptr inbounds %struct.datapartition, ptr %23, i64 %idxprom34
  call void @writeRunLevel_CABAC(ptr noundef nonnull %se, ptr noundef %arrayidx35) #17
  %26 = load i32, ptr %len, align 4
  %27 = load i32, ptr %arrayidx36, align 4
  %add = add nsw i32 %27, %26
  store i32 %add, ptr %arrayidx36, align 4
  %28 = load i32, ptr %len, align 4
  %add38 = add nsw i32 %28, %rate.050
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp14 = icmp ult i64 %indvars.iv, 64
  %cmp15 = icmp ne i32 %20, 0
  %29 = select i1 %cmp14, i1 %cmp15, i1 false
  br i1 %29, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %entry
  %add38.lcssa = phi i32 [ %19, %entry ], [ %add38, %for.body ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se) #17
  ret i32 %add38.lcssa
}

; Function Attrs: nounwind uwtable
define dso_local i32 @writeLumaCoeff8x8(i32 noundef %block8x8, i32 noundef %block_mode, i32 noundef %transform_size_flag) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq i32 %block_mode, 11
  %conv = zext i1 %cmp to i32
  %tobool.not = icmp eq i32 %transform_size_flag, 0
  %.pre = load ptr, ptr @input, align 8
  %symbol_mode6.phi.trans.insert = getelementptr inbounds %struct.InputParameters, ptr %.pre, i64 0, i32 74
  %.pre52 = load i32, ptr %symbol_mode6.phi.trans.insert, align 8
  %0 = icmp eq i32 %.pre52, 0
  br i1 %tobool.not, label %if.then5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  br i1 %0, label %for.cond.preheader, label %if.else25

if.then5:                                         ; preds = %entry
  br i1 %0, label %for.cond.preheader, label %for.body18.preheader

for.body18.preheader:                             ; preds = %if.then5
  %call19 = tail call i32 @writeLumaCoeff4x4_CABAC(i32 noundef %block8x8, i32 noundef 0, i32 noundef %conv)
  %call19.1 = tail call i32 @writeLumaCoeff4x4_CABAC(i32 noundef %block8x8, i32 noundef 1, i32 noundef %conv)
  %add20.1 = add nsw i32 %call19.1, %call19
  %call19.2 = tail call i32 @writeLumaCoeff4x4_CABAC(i32 noundef %block8x8, i32 noundef 2, i32 noundef %conv)
  %add20.2 = add nsw i32 %call19.2, %add20.1
  %call19.3 = tail call i32 @writeLumaCoeff4x4_CABAC(i32 noundef %block8x8, i32 noundef 3, i32 noundef %conv)
  %add20.3 = add nsw i32 %call19.3, %add20.2
  br label %if.end30

for.cond.preheader:                               ; preds = %lor.lhs.false, %if.then5
  %cmp13 = icmp eq i32 %block_mode, 13
  %conv14 = zext i1 %cmp13 to i32
  %cond = select i1 %tobool.not, i32 %conv, i32 %conv14
  %call = tail call i32 @writeCoeff4x4_CAVLC(i32 noundef 0, i32 noundef %block8x8, i32 noundef 0, i32 noundef %cond)
  %call.1 = tail call i32 @writeCoeff4x4_CAVLC(i32 noundef 0, i32 noundef %block8x8, i32 noundef 1, i32 noundef %cond)
  %add.1 = add nsw i32 %call.1, %call
  %call.2 = tail call i32 @writeCoeff4x4_CAVLC(i32 noundef 0, i32 noundef %block8x8, i32 noundef 2, i32 noundef %cond)
  %add.2 = add nsw i32 %call.2, %add.1
  %call.3 = tail call i32 @writeCoeff4x4_CAVLC(i32 noundef 0, i32 noundef %block8x8, i32 noundef 3, i32 noundef %cond)
  %add.3 = add nsw i32 %call.3, %add.2
  br label %if.end30

if.else25:                                        ; preds = %lor.lhs.false
  %cmp26 = icmp eq i32 %block_mode, 13
  %conv27 = zext i1 %cmp26 to i32
  %call28 = tail call i32 @writeLumaCoeff8x8_CABAC(i32 noundef %block8x8, i32 noundef %conv27)
  br label %if.end30

if.end30:                                         ; preds = %for.body18.preheader, %for.cond.preheader, %if.else25
  %rate.2 = phi i32 [ %call28, %if.else25 ], [ %add.3, %for.cond.preheader ], [ %add20.3, %for.body18.preheader ]
  ret i32 %rate.2
}

; Function Attrs: nounwind uwtable
define dso_local i32 @writeCoeff4x4_CAVLC(i32 noundef %block_type, i32 noundef %b8, i32 noundef %b4, i32 noundef %param) local_unnamed_addr #0 {
entry:
  %se = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %1 = load ptr, ptr %mb_data, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %2 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %2 to i64
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %se) #17
  %bitcounter = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 5
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 60
  %3 = load ptr, ptr %currentSlice, align 8
  %4 = load ptr, ptr @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, ptr %4, i64 0, i32 76
  %5 = load i32, ptr %partition_mode, align 8
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds [2 x ptr], ptr @assignSE2partition, i64 0, i64 %idxprom1
  %6 = load ptr, ptr %arrayidx2, align 8
  switch i32 %block_type, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb23
    i32 2, label %sw.bb31
    i32 6, label %sw.bb46
    i32 7, label %sw.bb72
  ]

sw.bb:                                            ; preds = %entry
  %cofAC = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 53
  %7 = load ptr, ptr %cofAC, align 8
  %idxprom3 = sext i32 %b8 to i64
  %arrayidx4 = getelementptr inbounds ptr, ptr %7, i64 %idxprom3
  %8 = load ptr, ptr %arrayidx4, align 8
  %idxprom5 = sext i32 %b4 to i64
  %arrayidx6 = getelementptr inbounds ptr, ptr %8, i64 %idxprom5
  %9 = load ptr, ptr %arrayidx6, align 8
  %10 = load ptr, ptr %9, align 8
  %arrayidx13 = getelementptr inbounds ptr, ptr %9, i64 1
  %11 = load ptr, ptr %arrayidx13, align 8
  %mb_type = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 8
  %12 = load i32, ptr %mb_type, align 8
  switch i32 %12, label %if.else [
    i32 9, label %for.body.us.preheader
    i32 10, label %for.body.us.preheader
    i32 13, label %for.body.us.preheader
    i32 14, label %for.body.us.preheader
  ]

if.else:                                          ; preds = %sw.bb
  br label %for.body.us.preheader

sw.bb23:                                          ; preds = %entry
  %cofDC = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 54
  %13 = load ptr, ptr %cofDC, align 8
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr %14, align 8
  %arrayidx28 = getelementptr inbounds ptr, ptr %14, i64 1
  %16 = load ptr, ptr %arrayidx28, align 8
  br label %for.body.us.preheader

sw.bb31:                                          ; preds = %entry
  %cofAC32 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 53
  %17 = load ptr, ptr %cofAC32, align 8
  %idxprom33 = sext i32 %b8 to i64
  %arrayidx34 = getelementptr inbounds ptr, ptr %17, i64 %idxprom33
  %18 = load ptr, ptr %arrayidx34, align 8
  %idxprom35 = sext i32 %b4 to i64
  %arrayidx36 = getelementptr inbounds ptr, ptr %18, i64 %idxprom35
  %19 = load ptr, ptr %arrayidx36, align 8
  %20 = load ptr, ptr %19, align 8
  %arrayidx43 = getelementptr inbounds ptr, ptr %19, i64 1
  %21 = load ptr, ptr %arrayidx43, align 8
  br label %for.body.us.preheader

sw.bb46:                                          ; preds = %entry
  %num_cdc_coeff = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 159
  %22 = load i32, ptr %num_cdc_coeff, align 4
  %cofDC47 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 54
  %23 = load ptr, ptr %cofDC47, align 8
  %add = add nsw i32 %param, 1
  %idxprom48 = sext i32 %add to i64
  %arrayidx49 = getelementptr inbounds ptr, ptr %23, i64 %idxprom48
  %24 = load ptr, ptr %arrayidx49, align 8
  %25 = load ptr, ptr %24, align 8
  %arrayidx55 = getelementptr inbounds ptr, ptr %24, i64 1
  %26 = load ptr, ptr %arrayidx55, align 8
  %mb_type58 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 8
  %27 = load i32, ptr %mb_type58, align 8
  %28 = add i32 %27, -9
  %switch.and = and i32 %28, -6
  %switch.selectcmp = icmp eq i32 %switch.and, 0
  %29 = select i1 %switch.selectcmp, i32 8, i32 12
  %partArr = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 6
  %30 = load ptr, ptr %partArr, align 8
  %idxprom101 = zext i32 %29 to i64
  %arrayidx102 = getelementptr inbounds i32, ptr %6, i64 %idxprom101
  %31 = load i32, ptr %arrayidx102, align 4
  %idxprom103 = sext i32 %31 to i64
  %arrayidx104 = getelementptr inbounds %struct.datapartition, ptr %30, i64 %idxprom103
  %32 = load ptr, ptr @img, align 8
  %num_cdc_coeff105 = getelementptr inbounds %struct.ImageParameters, ptr %32, i64 0, i32 159
  %33 = load i32, ptr %num_cdc_coeff105, align 4
  %cmp106516545 = icmp sgt i32 %33, -1
  br i1 %cmp106516545, label %for.body.preheader, label %if.end179.thread

sw.bb72:                                          ; preds = %entry
  %cofAC73 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 53
  %34 = load ptr, ptr %cofAC73, align 8
  %idxprom74 = sext i32 %b8 to i64
  %arrayidx75 = getelementptr inbounds ptr, ptr %34, i64 %idxprom74
  %35 = load ptr, ptr %arrayidx75, align 8
  %idxprom76 = sext i32 %b4 to i64
  %arrayidx77 = getelementptr inbounds ptr, ptr %35, i64 %idxprom76
  %36 = load ptr, ptr %arrayidx77, align 8
  %37 = load ptr, ptr %36, align 8
  %arrayidx84 = getelementptr inbounds ptr, ptr %36, i64 1
  %38 = load ptr, ptr %arrayidx84, align 8
  %mb_type87 = getelementptr inbounds %struct.macroblock, ptr %1, i64 %idxprom, i32 8
  %39 = load i32, ptr %mb_type87, align 8
  switch i32 %39, label %if.else99 [
    i32 9, label %for.body.us.preheader
    i32 10, label %for.body.us.preheader
    i32 13, label %for.body.us.preheader
    i32 14, label %for.body.us.preheader
  ]

if.else99:                                        ; preds = %sw.bb72
  br label %for.body.us.preheader

sw.default:                                       ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.8, i32 noundef 600) #17
  unreachable

for.body.us.preheader:                            ; preds = %if.else99, %sw.bb31, %sw.bb23, %if.else, %sw.bb, %sw.bb, %sw.bb, %sw.bb, %sw.bb72, %sw.bb72, %sw.bb72, %sw.bb72
  %dptype.0.ph = phi i32 [ 10, %sw.bb72 ], [ 10, %sw.bb72 ], [ 10, %sw.bb72 ], [ 10, %sw.bb72 ], [ 9, %sw.bb ], [ 9, %sw.bb ], [ 9, %sw.bb ], [ 9, %sw.bb ], [ 13, %if.else ], [ 7, %sw.bb23 ], [ 9, %sw.bb31 ], [ 14, %if.else99 ]
  %bitcounttype.0.ph = phi i64 [ 6, %sw.bb72 ], [ 6, %sw.bb72 ], [ 6, %sw.bb72 ], [ 6, %sw.bb72 ], [ 5, %sw.bb ], [ 5, %sw.bb ], [ 5, %sw.bb ], [ 5, %sw.bb ], [ 5, %if.else ], [ 5, %sw.bb23 ], [ 5, %sw.bb31 ], [ 6, %if.else99 ]
  %max_coeff_num.0.ph = phi i32 [ 15, %sw.bb72 ], [ 15, %sw.bb72 ], [ 15, %sw.bb72 ], [ 15, %sw.bb72 ], [ 16, %sw.bb ], [ 16, %sw.bb ], [ 16, %sw.bb ], [ 16, %sw.bb ], [ 16, %if.else ], [ 16, %sw.bb23 ], [ 15, %sw.bb31 ], [ 15, %if.else99 ]
  %tobool132.not.ph = phi i1 [ false, %sw.bb72 ], [ false, %sw.bb72 ], [ false, %sw.bb72 ], [ false, %sw.bb72 ], [ true, %sw.bb ], [ true, %sw.bb ], [ true, %sw.bb ], [ true, %sw.bb ], [ true, %if.else ], [ true, %sw.bb23 ], [ true, %sw.bb31 ], [ false, %if.else99 ]
  %pLevel.0.ph = phi ptr [ %37, %sw.bb72 ], [ %37, %sw.bb72 ], [ %37, %sw.bb72 ], [ %37, %sw.bb72 ], [ %10, %sw.bb ], [ %10, %sw.bb ], [ %10, %sw.bb ], [ %10, %sw.bb ], [ %10, %if.else ], [ %15, %sw.bb23 ], [ %20, %sw.bb31 ], [ %37, %if.else99 ]
  %pRun.0.ph = phi ptr [ %38, %sw.bb72 ], [ %38, %sw.bb72 ], [ %38, %sw.bb72 ], [ %38, %sw.bb72 ], [ %11, %sw.bb ], [ %11, %sw.bb ], [ %11, %sw.bb ], [ %11, %sw.bb ], [ %11, %if.else ], [ %16, %sw.bb23 ], [ %21, %sw.bb31 ], [ %38, %if.else99 ]
  %partArr599 = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 6
  %40 = load ptr, ptr %partArr599, align 8
  %idxprom101600 = zext i32 %dptype.0.ph to i64
  %arrayidx102601 = getelementptr inbounds i32, ptr %6, i64 %idxprom101600
  %41 = load i32, ptr %arrayidx102601, align 4
  %idxprom103602 = sext i32 %41 to i64
  %arrayidx104603 = getelementptr inbounds %struct.datapartition, ptr %40, i64 %idxprom103602
  %42 = load i32, ptr %pLevel.0.ph, align 4
  %tobool112.not.us650 = icmp eq i32 %42, 0
  br i1 %tobool112.not.us650, label %if.then131, label %if.then113.us

if.then113.us.1:                                  ; preds = %if.then113.us
  %arrayidx111.us.1 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 1
  %43 = load i32, ptr %arrayidx111.us.1, align 4
  %add116.us.1 = add nsw i32 %43, %88
  %cond.i.us.1 = tail call i32 @llvm.abs.i32(i32 %89, i1 true)
  %cmp119.us.1 = icmp eq i32 %cond.i.us.1, 1
  %spec.store.select.us.1 = select i1 %cmp119.us, i32 2, i32 1
  %numtrailingones.1.us.1 = select i1 %cmp119.us.1, i32 %spec.store.select.us.1, i32 0
  %arrayidx109.us.1 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 2
  %44 = load i32, ptr %arrayidx109.us.1, align 4
  %tobool112.not.us.1 = icmp eq i32 %44, 0
  br i1 %tobool112.not.us.1, label %if.then131, label %if.then113.us.2

if.then113.us.2:                                  ; preds = %if.then113.us.1
  %arrayidx111.us.2 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 2
  %45 = load i32, ptr %arrayidx111.us.2, align 4
  %add116.us.2 = add nsw i32 %45, %add116.us.1
  %cond.i.us.2 = tail call i32 @llvm.abs.i32(i32 %44, i1 true)
  %cmp119.us.2 = icmp eq i32 %cond.i.us.2, 1
  %spec.store.select.us.2 = add nuw nsw i32 %numtrailingones.1.us.1, 1
  %numtrailingones.1.us.2 = select i1 %cmp119.us.2, i32 %spec.store.select.us.2, i32 0
  %arrayidx109.us.2 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 3
  %46 = load i32, ptr %arrayidx109.us.2, align 4
  %tobool112.not.us.2 = icmp eq i32 %46, 0
  br i1 %tobool112.not.us.2, label %if.then131, label %if.then113.us.3

if.then113.us.3:                                  ; preds = %if.then113.us.2
  %arrayidx111.us.3 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 3
  %47 = load i32, ptr %arrayidx111.us.3, align 4
  %add116.us.3 = add nsw i32 %47, %add116.us.2
  %cond.i.us.3 = tail call i32 @llvm.abs.i32(i32 %46, i1 true)
  %cmp119.us.3 = icmp eq i32 %cond.i.us.3, 1
  %48 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.2, i32 2)
  %spec.store.select.us.3 = add nuw nsw i32 %48, 1
  %numtrailingones.1.us.3 = select i1 %cmp119.us.3, i32 %spec.store.select.us.3, i32 0
  %arrayidx109.us.3 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 4
  %49 = load i32, ptr %arrayidx109.us.3, align 4
  %tobool112.not.us.3 = icmp eq i32 %49, 0
  br i1 %tobool112.not.us.3, label %if.then131, label %if.then113.us.4

if.then113.us.4:                                  ; preds = %if.then113.us.3
  %arrayidx111.us.4 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 4
  %50 = load i32, ptr %arrayidx111.us.4, align 4
  %add116.us.4 = add nsw i32 %50, %add116.us.3
  %cond.i.us.4 = tail call i32 @llvm.abs.i32(i32 %49, i1 true)
  %cmp119.us.4 = icmp eq i32 %cond.i.us.4, 1
  %51 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.3, i32 2)
  %spec.store.select.us.4 = add nsw i32 %51, 1
  %numtrailingones.1.us.4 = select i1 %cmp119.us.4, i32 %spec.store.select.us.4, i32 0
  %arrayidx109.us.4 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 5
  %52 = load i32, ptr %arrayidx109.us.4, align 4
  %tobool112.not.us.4 = icmp eq i32 %52, 0
  br i1 %tobool112.not.us.4, label %if.then131, label %if.then113.us.5

if.then113.us.5:                                  ; preds = %if.then113.us.4
  %arrayidx111.us.5 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 5
  %53 = load i32, ptr %arrayidx111.us.5, align 4
  %add116.us.5 = add nsw i32 %53, %add116.us.4
  %cond.i.us.5 = tail call i32 @llvm.abs.i32(i32 %52, i1 true)
  %cmp119.us.5 = icmp eq i32 %cond.i.us.5, 1
  %54 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.4, i32 2)
  %spec.store.select.us.5 = add nsw i32 %54, 1
  %numtrailingones.1.us.5 = select i1 %cmp119.us.5, i32 %spec.store.select.us.5, i32 0
  %arrayidx109.us.5 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 6
  %55 = load i32, ptr %arrayidx109.us.5, align 4
  %tobool112.not.us.5 = icmp eq i32 %55, 0
  br i1 %tobool112.not.us.5, label %if.then131, label %if.then113.us.6

if.then113.us.6:                                  ; preds = %if.then113.us.5
  %arrayidx111.us.6 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 6
  %56 = load i32, ptr %arrayidx111.us.6, align 4
  %add116.us.6 = add nsw i32 %56, %add116.us.5
  %cond.i.us.6 = tail call i32 @llvm.abs.i32(i32 %55, i1 true)
  %cmp119.us.6 = icmp eq i32 %cond.i.us.6, 1
  %57 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.5, i32 2)
  %spec.store.select.us.6 = add nsw i32 %57, 1
  %numtrailingones.1.us.6 = select i1 %cmp119.us.6, i32 %spec.store.select.us.6, i32 0
  %arrayidx109.us.6 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 7
  %58 = load i32, ptr %arrayidx109.us.6, align 4
  %tobool112.not.us.6 = icmp eq i32 %58, 0
  br i1 %tobool112.not.us.6, label %if.then131, label %if.then113.us.7

if.then113.us.7:                                  ; preds = %if.then113.us.6
  %arrayidx111.us.7 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 7
  %59 = load i32, ptr %arrayidx111.us.7, align 4
  %add116.us.7 = add nsw i32 %59, %add116.us.6
  %cond.i.us.7 = tail call i32 @llvm.abs.i32(i32 %58, i1 true)
  %cmp119.us.7 = icmp eq i32 %cond.i.us.7, 1
  %60 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.6, i32 2)
  %spec.store.select.us.7 = add nsw i32 %60, 1
  %numtrailingones.1.us.7 = select i1 %cmp119.us.7, i32 %spec.store.select.us.7, i32 0
  %arrayidx109.us.7 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 8
  %61 = load i32, ptr %arrayidx109.us.7, align 4
  %tobool112.not.us.7 = icmp eq i32 %61, 0
  br i1 %tobool112.not.us.7, label %if.then131, label %if.then113.us.8

if.then113.us.8:                                  ; preds = %if.then113.us.7
  %arrayidx111.us.8 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 8
  %62 = load i32, ptr %arrayidx111.us.8, align 4
  %add116.us.8 = add nsw i32 %62, %add116.us.7
  %cond.i.us.8 = tail call i32 @llvm.abs.i32(i32 %61, i1 true)
  %cmp119.us.8 = icmp eq i32 %cond.i.us.8, 1
  %63 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.7, i32 2)
  %spec.store.select.us.8 = add nsw i32 %63, 1
  %numtrailingones.1.us.8 = select i1 %cmp119.us.8, i32 %spec.store.select.us.8, i32 0
  %arrayidx109.us.8 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 9
  %64 = load i32, ptr %arrayidx109.us.8, align 4
  %tobool112.not.us.8 = icmp eq i32 %64, 0
  br i1 %tobool112.not.us.8, label %if.then131, label %if.then113.us.9

if.then113.us.9:                                  ; preds = %if.then113.us.8
  %arrayidx111.us.9 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 9
  %65 = load i32, ptr %arrayidx111.us.9, align 4
  %add116.us.9 = add nsw i32 %65, %add116.us.8
  %cond.i.us.9 = tail call i32 @llvm.abs.i32(i32 %64, i1 true)
  %cmp119.us.9 = icmp eq i32 %cond.i.us.9, 1
  %66 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.8, i32 2)
  %spec.store.select.us.9 = add nsw i32 %66, 1
  %numtrailingones.1.us.9 = select i1 %cmp119.us.9, i32 %spec.store.select.us.9, i32 0
  %arrayidx109.us.9 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 10
  %67 = load i32, ptr %arrayidx109.us.9, align 4
  %tobool112.not.us.9 = icmp eq i32 %67, 0
  br i1 %tobool112.not.us.9, label %if.then131, label %if.then113.us.10

if.then113.us.10:                                 ; preds = %if.then113.us.9
  %arrayidx111.us.10 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 10
  %68 = load i32, ptr %arrayidx111.us.10, align 4
  %add116.us.10 = add nsw i32 %68, %add116.us.9
  %cond.i.us.10 = tail call i32 @llvm.abs.i32(i32 %67, i1 true)
  %cmp119.us.10 = icmp eq i32 %cond.i.us.10, 1
  %69 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.9, i32 2)
  %spec.store.select.us.10 = add nsw i32 %69, 1
  %numtrailingones.1.us.10 = select i1 %cmp119.us.10, i32 %spec.store.select.us.10, i32 0
  %arrayidx109.us.10 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 11
  %70 = load i32, ptr %arrayidx109.us.10, align 4
  %tobool112.not.us.10 = icmp eq i32 %70, 0
  br i1 %tobool112.not.us.10, label %if.then131, label %if.then113.us.11

if.then113.us.11:                                 ; preds = %if.then113.us.10
  %arrayidx111.us.11 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 11
  %71 = load i32, ptr %arrayidx111.us.11, align 4
  %add116.us.11 = add nsw i32 %71, %add116.us.10
  %cond.i.us.11 = tail call i32 @llvm.abs.i32(i32 %70, i1 true)
  %cmp119.us.11 = icmp eq i32 %cond.i.us.11, 1
  %72 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.10, i32 2)
  %spec.store.select.us.11 = add nsw i32 %72, 1
  %numtrailingones.1.us.11 = select i1 %cmp119.us.11, i32 %spec.store.select.us.11, i32 0
  %arrayidx109.us.11 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 12
  %73 = load i32, ptr %arrayidx109.us.11, align 4
  %tobool112.not.us.11 = icmp eq i32 %73, 0
  br i1 %tobool112.not.us.11, label %if.then131, label %if.then113.us.12

if.then113.us.12:                                 ; preds = %if.then113.us.11
  %arrayidx111.us.12 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 12
  %74 = load i32, ptr %arrayidx111.us.12, align 4
  %add116.us.12 = add nsw i32 %74, %add116.us.11
  %cond.i.us.12 = tail call i32 @llvm.abs.i32(i32 %73, i1 true)
  %cmp119.us.12 = icmp eq i32 %cond.i.us.12, 1
  %75 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.11, i32 2)
  %spec.store.select.us.12 = add nsw i32 %75, 1
  %numtrailingones.1.us.12 = select i1 %cmp119.us.12, i32 %spec.store.select.us.12, i32 0
  %arrayidx109.us.12 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 13
  %76 = load i32, ptr %arrayidx109.us.12, align 4
  %tobool112.not.us.12 = icmp eq i32 %76, 0
  br i1 %tobool112.not.us.12, label %if.then131, label %if.then113.us.13

if.then113.us.13:                                 ; preds = %if.then113.us.12
  %arrayidx111.us.13 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 13
  %77 = load i32, ptr %arrayidx111.us.13, align 4
  %add116.us.13 = add nsw i32 %77, %add116.us.12
  %cond.i.us.13 = tail call i32 @llvm.abs.i32(i32 %76, i1 true)
  %cmp119.us.13 = icmp eq i32 %cond.i.us.13, 1
  %78 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.12, i32 2)
  %spec.store.select.us.13 = add nsw i32 %78, 1
  %numtrailingones.1.us.13 = select i1 %cmp119.us.13, i32 %spec.store.select.us.13, i32 0
  %arrayidx109.us.13 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 14
  %79 = load i32, ptr %arrayidx109.us.13, align 4
  %tobool112.not.us.13 = icmp eq i32 %79, 0
  br i1 %tobool112.not.us.13, label %if.then131, label %if.then113.us.14

if.then113.us.14:                                 ; preds = %if.then113.us.13
  %arrayidx111.us.14 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 14
  %80 = load i32, ptr %arrayidx111.us.14, align 4
  %add116.us.14 = add nsw i32 %80, %add116.us.13
  %cond.i.us.14 = tail call i32 @llvm.abs.i32(i32 %79, i1 true)
  %cmp119.us.14 = icmp eq i32 %cond.i.us.14, 1
  %81 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.13, i32 2)
  %spec.store.select.us.14 = add nsw i32 %81, 1
  %numtrailingones.1.us.14 = select i1 %cmp119.us.14, i32 %spec.store.select.us.14, i32 0
  %arrayidx109.us.14 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 15
  %82 = load i32, ptr %arrayidx109.us.14, align 4
  %tobool112.not.us.14 = icmp eq i32 %82, 0
  br i1 %tobool112.not.us.14, label %if.then131, label %if.then113.us.15

if.then113.us.15:                                 ; preds = %if.then113.us.14
  %arrayidx111.us.15 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 15
  %83 = load i32, ptr %arrayidx111.us.15, align 4
  %add116.us.15 = add nsw i32 %83, %add116.us.14
  %cond.i.us.15 = tail call i32 @llvm.abs.i32(i32 %82, i1 true)
  %cmp119.us.15 = icmp eq i32 %cond.i.us.15, 1
  %84 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.14, i32 2)
  %spec.store.select.us.15 = add nsw i32 %84, 1
  %numtrailingones.1.us.15 = select i1 %cmp119.us.15, i32 %spec.store.select.us.15, i32 0
  %arrayidx109.us.15 = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 16
  %85 = load i32, ptr %arrayidx109.us.15, align 4
  %tobool112.not.us.15 = icmp eq i32 %85, 0
  br i1 %tobool112.not.us.15, label %if.then131, label %if.then113.us.16

if.then113.us.16:                                 ; preds = %if.then113.us.15
  %arrayidx111.us.16 = getelementptr inbounds i32, ptr %pRun.0.ph, i64 16
  %86 = load i32, ptr %arrayidx111.us.16, align 4
  %add116.us.16 = add nsw i32 %86, %add116.us.15
  %cond.i.us.16 = tail call i32 @llvm.abs.i32(i32 %85, i1 true)
  %cmp119.us.16 = icmp eq i32 %cond.i.us.16, 1
  %87 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.1.us.15, i32 2)
  %spec.store.select.us.16 = add nsw i32 %87, 1
  %numtrailingones.1.us.16 = select i1 %cmp119.us.16, i32 %spec.store.select.us.16, i32 0
  br label %if.then131

if.then113.us:                                    ; preds = %for.body.us.preheader
  %88 = load i32, ptr %pRun.0.ph, align 4
  %cond.i.us = tail call i32 @llvm.abs.i32(i32 %42, i1 true)
  %cmp119.us = icmp eq i32 %cond.i.us, 1
  %numtrailingones.1.us = zext i1 %cmp119.us to i32
  %arrayidx109.us = getelementptr inbounds i32, ptr %pLevel.0.ph, i64 1
  %89 = load i32, ptr %arrayidx109.us, align 4
  %tobool112.not.us = icmp eq i32 %89, 0
  br i1 %tobool112.not.us, label %if.then131, label %if.then113.us.1

for.body.preheader:                               ; preds = %sw.bb46
  %90 = zext i32 %33 to i64
  %91 = load i32, ptr %25, align 4
  %tobool112.not638 = icmp eq i32 %91, 0
  br i1 %tobool112.not638, label %if.end179.thread, label %if.then113

if.end179.thread.loopexit:                        ; preds = %for.body, %if.then113
  %92 = trunc i64 %indvars.iv639 to i32
  br label %if.end179.thread

if.end179.thread:                                 ; preds = %if.end179.thread.loopexit, %for.body.preheader, %sw.bb46
  %numcoeff.0.lcssa = phi i32 [ 0, %sw.bb46 ], [ 0, %for.body.preheader ], [ %inc127, %if.end179.thread.loopexit ]
  %lastcoeff.0.lcssa = phi i32 [ 0, %sw.bb46 ], [ 0, %for.body.preheader ], [ %92, %if.end179.thread.loopexit ]
  %numtrailingones.0.lcssa = phi i32 [ 0, %sw.bb46 ], [ 0, %for.body.preheader ], [ %numtrailingones.1, %if.end179.thread.loopexit ]
  %totzeros.0.lcssa = phi i32 [ 0, %sw.bb46 ], [ 0, %for.body.preheader ], [ %add116, %if.end179.thread.loopexit ]
  store i32 %29, ptr %se, align 8
  %value1519 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  store i32 %numcoeff.0.lcssa, ptr %value1519, align 4
  %value2520 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  store i32 %numtrailingones.0.lcssa, ptr %value2520, align 8
  %len521 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  store i32 0, ptr %len521, align 4
  %call185 = call i32 @writeSyntaxElement_NumCoeffTrailingOnesChromaDC(ptr noundef nonnull %se, ptr noundef %arrayidx104) #17
  br label %if.end186

for.body:                                         ; preds = %if.then113
  %indvars.iv.next = add nuw nsw i64 %indvars.iv639, 1
  %arrayidx109 = getelementptr inbounds i32, ptr %25, i64 %indvars.iv.next
  %93 = load i32, ptr %arrayidx109, align 4
  %tobool112.not = icmp eq i32 %93, 0
  br i1 %tobool112.not, label %if.end179.thread.loopexit, label %if.then113

if.then113:                                       ; preds = %for.body.preheader, %for.body
  %94 = phi i32 [ %93, %for.body ], [ %91, %for.body.preheader ]
  %numcoeff.0547642 = phi i32 [ %inc127, %for.body ], [ 0, %for.body.preheader ]
  %numtrailingones.0549641 = phi i32 [ %numtrailingones.1, %for.body ], [ 0, %for.body.preheader ]
  %totzeros.0551640 = phi i32 [ %add116, %for.body ], [ 0, %for.body.preheader ]
  %indvars.iv639 = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.body.preheader ]
  %arrayidx111 = getelementptr inbounds i32, ptr %26, i64 %indvars.iv639
  %95 = load i32, ptr %arrayidx111, align 4
  %add116 = add nsw i32 %95, %totzeros.0551640
  %cond.i = tail call i32 @llvm.abs.i32(i32 %94, i1 true)
  %cmp119 = icmp eq i32 %cond.i, 1
  %96 = tail call i32 @llvm.smin.i32(i32 %numtrailingones.0549641, i32 2)
  %spec.store.select = add nsw i32 %96, 1
  %numtrailingones.1 = select i1 %cmp119, i32 %spec.store.select, i32 0
  %inc127 = add nuw nsw i32 %numcoeff.0547642, 1
  %cmp106516 = icmp ult i64 %indvars.iv639, %90
  br i1 %cmp106516, label %for.body, label %if.end179.thread.loopexit

if.then131:                                       ; preds = %if.then113.us, %if.then113.us.1, %if.then113.us.2, %if.then113.us.3, %if.then113.us.4, %if.then113.us.5, %if.then113.us.6, %if.then113.us.7, %if.then113.us.8, %if.then113.us.9, %if.then113.us.10, %if.then113.us.11, %if.then113.us.12, %if.then113.us.13, %if.then113.us.14, %if.then113.us.15, %if.then113.us.16, %for.body.us.preheader
  %totzeros.2.us630 = phi i32 [ 0, %for.body.us.preheader ], [ %88, %if.then113.us ], [ %add116.us.1, %if.then113.us.1 ], [ %add116.us.2, %if.then113.us.2 ], [ %add116.us.3, %if.then113.us.3 ], [ %add116.us.4, %if.then113.us.4 ], [ %add116.us.5, %if.then113.us.5 ], [ %add116.us.6, %if.then113.us.6 ], [ %add116.us.7, %if.then113.us.7 ], [ %add116.us.8, %if.then113.us.8 ], [ %add116.us.9, %if.then113.us.9 ], [ %add116.us.10, %if.then113.us.10 ], [ %add116.us.11, %if.then113.us.11 ], [ %add116.us.12, %if.then113.us.12 ], [ %add116.us.13, %if.then113.us.13 ], [ %add116.us.14, %if.then113.us.14 ], [ %add116.us.15, %if.then113.us.15 ], [ %add116.us.16, %if.then113.us.16 ]
  %numtrailingones.2.us629 = phi i32 [ 0, %for.body.us.preheader ], [ %numtrailingones.1.us, %if.then113.us ], [ %numtrailingones.1.us.1, %if.then113.us.1 ], [ %numtrailingones.1.us.2, %if.then113.us.2 ], [ %numtrailingones.1.us.3, %if.then113.us.3 ], [ %numtrailingones.1.us.4, %if.then113.us.4 ], [ %numtrailingones.1.us.5, %if.then113.us.5 ], [ %numtrailingones.1.us.6, %if.then113.us.6 ], [ %numtrailingones.1.us.7, %if.then113.us.7 ], [ %numtrailingones.1.us.8, %if.then113.us.8 ], [ %numtrailingones.1.us.9, %if.then113.us.9 ], [ %numtrailingones.1.us.10, %if.then113.us.10 ], [ %numtrailingones.1.us.11, %if.then113.us.11 ], [ %numtrailingones.1.us.12, %if.then113.us.12 ], [ %numtrailingones.1.us.13, %if.then113.us.13 ], [ %numtrailingones.1.us.14, %if.then113.us.14 ], [ %numtrailingones.1.us.15, %if.then113.us.15 ], [ %numtrailingones.1.us.16, %if.then113.us.16 ]
  %lastcoeff.1.us628 = phi i32 [ 0, %for.body.us.preheader ], [ 0, %if.then113.us ], [ 1, %if.then113.us.1 ], [ 2, %if.then113.us.2 ], [ 3, %if.then113.us.3 ], [ 4, %if.then113.us.4 ], [ 5, %if.then113.us.5 ], [ 6, %if.then113.us.6 ], [ 7, %if.then113.us.7 ], [ 8, %if.then113.us.8 ], [ 9, %if.then113.us.9 ], [ 10, %if.then113.us.10 ], [ 11, %if.then113.us.11 ], [ 12, %if.then113.us.12 ], [ 13, %if.then113.us.13 ], [ 14, %if.then113.us.14 ], [ 15, %if.then113.us.15 ], [ 16, %if.then113.us.16 ]
  %numcoeff.1.us627 = phi i32 [ 0, %for.body.us.preheader ], [ 1, %if.then113.us ], [ 2, %if.then113.us.1 ], [ 3, %if.then113.us.2 ], [ 4, %if.then113.us.3 ], [ 5, %if.then113.us.4 ], [ 6, %if.then113.us.5 ], [ 7, %if.then113.us.6 ], [ 8, %if.then113.us.7 ], [ 9, %if.then113.us.8 ], [ 10, %if.then113.us.9 ], [ 11, %if.then113.us.10 ], [ 12, %if.then113.us.11 ], [ 13, %if.then113.us.12 ], [ 14, %if.then113.us.13 ], [ 15, %if.then113.us.14 ], [ 16, %if.then113.us.15 ], [ 17, %if.then113.us.16 ]
  br i1 %tobool132.not.ph, label %if.then133, label %if.else155

if.then133:                                       ; preds = %if.then131
  %and136 = and i32 %b4, 1
  %and = shl i32 %b8, 1
  %97 = and i32 %and, 2
  %cond144 = or i32 %and136, %97
  %cmp145 = icmp slt i32 %b8, 2
  %cmp147 = icmp sgt i32 %b4, 1
  %cond148 = zext i1 %cmp147 to i32
  %cmp150 = icmp slt i32 %b4, 2
  %cond151 = select i1 %cmp150, i32 2, i32 3
  %cond153 = select i1 %cmp145, i32 %cond148, i32 %cond151
  %call154 = tail call i32 @predict_nnz(i32 noundef %cond144, i32 noundef %cond153)
  br label %if.end158

if.else155:                                       ; preds = %if.then131
  %shr = ashr i32 %param, 4
  %and156 = and i32 %param, 15
  %call157 = tail call i32 @predict_nnz_chroma(i32 noundef %shr, i32 noundef %and156)
  br label %if.end158

if.end158:                                        ; preds = %if.else155, %if.then133
  %nnz.0 = phi i32 [ %call157, %if.else155 ], [ %call154, %if.then133 ]
  %subblock_x.0 = phi i32 [ %shr, %if.else155 ], [ %cond144, %if.then133 ]
  %subblock_y.0 = phi i32 [ %and156, %if.else155 ], [ %cond153, %if.then133 ]
  %98 = load ptr, ptr @img, align 8
  %nz_coeff = getelementptr inbounds %struct.ImageParameters, ptr %98, i64 0, i32 34
  %99 = load ptr, ptr %nz_coeff, align 8
  %current_mb_nr159 = getelementptr inbounds %struct.ImageParameters, ptr %98, i64 0, i32 3
  %100 = load i32, ptr %current_mb_nr159, align 4
  %idxprom160 = sext i32 %100 to i64
  %arrayidx161 = getelementptr inbounds ptr, ptr %99, i64 %idxprom160
  %101 = load ptr, ptr %arrayidx161, align 8
  %idxprom162 = sext i32 %subblock_x.0 to i64
  %arrayidx163 = getelementptr inbounds ptr, ptr %101, i64 %idxprom162
  %102 = load ptr, ptr %arrayidx163, align 8
  %idxprom164 = zext i32 %subblock_y.0 to i64
  %arrayidx165 = getelementptr inbounds i32, ptr %102, i64 %idxprom164
  store i32 %numcoeff.1.us627, ptr %arrayidx165, align 4
  %cmp166 = icmp slt i32 %nnz.0, 2
  br i1 %cmp166, label %if.end179, label %if.else168

if.else168:                                       ; preds = %if.end158
  %cmp169 = icmp ult i32 %nnz.0, 4
  br i1 %cmp169, label %if.end179, label %if.else171

if.else171:                                       ; preds = %if.else168
  %cmp172 = icmp ult i32 %nnz.0, 8
  %. = select i1 %cmp172, i32 2, i32 3
  br label %if.end179

if.end179:                                        ; preds = %if.else171, %if.else168, %if.end158
  %numcoeff_vlc.0 = phi i32 [ 0, %if.end158 ], [ 1, %if.else168 ], [ %., %if.else171 ]
  store i32 %dptype.0.ph, ptr %se, align 8
  %value1 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 1
  store i32 %numcoeff.1.us627, ptr %value1, align 4
  %value2 = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 2
  store i32 %numtrailingones.2.us629, ptr %value2, align 8
  %len = getelementptr inbounds %struct.syntaxelement, ptr %se, i64 0, i32 3
  store i32 %numcoeff_vlc.0, ptr %len, align 4
  %call183 = call i32 @writeSyntaxElement_NumCoeffTrailingOnes(ptr noundef nonnull %se, ptr noundef %arrayidx104603) #17
  br label %if.end186

if.end186:                                        ; preds = %if.end179.thread, %if.end179
  %arrayidx104618 = phi ptr [ %arrayidx104, %if.end179.thread ], [ %arrayidx104603, %if.end179 ]
  %pRun.0616 = phi ptr [ %26, %if.end179.thread ], [ %pRun.0.ph, %if.end179 ]
  %pLevel.0614 = phi ptr [ %25, %if.end179.thread ], [ %pLevel.0.ph, %if.end179 ]
  %tobool.not611 = phi i1 [ false, %if.end179.thread ], [ true, %if.end179 ]
  %max_coeff_num.0609 = phi i32 [ %22, %if.end179.thread ], [ %max_coeff_num.0.ph, %if.end179 ]
  %bitcounttype.0607 = phi i64 [ 6, %if.end179.thread ], [ %bitcounttype.0.ph, %if.end179 ]
  %dptype.0605 = phi i32 [ %29, %if.end179.thread ], [ %dptype.0.ph, %if.end179 ]
  %numcoeff.0540 = phi i32 [ %numcoeff.0.lcssa, %if.end179.thread ], [ %numcoeff.1.us627, %if.end179 ]
  %lastcoeff.0537 = phi i32 [ %lastcoeff.0.lcssa, %if.end179.thread ], [ %lastcoeff.1.us628, %if.end179 ]
  %numtrailingones.0534 = phi i32 [ %numtrailingones.0.lcssa, %if.end179.thread ], [ %numtrailingones.2.us629, %if.end179 ]
  %totzeros.0531 = phi i32 [ %totzeros.0.lcssa, %if.end179.thread ], [ %totzeros.2.us630, %if.end179 ]
  %len526 = phi ptr [ %len521, %if.end179.thread ], [ %len, %if.end179 ]
  %value2524 = phi ptr [ %value2520, %if.end179.thread ], [ %value2, %if.end179 ]
  %value1522 = phi ptr [ %value1519, %if.end179.thread ], [ %value1, %if.end179 ]
  %numcoeff.0540.fr = freeze i32 %numcoeff.0540
  %103 = load i32, ptr %len526, align 4
  %arrayidx189 = getelementptr inbounds i32, ptr %bitcounter, i64 %bitcounttype.0607
  %104 = load i32, ptr %arrayidx189, align 4
  %add190 = add nsw i32 %104, %103
  store i32 %add190, ptr %arrayidx189, align 4
  %105 = load i32, ptr %len526, align 4
  %tobool193.not = icmp eq i32 %numcoeff.0540.fr, 0
  br i1 %tobool193.not, label %cleanup, label %for.cond198.preheader

for.cond198.preheader:                            ; preds = %if.end186
  %sub = sub i32 %lastcoeff.0537, %numtrailingones.0534
  %cmp199561 = icmp sgt i32 %numtrailingones.0534, 0
  br i1 %cmp199561, label %for.body200.preheader, label %for.end212

for.body200.preheader:                            ; preds = %for.cond198.preheader
  %106 = sext i32 %lastcoeff.0537 to i64
  %107 = sext i32 %sub to i64
  br label %for.body200

for.body200:                                      ; preds = %for.body200.preheader, %if.end207
  %indvars.iv583 = phi i64 [ %106, %for.body200.preheader ], [ %indvars.iv.next584, %if.end207 ]
  %code.0563 = phi i32 [ 0, %for.body200.preheader ], [ %spec.select509, %if.end207 ]
  %arrayidx202 = getelementptr inbounds i32, ptr %pLevel.0614, i64 %indvars.iv583
  %108 = load i32, ptr %arrayidx202, align 4
  %cond.i512 = call i32 @llvm.abs.i32(i32 %108, i1 true)
  %cmp204 = icmp ugt i32 %cond.i512, 1
  br i1 %cmp204, label %if.then205, label %if.end207

if.then205:                                       ; preds = %for.body200
  %puts = call i32 @puts(ptr nonnull dereferenceable(1) @str)
  call void @exit(i32 noundef -1) #18
  unreachable

if.end207:                                        ; preds = %for.body200
  %spec.select509 = call i32 @llvm.fshl.i32(i32 %code.0563, i32 %108, i32 1)
  %indvars.iv.next584 = add nsw i64 %indvars.iv583, -1
  %cmp199 = icmp sgt i64 %indvars.iv.next584, %107
  br i1 %cmp199, label %for.body200, label %for.end212

for.end212:                                       ; preds = %if.end207, %for.cond198.preheader
  %code.0.lcssa = phi i32 [ 0, %for.cond198.preheader ], [ %spec.select509, %if.end207 ]
  %tobool213.not = icmp eq i32 %numtrailingones.0534, 0
  br i1 %tobool213.not, label %if.end225, label %if.then214

if.then214:                                       ; preds = %for.end212
  store i32 %dptype.0605, ptr %se, align 8
  store i32 %numtrailingones.0534, ptr %value2524, align 8
  store i32 %code.0.lcssa, ptr %value1522, align 4
  %call218 = call i32 @writeSyntaxElement_VLC(ptr noundef nonnull %se, ptr noundef %arrayidx104618) #17
  %109 = load i32, ptr %len526, align 4
  %110 = load i32, ptr %arrayidx189, align 4
  %add222 = add nsw i32 %110, %109
  store i32 %add222, ptr %arrayidx189, align 4
  %111 = load i32, ptr %len526, align 4
  %add224 = add nsw i32 %111, %105
  br label %if.end225

if.end225:                                        ; preds = %if.then214, %for.end212
  %no_bits.0 = phi i32 [ %add224, %if.then214 ], [ %105, %for.end212 ]
  %cmp231 = icmp sgt i32 %numcoeff.0540.fr, 10
  %cmp233 = icmp slt i32 %numtrailingones.0534, 3
  %112 = select i1 %cmp231, i1 %cmp233, i1 false
  %cond235 = zext i1 %112 to i32
  %cmp238566 = icmp sgt i32 %sub, -1
  br i1 %cmp238566, label %for.body239.preheader, label %for.end284

for.body239.preheader:                            ; preds = %if.end225
  %cmp226 = icmp sgt i32 %numcoeff.0540.fr, 3
  %cmp228 = icmp eq i32 %numtrailingones.0534, 3
  %.not.not = select i1 %cmp226, i1 %cmp228, i1 false
  %113 = zext i32 %sub to i64
  %arrayidx241.peel = getelementptr inbounds i32, ptr %pLevel.0614, i64 %113
  %114 = load i32, ptr %arrayidx241.peel, align 4
  store i32 %114, ptr %value1522, align 4
  store i32 %dptype.0605, ptr %se, align 8
  br i1 %.not.not, label %if.end255.peel, label %if.then245.peel

if.then245.peel:                                  ; preds = %for.body239.preheader
  %cmp247.inv.peel = icmp slt i32 %114, 1
  %storemerge.v.peel = select i1 %cmp247.inv.peel, i32 1, i32 -1
  %storemerge.peel = add nsw i32 %storemerge.v.peel, %114
  store i32 %storemerge.peel, ptr %value1522, align 4
  br label %if.end255.peel

if.end255.peel:                                   ; preds = %if.then245.peel, %for.body239.preheader
  %115 = load ptr, ptr @active_sps, align 8
  %profile_idc260.peel = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %115, i64 0, i32 1
  %116 = load i32, ptr %profile_idc260.peel, align 4
  br i1 %112, label %if.else259.peel, label %if.then257.peel

if.else259.peel:                                  ; preds = %if.end255.peel
  %call261.peel = call i32 @writeSyntaxElement_Level_VLCN(ptr noundef nonnull %se, i32 noundef %cond235, ptr noundef %arrayidx104618, i32 noundef %116) #17
  br label %if.end262.peel

if.then257.peel:                                  ; preds = %if.end255.peel
  %call258.peel = call i32 @writeSyntaxElement_Level_VLC1(ptr noundef nonnull %se, ptr noundef %arrayidx104618, i32 noundef %116) #17
  br label %if.end262.peel

if.end262.peel:                                   ; preds = %if.then257.peel, %if.else259.peel
  %idxprom264.peel = zext i1 %112 to i64
  %arrayidx265.peel = getelementptr inbounds [7 x i32], ptr @writeCoeff4x4_CAVLC.incVlc, i64 0, i64 %idxprom264.peel
  %117 = load i32, ptr %arrayidx265.peel, align 4
  %118 = load i32, ptr %len526, align 4
  %119 = load i32, ptr %arrayidx189, align 4
  %add279.peel = add nsw i32 %119, %118
  store i32 %add279.peel, ptr %arrayidx189, align 4
  %120 = load i32, ptr %len526, align 4
  %add281.peel = add nsw i32 %120, %no_bits.0
  %cmp238.peel.not = icmp eq i32 %lastcoeff.0537, %numtrailingones.0534
  br i1 %cmp238.peel.not, label %for.end284, label %for.body239.peel.next

for.body239.peel.next:                            ; preds = %if.end262.peel
  %cond.i513.peel = call i32 @llvm.abs.i32(i32 %114, i1 true)
  %cmp273.peel = icmp ugt i32 %cond.i513.peel, 3
  %cmp266.peel = icmp sgt i32 %cond.i513.peel, %117
  %inc268.peel = zext i1 %cmp266.peel to i32
  %spec.select510.peel = add nuw nsw i32 %cond235, %inc268.peel
  %spec.select = select i1 %cmp273.peel, i32 2, i32 %spec.select510.peel
  br label %if.end255

if.end255:                                        ; preds = %for.body239.peel.next, %if.end262
  %indvars.iv586.in = phi i64 [ %indvars.iv586, %if.end262 ], [ %113, %for.body239.peel.next ]
  %vlcnum.0569 = phi i32 [ %spec.select510, %if.end262 ], [ %spec.select, %for.body239.peel.next ]
  %no_bits.1567 = phi i32 [ %add281, %if.end262 ], [ %add281.peel, %for.body239.peel.next ]
  %indvars.iv586 = add nsw i64 %indvars.iv586.in, -1
  %arrayidx241 = getelementptr inbounds i32, ptr %pLevel.0614, i64 %indvars.iv586
  %121 = load i32, ptr %arrayidx241, align 4
  store i32 %121, ptr %value1522, align 4
  store i32 %dptype.0605, ptr %se, align 8
  %cmp256 = icmp eq i32 %vlcnum.0569, 0
  %122 = load ptr, ptr @active_sps, align 8
  %profile_idc = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, ptr %122, i64 0, i32 1
  %123 = load i32, ptr %profile_idc, align 4
  br i1 %cmp256, label %if.then257, label %if.else259

if.then257:                                       ; preds = %if.end255
  %call258 = call i32 @writeSyntaxElement_Level_VLC1(ptr noundef nonnull %se, ptr noundef %arrayidx104618, i32 noundef %123) #17
  br label %if.end262

if.else259:                                       ; preds = %if.end255
  %call261 = call i32 @writeSyntaxElement_Level_VLCN(ptr noundef nonnull %se, i32 noundef %vlcnum.0569, ptr noundef %arrayidx104618, i32 noundef %123) #17
  br label %if.end262

if.end262:                                        ; preds = %if.else259, %if.then257
  %cond.i513 = call i32 @llvm.abs.i32(i32 %121, i1 true)
  %idxprom264 = zext i32 %vlcnum.0569 to i64
  %arrayidx265 = getelementptr inbounds [7 x i32], ptr @writeCoeff4x4_CAVLC.incVlc, i64 0, i64 %idxprom264
  %124 = load i32, ptr %arrayidx265, align 4
  %cmp266 = icmp sgt i32 %cond.i513, %124
  %inc268 = zext i1 %cmp266 to i32
  %spec.select510 = add nuw nsw i32 %vlcnum.0569, %inc268
  %125 = load i32, ptr %len526, align 4
  %126 = load i32, ptr %arrayidx189, align 4
  %add279 = add nsw i32 %126, %125
  store i32 %add279, ptr %arrayidx189, align 4
  %127 = load i32, ptr %len526, align 4
  %add281 = add nsw i32 %127, %no_bits.1567
  %128 = trunc i64 %indvars.iv586 to i32
  %cmp238 = icmp sgt i32 %128, 0
  br i1 %cmp238, label %if.end255, label %for.end284

for.end284:                                       ; preds = %if.end262, %if.end262.peel, %if.end225
  %no_bits.1.lcssa = phi i32 [ %no_bits.0, %if.end225 ], [ %add281.peel, %if.end262.peel ], [ %add281, %if.end262 ]
  %cmp285 = icmp slt i32 %numcoeff.0540.fr, %max_coeff_num.0609
  br i1 %cmp285, label %if.then286, label %if.end303

if.then286:                                       ; preds = %for.end284
  store i32 %dptype.0605, ptr %se, align 8
  store i32 %totzeros.0531, ptr %value1522, align 4
  %sub289 = add nsw i32 %numcoeff.0540.fr, -1
  store i32 %sub289, ptr %len526, align 4
  br i1 %tobool.not611, label %if.then292, label %if.else294

if.then292:                                       ; preds = %if.then286
  %call293 = call i32 @writeSyntaxElement_TotalZeros(ptr noundef nonnull %se, ptr noundef %arrayidx104618) #17
  br label %if.end296

if.else294:                                       ; preds = %if.then286
  %call295 = call i32 @writeSyntaxElement_TotalZerosChromaDC(ptr noundef nonnull %se, ptr noundef %arrayidx104618) #17
  br label %if.end296

if.end296:                                        ; preds = %if.else294, %if.then292
  %129 = load i32, ptr %len526, align 4
  %130 = load i32, ptr %arrayidx189, align 4
  %add300 = add nsw i32 %130, %129
  store i32 %add300, ptr %arrayidx189, align 4
  %131 = load i32, ptr %len526, align 4
  %add302 = add nsw i32 %131, %no_bits.1.lcssa
  br label %if.end303

if.end303:                                        ; preds = %if.end296, %for.end284
  %no_bits.2 = phi i32 [ %add302, %if.end296 ], [ %no_bits.1.lcssa, %for.end284 ]
  %cmp305572 = icmp sgt i32 %lastcoeff.0537, -1
  br i1 %cmp305572, label %for.body306.lr.ph, label %cleanup

for.body306.lr.ph:                                ; preds = %if.end303
  %cmp311 = icmp sgt i32 %numcoeff.0540.fr, 1
  %132 = zext i32 %lastcoeff.0537 to i64
  br i1 %cmp311, label %for.body306, label %for.body306.us

for.body306.us:                                   ; preds = %for.body306.lr.ph
  %arrayidx308.us = getelementptr inbounds i32, ptr %pRun.0616, i64 %132
  %133 = load i32, ptr %arrayidx308.us, align 4
  store i32 %133, ptr %value1522, align 4
  br label %cleanup

for.body306:                                      ; preds = %for.body306.lr.ph, %for.inc335
  %indvars.iv589 = phi i64 [ %indvars.iv.next590, %for.inc335 ], [ %132, %for.body306.lr.ph ]
  %numcoef.0576 = phi i32 [ %numcoef.1, %for.inc335 ], [ %numcoeff.0540.fr, %for.body306.lr.ph ]
  %zerosleft.0575 = phi i32 [ %zerosleft.1, %for.inc335 ], [ %totzeros.0531, %for.body306.lr.ph ]
  %no_bits.3573 = phi i32 [ %no_bits.4, %for.inc335 ], [ %no_bits.2, %for.body306.lr.ph ]
  %arrayidx308 = getelementptr inbounds i32, ptr %pRun.0616, i64 %indvars.iv589
  %134 = load i32, ptr %arrayidx308, align 4
  store i32 %134, ptr %value1522, align 4
  store i32 %dptype.0605, ptr %se, align 8
  %tobool313.not = icmp eq i32 %zerosleft.0575, 0
  br i1 %tobool313.not, label %cleanup, label %if.end315

if.end315:                                        ; preds = %for.body306
  %cmp316 = icmp sgt i32 %numcoef.0576, 1
  br i1 %cmp316, label %if.then319, label %for.inc335

if.then319:                                       ; preds = %if.end315
  %135 = call i32 @llvm.smin.i32(i32 %zerosleft.0575, i32 7)
  %spec.store.select371 = add nsw i32 %135, -1
  store i32 %spec.store.select371, ptr %len526, align 4
  %call325 = call i32 @writeSyntaxElement_Run(ptr noundef nonnull %se, ptr noundef %arrayidx104618) #17
  %136 = load i32, ptr %len526, align 4
  %137 = load i32, ptr %arrayidx189, align 4
  %add329 = add nsw i32 %137, %136
  store i32 %add329, ptr %arrayidx189, align 4
  %138 = load i32, ptr %len526, align 4
  %add331 = add nsw i32 %138, %no_bits.3573
  %sub332 = sub nsw i32 %zerosleft.0575, %134
  %dec333 = add nsw i32 %numcoef.0576, -1
  br label %for.inc335

for.inc335:                                       ; preds = %if.end315, %if.then319
  %no_bits.4 = phi i32 [ %add331, %if.then319 ], [ %no_bits.3573, %if.end315 ]
  %zerosleft.1 = phi i32 [ %sub332, %if.then319 ], [ %zerosleft.0575, %if.end315 ]
  %numcoef.1 = phi i32 [ %dec333, %if.then319 ], [ %numcoef.0576, %if.end315 ]
  %indvars.iv.next590 = add nsw i64 %indvars.iv589, -1
  %cmp305 = icmp sgt i64 %indvars.iv589, 0
  br i1 %cmp305, label %for.body306, label %cleanup

cleanup:                                          ; preds = %for.inc335, %for.body306, %if.end303, %for.body306.us, %if.end186
  %retval.0 = phi i32 [ %105, %if.end186 ], [ %no_bits.2, %if.end303 ], [ %no_bits.2, %for.body306.us ], [ %no_bits.4, %for.inc335 ], [ %no_bits.3573, %for.body306 ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %se) #17
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @predict_nnz(i32 noundef %i, i32 noundef %j) local_unnamed_addr #0 {
entry:
  %pix = alloca %struct.pix_pos, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %pix) #17
  %0 = load ptr, ptr @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %1 = load i32, ptr %current_mb_nr, align 4
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %2 = load ptr, ptr %mb_data, align 8
  %idxprom = sext i32 %1 to i64
  %shl = shl i32 %i, 2
  %sub = add nsw i32 %shl, -1
  %shl1 = shl i32 %j, 2
  call void @getLuma4x4Neighbour(i32 noundef %1, i32 noundef %sub, i32 noundef %shl1, ptr noundef nonnull %pix) #17
  %mb_type = getelementptr inbounds %struct.macroblock, ptr %2, i64 %idxprom, i32 8
  %3 = load i32, ptr %mb_type, align 8
  switch i32 %3, label %lor.lhs.false7 [
    i32 9, label %land.lhs.true
    i32 10, label %land.lhs.true
    i32 13, label %land.lhs.true
  ]

lor.lhs.false7:                                   ; preds = %entry
  %cmp9 = icmp eq i32 %3, 14
  %4 = load i32, ptr %pix, align 4
  %tobool = icmp ne i32 %4, 0
  %or.cond = select i1 %cmp9, i1 %tobool, i1 false
  br i1 %or.cond, label %land.lhs.true10, label %if.end22

land.lhs.true:                                    ; preds = %entry, %entry, %entry
  %.old = load i32, ptr %pix, align 4
  %tobool.old.not = icmp eq i32 %.old, 0
  br i1 %tobool.old.not, label %if.end34, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %lor.lhs.false7, %land.lhs.true
  %.pr = phi i32 [ %4, %lor.lhs.false7 ], [ %.old, %land.lhs.true ]
  %5 = load ptr, ptr @active_pps, align 8
  %constrained_intra_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %5, i64 0, i32 27
  %6 = load i32, ptr %constrained_intra_pred_flag, align 8
  %tobool11.not = icmp eq i32 %6, 0
  br i1 %tobool11.not, label %if.then25, label %land.lhs.true12

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %7 = load ptr, ptr @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, ptr %7, i64 0, i32 76
  %8 = load i32, ptr %partition_mode, align 8
  %cmp13.not = icmp eq i32 %8, 0
  br i1 %cmp13.not, label %if.then25, label %land.lhs.true14

land.lhs.true14:                                  ; preds = %land.lhs.true12
  %9 = load ptr, ptr @img, align 8
  %currentPicture = getelementptr inbounds %struct.ImageParameters, ptr %9, i64 0, i32 59
  %10 = load ptr, ptr %currentPicture, align 8
  %idr_flag = getelementptr inbounds %struct.Picture, ptr %10, i64 0, i32 1
  %11 = load i32, ptr %idr_flag, align 4
  %tobool15.not = icmp eq i32 %11, 0
  br i1 %tobool15.not, label %if.then, label %if.then25

if.then:                                          ; preds = %land.lhs.true14
  %intra_block = getelementptr inbounds %struct.ImageParameters, ptr %9, i64 0, i32 63
  %12 = load ptr, ptr %intra_block, align 8
  %mb_addr = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 1
  %13 = load i32, ptr %mb_addr, align 4
  %idxprom16 = sext i32 %13 to i64
  %arrayidx17 = getelementptr inbounds i32, ptr %12, i64 %idxprom16
  %14 = load i32, ptr %arrayidx17, align 4
  %and = and i32 %.pr, %14
  store i32 %and, ptr %pix, align 4
  %tobool20.not = icmp eq i32 %and, 0
  %spec.select = zext i1 %tobool20.not to i32
  br label %if.end22

if.end22:                                         ; preds = %if.then, %lor.lhs.false7
  %15 = phi i32 [ %and, %if.then ], [ %4, %lor.lhs.false7 ]
  %cnt.0 = phi i32 [ %spec.select, %if.then ], [ 0, %lor.lhs.false7 ]
  %tobool24.not = icmp eq i32 %15, 0
  br i1 %tobool24.not, label %if.end34, label %if.then25

if.then25:                                        ; preds = %land.lhs.true14, %land.lhs.true12, %land.lhs.true10, %if.end22
  %cnt.0123 = phi i32 [ %cnt.0, %if.end22 ], [ 0, %land.lhs.true10 ], [ 0, %land.lhs.true12 ], [ 0, %land.lhs.true14 ]
  %16 = load ptr, ptr @img, align 8
  %nz_coeff = getelementptr inbounds %struct.ImageParameters, ptr %16, i64 0, i32 34
  %17 = load ptr, ptr %nz_coeff, align 8
  %mb_addr26 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 1
  %18 = load i32, ptr %mb_addr26, align 4
  %idxprom27 = sext i32 %18 to i64
  %arrayidx28 = getelementptr inbounds ptr, ptr %17, i64 %idxprom27
  %19 = load ptr, ptr %arrayidx28, align 8
  %x = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 2
  %20 = load i32, ptr %x, align 4
  %idxprom29 = sext i32 %20 to i64
  %arrayidx30 = getelementptr inbounds ptr, ptr %19, i64 %idxprom29
  %21 = load ptr, ptr %arrayidx30, align 8
  %y = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 3
  %22 = load i32, ptr %y, align 4
  %idxprom31 = sext i32 %22 to i64
  %arrayidx32 = getelementptr inbounds i32, ptr %21, i64 %idxprom31
  %23 = load i32, ptr %arrayidx32, align 4
  %inc33 = add nuw nsw i32 %cnt.0123, 1
  br label %if.end34

if.end34:                                         ; preds = %land.lhs.true, %if.then25, %if.end22
  %cnt.1 = phi i32 [ %inc33, %if.then25 ], [ %cnt.0, %if.end22 ], [ 0, %land.lhs.true ]
  %pred_nnz.0 = phi i32 [ %23, %if.then25 ], [ 0, %if.end22 ], [ 0, %land.lhs.true ]
  %sub37 = add nsw i32 %shl1, -1
  call void @getLuma4x4Neighbour(i32 noundef %1, i32 noundef %shl, i32 noundef %sub37, ptr noundef nonnull %pix) #17
  %24 = load i32, ptr %mb_type, align 8
  switch i32 %24, label %lor.lhs.false46 [
    i32 9, label %land.lhs.true49
    i32 10, label %land.lhs.true49
    i32 13, label %land.lhs.true49
  ]

lor.lhs.false46:                                  ; preds = %if.end34
  %cmp48 = icmp eq i32 %24, 14
  %25 = load i32, ptr %pix, align 4
  %tobool51 = icmp ne i32 %25, 0
  %or.cond95 = select i1 %cmp48, i1 %tobool51, i1 false
  br i1 %or.cond95, label %land.lhs.true52, label %if.end74

land.lhs.true49:                                  ; preds = %if.end34, %if.end34, %if.end34
  %.old94 = load i32, ptr %pix, align 4
  %tobool51.old.not = icmp eq i32 %.old94, 0
  br i1 %tobool51.old.not, label %if.end89, label %land.lhs.true52

land.lhs.true52:                                  ; preds = %lor.lhs.false46, %land.lhs.true49
  %.pr118 = phi i32 [ %25, %lor.lhs.false46 ], [ %.old94, %land.lhs.true49 ]
  %26 = load ptr, ptr @active_pps, align 8
  %constrained_intra_pred_flag53 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %26, i64 0, i32 27
  %27 = load i32, ptr %constrained_intra_pred_flag53, align 8
  %tobool54.not = icmp eq i32 %27, 0
  br i1 %tobool54.not, label %if.then77, label %land.lhs.true55

land.lhs.true55:                                  ; preds = %land.lhs.true52
  %28 = load ptr, ptr @input, align 8
  %partition_mode56 = getelementptr inbounds %struct.InputParameters, ptr %28, i64 0, i32 76
  %29 = load i32, ptr %partition_mode56, align 8
  %cmp57.not = icmp eq i32 %29, 0
  br i1 %cmp57.not, label %if.then77, label %land.lhs.true58

land.lhs.true58:                                  ; preds = %land.lhs.true55
  %30 = load ptr, ptr @img, align 8
  %currentPicture59 = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 59
  %31 = load ptr, ptr %currentPicture59, align 8
  %idr_flag60 = getelementptr inbounds %struct.Picture, ptr %31, i64 0, i32 1
  %32 = load i32, ptr %idr_flag60, align 4
  %tobool61.not = icmp eq i32 %32, 0
  br i1 %tobool61.not, label %if.then62, label %if.then77

if.then62:                                        ; preds = %land.lhs.true58
  %intra_block63 = getelementptr inbounds %struct.ImageParameters, ptr %30, i64 0, i32 63
  %33 = load ptr, ptr %intra_block63, align 8
  %mb_addr64 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 1
  %34 = load i32, ptr %mb_addr64, align 4
  %idxprom65 = sext i32 %34 to i64
  %arrayidx66 = getelementptr inbounds i32, ptr %33, i64 %idxprom65
  %35 = load i32, ptr %arrayidx66, align 4
  %and68 = and i32 %.pr118, %35
  store i32 %and68, ptr %pix, align 4
  %tobool70.not = icmp eq i32 %and68, 0
  %inc72 = zext i1 %tobool70.not to i32
  %spec.select115 = add nuw nsw i32 %cnt.1, %inc72
  br label %if.end74

if.end74:                                         ; preds = %if.then62, %lor.lhs.false46
  %36 = phi i32 [ %and68, %if.then62 ], [ %25, %lor.lhs.false46 ]
  %cnt.2 = phi i32 [ %spec.select115, %if.then62 ], [ %cnt.1, %lor.lhs.false46 ]
  %tobool76.not = icmp eq i32 %36, 0
  br i1 %tobool76.not, label %if.end89, label %if.then77

if.then77:                                        ; preds = %land.lhs.true58, %land.lhs.true55, %land.lhs.true52, %if.end74
  %cnt.2126 = phi i32 [ %cnt.2, %if.end74 ], [ %cnt.1, %land.lhs.true52 ], [ %cnt.1, %land.lhs.true55 ], [ %cnt.1, %land.lhs.true58 ]
  %37 = load ptr, ptr @img, align 8
  %nz_coeff78 = getelementptr inbounds %struct.ImageParameters, ptr %37, i64 0, i32 34
  %38 = load ptr, ptr %nz_coeff78, align 8
  %mb_addr79 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 1
  %39 = load i32, ptr %mb_addr79, align 4
  %idxprom80 = sext i32 %39 to i64
  %arrayidx81 = getelementptr inbounds ptr, ptr %38, i64 %idxprom80
  %40 = load ptr, ptr %arrayidx81, align 8
  %x82 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 2
  %41 = load i32, ptr %x82, align 4
  %idxprom83 = sext i32 %41 to i64
  %arrayidx84 = getelementptr inbounds ptr, ptr %40, i64 %idxprom83
  %42 = load ptr, ptr %arrayidx84, align 8
  %y85 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 3
  %43 = load i32, ptr %y85, align 4
  %idxprom86 = sext i32 %43 to i64
  %arrayidx87 = getelementptr inbounds i32, ptr %42, i64 %idxprom86
  %44 = load i32, ptr %arrayidx87, align 4
  %add = add nsw i32 %44, %pred_nnz.0
  %inc88 = add nuw nsw i32 %cnt.2126, 1
  br label %if.end89

if.end89:                                         ; preds = %land.lhs.true49, %if.then77, %if.end74
  %cnt.3 = phi i32 [ %inc88, %if.then77 ], [ %cnt.2, %if.end74 ], [ %cnt.1, %land.lhs.true49 ]
  %pred_nnz.1 = phi i32 [ %add, %if.then77 ], [ %pred_nnz.0, %if.end74 ], [ %pred_nnz.0, %land.lhs.true49 ]
  %cmp90 = icmp eq i32 %cnt.3, 2
  %inc92 = add nsw i32 %pred_nnz.1, 1
  %shr = ashr i32 %inc92, 1
  %pred_nnz.2 = select i1 %cmp90, i32 %shr, i32 %pred_nnz.1
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %pix) #17
  ret i32 %pred_nnz.2
}

declare void @getLuma4x4Neighbour(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i32 @predict_nnz_chroma(i32 noundef %i, i32 noundef %j) local_unnamed_addr #0 {
entry:
  %pix = alloca %struct.pix_pos, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %pix) #17
  %0 = load ptr, ptr @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %1 = load i32, ptr %current_mb_nr, align 4
  %idxprom = sext i32 %j to i64
  %arrayidx = getelementptr inbounds [12 x i32], ptr @predict_nnz_chroma.j_off_tab, i64 0, i64 %idxprom
  %2 = load i32, ptr %arrayidx, align 4
  %mb_data = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 61
  %3 = load ptr, ptr %mb_data, align 8
  %idxprom1 = sext i32 %1 to i64
  %yuv_format = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 160
  %4 = load i32, ptr %yuv_format, align 8
  %cmp.not = icmp eq i32 %4, 3
  %shl104 = shl i32 %i, 2
  br i1 %cmp.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %shl = and i32 %shl104, 4
  %sub = add nsw i32 %shl, -1
  %sub3 = shl i32 %j, 2
  %shl4 = add i32 %sub3, -16
  call void @getChroma4x4Neighbour(i32 noundef %1, i32 noundef %sub, i32 noundef %shl4, ptr noundef nonnull %pix) #17
  %mb_type = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom1, i32 8
  %5 = load i32, ptr %mb_type, align 8
  switch i32 %5, label %lor.lhs.false11 [
    i32 9, label %land.lhs.true
    i32 10, label %land.lhs.true
    i32 13, label %land.lhs.true
  ]

lor.lhs.false11:                                  ; preds = %if.then
  %cmp13 = icmp eq i32 %5, 14
  %6 = load i32, ptr %pix, align 4
  %tobool = icmp ne i32 %6, 0
  %or.cond = select i1 %cmp13, i1 %tobool, i1 false
  br i1 %or.cond, label %land.lhs.true14, label %if.end28

land.lhs.true:                                    ; preds = %if.then, %if.then, %if.then
  %.old = load i32, ptr %pix, align 4
  %tobool.old.not = icmp eq i32 %.old, 0
  br i1 %tobool.old.not, label %if.end41, label %land.lhs.true14

land.lhs.true14:                                  ; preds = %lor.lhs.false11, %land.lhs.true
  %.pr = phi i32 [ %6, %lor.lhs.false11 ], [ %.old, %land.lhs.true ]
  %7 = load ptr, ptr @active_pps, align 8
  %constrained_intra_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %7, i64 0, i32 27
  %8 = load i32, ptr %constrained_intra_pred_flag, align 8
  %tobool15.not = icmp eq i32 %8, 0
  br i1 %tobool15.not, label %if.then31, label %land.lhs.true16

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %9 = load ptr, ptr @input, align 8
  %partition_mode = getelementptr inbounds %struct.InputParameters, ptr %9, i64 0, i32 76
  %10 = load i32, ptr %partition_mode, align 8
  %cmp17.not = icmp eq i32 %10, 0
  br i1 %cmp17.not, label %if.then31, label %land.lhs.true18

land.lhs.true18:                                  ; preds = %land.lhs.true16
  %11 = load ptr, ptr @img, align 8
  %currentPicture = getelementptr inbounds %struct.ImageParameters, ptr %11, i64 0, i32 59
  %12 = load ptr, ptr %currentPicture, align 8
  %idr_flag = getelementptr inbounds %struct.Picture, ptr %12, i64 0, i32 1
  %13 = load i32, ptr %idr_flag, align 4
  %tobool19.not = icmp eq i32 %13, 0
  br i1 %tobool19.not, label %if.then20, label %if.then31

if.then20:                                        ; preds = %land.lhs.true18
  %intra_block = getelementptr inbounds %struct.ImageParameters, ptr %11, i64 0, i32 63
  %14 = load ptr, ptr %intra_block, align 8
  %mb_addr = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 1
  %15 = load i32, ptr %mb_addr, align 4
  %idxprom21 = sext i32 %15 to i64
  %arrayidx22 = getelementptr inbounds i32, ptr %14, i64 %idxprom21
  %16 = load i32, ptr %arrayidx22, align 4
  %and24 = and i32 %.pr, %16
  store i32 %and24, ptr %pix, align 4
  %tobool26.not = icmp eq i32 %and24, 0
  %spec.select = zext i1 %tobool26.not to i32
  br label %if.end28

if.end28:                                         ; preds = %if.then20, %lor.lhs.false11
  %17 = phi i32 [ %and24, %if.then20 ], [ %6, %lor.lhs.false11 ]
  %cnt.0 = phi i32 [ %spec.select, %if.then20 ], [ 0, %lor.lhs.false11 ]
  %tobool30.not = icmp eq i32 %17, 0
  br i1 %tobool30.not, label %if.end41, label %if.then31

if.then31:                                        ; preds = %land.lhs.true18, %land.lhs.true16, %land.lhs.true14, %if.end28
  %cnt.0282 = phi i32 [ %cnt.0, %if.end28 ], [ 0, %land.lhs.true14 ], [ 0, %land.lhs.true16 ], [ 0, %land.lhs.true18 ]
  %18 = load ptr, ptr @img, align 8
  %nz_coeff = getelementptr inbounds %struct.ImageParameters, ptr %18, i64 0, i32 34
  %19 = load ptr, ptr %nz_coeff, align 8
  %mb_addr32 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 1
  %20 = load i32, ptr %mb_addr32, align 4
  %idxprom33 = sext i32 %20 to i64
  %arrayidx34 = getelementptr inbounds ptr, ptr %19, i64 %idxprom33
  %21 = load ptr, ptr %arrayidx34, align 8
  %mul = and i32 %i, -2
  %x = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 2
  %22 = load i32, ptr %x, align 4
  %add = add nsw i32 %22, %mul
  %idxprom35 = sext i32 %add to i64
  %arrayidx36 = getelementptr inbounds ptr, ptr %21, i64 %idxprom35
  %23 = load ptr, ptr %arrayidx36, align 8
  %y = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 3
  %24 = load i32, ptr %y, align 4
  %add37 = add nsw i32 %24, 4
  %idxprom38 = sext i32 %add37 to i64
  %arrayidx39 = getelementptr inbounds i32, ptr %23, i64 %idxprom38
  %25 = load i32, ptr %arrayidx39, align 4
  %inc40 = add nuw nsw i32 %cnt.0282, 1
  br label %if.end41

if.end41:                                         ; preds = %land.lhs.true, %if.then31, %if.end28
  %cnt.1 = phi i32 [ %inc40, %if.then31 ], [ %cnt.0, %if.end28 ], [ 0, %land.lhs.true ]
  %pred_nnz.0 = phi i32 [ %25, %if.then31 ], [ 0, %if.end28 ], [ 0, %land.lhs.true ]
  %sub46 = add i32 %sub3, -17
  call void @getChroma4x4Neighbour(i32 noundef %1, i32 noundef %shl, i32 noundef %sub46, ptr noundef nonnull %pix) #17
  %26 = load i32, ptr %mb_type, align 8
  switch i32 %26, label %lor.lhs.false55 [
    i32 9, label %land.lhs.true58
    i32 10, label %land.lhs.true58
    i32 13, label %land.lhs.true58
  ]

lor.lhs.false55:                                  ; preds = %if.end41
  %cmp57 = icmp eq i32 %26, 14
  %27 = load i32, ptr %pix, align 4
  %tobool60 = icmp ne i32 %27, 0
  %or.cond217 = select i1 %cmp57, i1 %tobool60, i1 false
  br i1 %or.cond217, label %land.lhs.true61, label %if.end83

land.lhs.true58:                                  ; preds = %if.end41, %if.end41, %if.end41
  %.old216 = load i32, ptr %pix, align 4
  %tobool60.old.not = icmp eq i32 %.old216, 0
  br i1 %tobool60.old.not, label %if.end210, label %land.lhs.true61

land.lhs.true61:                                  ; preds = %lor.lhs.false55, %land.lhs.true58
  %.pr271 = phi i32 [ %27, %lor.lhs.false55 ], [ %.old216, %land.lhs.true58 ]
  %28 = load ptr, ptr @active_pps, align 8
  %constrained_intra_pred_flag62 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %28, i64 0, i32 27
  %29 = load i32, ptr %constrained_intra_pred_flag62, align 8
  %tobool63.not = icmp eq i32 %29, 0
  br i1 %tobool63.not, label %if.then86, label %land.lhs.true64

land.lhs.true64:                                  ; preds = %land.lhs.true61
  %30 = load ptr, ptr @input, align 8
  %partition_mode65 = getelementptr inbounds %struct.InputParameters, ptr %30, i64 0, i32 76
  %31 = load i32, ptr %partition_mode65, align 8
  %cmp66.not = icmp eq i32 %31, 0
  br i1 %cmp66.not, label %if.then86, label %land.lhs.true67

land.lhs.true67:                                  ; preds = %land.lhs.true64
  %32 = load ptr, ptr @img, align 8
  %currentPicture68 = getelementptr inbounds %struct.ImageParameters, ptr %32, i64 0, i32 59
  %33 = load ptr, ptr %currentPicture68, align 8
  %idr_flag69 = getelementptr inbounds %struct.Picture, ptr %33, i64 0, i32 1
  %34 = load i32, ptr %idr_flag69, align 4
  %tobool70.not = icmp eq i32 %34, 0
  br i1 %tobool70.not, label %if.then71, label %if.then86

if.then71:                                        ; preds = %land.lhs.true67
  %intra_block72 = getelementptr inbounds %struct.ImageParameters, ptr %32, i64 0, i32 63
  %35 = load ptr, ptr %intra_block72, align 8
  %mb_addr73 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 1
  %36 = load i32, ptr %mb_addr73, align 4
  %idxprom74 = sext i32 %36 to i64
  %arrayidx75 = getelementptr inbounds i32, ptr %35, i64 %idxprom74
  %37 = load i32, ptr %arrayidx75, align 4
  %and77 = and i32 %.pr271, %37
  store i32 %and77, ptr %pix, align 4
  %tobool79.not = icmp eq i32 %and77, 0
  %inc81 = zext i1 %tobool79.not to i32
  %spec.select268 = add nuw nsw i32 %cnt.1, %inc81
  br label %if.end83

if.end83:                                         ; preds = %if.then71, %lor.lhs.false55
  %38 = phi i32 [ %and77, %if.then71 ], [ %27, %lor.lhs.false55 ]
  %cnt.2 = phi i32 [ %spec.select268, %if.then71 ], [ %cnt.1, %lor.lhs.false55 ]
  %tobool85.not = icmp eq i32 %38, 0
  br i1 %tobool85.not, label %if.end210, label %if.then86

if.then86:                                        ; preds = %land.lhs.true67, %land.lhs.true64, %land.lhs.true61, %if.end83
  %cnt.2285 = phi i32 [ %cnt.2, %if.end83 ], [ %cnt.1, %land.lhs.true61 ], [ %cnt.1, %land.lhs.true64 ], [ %cnt.1, %land.lhs.true67 ]
  %39 = load ptr, ptr @img, align 8
  %nz_coeff87 = getelementptr inbounds %struct.ImageParameters, ptr %39, i64 0, i32 34
  %40 = load ptr, ptr %nz_coeff87, align 8
  %mb_addr88 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 1
  %41 = load i32, ptr %mb_addr88, align 4
  %idxprom89 = sext i32 %41 to i64
  %arrayidx90 = getelementptr inbounds ptr, ptr %40, i64 %idxprom89
  %mul92 = and i32 %i, -2
  %x93 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 2
  %42 = load i32, ptr %x93, align 4
  %add94 = add nsw i32 %42, %mul92
  br label %if.end210.sink.split

if.else:                                          ; preds = %entry
  %sub105 = add nsw i32 %shl104, -1
  %sub106 = sub nsw i32 %j, %2
  %shl107 = shl i32 %sub106, 2
  call void @getChroma4x4Neighbour(i32 noundef %1, i32 noundef %sub105, i32 noundef %shl107, ptr noundef nonnull %pix) #17
  %mb_type108 = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom1, i32 8
  %43 = load i32, ptr %mb_type108, align 8
  switch i32 %43, label %lor.lhs.false116 [
    i32 9, label %land.lhs.true119
    i32 10, label %land.lhs.true119
    i32 13, label %land.lhs.true119
  ]

lor.lhs.false116:                                 ; preds = %if.else
  %cmp118 = icmp eq i32 %43, 14
  %44 = load i32, ptr %pix, align 4
  %tobool121 = icmp ne i32 %44, 0
  %or.cond219 = select i1 %cmp118, i1 %tobool121, i1 false
  br i1 %or.cond219, label %land.lhs.true122, label %if.end139

land.lhs.true119:                                 ; preds = %if.else, %if.else, %if.else
  %.old218 = load i32, ptr %pix, align 4
  %tobool121.old.not = icmp eq i32 %.old218, 0
  br i1 %tobool121.old.not, label %if.end155, label %land.lhs.true122

land.lhs.true122:                                 ; preds = %lor.lhs.false116, %land.lhs.true119
  %.pr274 = phi i32 [ %44, %lor.lhs.false116 ], [ %.old218, %land.lhs.true119 ]
  %45 = load ptr, ptr @active_pps, align 8
  %constrained_intra_pred_flag123 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %45, i64 0, i32 27
  %46 = load i32, ptr %constrained_intra_pred_flag123, align 8
  %tobool124.not = icmp eq i32 %46, 0
  br i1 %tobool124.not, label %if.then142, label %land.lhs.true125

land.lhs.true125:                                 ; preds = %land.lhs.true122
  %47 = load ptr, ptr @input, align 8
  %partition_mode126 = getelementptr inbounds %struct.InputParameters, ptr %47, i64 0, i32 76
  %48 = load i32, ptr %partition_mode126, align 8
  %cmp127.not = icmp eq i32 %48, 0
  br i1 %cmp127.not, label %if.then142, label %land.lhs.true128

land.lhs.true128:                                 ; preds = %land.lhs.true125
  %49 = load ptr, ptr @img, align 8
  %currentPicture129 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 59
  %50 = load ptr, ptr %currentPicture129, align 8
  %idr_flag130 = getelementptr inbounds %struct.Picture, ptr %50, i64 0, i32 1
  %51 = load i32, ptr %idr_flag130, align 4
  %tobool131.not = icmp eq i32 %51, 0
  br i1 %tobool131.not, label %if.then132, label %if.then142

if.then132:                                       ; preds = %land.lhs.true128
  %intra_block133 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 63
  %52 = load ptr, ptr %intra_block133, align 8
  %mb_addr134 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 1
  %53 = load i32, ptr %mb_addr134, align 4
  %idxprom135 = sext i32 %53 to i64
  %arrayidx136 = getelementptr inbounds i32, ptr %52, i64 %idxprom135
  %54 = load i32, ptr %arrayidx136, align 4
  %and138 = and i32 %.pr274, %54
  store i32 %and138, ptr %pix, align 4
  br label %if.end139

if.end139:                                        ; preds = %if.then132, %lor.lhs.false116
  %55 = phi i32 [ %and138, %if.then132 ], [ %44, %lor.lhs.false116 ]
  %cnt.3 = phi i32 [ -1, %if.then132 ], [ 0, %lor.lhs.false116 ]
  %tobool141.not = icmp eq i32 %55, 0
  br i1 %tobool141.not, label %if.end155, label %if.then142

if.then142:                                       ; preds = %land.lhs.true128, %land.lhs.true125, %land.lhs.true122, %if.end139
  %cnt.3288 = phi i32 [ %cnt.3, %if.end139 ], [ 0, %land.lhs.true122 ], [ 0, %land.lhs.true125 ], [ 0, %land.lhs.true128 ]
  %56 = load ptr, ptr @img, align 8
  %nz_coeff143 = getelementptr inbounds %struct.ImageParameters, ptr %56, i64 0, i32 34
  %57 = load ptr, ptr %nz_coeff143, align 8
  %mb_addr144 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 1
  %58 = load i32, ptr %mb_addr144, align 4
  %idxprom145 = sext i32 %58 to i64
  %arrayidx146 = getelementptr inbounds ptr, ptr %57, i64 %idxprom145
  %59 = load ptr, ptr %arrayidx146, align 8
  %x147 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 2
  %60 = load i32, ptr %x147, align 4
  %idxprom148 = sext i32 %60 to i64
  %arrayidx149 = getelementptr inbounds ptr, ptr %59, i64 %idxprom148
  %61 = load ptr, ptr %arrayidx149, align 8
  %y150 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 3
  %62 = load i32, ptr %y150, align 4
  %add151 = add nsw i32 %62, %2
  %idxprom152 = sext i32 %add151 to i64
  %arrayidx153 = getelementptr inbounds i32, ptr %61, i64 %idxprom152
  %63 = load i32, ptr %arrayidx153, align 4
  %inc154 = add nsw i32 %cnt.3288, 1
  br label %if.end155

if.end155:                                        ; preds = %land.lhs.true119, %if.then142, %if.end139
  %cnt.4 = phi i32 [ %inc154, %if.then142 ], [ %cnt.3, %if.end139 ], [ 0, %land.lhs.true119 ]
  %pred_nnz.1 = phi i32 [ %63, %if.then142 ], [ 0, %if.end139 ], [ 0, %land.lhs.true119 ]
  %sub159 = add nsw i32 %shl107, -1
  call void @getChroma4x4Neighbour(i32 noundef %1, i32 noundef %shl104, i32 noundef %sub159, ptr noundef nonnull %pix) #17
  %64 = load i32, ptr %mb_type108, align 8
  switch i32 %64, label %lor.lhs.false168 [
    i32 9, label %land.lhs.true171
    i32 10, label %land.lhs.true171
    i32 13, label %land.lhs.true171
  ]

lor.lhs.false168:                                 ; preds = %if.end155
  %cmp170 = icmp eq i32 %64, 14
  %65 = load i32, ptr %pix, align 4
  %tobool173 = icmp ne i32 %65, 0
  %or.cond221 = select i1 %cmp170, i1 %tobool173, i1 false
  br i1 %or.cond221, label %land.lhs.true174, label %if.end192

land.lhs.true171:                                 ; preds = %if.end155, %if.end155, %if.end155
  %.old220 = load i32, ptr %pix, align 4
  %tobool173.old.not = icmp eq i32 %.old220, 0
  br i1 %tobool173.old.not, label %if.end210, label %land.lhs.true174

land.lhs.true174:                                 ; preds = %lor.lhs.false168, %land.lhs.true171
  %.pr277 = phi i32 [ %65, %lor.lhs.false168 ], [ %.old220, %land.lhs.true171 ]
  %66 = load ptr, ptr @active_pps, align 8
  %constrained_intra_pred_flag175 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, ptr %66, i64 0, i32 27
  %67 = load i32, ptr %constrained_intra_pred_flag175, align 8
  %tobool176.not = icmp eq i32 %67, 0
  br i1 %tobool176.not, label %if.then195, label %land.lhs.true177

land.lhs.true177:                                 ; preds = %land.lhs.true174
  %68 = load ptr, ptr @input, align 8
  %partition_mode178 = getelementptr inbounds %struct.InputParameters, ptr %68, i64 0, i32 76
  %69 = load i32, ptr %partition_mode178, align 8
  %cmp179.not = icmp eq i32 %69, 0
  br i1 %cmp179.not, label %if.then195, label %land.lhs.true180

land.lhs.true180:                                 ; preds = %land.lhs.true177
  %70 = load ptr, ptr @img, align 8
  %currentPicture181 = getelementptr inbounds %struct.ImageParameters, ptr %70, i64 0, i32 59
  %71 = load ptr, ptr %currentPicture181, align 8
  %idr_flag182 = getelementptr inbounds %struct.Picture, ptr %71, i64 0, i32 1
  %72 = load i32, ptr %idr_flag182, align 4
  %tobool183.not = icmp eq i32 %72, 0
  br i1 %tobool183.not, label %if.then184, label %if.then195

if.then184:                                       ; preds = %land.lhs.true180
  %intra_block185 = getelementptr inbounds %struct.ImageParameters, ptr %70, i64 0, i32 63
  %73 = load ptr, ptr %intra_block185, align 8
  %mb_addr186 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 1
  %74 = load i32, ptr %mb_addr186, align 4
  %idxprom187 = sext i32 %74 to i64
  %arrayidx188 = getelementptr inbounds i32, ptr %73, i64 %idxprom187
  %75 = load i32, ptr %arrayidx188, align 4
  %and190 = and i32 %.pr277, %75
  store i32 %and190, ptr %pix, align 4
  %dec191 = add nsw i32 %cnt.4, -1
  br label %if.end192

if.end192:                                        ; preds = %if.then184, %lor.lhs.false168
  %76 = phi i32 [ %and190, %if.then184 ], [ %65, %lor.lhs.false168 ]
  %cnt.5 = phi i32 [ %dec191, %if.then184 ], [ %cnt.4, %lor.lhs.false168 ]
  %tobool194.not = icmp eq i32 %76, 0
  br i1 %tobool194.not, label %if.end210, label %if.then195

if.then195:                                       ; preds = %land.lhs.true180, %land.lhs.true177, %land.lhs.true174, %if.end192
  %cnt.5291 = phi i32 [ %cnt.5, %if.end192 ], [ %cnt.4, %land.lhs.true174 ], [ %cnt.4, %land.lhs.true177 ], [ %cnt.4, %land.lhs.true180 ]
  %77 = load ptr, ptr @img, align 8
  %nz_coeff196 = getelementptr inbounds %struct.ImageParameters, ptr %77, i64 0, i32 34
  %78 = load ptr, ptr %nz_coeff196, align 8
  %mb_addr197 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 1
  %79 = load i32, ptr %mb_addr197, align 4
  %idxprom198 = sext i32 %79 to i64
  %arrayidx199 = getelementptr inbounds ptr, ptr %78, i64 %idxprom198
  %x200 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 2
  %80 = load i32, ptr %x200, align 4
  br label %if.end210.sink.split

if.end210.sink.split:                             ; preds = %if.then86, %if.then195
  %.sink294 = phi i32 [ %80, %if.then195 ], [ %add94, %if.then86 ]
  %.sink.in = phi ptr [ %arrayidx199, %if.then195 ], [ %arrayidx90, %if.then86 ]
  %.sink293 = phi i32 [ %2, %if.then195 ], [ 4, %if.then86 ]
  %pred_nnz.1.sink = phi i32 [ %pred_nnz.1, %if.then195 ], [ %pred_nnz.0, %if.then86 ]
  %cnt.5291.sink = phi i32 [ %cnt.5291, %if.then195 ], [ %cnt.2285, %if.then86 ]
  %.sink = load ptr, ptr %.sink.in, align 8
  %idxprom201 = sext i32 %.sink294 to i64
  %arrayidx202 = getelementptr inbounds ptr, ptr %.sink, i64 %idxprom201
  %81 = load ptr, ptr %arrayidx202, align 8
  %y203 = getelementptr inbounds %struct.pix_pos, ptr %pix, i64 0, i32 3
  %82 = load i32, ptr %y203, align 4
  %add204 = add nsw i32 %82, %.sink293
  %idxprom205 = sext i32 %add204 to i64
  %arrayidx206 = getelementptr inbounds i32, ptr %81, i64 %idxprom205
  %83 = load i32, ptr %arrayidx206, align 4
  %add207 = add nsw i32 %83, %pred_nnz.1.sink
  %inc208 = add nsw i32 %cnt.5291.sink, 1
  br label %if.end210

if.end210:                                        ; preds = %if.end210.sink.split, %land.lhs.true171, %land.lhs.true58, %if.end192, %if.end83
  %cnt.6 = phi i32 [ %cnt.2, %if.end83 ], [ %cnt.5, %if.end192 ], [ %cnt.1, %land.lhs.true58 ], [ %cnt.4, %land.lhs.true171 ], [ %inc208, %if.end210.sink.split ]
  %pred_nnz.2 = phi i32 [ %pred_nnz.0, %if.end83 ], [ %pred_nnz.1, %if.end192 ], [ %pred_nnz.0, %land.lhs.true58 ], [ %pred_nnz.1, %land.lhs.true171 ], [ %add207, %if.end210.sink.split ]
  %cmp211 = icmp eq i32 %cnt.6, 2
  %inc213 = add nsw i32 %pred_nnz.2, 1
  %shr214 = ashr i32 %inc213, 1
  %pred_nnz.3 = select i1 %cmp211, i32 %shr214, i32 %pred_nnz.2
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %pix) #17
  ret i32 %pred_nnz.3
}

declare void @getChroma4x4Neighbour(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

declare i32 @writeSyntaxElement_NumCoeffTrailingOnes(ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @writeSyntaxElement_NumCoeffTrailingOnesChromaDC(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #14

declare i32 @writeSyntaxElement_VLC(ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @writeSyntaxElement_Level_VLC1(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare i32 @writeSyntaxElement_Level_VLCN(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare i32 @writeSyntaxElement_TotalZeros(ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @writeSyntaxElement_TotalZerosChromaDC(ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @writeSyntaxElement_Run(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i32 @find_sad_16x16(ptr nocapture noundef writeonly %intra_mode) local_unnamed_addr #0 {
entry:
  %M0 = alloca [4 x [4 x [4 x [4 x i32]]]], align 16
  %up = alloca %struct.pix_pos, align 4
  %left = alloca [17 x %struct.pix_pos], align 16
  call void @llvm.lifetime.start.p0(i64 1024, ptr nonnull %M0) #17
  %0 = load ptr, ptr @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 3
  %1 = load i32, ptr %current_mb_nr, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %up) #17
  call void @llvm.lifetime.start.p0(i64 408, ptr nonnull %left) #17
  %2 = load ptr, ptr @getNeighbour, align 8
  call void %2(i32 noundef %1, i32 noundef -1, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %left) #17
  %3 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 1
  call void %3(i32 noundef %1, i32 noundef -1, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %arrayidx.1) #17
  %4 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 2
  call void %4(i32 noundef %1, i32 noundef -1, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %arrayidx.2) #17
  %5 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 3
  call void %5(i32 noundef %1, i32 noundef -1, i32 noundef 2, i32 noundef 0, ptr noundef nonnull %arrayidx.3) #17
  %6 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.4 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 4
  call void %6(i32 noundef %1, i32 noundef -1, i32 noundef 3, i32 noundef 0, ptr noundef nonnull %arrayidx.4) #17
  %7 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.5 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 5
  call void %7(i32 noundef %1, i32 noundef -1, i32 noundef 4, i32 noundef 0, ptr noundef nonnull %arrayidx.5) #17
  %8 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.6 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 6
  call void %8(i32 noundef %1, i32 noundef -1, i32 noundef 5, i32 noundef 0, ptr noundef nonnull %arrayidx.6) #17
  %9 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.7 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 7
  call void %9(i32 noundef %1, i32 noundef -1, i32 noundef 6, i32 noundef 0, ptr noundef nonnull %arrayidx.7) #17
  %10 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.8 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 8
  call void %10(i32 noundef %1, i32 noundef -1, i32 noundef 7, i32 noundef 0, ptr noundef nonnull %arrayidx.8) #17
  %11 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.9 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 9
  call void %11(i32 noundef %1, i32 noundef -1, i32 noundef 8, i32 noundef 0, ptr noundef nonnull %arrayidx.9) #17
  %12 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.10 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 10
  call void %12(i32 noundef %1, i32 noundef -1, i32 noundef 9, i32 noundef 0, ptr noundef nonnull %arrayidx.10) #17
  %13 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.11 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 11
  call void %13(i32 noundef %1, i32 noundef -1, i32 noundef 10, i32 noundef 0, ptr noundef nonnull %arrayidx.11) #17
  %14 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.12 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 12
  call void %14(i32 noundef %1, i32 noundef -1, i32 noundef 11, i32 noundef 0, ptr noundef nonnull %arrayidx.12) #17
  %15 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.13 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 13
  call void %15(i32 noundef %1, i32 noundef -1, i32 noundef 12, i32 noundef 0, ptr noundef nonnull %arrayidx.13) #17
  %16 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.14 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 14
  call void %16(i32 noundef %1, i32 noundef -1, i32 noundef 13, i32 noundef 0, ptr noundef nonnull %arrayidx.14) #17
  %17 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.15 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 15
  call void %17(i32 noundef %1, i32 noundef -1, i32 noundef 14, i32 noundef 0, ptr noundef nonnull %arrayidx.15) #17
  %18 = load ptr, ptr @getNeighbour, align 8
  %arrayidx.16 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 16
  call void %18(i32 noundef %1, i32 noundef -1, i32 noundef 15, i32 noundef 0, ptr noundef nonnull %arrayidx.16) #17
  %19 = load ptr, ptr @getNeighbour, align 8
  call void %19(i32 noundef %1, i32 noundef 0, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %up) #17
  %20 = load ptr, ptr @input, align 8
  %UseConstrainedIntraPred = getelementptr inbounds %struct.InputParameters, ptr %20, i64 0, i32 23
  %21 = load i32, ptr %UseConstrainedIntraPred, align 8
  %tobool.not = icmp eq i32 %21, 0
  %22 = load i32, ptr %up, align 4
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %23 = load i32, ptr %arrayidx.1, align 8
  %24 = load i32, ptr %left, align 16
  br label %if.end

if.else:                                          ; preds = %entry
  %tobool6.not = icmp eq i32 %22, 0
  %.pre = load ptr, ptr @img, align 8
  br i1 %tobool6.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.else
  %intra_block = getelementptr inbounds %struct.ImageParameters, ptr %.pre, i64 0, i32 63
  %25 = load ptr, ptr %intra_block, align 8
  %mb_addr = getelementptr inbounds %struct.pix_pos, ptr %up, i64 0, i32 1
  %26 = load i32, ptr %mb_addr, align 4
  %idxprom7 = sext i32 %26 to i64
  %arrayidx8 = getelementptr inbounds i32, ptr %25, i64 %idxprom7
  %27 = load i32, ptr %arrayidx8, align 4
  br label %cond.end

cond.end:                                         ; preds = %if.else, %cond.true
  %cond = phi i32 [ %27, %cond.true ], [ 0, %if.else ]
  %intra_block17 = getelementptr inbounds %struct.ImageParameters, ptr %.pre, i64 0, i32 63
  %28 = load i32, ptr %arrayidx.1, align 8
  %tobool15.not = icmp eq i32 %28, 0
  br i1 %tobool15.not, label %cond.end24, label %cond.true16

cond.true16:                                      ; preds = %cond.end
  %29 = load ptr, ptr %intra_block17, align 8
  %mb_addr20 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 1, i32 1
  %30 = load i32, ptr %mb_addr20, align 4
  %idxprom21 = sext i32 %30 to i64
  %arrayidx22 = getelementptr inbounds i32, ptr %29, i64 %idxprom21
  %31 = load i32, ptr %arrayidx22, align 4
  br label %cond.end24

cond.end24:                                       ; preds = %cond.end, %cond.true16
  %cond25 = phi i32 [ %31, %cond.true16 ], [ 0, %cond.end ]
  %and = and i32 %cond25, 1
  %32 = load i32, ptr %arrayidx.2, align 16
  %tobool15.not.1 = icmp eq i32 %32, 0
  br i1 %tobool15.not.1, label %cond.end24.1, label %cond.true16.1

cond.true16.1:                                    ; preds = %cond.end24
  %33 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.1 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 2, i32 1
  %34 = load i32, ptr %mb_addr20.1, align 4
  %idxprom21.1 = sext i32 %34 to i64
  %arrayidx22.1 = getelementptr inbounds i32, ptr %33, i64 %idxprom21.1
  %35 = load i32, ptr %arrayidx22.1, align 4
  br label %cond.end24.1

cond.end24.1:                                     ; preds = %cond.true16.1, %cond.end24
  %cond25.1 = phi i32 [ %35, %cond.true16.1 ], [ 0, %cond.end24 ]
  %and.1 = and i32 %cond25.1, %and
  %36 = load i32, ptr %arrayidx.3, align 8
  %tobool15.not.2 = icmp eq i32 %36, 0
  br i1 %tobool15.not.2, label %cond.end24.2, label %cond.true16.2

cond.true16.2:                                    ; preds = %cond.end24.1
  %37 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.2 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 3, i32 1
  %38 = load i32, ptr %mb_addr20.2, align 4
  %idxprom21.2 = sext i32 %38 to i64
  %arrayidx22.2 = getelementptr inbounds i32, ptr %37, i64 %idxprom21.2
  %39 = load i32, ptr %arrayidx22.2, align 4
  br label %cond.end24.2

cond.end24.2:                                     ; preds = %cond.true16.2, %cond.end24.1
  %cond25.2 = phi i32 [ %39, %cond.true16.2 ], [ 0, %cond.end24.1 ]
  %and.2 = and i32 %cond25.2, %and.1
  %40 = load i32, ptr %arrayidx.4, align 16
  %tobool15.not.3 = icmp eq i32 %40, 0
  br i1 %tobool15.not.3, label %cond.end24.3, label %cond.true16.3

cond.true16.3:                                    ; preds = %cond.end24.2
  %41 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.3 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 4, i32 1
  %42 = load i32, ptr %mb_addr20.3, align 4
  %idxprom21.3 = sext i32 %42 to i64
  %arrayidx22.3 = getelementptr inbounds i32, ptr %41, i64 %idxprom21.3
  %43 = load i32, ptr %arrayidx22.3, align 4
  br label %cond.end24.3

cond.end24.3:                                     ; preds = %cond.true16.3, %cond.end24.2
  %cond25.3 = phi i32 [ %43, %cond.true16.3 ], [ 0, %cond.end24.2 ]
  %and.3 = and i32 %cond25.3, %and.2
  %44 = load i32, ptr %arrayidx.5, align 8
  %tobool15.not.4 = icmp eq i32 %44, 0
  br i1 %tobool15.not.4, label %cond.end24.4, label %cond.true16.4

cond.true16.4:                                    ; preds = %cond.end24.3
  %45 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.4 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 5, i32 1
  %46 = load i32, ptr %mb_addr20.4, align 4
  %idxprom21.4 = sext i32 %46 to i64
  %arrayidx22.4 = getelementptr inbounds i32, ptr %45, i64 %idxprom21.4
  %47 = load i32, ptr %arrayidx22.4, align 4
  br label %cond.end24.4

cond.end24.4:                                     ; preds = %cond.true16.4, %cond.end24.3
  %cond25.4 = phi i32 [ %47, %cond.true16.4 ], [ 0, %cond.end24.3 ]
  %and.4 = and i32 %cond25.4, %and.3
  %48 = load i32, ptr %arrayidx.6, align 16
  %tobool15.not.5 = icmp eq i32 %48, 0
  br i1 %tobool15.not.5, label %cond.end24.5, label %cond.true16.5

cond.true16.5:                                    ; preds = %cond.end24.4
  %49 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.5 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 6, i32 1
  %50 = load i32, ptr %mb_addr20.5, align 4
  %idxprom21.5 = sext i32 %50 to i64
  %arrayidx22.5 = getelementptr inbounds i32, ptr %49, i64 %idxprom21.5
  %51 = load i32, ptr %arrayidx22.5, align 4
  br label %cond.end24.5

cond.end24.5:                                     ; preds = %cond.true16.5, %cond.end24.4
  %cond25.5 = phi i32 [ %51, %cond.true16.5 ], [ 0, %cond.end24.4 ]
  %and.5 = and i32 %cond25.5, %and.4
  %52 = load i32, ptr %arrayidx.7, align 8
  %tobool15.not.6 = icmp eq i32 %52, 0
  br i1 %tobool15.not.6, label %cond.end24.6, label %cond.true16.6

cond.true16.6:                                    ; preds = %cond.end24.5
  %53 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.6 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 7, i32 1
  %54 = load i32, ptr %mb_addr20.6, align 4
  %idxprom21.6 = sext i32 %54 to i64
  %arrayidx22.6 = getelementptr inbounds i32, ptr %53, i64 %idxprom21.6
  %55 = load i32, ptr %arrayidx22.6, align 4
  br label %cond.end24.6

cond.end24.6:                                     ; preds = %cond.true16.6, %cond.end24.5
  %cond25.6 = phi i32 [ %55, %cond.true16.6 ], [ 0, %cond.end24.5 ]
  %and.6 = and i32 %cond25.6, %and.5
  %56 = load i32, ptr %arrayidx.8, align 16
  %tobool15.not.7 = icmp eq i32 %56, 0
  br i1 %tobool15.not.7, label %cond.end24.7, label %cond.true16.7

cond.true16.7:                                    ; preds = %cond.end24.6
  %57 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.7 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 8, i32 1
  %58 = load i32, ptr %mb_addr20.7, align 4
  %idxprom21.7 = sext i32 %58 to i64
  %arrayidx22.7 = getelementptr inbounds i32, ptr %57, i64 %idxprom21.7
  %59 = load i32, ptr %arrayidx22.7, align 4
  br label %cond.end24.7

cond.end24.7:                                     ; preds = %cond.true16.7, %cond.end24.6
  %cond25.7 = phi i32 [ %59, %cond.true16.7 ], [ 0, %cond.end24.6 ]
  %and.7 = and i32 %cond25.7, %and.6
  %60 = load i32, ptr %arrayidx.9, align 8
  %tobool15.not.8 = icmp eq i32 %60, 0
  br i1 %tobool15.not.8, label %cond.end24.8, label %cond.true16.8

cond.true16.8:                                    ; preds = %cond.end24.7
  %61 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.8 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 9, i32 1
  %62 = load i32, ptr %mb_addr20.8, align 4
  %idxprom21.8 = sext i32 %62 to i64
  %arrayidx22.8 = getelementptr inbounds i32, ptr %61, i64 %idxprom21.8
  %63 = load i32, ptr %arrayidx22.8, align 4
  br label %cond.end24.8

cond.end24.8:                                     ; preds = %cond.true16.8, %cond.end24.7
  %cond25.8 = phi i32 [ %63, %cond.true16.8 ], [ 0, %cond.end24.7 ]
  %and.8 = and i32 %cond25.8, %and.7
  %64 = load i32, ptr %arrayidx.10, align 16
  %tobool15.not.9 = icmp eq i32 %64, 0
  br i1 %tobool15.not.9, label %cond.end24.9, label %cond.true16.9

cond.true16.9:                                    ; preds = %cond.end24.8
  %65 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.9 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 10, i32 1
  %66 = load i32, ptr %mb_addr20.9, align 4
  %idxprom21.9 = sext i32 %66 to i64
  %arrayidx22.9 = getelementptr inbounds i32, ptr %65, i64 %idxprom21.9
  %67 = load i32, ptr %arrayidx22.9, align 4
  br label %cond.end24.9

cond.end24.9:                                     ; preds = %cond.true16.9, %cond.end24.8
  %cond25.9 = phi i32 [ %67, %cond.true16.9 ], [ 0, %cond.end24.8 ]
  %and.9 = and i32 %cond25.9, %and.8
  %68 = load i32, ptr %arrayidx.11, align 8
  %tobool15.not.10 = icmp eq i32 %68, 0
  br i1 %tobool15.not.10, label %cond.end24.10, label %cond.true16.10

cond.true16.10:                                   ; preds = %cond.end24.9
  %69 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.10 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 11, i32 1
  %70 = load i32, ptr %mb_addr20.10, align 4
  %idxprom21.10 = sext i32 %70 to i64
  %arrayidx22.10 = getelementptr inbounds i32, ptr %69, i64 %idxprom21.10
  %71 = load i32, ptr %arrayidx22.10, align 4
  br label %cond.end24.10

cond.end24.10:                                    ; preds = %cond.true16.10, %cond.end24.9
  %cond25.10 = phi i32 [ %71, %cond.true16.10 ], [ 0, %cond.end24.9 ]
  %and.10 = and i32 %cond25.10, %and.9
  %72 = load i32, ptr %arrayidx.12, align 16
  %tobool15.not.11 = icmp eq i32 %72, 0
  br i1 %tobool15.not.11, label %cond.end24.11, label %cond.true16.11

cond.true16.11:                                   ; preds = %cond.end24.10
  %73 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.11 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 12, i32 1
  %74 = load i32, ptr %mb_addr20.11, align 4
  %idxprom21.11 = sext i32 %74 to i64
  %arrayidx22.11 = getelementptr inbounds i32, ptr %73, i64 %idxprom21.11
  %75 = load i32, ptr %arrayidx22.11, align 4
  br label %cond.end24.11

cond.end24.11:                                    ; preds = %cond.true16.11, %cond.end24.10
  %cond25.11 = phi i32 [ %75, %cond.true16.11 ], [ 0, %cond.end24.10 ]
  %and.11 = and i32 %cond25.11, %and.10
  %76 = load i32, ptr %arrayidx.13, align 8
  %tobool15.not.12 = icmp eq i32 %76, 0
  br i1 %tobool15.not.12, label %cond.end24.12, label %cond.true16.12

cond.true16.12:                                   ; preds = %cond.end24.11
  %77 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.12 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 13, i32 1
  %78 = load i32, ptr %mb_addr20.12, align 4
  %idxprom21.12 = sext i32 %78 to i64
  %arrayidx22.12 = getelementptr inbounds i32, ptr %77, i64 %idxprom21.12
  %79 = load i32, ptr %arrayidx22.12, align 4
  br label %cond.end24.12

cond.end24.12:                                    ; preds = %cond.true16.12, %cond.end24.11
  %cond25.12 = phi i32 [ %79, %cond.true16.12 ], [ 0, %cond.end24.11 ]
  %and.12 = and i32 %cond25.12, %and.11
  %80 = load i32, ptr %arrayidx.14, align 16
  %tobool15.not.13 = icmp eq i32 %80, 0
  br i1 %tobool15.not.13, label %cond.end24.13, label %cond.true16.13

cond.true16.13:                                   ; preds = %cond.end24.12
  %81 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.13 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 14, i32 1
  %82 = load i32, ptr %mb_addr20.13, align 4
  %idxprom21.13 = sext i32 %82 to i64
  %arrayidx22.13 = getelementptr inbounds i32, ptr %81, i64 %idxprom21.13
  %83 = load i32, ptr %arrayidx22.13, align 4
  br label %cond.end24.13

cond.end24.13:                                    ; preds = %cond.true16.13, %cond.end24.12
  %cond25.13 = phi i32 [ %83, %cond.true16.13 ], [ 0, %cond.end24.12 ]
  %and.13 = and i32 %cond25.13, %and.12
  %84 = load i32, ptr %arrayidx.15, align 8
  %tobool15.not.14 = icmp eq i32 %84, 0
  br i1 %tobool15.not.14, label %cond.end24.14, label %cond.true16.14

cond.true16.14:                                   ; preds = %cond.end24.13
  %85 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.14 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 15, i32 1
  %86 = load i32, ptr %mb_addr20.14, align 4
  %idxprom21.14 = sext i32 %86 to i64
  %arrayidx22.14 = getelementptr inbounds i32, ptr %85, i64 %idxprom21.14
  %87 = load i32, ptr %arrayidx22.14, align 4
  br label %cond.end24.14

cond.end24.14:                                    ; preds = %cond.true16.14, %cond.end24.13
  %cond25.14 = phi i32 [ %87, %cond.true16.14 ], [ 0, %cond.end24.13 ]
  %and.14 = and i32 %cond25.14, %and.13
  %88 = load i32, ptr %arrayidx.16, align 16
  %tobool15.not.15 = icmp eq i32 %88, 0
  br i1 %tobool15.not.15, label %cond.end24.15, label %cond.true16.15

cond.true16.15:                                   ; preds = %cond.end24.14
  %89 = load ptr, ptr %intra_block17, align 8
  %mb_addr20.15 = getelementptr inbounds [17 x %struct.pix_pos], ptr %left, i64 0, i64 16, i32 1
  %90 = load i32, ptr %mb_addr20.15, align 4
  %idxprom21.15 = sext i32 %90 to i64
  %arrayidx22.15 = getelementptr inbounds i32, ptr %89, i64 %idxprom21.15
  %91 = load i32, ptr %arrayidx22.15, align 4
  br label %cond.end24.15

cond.end24.15:                                    ; preds = %cond.true16.15, %cond.end24.14
  %cond25.15 = phi i32 [ %91, %cond.true16.15 ], [ 0, %cond.end24.14 ]
  %and.15 = and i32 %cond25.15, %and.14
  %92 = load i32, ptr %left, align 16
  %tobool31.not = icmp eq i32 %92, 0
  br i1 %tobool31.not, label %if.end, label %cond.true32

cond.true32:                                      ; preds = %cond.end24.15
  %93 = load ptr, ptr %intra_block17, align 8
  %mb_addr35 = getelementptr inbounds %struct.pix_pos, ptr %left, i64 0, i32 1
  %94 = load i32, ptr %mb_addr35, align 4
  %idxprom36 = sext i32 %94 to i64
  %arrayidx37 = getelementptr inbounds i32, ptr %93, i64 %idxprom36
  %95 = load i32, ptr %arrayidx37, align 4
  br label %if.end

if.end:                                           ; preds = %cond.true32, %cond.end24.15, %if.then
  %up_avail.0 = phi i32 [ %22, %if.then ], [ %cond, %cond.end24.15 ], [ %cond, %cond.true32 ]
  %left_avail.1 = phi i32 [ %23, %if.then ], [ %and.15, %cond.end24.15 ], [ %and.15, %cond.true32 ]
  %left_up_avail.0 = phi i32 [ %24, %if.then ], [ 0, %cond.end24.15 ], [ %95, %cond.true32 ]
  store i32 2, ptr %intra_mode, align 4
  %IntraDisableInterOnly = getelementptr inbounds %struct.InputParameters, ptr %20, i64 0, i32 84
  %96 = load ptr, ptr @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 5
  %Intra16x16ParDisable = getelementptr inbounds %struct.InputParameters, ptr %20, i64 0, i32 88
  %Intra16x16PlaneDisable = getelementptr inbounds %struct.InputParameters, ptr %20, i64 0, i32 89
  %tobool61 = icmp ne i32 %up_avail.0, 0
  %tobool65 = icmp ne i32 %left_avail.1, 0
  %or.cond552 = select i1 %tobool65, i1 %tobool61, i1 false
  %tobool73 = icmp ne i32 %left_up_avail.0, 0
  %or.cond553 = select i1 %or.cond552, i1 %tobool73, i1 false
  %97 = load ptr, ptr @imgY_org, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 44
  %opix_x = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 43
  %gep766.1 = getelementptr inbounds [4 x [4 x [4 x i32]]], ptr %M0, i64 0, i64 1
  %gep766.2 = getelementptr inbounds [4 x [4 x [4 x i32]]], ptr %M0, i64 0, i64 2
  %gep766.3 = getelementptr inbounds [4 x [4 x [4 x i32]]], ptr %M0, i64 0, i64 3
  br label %for.body43

for.body43:                                       ; preds = %if.end, %for.inc545
  %indvars.iv859 = phi i64 [ 0, %if.end ], [ %indvars.iv.next860, %for.inc545 ]
  %best_intra_sad2.0774 = phi i32 [ 999999, %if.end ], [ %best_intra_sad2.1, %for.inc545 ]
  %98 = load i32, ptr %IntraDisableInterOnly, align 8
  %cmp44 = icmp eq i32 %98, 0
  br i1 %cmp44, label %if.then46, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body43
  %99 = load i32, ptr %type, align 4
  %cmp45.not = icmp eq i32 %99, 2
  br i1 %cmp45.not, label %if.end58, label %if.then46

if.then46:                                        ; preds = %lor.lhs.false, %for.body43
  %100 = load i32, ptr %Intra16x16ParDisable, align 8
  %tobool47.not = icmp ne i32 %100, 0
  %or.cond = icmp ult i64 %indvars.iv859, 2
  %or.cond749 = and i1 %or.cond, %tobool47.not
  br i1 %or.cond749, label %for.inc545, label %if.end52

if.end52:                                         ; preds = %if.then46
  %101 = load i32, ptr %Intra16x16PlaneDisable, align 4
  %tobool53 = icmp eq i32 %101, 0
  %cmp55 = icmp ne i64 %indvars.iv859, 3
  %or.cond549.not777 = or i1 %cmp55, %tobool53
  %cmp59 = icmp ne i64 %indvars.iv859, 0
  %or.cond550 = select i1 %cmp59, i1 true, i1 %tobool61
  %or.cond776 = select i1 %or.cond549.not777, i1 %or.cond550, i1 false
  br i1 %or.cond776, label %lor.lhs.false62, label %for.inc545

if.end58:                                         ; preds = %lor.lhs.false
  %cmp59.old = icmp ne i64 %indvars.iv859, 0
  %or.cond550.old = select i1 %cmp59.old, i1 true, i1 %tobool61
  br i1 %or.cond550.old, label %lor.lhs.false62, label %for.inc545

lor.lhs.false62:                                  ; preds = %if.end52, %if.end58
  %cmp63 = icmp ne i64 %indvars.iv859, 1
  %or.cond551 = select i1 %cmp63, i1 true, i1 %tobool65
  br i1 %or.cond551, label %lor.lhs.false66, label %for.inc545

lor.lhs.false66:                                  ; preds = %lor.lhs.false62
  %cmp67 = icmp ne i64 %indvars.iv859, 3
  %brmerge = select i1 %cmp67, i1 true, i1 %or.cond553
  br i1 %brmerge, label %if.else75, label %for.end547

if.else75:                                        ; preds = %lor.lhs.false66
  %102 = load i32, ptr %opix_y, align 4
  %103 = load i32, ptr %opix_x, align 8
  %104 = sext i32 %103 to i64
  %105 = sext i32 %102 to i64
  %106 = add nsw i64 %104, 1
  %107 = add nsw i64 %104, 2
  %108 = add nsw i64 %104, 3
  %109 = add nsw i64 %104, 4
  %110 = add nsw i64 %104, 5
  %111 = add nsw i64 %104, 6
  %112 = add nsw i64 %104, 7
  %113 = add nsw i64 %104, 8
  %114 = add nsw i64 %104, 9
  %115 = add nsw i64 %104, 10
  %116 = add nsw i64 %104, 11
  %117 = add nsw i64 %104, 12
  %118 = add nsw i64 %104, 13
  %119 = add nsw i64 %104, 14
  %120 = add nsw i64 %104, 15
  br label %for.cond79.preheader

for.cond79.preheader:                             ; preds = %if.else75, %for.cond79.preheader
  %indvars.iv = phi i64 [ 0, %if.else75 ], [ %indvars.iv.next, %for.cond79.preheader ]
  %121 = add nsw i64 %indvars.iv, %105
  %arrayidx83 = getelementptr inbounds ptr, ptr %97, i64 %121
  %122 = load ptr, ptr %arrayidx83, align 8
  %and108 = and i64 %indvars.iv, 3
  %shr111 = lshr i64 %indvars.iv, 2
  %idxprom112 = and i64 %shr111, 1073741823
  %arrayidx86 = getelementptr inbounds i16, ptr %122, i64 %104
  %123 = load i16, ptr %arrayidx86, align 2
  %conv = zext i16 %123 to i32
  %arrayidx92 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 0
  %124 = load i16, ptr %arrayidx92, align 2
  %conv93 = zext i16 %124 to i32
  %sub94 = sub nsw i32 %conv, %conv93
  %arrayidx113 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 0, i64 0, i64 %and108, i64 %idxprom112
  store i32 %sub94, ptr %arrayidx113, align 4
  %arrayidx86.1 = getelementptr inbounds i16, ptr %122, i64 %106
  %125 = load i16, ptr %arrayidx86.1, align 2
  %conv.1 = zext i16 %125 to i32
  %arrayidx92.1 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 1
  %126 = load i16, ptr %arrayidx92.1, align 2
  %conv93.1 = zext i16 %126 to i32
  %sub94.1 = sub nsw i32 %conv.1, %conv93.1
  %arrayidx113.1 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 1, i64 0, i64 %and108, i64 %idxprom112
  store i32 %sub94.1, ptr %arrayidx113.1, align 4
  %arrayidx86.2 = getelementptr inbounds i16, ptr %122, i64 %107
  %127 = load i16, ptr %arrayidx86.2, align 2
  %conv.2 = zext i16 %127 to i32
  %arrayidx92.2 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 2
  %128 = load i16, ptr %arrayidx92.2, align 2
  %conv93.2 = zext i16 %128 to i32
  %sub94.2 = sub nsw i32 %conv.2, %conv93.2
  %arrayidx113.2 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 2, i64 0, i64 %and108, i64 %idxprom112
  store i32 %sub94.2, ptr %arrayidx113.2, align 4
  %arrayidx86.3 = getelementptr inbounds i16, ptr %122, i64 %108
  %129 = load i16, ptr %arrayidx86.3, align 2
  %conv.3 = zext i16 %129 to i32
  %arrayidx92.3 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 3
  %130 = load i16, ptr %arrayidx92.3, align 2
  %conv93.3 = zext i16 %130 to i32
  %sub94.3 = sub nsw i32 %conv.3, %conv93.3
  %arrayidx113.3 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 3, i64 0, i64 %and108, i64 %idxprom112
  store i32 %sub94.3, ptr %arrayidx113.3, align 4
  %arrayidx86.4 = getelementptr inbounds i16, ptr %122, i64 %109
  %131 = load i16, ptr %arrayidx86.4, align 2
  %conv.4 = zext i16 %131 to i32
  %arrayidx92.4 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 4
  %132 = load i16, ptr %arrayidx92.4, align 2
  %conv93.4 = zext i16 %132 to i32
  %sub94.4 = sub nsw i32 %conv.4, %conv93.4
  %arrayidx113.4 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 0, i64 1, i64 %and108, i64 %idxprom112
  store i32 %sub94.4, ptr %arrayidx113.4, align 4
  %arrayidx86.5 = getelementptr inbounds i16, ptr %122, i64 %110
  %133 = load i16, ptr %arrayidx86.5, align 2
  %conv.5 = zext i16 %133 to i32
  %arrayidx92.5 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 5
  %134 = load i16, ptr %arrayidx92.5, align 2
  %conv93.5 = zext i16 %134 to i32
  %sub94.5 = sub nsw i32 %conv.5, %conv93.5
  %arrayidx113.5 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 1, i64 1, i64 %and108, i64 %idxprom112
  store i32 %sub94.5, ptr %arrayidx113.5, align 4
  %arrayidx86.6 = getelementptr inbounds i16, ptr %122, i64 %111
  %135 = load i16, ptr %arrayidx86.6, align 2
  %conv.6 = zext i16 %135 to i32
  %arrayidx92.6 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 6
  %136 = load i16, ptr %arrayidx92.6, align 2
  %conv93.6 = zext i16 %136 to i32
  %sub94.6 = sub nsw i32 %conv.6, %conv93.6
  %arrayidx113.6 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 2, i64 1, i64 %and108, i64 %idxprom112
  store i32 %sub94.6, ptr %arrayidx113.6, align 4
  %arrayidx86.7 = getelementptr inbounds i16, ptr %122, i64 %112
  %137 = load i16, ptr %arrayidx86.7, align 2
  %conv.7 = zext i16 %137 to i32
  %arrayidx92.7 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 7
  %138 = load i16, ptr %arrayidx92.7, align 2
  %conv93.7 = zext i16 %138 to i32
  %sub94.7 = sub nsw i32 %conv.7, %conv93.7
  %arrayidx113.7 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 3, i64 1, i64 %and108, i64 %idxprom112
  store i32 %sub94.7, ptr %arrayidx113.7, align 4
  %arrayidx86.8 = getelementptr inbounds i16, ptr %122, i64 %113
  %139 = load i16, ptr %arrayidx86.8, align 2
  %conv.8 = zext i16 %139 to i32
  %arrayidx92.8 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 8
  %140 = load i16, ptr %arrayidx92.8, align 2
  %conv93.8 = zext i16 %140 to i32
  %sub94.8 = sub nsw i32 %conv.8, %conv93.8
  %arrayidx113.8 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 0, i64 2, i64 %and108, i64 %idxprom112
  store i32 %sub94.8, ptr %arrayidx113.8, align 4
  %arrayidx86.9 = getelementptr inbounds i16, ptr %122, i64 %114
  %141 = load i16, ptr %arrayidx86.9, align 2
  %conv.9 = zext i16 %141 to i32
  %arrayidx92.9 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 9
  %142 = load i16, ptr %arrayidx92.9, align 2
  %conv93.9 = zext i16 %142 to i32
  %sub94.9 = sub nsw i32 %conv.9, %conv93.9
  %arrayidx113.9 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 1, i64 2, i64 %and108, i64 %idxprom112
  store i32 %sub94.9, ptr %arrayidx113.9, align 4
  %arrayidx86.10 = getelementptr inbounds i16, ptr %122, i64 %115
  %143 = load i16, ptr %arrayidx86.10, align 2
  %conv.10 = zext i16 %143 to i32
  %arrayidx92.10 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 10
  %144 = load i16, ptr %arrayidx92.10, align 2
  %conv93.10 = zext i16 %144 to i32
  %sub94.10 = sub nsw i32 %conv.10, %conv93.10
  %arrayidx113.10 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 2, i64 2, i64 %and108, i64 %idxprom112
  store i32 %sub94.10, ptr %arrayidx113.10, align 4
  %arrayidx86.11 = getelementptr inbounds i16, ptr %122, i64 %116
  %145 = load i16, ptr %arrayidx86.11, align 2
  %conv.11 = zext i16 %145 to i32
  %arrayidx92.11 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 11
  %146 = load i16, ptr %arrayidx92.11, align 2
  %conv93.11 = zext i16 %146 to i32
  %sub94.11 = sub nsw i32 %conv.11, %conv93.11
  %arrayidx113.11 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 3, i64 2, i64 %and108, i64 %idxprom112
  store i32 %sub94.11, ptr %arrayidx113.11, align 4
  %arrayidx86.12 = getelementptr inbounds i16, ptr %122, i64 %117
  %147 = load i16, ptr %arrayidx86.12, align 2
  %conv.12 = zext i16 %147 to i32
  %arrayidx92.12 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 12
  %148 = load i16, ptr %arrayidx92.12, align 2
  %conv93.12 = zext i16 %148 to i32
  %sub94.12 = sub nsw i32 %conv.12, %conv93.12
  %arrayidx113.12 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 0, i64 3, i64 %and108, i64 %idxprom112
  store i32 %sub94.12, ptr %arrayidx113.12, align 4
  %arrayidx86.13 = getelementptr inbounds i16, ptr %122, i64 %118
  %149 = load i16, ptr %arrayidx86.13, align 2
  %conv.13 = zext i16 %149 to i32
  %arrayidx92.13 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 13
  %150 = load i16, ptr %arrayidx92.13, align 2
  %conv93.13 = zext i16 %150 to i32
  %sub94.13 = sub nsw i32 %conv.13, %conv93.13
  %arrayidx113.13 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 1, i64 3, i64 %and108, i64 %idxprom112
  store i32 %sub94.13, ptr %arrayidx113.13, align 4
  %arrayidx86.14 = getelementptr inbounds i16, ptr %122, i64 %119
  %151 = load i16, ptr %arrayidx86.14, align 2
  %conv.14 = zext i16 %151 to i32
  %arrayidx92.14 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 14
  %152 = load i16, ptr %arrayidx92.14, align 2
  %conv93.14 = zext i16 %152 to i32
  %sub94.14 = sub nsw i32 %conv.14, %conv93.14
  %arrayidx113.14 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 2, i64 3, i64 %and108, i64 %idxprom112
  store i32 %sub94.14, ptr %arrayidx113.14, align 4
  %arrayidx86.15 = getelementptr inbounds i16, ptr %122, i64 %120
  %153 = load i16, ptr %arrayidx86.15, align 2
  %conv.15 = zext i16 %153 to i32
  %arrayidx92.15 = getelementptr inbounds %struct.ImageParameters, ptr %96, i64 0, i32 48, i64 %indvars.iv859, i64 %indvars.iv, i64 15
  %154 = load i16, ptr %arrayidx92.15, align 2
  %conv93.15 = zext i16 %154 to i32
  %sub94.15 = sub nsw i32 %conv.15, %conv93.15
  %arrayidx113.15 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 3, i64 3, i64 %and108, i64 %idxprom112
  store i32 %sub94.15, ptr %arrayidx113.15, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 16
  br i1 %exitcond.not, label %for.cond124.preheader, label %for.cond79.preheader

for.cond377.preheader:                            ; preds = %for.inc374
  %155 = load <4 x i32>, ptr %M0, align 16
  %156 = load <4 x i32>, ptr %gep766.1, align 16
  %157 = load <4 x i32>, ptr %gep766.2, align 16
  %158 = load <4 x i32>, ptr %gep766.3, align 16
  %159 = shufflevector <4 x i32> %157, <4 x i32> poison, <16 x i32> <i32 2, i32 1, i32 3, i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %160 = shufflevector <4 x i32> %156, <4 x i32> poison, <16 x i32> <i32 2, i32 1, i32 3, i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %161 = shufflevector <16 x i32> %159, <16 x i32> %160, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 16, i32 17, i32 18, i32 19, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %162 = shufflevector <4 x i32> %158, <4 x i32> poison, <16 x i32> <i32 2, i32 1, i32 3, i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %163 = shufflevector <16 x i32> %161, <16 x i32> %162, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 16, i32 17, i32 18, i32 19, i32 poison, i32 poison, i32 poison, i32 poison>
  %164 = shufflevector <4 x i32> %155, <4 x i32> poison, <16 x i32> <i32 2, i32 1, i32 3, i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %165 = shufflevector <16 x i32> %163, <16 x i32> %164, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 16, i32 17, i32 18, i32 19>
  %166 = sdiv <16 x i32> %165, <i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4>
  %167 = shufflevector <16 x i32> %166, <16 x i32> poison, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 0, i32 1, i32 2, i32 3, i32 12, i32 13, i32 14, i32 15, i32 8, i32 9, i32 10, i32 11>
  %168 = add nsw <16 x i32> %166, %167
  %169 = sub nsw <16 x i32> %166, %167
  %170 = shufflevector <16 x i32> %168, <16 x i32> %169, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 20, i32 21, i32 22, i32 23, i32 8, i32 9, i32 10, i32 11, i32 28, i32 29, i32 30, i32 31>
  %171 = shufflevector <16 x i32> %170, <16 x i32> poison, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %172 = add nsw <16 x i32> %170, %171
  %173 = sub nsw <16 x i32> %170, %171
  %174 = shufflevector <16 x i32> %172, <16 x i32> %173, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %175 = shufflevector <16 x i32> %174, <16 x i32> poison, <16 x i32> <i32 1, i32 0, i32 3, i32 2, i32 5, i32 4, i32 7, i32 6, i32 9, i32 8, i32 11, i32 10, i32 13, i32 12, i32 15, i32 14>
  %176 = add nsw <16 x i32> %174, %175
  %177 = sub nsw <16 x i32> %174, %175
  %178 = shufflevector <16 x i32> %176, <16 x i32> %177, <16 x i32> <i32 0, i32 17, i32 2, i32 19, i32 4, i32 21, i32 6, i32 23, i32 8, i32 25, i32 10, i32 27, i32 12, i32 29, i32 14, i32 31>
  %179 = shufflevector <16 x i32> %178, <16 x i32> poison, <16 x i32> <i32 2, i32 3, i32 0, i32 1, i32 6, i32 7, i32 4, i32 5, i32 10, i32 11, i32 8, i32 9, i32 14, i32 15, i32 12, i32 13>
  %180 = add nsw <16 x i32> %178, %179
  %181 = sub nsw <16 x i32> %178, %179
  %182 = shufflevector <16 x i32> %180, <16 x i32> %181, <16 x i32> <i32 0, i32 1, i32 18, i32 19, i32 4, i32 5, i32 22, i32 23, i32 8, i32 9, i32 26, i32 27, i32 12, i32 13, i32 30, i32 31>
  %183 = call <16 x i32> @llvm.abs.v16i32(<16 x i32> %182, i1 true)
  %184 = call i32 @llvm.vector.reduce.add.v16i32(<16 x i32> %183)
  %op.rdx = add i32 %184, %add363.3.3
  %cmp540 = icmp slt i32 %op.rdx, %best_intra_sad2.0774
  br i1 %cmp540, label %if.then542, label %for.inc545

for.cond124.preheader:                            ; preds = %for.cond79.preheader, %for.inc374
  %indvars.iv820 = phi i64 [ %indvars.iv.next821, %for.inc374 ], [ 0, %for.cond79.preheader ]
  %current_intra_sad_2.0764 = phi i32 [ %add363.3.3, %for.inc374 ], [ 0, %for.cond79.preheader ]
  %invariant.gep = getelementptr inbounds [4 x i32], ptr %M0, i64 0, i64 %indvars.iv820
  br label %for.inc365.3.3

for.inc365.3.3:                                   ; preds = %for.inc365.3.3, %for.cond124.preheader
  %indvars.iv816 = phi i64 [ 0, %for.cond124.preheader ], [ %indvars.iv.next817, %for.inc365.3.3 ]
  %current_intra_sad_2.1762 = phi i32 [ %current_intra_sad_2.0764, %for.cond124.preheader ], [ %add363.3.3, %for.inc365.3.3 ]
  %arrayidx138 = getelementptr inbounds [4 x [4 x [4 x i32]]], ptr %M0, i64 0, i64 %indvars.iv816, i64 0, i64 %indvars.iv820
  %185 = load i32, ptr %arrayidx138, align 4
  %arrayidx145 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 3, i64 %indvars.iv816, i64 0, i64 %indvars.iv820
  %186 = load i32, ptr %arrayidx145, align 4
  %add146 = add nsw i32 %186, %185
  %arrayidx154 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 1, i64 %indvars.iv816, i64 0, i64 %indvars.iv820
  %187 = load i32, ptr %arrayidx154, align 4
  %arrayidx161 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 2, i64 %indvars.iv816, i64 0, i64 %indvars.iv820
  %188 = load i32, ptr %arrayidx161, align 4
  %add162 = add nsw i32 %188, %187
  %sub178 = sub nsw i32 %187, %188
  %sub194 = sub nsw i32 %185, %186
  %add198 = add nsw i32 %add162, %add146
  %sub208 = sub nsw i32 %add146, %add162
  %add218 = add nsw i32 %sub178, %sub194
  %sub228 = sub nsw i32 %sub194, %sub178
  %arrayidx138.1 = getelementptr inbounds [4 x [4 x [4 x i32]]], ptr %M0, i64 0, i64 %indvars.iv816, i64 1, i64 %indvars.iv820
  %189 = load i32, ptr %arrayidx138.1, align 4
  %arrayidx145.1 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 3, i64 %indvars.iv816, i64 1, i64 %indvars.iv820
  %190 = load i32, ptr %arrayidx145.1, align 4
  %add146.1 = add nsw i32 %190, %189
  %arrayidx154.1 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 1, i64 %indvars.iv816, i64 1, i64 %indvars.iv820
  %191 = load i32, ptr %arrayidx154.1, align 4
  %arrayidx161.1 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 2, i64 %indvars.iv816, i64 1, i64 %indvars.iv820
  %192 = load i32, ptr %arrayidx161.1, align 4
  %add162.1 = add nsw i32 %192, %191
  %sub178.1 = sub nsw i32 %191, %192
  %sub194.1 = sub nsw i32 %189, %190
  %add198.1 = add nsw i32 %add162.1, %add146.1
  %sub208.1 = sub nsw i32 %add146.1, %add162.1
  %add218.1 = add nsw i32 %sub178.1, %sub194.1
  %sub228.1 = sub nsw i32 %sub194.1, %sub178.1
  %arrayidx138.2 = getelementptr inbounds [4 x [4 x [4 x i32]]], ptr %M0, i64 0, i64 %indvars.iv816, i64 2, i64 %indvars.iv820
  %193 = load i32, ptr %arrayidx138.2, align 4
  %arrayidx145.2 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 3, i64 %indvars.iv816, i64 2, i64 %indvars.iv820
  %194 = load i32, ptr %arrayidx145.2, align 4
  %add146.2 = add nsw i32 %194, %193
  %arrayidx154.2 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 1, i64 %indvars.iv816, i64 2, i64 %indvars.iv820
  %195 = load i32, ptr %arrayidx154.2, align 4
  %arrayidx161.2 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 2, i64 %indvars.iv816, i64 2, i64 %indvars.iv820
  %196 = load i32, ptr %arrayidx161.2, align 4
  %add162.2 = add nsw i32 %196, %195
  %sub178.2 = sub nsw i32 %195, %196
  %sub194.2 = sub nsw i32 %193, %194
  %add198.2 = add nsw i32 %add162.2, %add146.2
  %sub208.2 = sub nsw i32 %add146.2, %add162.2
  %add218.2 = add nsw i32 %sub178.2, %sub194.2
  %sub228.2 = sub nsw i32 %sub194.2, %sub178.2
  %arrayidx138.3 = getelementptr inbounds [4 x [4 x [4 x i32]]], ptr %M0, i64 0, i64 %indvars.iv816, i64 3, i64 %indvars.iv820
  %197 = load i32, ptr %arrayidx138.3, align 4
  %arrayidx145.3 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 3, i64 %indvars.iv816, i64 3, i64 %indvars.iv820
  %198 = load i32, ptr %arrayidx145.3, align 4
  %add146.3 = add nsw i32 %198, %197
  %arrayidx154.3 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 1, i64 %indvars.iv816, i64 3, i64 %indvars.iv820
  %199 = load i32, ptr %arrayidx154.3, align 4
  %arrayidx161.3 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %M0, i64 0, i64 2, i64 %indvars.iv816, i64 3, i64 %indvars.iv820
  %200 = load i32, ptr %arrayidx161.3, align 4
  %add162.3 = add nsw i32 %200, %199
  %sub178.3 = sub nsw i32 %199, %200
  %sub194.3 = sub nsw i32 %197, %198
  %add198.3 = add nsw i32 %add162.3, %add146.3
  %sub208.3 = sub nsw i32 %add146.3, %add162.3
  %add218.3 = add nsw i32 %sub178.3, %sub194.3
  %sub228.3 = sub nsw i32 %sub194.3, %sub178.3
  %gep = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %invariant.gep, i64 0, i64 0, i64 %indvars.iv816
  %add257 = add nsw i32 %add198.3, %add198
  %add273 = add nsw i32 %add198.2, %add198.1
  %sub289 = sub nsw i32 %add198.1, %add198.2
  %sub305 = sub nsw i32 %add198, %add198.3
  %add309 = add nsw i32 %add273, %add257
  store i32 %add309, ptr %gep, align 4
  %sub319 = sub nsw i32 %add257, %add273
  store i32 %sub319, ptr %arrayidx138.2, align 4
  %add329 = add nsw i32 %sub289, %sub305
  store i32 %add329, ptr %arrayidx138.1, align 4
  %sub339 = sub nsw i32 %sub305, %sub289
  store i32 %sub339, ptr %arrayidx138.3, align 4
  %cond.i.1 = call i32 @llvm.abs.i32(i32 %add329, i1 true)
  %add363.1 = add nsw i32 %cond.i.1, %current_intra_sad_2.1762
  %cond.i.2 = call i32 @llvm.abs.i32(i32 %sub319, i1 true)
  %add363.2 = add nsw i32 %cond.i.2, %add363.1
  %cond.i.3 = call i32 @llvm.abs.i32(i32 %sub339, i1 true)
  %add363.3 = add nsw i32 %cond.i.3, %add363.2
  %gep.1 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %invariant.gep, i64 0, i64 1, i64 %indvars.iv816
  %add257.1 = add nsw i32 %add218.3, %add218
  %add273.1 = add nsw i32 %add218.2, %add218.1
  %sub289.1 = sub nsw i32 %add218.1, %add218.2
  %sub305.1 = sub nsw i32 %add218, %add218.3
  %add309.1 = add nsw i32 %add273.1, %add257.1
  store i32 %add309.1, ptr %gep.1, align 4
  %sub319.1 = sub nsw i32 %add257.1, %add273.1
  store i32 %sub319.1, ptr %arrayidx154.2, align 4
  %add329.1 = add nsw i32 %sub289.1, %sub305.1
  store i32 %add329.1, ptr %arrayidx154.1, align 4
  %sub339.1 = sub nsw i32 %sub305.1, %sub289.1
  store i32 %sub339.1, ptr %arrayidx154.3, align 4
  %cond.i.1799 = call i32 @llvm.abs.i32(i32 %add309.1, i1 true)
  %add363.1800 = add nsw i32 %cond.i.1799, %add363.3
  %cond.i.1.1 = call i32 @llvm.abs.i32(i32 %add329.1, i1 true)
  %add363.1.1 = add nsw i32 %cond.i.1.1, %add363.1800
  %cond.i.2.1 = call i32 @llvm.abs.i32(i32 %sub319.1, i1 true)
  %add363.2.1 = add nsw i32 %cond.i.2.1, %add363.1.1
  %cond.i.3.1 = call i32 @llvm.abs.i32(i32 %sub339.1, i1 true)
  %add363.3.1 = add nsw i32 %cond.i.3.1, %add363.2.1
  %gep.2 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %invariant.gep, i64 0, i64 2, i64 %indvars.iv816
  %add257.2 = add nsw i32 %sub208.3, %sub208
  %add273.2 = add nsw i32 %sub208.2, %sub208.1
  %sub289.2 = sub nsw i32 %sub208.1, %sub208.2
  %sub305.2 = sub nsw i32 %sub208, %sub208.3
  %add309.2 = add nsw i32 %add273.2, %add257.2
  store i32 %add309.2, ptr %gep.2, align 4
  %sub319.2 = sub nsw i32 %add257.2, %add273.2
  store i32 %sub319.2, ptr %arrayidx161.2, align 4
  %add329.2 = add nsw i32 %sub289.2, %sub305.2
  store i32 %add329.2, ptr %arrayidx161.1, align 4
  %sub339.2 = sub nsw i32 %sub305.2, %sub289.2
  store i32 %sub339.2, ptr %arrayidx161.3, align 4
  %cond.i.2805 = call i32 @llvm.abs.i32(i32 %add309.2, i1 true)
  %add363.2806 = add nsw i32 %cond.i.2805, %add363.3.1
  %cond.i.1.2 = call i32 @llvm.abs.i32(i32 %add329.2, i1 true)
  %add363.1.2 = add nsw i32 %cond.i.1.2, %add363.2806
  %cond.i.2.2 = call i32 @llvm.abs.i32(i32 %sub319.2, i1 true)
  %add363.2.2 = add nsw i32 %cond.i.2.2, %add363.1.2
  %cond.i.3.2 = call i32 @llvm.abs.i32(i32 %sub339.2, i1 true)
  %add363.3.2 = add nsw i32 %cond.i.3.2, %add363.2.2
  %gep.3 = getelementptr inbounds [4 x [4 x [4 x [4 x i32]]]], ptr %invariant.gep, i64 0, i64 3, i64 %indvars.iv816
  %add257.3 = add nsw i32 %sub228.3, %sub228
  %add273.3 = add nsw i32 %sub228.2, %sub228.1
  %sub289.3 = sub nsw i32 %sub228.1, %sub228.2
  %sub305.3 = sub nsw i32 %sub228, %sub228.3
  %add309.3 = add nsw i32 %add273.3, %add257.3
  store i32 %add309.3, ptr %gep.3, align 4
  %sub319.3 = sub nsw i32 %add257.3, %add273.3
  store i32 %sub319.3, ptr %arrayidx145.2, align 4
  %add329.3 = add nsw i32 %sub289.3, %sub305.3
  store i32 %add329.3, ptr %arrayidx145.1, align 4
  %sub339.3 = sub nsw i32 %sub305.3, %sub289.3
  store i32 %sub339.3, ptr %arrayidx145.3, align 4
  %cond.i.3811 = call i32 @llvm.abs.i32(i32 %add309.3, i1 true)
  %add363.3812 = add nsw i32 %cond.i.3811, %add363.3.2
  %cond.i.1.3 = call i32 @llvm.abs.i32(i32 %add329.3, i1 true)
  %add363.1.3 = add nsw i32 %cond.i.1.3, %add363.3812
  %cond.i.2.3 = call i32 @llvm.abs.i32(i32 %sub319.3, i1 true)
  %add363.2.3 = add nsw i32 %cond.i.2.3, %add363.1.3
  %cond.i.3.3 = call i32 @llvm.abs.i32(i32 %sub339.3, i1 true)
  %add363.3.3 = add nsw i32 %cond.i.3.3, %add363.2.3
  %indvars.iv.next817 = add nuw nsw i64 %indvars.iv816, 1
  %exitcond819.not = icmp eq i64 %indvars.iv.next817, 4
  br i1 %exitcond819.not, label %for.inc374, label %for.inc365.3.3

for.inc374:                                       ; preds = %for.inc365.3.3
  %indvars.iv.next821 = add nuw nsw i64 %indvars.iv820, 1
  %exitcond823.not = icmp eq i64 %indvars.iv.next821, 4
  br i1 %exitcond823.not, label %for.cond377.preheader, label %for.cond124.preheader

if.then542:                                       ; preds = %for.cond377.preheader
  %201 = trunc i64 %indvars.iv859 to i32
  store i32 %201, ptr %intra_mode, align 4
  br label %for.inc545

for.inc545:                                       ; preds = %if.then46, %lor.lhs.false62, %if.end58, %if.then542, %for.cond377.preheader, %if.end52
  %best_intra_sad2.1 = phi i32 [ %best_intra_sad2.0774, %if.end52 ], [ %op.rdx, %if.then542 ], [ %best_intra_sad2.0774, %for.cond377.preheader ], [ %best_intra_sad2.0774, %lor.lhs.false62 ], [ %best_intra_sad2.0774, %if.end58 ], [ %best_intra_sad2.0774, %if.then46 ]
  %indvars.iv.next860 = add nuw nsw i64 %indvars.iv859, 1
  %exitcond862.not = icmp eq i64 %indvars.iv.next860, 4
  br i1 %exitcond862.not, label %for.end547, label %for.body43

for.end547:                                       ; preds = %lor.lhs.false66, %for.inc545
  %best_intra_sad2.1898 = phi i32 [ %best_intra_sad2.1, %for.inc545 ], [ %best_intra_sad2.0774, %lor.lhs.false66 ]
  %div548 = sdiv i32 %best_intra_sad2.1898, 2
  call void @llvm.lifetime.end.p0(i64 408, ptr nonnull %left) #17
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %up) #17
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %M0) #17
  ret i32 %div548
}

declare ptr @UMVLine8X_chroma(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #15

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i32> @llvm.smax.v8i32(<8 x i32>, <8 x i32>) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i32> @llvm.smin.v8i32(<8 x i32>, <8 x i32>) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <16 x i32> @llvm.abs.v16i32(<16 x i32>, i1 immarg) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v16i32(<16 x i32>) #15

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #8 = { nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, argmem: read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #16 = { nofree nounwind }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 18.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !11, i64 12}
!10 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !12, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !11, i64 64, !11, i64 68, !11, i64 72, !11, i64 76, !11, i64 80, !11, i64 84, !11, i64 88, !11, i64 92, !11, i64 96, !11, i64 100, !11, i64 104, !11, i64 108, !11, i64 112, !11, i64 116, !11, i64 120, !6, i64 128, !6, i64 136, !11, i64 144, !6, i64 152, !11, i64 160, !11, i64 164, !11, i64 168, !11, i64 172, !11, i64 176, !11, i64 180, !11, i64 184, !11, i64 188, !11, i64 192, !11, i64 196, !11, i64 200, !11, i64 204, !7, i64 208, !7, i64 4816, !7, i64 7376, !7, i64 8528, !7, i64 12624, !7, i64 13136, !6, i64 14160, !6, i64 14168, !6, i64 14176, !6, i64 14184, !6, i64 14192, !6, i64 14200, !6, i64 14208, !6, i64 14216, !6, i64 14224, !6, i64 14232, !6, i64 14240, !11, i64 14248, !11, i64 14252, !11, i64 14256, !11, i64 14260, !7, i64 14264, !11, i64 14328, !11, i64 14332, !11, i64 14336, !11, i64 14340, !11, i64 14344, !13, i64 14352, !11, i64 14360, !11, i64 14364, !11, i64 14368, !11, i64 14372, !6, i64 14376, !6, i64 14384, !6, i64 14392, !6, i64 14400, !7, i64 14408, !11, i64 14440, !11, i64 14444, !11, i64 14448, !11, i64 14452, !11, i64 14456, !11, i64 14460, !11, i64 14464, !11, i64 14468, !7, i64 14472, !11, i64 15240, !11, i64 15244, !11, i64 15248, !11, i64 15252, !11, i64 15256, !11, i64 15260, !11, i64 15264, !11, i64 15268, !11, i64 15272, !7, i64 15276, !11, i64 15280, !11, i64 15284, !11, i64 15288, !7, i64 15292, !11, i64 15296, !11, i64 15300, !7, i64 15304, !11, i64 15312, !11, i64 15316, !11, i64 15320, !11, i64 15324, !11, i64 15328, !11, i64 15332, !11, i64 15336, !11, i64 15340, !11, i64 15344, !11, i64 15348, !11, i64 15352, !7, i64 15356, !11, i64 15360, !11, i64 15364, !11, i64 15368, !11, i64 15372, !6, i64 15376, !11, i64 15384, !11, i64 15388, !11, i64 15392, !11, i64 15396, !11, i64 15400, !11, i64 15404, !11, i64 15408, !11, i64 15412, !11, i64 15416, !11, i64 15420, !11, i64 15424, !11, i64 15428, !11, i64 15432, !11, i64 15436, !11, i64 15440, !11, i64 15444, !11, i64 15448, !11, i64 15452, !11, i64 15456, !11, i64 15460, !11, i64 15464, !11, i64 15468, !11, i64 15472, !6, i64 15480, !6, i64 15488, !6, i64 15496, !6, i64 15504, !11, i64 15512, !11, i64 15516, !11, i64 15520, !11, i64 15524, !11, i64 15528, !11, i64 15532, !11, i64 15536, !11, i64 15540, !11, i64 15544, !11, i64 15548, !7, i64 15552, !7, i64 15576, !11, i64 15584, !11, i64 15588, !14, i64 15592, !11, i64 15596, !11, i64 15600, !11, i64 15604, !11, i64 15608, !11, i64 15612}
!11 = !{!"int", !7, i64 0}
!12 = !{!"float", !7, i64 0}
!13 = !{!"double", !7, i64 0}
!14 = !{!"short", !7, i64 0}
!15 = !{!10, !11, i64 160}
!16 = !{!10, !11, i64 168}
!17 = !{!10, !11, i64 164}
!18 = !{!10, !11, i64 172}
!19 = !{!10, !11, i64 176}
!20 = !{!10, !11, i64 180}
!21 = !{!10, !11, i64 192}
!22 = !{!10, !11, i64 15268}
!23 = !{!10, !6, i64 14224}
!24 = !{!25, !11, i64 424}
!25 = !{!"macroblock", !11, i64 0, !11, i64 4, !11, i64 8, !7, i64 12, !11, i64 20, !7, i64 24, !6, i64 56, !6, i64 64, !11, i64 72, !7, i64 76, !7, i64 332, !7, i64 348, !11, i64 364, !26, i64 368, !7, i64 376, !7, i64 392, !26, i64 408, !11, i64 416, !11, i64 420, !11, i64 424, !11, i64 428, !11, i64 432, !11, i64 436, !11, i64 440, !11, i64 444, !11, i64 448, !11, i64 452, !11, i64 456, !11, i64 460, !11, i64 464, !11, i64 468, !11, i64 472, !11, i64 476, !14, i64 480, !13, i64 488, !11, i64 496, !11, i64 500, !11, i64 504, !11, i64 508, !11, i64 512, !11, i64 516, !11, i64 520, !11, i64 524, !11, i64 528}
!26 = !{!"long long", !7, i64 0}
!27 = !{!10, !11, i64 196}
!28 = !{!25, !11, i64 432}
!29 = !{!10, !11, i64 15536}
!30 = !{!10, !11, i64 15544}
!31 = !{!10, !11, i64 184}
!32 = !{!10, !11, i64 15548}
!33 = !{!10, !11, i64 188}
!34 = !{!10, !11, i64 200}
!35 = !{!10, !11, i64 204}
!36 = !{!11, !11, i64 0}
!37 = !{!10, !11, i64 15464}
!38 = !{!10, !11, i64 20}
!39 = !{!26, !26, i64 0}
!40 = !{!25, !11, i64 72}
!41 = !{!25, !11, i64 416}
!42 = !{!25, !11, i64 364}
!43 = !{!25, !11, i64 472}
!44 = !{!45, !11, i64 5100}
!45 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !11, i64 64, !11, i64 68, !7, i64 72, !7, i64 136, !7, i64 200, !11, i64 264, !11, i64 268, !11, i64 272, !11, i64 276, !7, i64 280, !7, i64 536, !7, i64 792, !7, i64 1048, !7, i64 1304, !11, i64 1560, !11, i64 1564, !11, i64 1568, !11, i64 1572, !11, i64 1576, !11, i64 1580, !7, i64 1584, !11, i64 2084, !11, i64 2088, !11, i64 2092, !11, i64 2096, !11, i64 2100, !11, i64 2104, !11, i64 2108, !11, i64 2112, !11, i64 2116, !11, i64 2120, !11, i64 2124, !11, i64 2128, !11, i64 2132, !11, i64 2136, !11, i64 2140, !11, i64 2144, !11, i64 2148, !11, i64 2152, !11, i64 2156, !7, i64 2160, !7, i64 2416, !7, i64 2672, !11, i64 2928, !11, i64 2932, !11, i64 2936, !11, i64 2940, !11, i64 2944, !11, i64 2948, !11, i64 2952, !11, i64 2956, !11, i64 2960, !11, i64 2964, !11, i64 2968, !11, i64 2972, !7, i64 2976, !11, i64 4000, !11, i64 4004, !11, i64 4008, !11, i64 4012, !11, i64 4016, !11, i64 4020, !11, i64 4024, !11, i64 4028, !11, i64 4032, !11, i64 4036, !11, i64 4040, !11, i64 4044, !11, i64 4048, !11, i64 4052, !11, i64 4056, !11, i64 4060, !11, i64 4064, !11, i64 4068, !11, i64 4072, !11, i64 4076, !13, i64 4080, !11, i64 4088, !11, i64 4092, !11, i64 4096, !11, i64 4100, !11, i64 4104, !11, i64 4108, !11, i64 4112, !11, i64 4116, !11, i64 4120, !11, i64 4124, !11, i64 4128, !11, i64 4132, !11, i64 4136, !11, i64 4140, !11, i64 4144, !11, i64 4148, !11, i64 4152, !11, i64 4156, !11, i64 4160, !11, i64 4164, !11, i64 4168, !11, i64 4172, !11, i64 4176, !11, i64 4180, !11, i64 4184, !11, i64 4188, !7, i64 4192, !7, i64 4448, !11, i64 4704, !11, i64 4708, !11, i64 4712, !11, i64 4716, !11, i64 4720, !11, i64 4724, !11, i64 4728, !11, i64 4732, !11, i64 4736, !11, i64 4740, !11, i64 4744, !11, i64 4748, !11, i64 4752, !11, i64 4756, !11, i64 4760, !11, i64 4764, !11, i64 4768, !11, i64 4772, !7, i64 4776, !11, i64 5032, !11, i64 5036, !6, i64 5040, !6, i64 5048, !6, i64 5056, !6, i64 5064, !11, i64 5072, !11, i64 5076, !11, i64 5080, !11, i64 5084, !11, i64 5088, !11, i64 5092, !11, i64 5096, !11, i64 5100, !11, i64 5104, !11, i64 5108, !11, i64 5112, !11, i64 5116, !11, i64 5120, !11, i64 5124, !11, i64 5128, !11, i64 5132, !11, i64 5136, !13, i64 5144, !13, i64 5152, !13, i64 5160, !7, i64 5168, !11, i64 5208, !7, i64 5212, !7, i64 5244, !11, i64 5248, !11, i64 5252, !11, i64 5256, !11, i64 5260, !11, i64 5264, !11, i64 5268, !11, i64 5272, !11, i64 5276, !11, i64 5280, !11, i64 5284, !11, i64 5288, !7, i64 5296, !7, i64 5344, !7, i64 5392, !11, i64 5648, !11, i64 5652, !11, i64 5656, !11, i64 5660, !7, i64 5664, !7, i64 5704, !11, i64 5744, !11, i64 5748, !11, i64 5752, !11, i64 5756, !11, i64 5760, !11, i64 5764, !11, i64 5768, !11, i64 5772, !11, i64 5776, !7, i64 5780, !11, i64 5792}
!46 = !{!25, !11, i64 8}
!47 = !{!10, !11, i64 15456}
!48 = !{!7, !7, i64 0}
!49 = !{!45, !11, i64 264}
!50 = !{!10, !6, i64 14216}
!51 = !{!52, !6, i64 6480}
!52 = !{!"storable_picture", !7, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !7, i64 24, !7, i64 1608, !7, i64 3192, !7, i64 4776, !11, i64 6360, !11, i64 6364, !11, i64 6368, !11, i64 6372, !11, i64 6376, !11, i64 6380, !11, i64 6384, !11, i64 6388, !11, i64 6392, !11, i64 6396, !11, i64 6400, !11, i64 6404, !11, i64 6408, !11, i64 6412, !11, i64 6416, !11, i64 6420, !11, i64 6424, !11, i64 6428, !11, i64 6432, !6, i64 6440, !6, i64 6448, !6, i64 6456, !6, i64 6464, !6, i64 6472, !6, i64 6480, !6, i64 6488, !6, i64 6496, !6, i64 6504, !6, i64 6512, !6, i64 6520, !6, i64 6528, !6, i64 6536, !6, i64 6544, !6, i64 6552, !11, i64 6560, !11, i64 6564, !11, i64 6568, !11, i64 6572, !11, i64 6576, !11, i64 6580, !11, i64 6584}
!53 = !{!10, !11, i64 15312}
!54 = !{!25, !11, i64 428}
!55 = !{!45, !11, i64 4708}
!56 = !{!10, !11, i64 144}
!57 = !{!58, !11, i64 16}
!58 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !6, i64 24, !6, i64 32, !6, i64 40, !11, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !11, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !7, i64 120}
!59 = !{!45, !11, i64 4008}
!60 = !{!58, !6, i64 24}
!61 = !{!62, !11, i64 32}
!62 = !{!"", !11, i64 0, !11, i64 4, !12, i64 8, !12, i64 12, !26, i64 16, !26, i64 24, !11, i64 32, !11, i64 36, !11, i64 40, !7, i64 44, !7, i64 84, !7, i64 384, !7, i64 684, !11, i64 700, !6, i64 704, !6, i64 712, !26, i64 720, !26, i64 728, !26, i64 736, !12, i64 744, !12, i64 748, !12, i64 752, !7, i64 760, !7, i64 1360, !7, i64 1960, !7, i64 2000, !7, i64 2040, !7, i64 2080, !7, i64 2120, !7, i64 2160, !7, i64 2200, !11, i64 2240, !11, i64 2244, !6, i64 2248, !11, i64 2256, !11, i64 2260}
!63 = !{!64, !6, i64 0}
!64 = !{!"datapartition", !6, i64 0, !65, i64 8, !65, i64 56}
!65 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !6, i64 24, !6, i64 32, !11, i64 40, !11, i64 44}
!66 = !{!67, !7, i64 8}
!67 = !{!"", !11, i64 0, !11, i64 4, !7, i64 8, !11, i64 12, !11, i64 16, !7, i64 20, !7, i64 21, !11, i64 24, !11, i64 28, !6, i64 32, !11, i64 40}
!68 = !{!67, !7, i64 20}
!69 = distinct !{!69, !70}
!70 = !{!"llvm.loop.mustprogress"}
!71 = !{!62, !11, i64 36}
!72 = !{i64 0, i64 4, !36, i64 4, i64 4, !36, i64 8, i64 4, !36, i64 12, i64 4, !36, i64 16, i64 4, !36, i64 24, i64 8, !5, i64 32, i64 8, !5, i64 40, i64 4, !36, i64 44, i64 4, !36}
!73 = distinct !{!73, !70, !74}
!74 = !{!"llvm.loop.unswitch.partial.disable"}
!75 = !{!10, !11, i64 16}
!76 = !{!25, !11, i64 0}
!77 = !{!10, !11, i64 40}
!78 = !{!25, !11, i64 20}
!79 = !{!45, !11, i64 5116}
!80 = !{!10, !11, i64 15412}
!81 = !{!10, !11, i64 36}
!82 = !{!25, !11, i64 496}
!83 = !{!25, !11, i64 4}
!84 = !{!58, !11, i64 4}
!85 = !{!25, !11, i64 500}
!86 = !{!45, !11, i64 5128}
!87 = !{!10, !11, i64 15352}
!88 = !{!45, !11, i64 5136}
!89 = !{!10, !11, i64 0}
!90 = !{!10, !11, i64 15408}
!91 = !{!25, !11, i64 504}
!92 = !{!10, !11, i64 15416}
!93 = !{!10, !11, i64 15388}
!94 = !{!10, !11, i64 15404}
!95 = !{!96, !7, i64 1148}
!96 = !{!"", !7, i64 0, !11, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !7, i64 36, !7, i64 40, !11, i64 72, !11, i64 76, !11, i64 80, !11, i64 84, !11, i64 88, !7, i64 92, !11, i64 96, !11, i64 100, !11, i64 104, !7, i64 108, !11, i64 1132, !7, i64 1136, !11, i64 1140, !11, i64 1144, !7, i64 1148, !7, i64 1152, !7, i64 1156, !7, i64 1160, !11, i64 1164, !11, i64 1168, !11, i64 1172, !11, i64 1176, !7, i64 1180, !97, i64 1184}
!97 = !{!"", !7, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !11, i64 28, !7, i64 32, !7, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !7, i64 52, !11, i64 56, !11, i64 60, !7, i64 64, !11, i64 68, !11, i64 72, !7, i64 76, !7, i64 80, !98, i64 84, !7, i64 496, !98, i64 500, !7, i64 912, !7, i64 916, !7, i64 920, !11, i64 924, !11, i64 928, !11, i64 932, !11, i64 936, !11, i64 940, !11, i64 944}
!98 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !7, i64 12, !7, i64 140, !7, i64 268, !11, i64 396, !11, i64 400, !11, i64 404, !11, i64 408}
!99 = !{!45, !11, i64 4704}
!100 = !{!101, !11, i64 12}
!101 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !26, i64 56, !6, i64 64, !26, i64 72, !11, i64 80, !11, i64 84, !11, i64 88, !7, i64 92, !11, i64 112, !7, i64 116, !11, i64 136, !11, i64 140}
!102 = !{!101, !11, i64 0}
!103 = !{!10, !11, i64 15392}
!104 = !{!10, !11, i64 15472}
!105 = !{!10, !11, i64 15468}
!106 = !{!25, !11, i64 508}
!107 = !{!25, !11, i64 512}
!108 = !{!10, !11, i64 15452}
!109 = !{!10, !11, i64 44}
!110 = !{!111, !7, i64 220}
!111 = !{!"", !7, i64 0, !11, i64 4, !11, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 56, !11, i64 60, !11, i64 64, !7, i64 68, !7, i64 100, !7, i64 132, !7, i64 164, !11, i64 168, !11, i64 172, !6, i64 176, !11, i64 184, !11, i64 188, !7, i64 192, !11, i64 196, !11, i64 200, !11, i64 204, !11, i64 208, !11, i64 212, !11, i64 216, !7, i64 220, !7, i64 224, !7, i64 228, !7, i64 232}
!112 = !{!10, !11, i64 14448}
!113 = !{!52, !6, i64 6488}
!114 = !{!52, !6, i64 6512}
!115 = !{!52, !6, i64 6496}
!116 = distinct !{!116, !70}
!117 = !{!25, !26, i64 368}
!118 = !{!25, !26, i64 408}
!119 = !{!45, !11, i64 272}
!120 = !{!10, !6, i64 14240}
!121 = !{!45, !7, i64 5244}
!122 = !{!45, !11, i64 4016}
!123 = !{!58, !11, i64 20}
!124 = !{!10, !11, i64 15348}
!125 = !{!45, !11, i64 268}
!126 = !{!127, !11, i64 4}
!127 = !{!"syntaxelement", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !6, i64 32}
!128 = !{!127, !11, i64 8}
!129 = !{!127, !11, i64 0}
!130 = !{!127, !11, i64 12}
!131 = !{!67, !7, i64 21}
!132 = distinct !{!132, !70}
!133 = !{!67, !11, i64 0}
!134 = !{!67, !11, i64 4}
!135 = distinct !{!135, !70}
!136 = !{!58, !6, i64 112}
!137 = distinct !{!137, !70}
!138 = distinct !{!138, !70, !74}
!139 = !{!52, !11, i64 6408}
!140 = !{!52, !11, i64 6412}
!141 = !{!52, !6, i64 6448}
!142 = !{!14, !14, i64 0}
!143 = !{!111, !7, i64 192}
!144 = !{!111, !11, i64 196}
!145 = !{!25, !14, i64 480}
!146 = !{!10, !11, i64 15520}
!147 = distinct !{!147, !70}
!148 = distinct !{!148, !70}
!149 = distinct !{!149, !70}
!150 = distinct !{!150, !70}
!151 = distinct !{!151, !70}
!152 = distinct !{!152, !70}
!153 = distinct !{!153, !70}
!154 = distinct !{!154, !70}
!155 = distinct !{!155, !70}
!156 = distinct !{!156, !70}
!157 = distinct !{!157, !70}
!158 = distinct !{!158, !70}
!159 = distinct !{!159, !70}
!160 = distinct !{!160, !70}
!161 = !{!45, !11, i64 5772}
!162 = !{!10, !11, i64 15256}
!163 = !{!10, !11, i64 15540}
!164 = distinct !{!164, !70}
!165 = distinct !{!165, !70}
!166 = !{!52, !6, i64 6440}
!167 = distinct !{!167, !70}
!168 = !{!52, !6, i64 6464}
!169 = !{!96, !11, i64 32}
!170 = !{!52, !11, i64 6424}
!171 = !{!52, !11, i64 6416}
!172 = !{!52, !11, i64 6420}
!173 = !{!10, !11, i64 80}
!174 = !{!10, !11, i64 64}
!175 = !{!52, !6, i64 6472}
!176 = distinct !{!176, !70}
!177 = distinct !{!177, !70}
!178 = distinct !{!178, !70}
!179 = distinct !{!179, !70}
!180 = !{!10, !6, i64 14384}
!181 = !{ptr @OneComponentChromaPrediction4x4_regenerate, ptr @OneComponentChromaPrediction4x4_retrieve}
!182 = !{!10, !11, i64 15524}
!183 = distinct !{!183, !70}
!184 = distinct !{!184, !70}
!185 = distinct !{!185, !70}
!186 = distinct !{!186, !70}
!187 = distinct !{!187, !70}
!188 = distinct !{!188, !70}
!189 = distinct !{!189, !70}
!190 = distinct !{!190, !70}
!191 = distinct !{!191, !70}
!192 = distinct !{!192, !70}
!193 = distinct !{!193, !70}
!194 = distinct !{!194, !70, !74}
!195 = distinct !{!195, !70}
!196 = distinct !{!196, !70}
!197 = distinct !{!197, !70}
!198 = distinct !{!198, !70, !74}
!199 = distinct !{!199, !70}
!200 = distinct !{!200, !70}
!201 = !{!202, !11, i64 0}
!202 = !{!"pix_pos", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20}
!203 = !{!202, !11, i64 4}
!204 = distinct !{!204, !70}
!205 = distinct !{!205, !70}
!206 = !{!10, !11, i64 15528}
!207 = !{!10, !11, i64 15516}
!208 = !{!202, !11, i64 20}
!209 = !{!202, !11, i64 16}
!210 = distinct !{!210, !70}
!211 = distinct !{!211, !70}
!212 = distinct !{!212, !70}
!213 = distinct !{!213, !214}
!214 = !{!"llvm.loop.unroll.disable"}
!215 = distinct !{!215, !70}
!216 = distinct !{!216, !70}
!217 = distinct !{!217, !70, !218, !219}
!218 = !{!"llvm.loop.isvectorized", i32 1}
!219 = !{!"llvm.loop.unroll.runtime.disable"}
!220 = distinct !{!220, !70, !219, !218}
!221 = distinct !{!221, !70, !218, !219}
!222 = distinct !{!222, !70, !219, !218}
!223 = distinct !{!223, !70, !218, !219}
!224 = distinct !{!224, !70, !219, !218}
!225 = distinct !{!225, !70}
!226 = distinct !{!226, !70}
!227 = !{!45, !11, i64 4168}
!228 = distinct !{!228, !70}
!229 = !{!45, !11, i64 4048}
!230 = !{!45, !11, i64 4072}
!231 = distinct !{!231, !70}
!232 = distinct !{!232, !70}
!233 = distinct !{!233, !70}
!234 = distinct !{!234, !70}
!235 = distinct !{!235, !70}
!236 = distinct !{!236, !70}
!237 = distinct !{!237, !70}
!238 = !{!10, !11, i64 14464}
!239 = distinct !{!239, !70}
!240 = distinct !{!240, !214}
!241 = distinct !{!241, !70}
!242 = distinct !{!242, !70}
!243 = distinct !{!243, !70}
!244 = distinct !{!244, !70}
!245 = distinct !{!245, !70}
!246 = distinct !{!246, !70}
!247 = !{!10, !11, i64 15244}
!248 = !{!25, !11, i64 420}
!249 = !{!127, !11, i64 24}
!250 = !{!25, !11, i64 528}
!251 = !{!10, !6, i64 152}
!252 = distinct !{!252, !70}
!253 = !{!96, !7, i64 1156}
!254 = !{!25, !11, i64 476}
!255 = !{!67, !6, i64 32}
!256 = !{!127, !11, i64 20}
!257 = !{!10, !11, i64 15444}
!258 = distinct !{!258, !70}
!259 = distinct !{!259, !70}
!260 = !{!10, !11, i64 15448}
!261 = distinct !{!261, !70}
!262 = distinct !{!262, !70, !74}
!263 = !{!10, !6, i64 14168}
!264 = !{!10, !11, i64 104}
!265 = distinct !{!265, !70}
!266 = !{!10, !6, i64 14160}
!267 = !{!10, !11, i64 100}
!268 = !{!10, !11, i64 96}
!269 = distinct !{!269, !70}
!270 = distinct !{!270, !70}
!271 = distinct !{!271, !70}
!272 = !{!10, !11, i64 15532}
!273 = !{!10, !11, i64 108}
!274 = distinct !{!274, !70}
!275 = distinct !{!275, !70}
!276 = distinct !{!276, !70}
!277 = distinct !{!277, !70}
!278 = distinct !{!278, !70}
!279 = distinct !{!279, !70}
!280 = distinct !{!280, !70}
!281 = distinct !{!281, !70}
!282 = distinct !{!282, !70}
!283 = distinct !{!283, !70}
!284 = distinct !{!284, !70}
!285 = !{!67, !11, i64 40}
!286 = !{!10, !11, i64 15608}
!287 = !{!58, !11, i64 12}
!288 = !{!10, !11, i64 15400}
!289 = !{!10, !11, i64 15396}
!290 = !{!101, !11, i64 20}
!291 = !{!101, !11, i64 16}
!292 = !{!101, !11, i64 24}
!293 = !{!101, !11, i64 28}
!294 = !{!10, !6, i64 14376}
!295 = distinct !{!295, !70}
!296 = distinct !{!296, !214}
!297 = distinct !{!297, !70}
!298 = distinct !{!298, !214}
!299 = distinct !{!299, !70}
!300 = distinct !{!300, !70}
!301 = distinct !{!301, !70, !302}
!302 = !{!"llvm.loop.peeled.count", i32 1}
!303 = distinct !{!303, !70, !302}
!304 = distinct !{!304, !70}
!305 = distinct !{!305, !70}
!306 = !{!96, !11, i64 4}
!307 = distinct !{!307, !70, !302}
!308 = distinct !{!308, !70}
!309 = !{!111, !7, i64 224}
!310 = !{!10, !6, i64 14208}
!311 = !{!312, !11, i64 4}
!312 = !{!"", !11, i64 0, !11, i64 4, !7, i64 8, !11, i64 808, !12, i64 812, !12, i64 816, !12, i64 820}
!313 = !{!202, !11, i64 8}
!314 = !{!202, !11, i64 12}
!315 = !{!45, !11, i64 4064}
!316 = !{!45, !11, i64 4068}
!317 = distinct !{!317, !70}
!318 = distinct !{!318, !70}
!319 = distinct !{!319, !70}
!320 = distinct !{!320, !70}
